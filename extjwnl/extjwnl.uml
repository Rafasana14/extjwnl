<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_eCpPwJFCEeuCTslxszDstQ" name="extjwnl">
    <eAnnotations xmi:id="_iObTsJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_iOb6wJFCEeuCTslxszDstQ" source="codegen">
        <details xmi:id="_iOch0JFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/main/java"/>
        <details xmi:id="_z8B94JFCEeuCTslxszDstQ" key="AssociatedSourceCode" value="/extjwnl/src/main/java/net/sf/extjwnl/JWNLException.java;3132725625/1;/extjwnl/src/main/java/net/sf/extjwnl/JWNLIOException.java;151946095/1;/extjwnl/src/main/java/net/sf/extjwnl/JWNLRuntimeException.java;2512690426/1;/extjwnl/src/main/java/net/sf/extjwnl/data/Adjective.java;1912565304/1;/extjwnl/src/main/java/net/sf/extjwnl/data/AdjectivePosition.java;2028270886/1;/extjwnl/src/main/java/net/sf/extjwnl/data/AdjectiveSynset.java;2682518361/1;/extjwnl/src/main/java/net/sf/extjwnl/data/BaseDictionaryElement.java;1448309398/1;/extjwnl/src/main/java/net/sf/extjwnl/data/DatabaseDictionaryElementFactory.java;3295035138/1;/extjwnl/src/main/java/net/sf/extjwnl/data/DictionaryElement.java;837940779/1;/extjwnl/src/main/java/net/sf/extjwnl/data/DictionaryElementFactory.java;2498262679/1;/extjwnl/src/main/java/net/sf/extjwnl/data/DictionaryElementType.java;3722461308/1;/extjwnl/src/main/java/net/sf/extjwnl/data/Exc.java;4074236647/1;/extjwnl/src/main/java/net/sf/extjwnl/data/FileDictionaryElementFactory.java;1448068480/1;/extjwnl/src/main/java/net/sf/extjwnl/data/IndexWord.java;2585902328/1;/extjwnl/src/main/java/net/sf/extjwnl/data/IndexWordSet.java;180486616/1;/extjwnl/src/main/java/net/sf/extjwnl/data/LexFileIdFileNameMap.java;2685737679/1;/extjwnl/src/main/java/net/sf/extjwnl/data/LexFileNameFileIdMap.java;3622653989/1;/extjwnl/src/main/java/net/sf/extjwnl/data/MapBackedDictionaryElementFactory.java;1656910467/1;/extjwnl/src/main/java/net/sf/extjwnl/data/MapDictionaryElementFactory.java;2041785466/1;/extjwnl/src/main/java/net/sf/extjwnl/data/POS.java;3296778246/1;/extjwnl/src/main/java/net/sf/extjwnl/data/Pointer.java;1718995373/1;/extjwnl/src/main/java/net/sf/extjwnl/data/PointerTarget.java;3281145393/1;/extjwnl/src/main/java/net/sf/extjwnl/data/PointerType.java;856378439/1;/extjwnl/src/main/java/net/sf/extjwnl/data/PointerTypeFlags.java;1971140879/1;/extjwnl/src/main/java/net/sf/extjwnl/data/PointerUtils.java;3736683784/1;/extjwnl/src/main/java/net/sf/extjwnl/data/Verb.java;1783885494/1;/extjwnl/src/main/java/net/sf/extjwnl/data/VerbSynset.java;3170649036/1;/extjwnl/src/main/java/net/sf/extjwnl/data/Word.java;245729932/1;/extjwnl/src/main/java/net/sf/extjwnl/data/list/Node.java;4003167014/1;/extjwnl/src/main/java/net/sf/extjwnl/data/list/NodePrinter.java;2782779725/1;/extjwnl/src/main/java/net/sf/extjwnl/data/list/PointerTargetNode.java;1963404199/1;/extjwnl/src/main/java/net/sf/extjwnl/data/list/PointerTargetNodeList.java;3333352741/1;/extjwnl/src/main/java/net/sf/extjwnl/data/list/PointerTargetTree.java;3713736605/1;/extjwnl/src/main/java/net/sf/extjwnl/data/list/PointerTargetTreeNode.java;1472195483/1;/extjwnl/src/main/java/net/sf/extjwnl/data/list/PointerTargetTreeNodeList.java;3806126869/1;/extjwnl/src/main/java/net/sf/extjwnl/data/relationship/AsymmetricRelationship.java;3670121233/1;/extjwnl/src/main/java/net/sf/extjwnl/data/relationship/Relationship.java;3426251435/1;/extjwnl/src/main/java/net/sf/extjwnl/data/relationship/RelationshipFinder.java;8486599/1;/extjwnl/src/main/java/net/sf/extjwnl/data/relationship/RelationshipList.java;1715640366/1;/extjwnl/src/main/java/net/sf/extjwnl/data/relationship/SymmetricRelationship.java;3575935599/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/AbstractCachingDictionary.java;3573948758/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/DatabaseBackedDictionary.java;2987473169/1;/extjwnl/src/main/java/net/sf/extjwnl/util/cache/ZeroPool.java;4272734222/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/FileBackedDictionary.java;41527529/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/MapBackedDictionary.java;1268439889/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/MapDictionary.java;3023448260/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/MemoryDictionary.java;2165407272/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/MorphologicalProcessor.java;2915508175/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/database/ConnectionManager.java;1816313979/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/database/DatabaseManager.java;2227160683/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/database/DatabaseManagerImpl.java;3427541357/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/database/Query.java;1847591924/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file/AbstractDictionaryFile.java;30219611/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file/DictionaryCatalog.java;3810358899/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file/DictionaryCatalogSet.java;3752518887/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file/DictionaryDiskFile.java;3854840396/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file/DictionaryFile.java;3672580141/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file/DictionaryFileFactory.java;3687995124/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file/DictionaryFileType.java;3421265374/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file/ObjectDictionaryFile.java;4128774106/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file/RandomAccessDictionaryFile.java;2894158303/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file_manager/FileManager.java;3248452110/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/file_manager/FileManagerImpl.java;2388519076/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/AbstractDelegatingOperation.java;584187205/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/AbstractOperation.java;3790298863/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/BaseFormSet.java;4000526122/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/DefaultMorphologicalProcessor.java;2783300831/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/DetachSuffixesOperation.java;1809655917/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/LookupExceptionsOperation.java;887449785/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/LookupIndexWordOperation.java;3683467920/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/Operation.java;3430767349/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/TokenizerOperation.java;1766937211/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/morph/Util.java;166090739/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/data/AbstractDictionaryElementFactory.java;1261328828/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/data/AbstractPrincetonDatabaseDictionaryElementFactory.java;353742945/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/data/AbstractPrincetonFileDictionaryElementFactory.java;291125778/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/data/PrincetonWN17DatabaseDictionaryElementFactory.java;207886715/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/data/PrincetonWN17FileDictionaryElementFactory.java;1726653777/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/file/AbstractPrincetonDictionaryFile.java;678286776/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/file/AbstractPrincetonObjectDictionaryFile.java;742453975/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/file/AbstractPrincetonRandomAccessDictionaryFile.java;1729875506/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/file/PrincetonObjectDictionaryFile.java;2212513049/1;/extjwnl/src/main/java/net/sf/extjwnl/util/cache/Pool.java;3954545982/1;/extjwnl/src/main/java/net/sf/extjwnl/util/cache/POSCache.java;2026318839/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/file/PrincetonResourceObjectDictionaryFile.java;1224814455/1;/extjwnl/src/main/java/net/sf/extjwnl/util/ByteArrayCharSequence.java;407085362/1;/extjwnl/src/main/java/net/sf/extjwnl/util/CharBufferCharSequence.java;2253088008/1;/extjwnl/src/main/java/net/sf/extjwnl/util/CharSequenceParser.java;985672639/1;/extjwnl/src/main/java/net/sf/extjwnl/util/cache/LRUCacheSet.java;3740138774/1;/extjwnl/src/main/java/net/sf/extjwnl/util/DeepCloneable.java;1153663974/1;/extjwnl/src/main/java/net/sf/extjwnl/util/PointedCharSequence.java;406780903/1;/extjwnl/src/main/java/net/sf/extjwnl/util/cache/Cache.java;3802084695/1;/extjwnl/src/main/java/net/sf/extjwnl/util/ResourceBundleSet.java;27838811/1;/extjwnl/src/main/java/net/sf/extjwnl/util/cache/CacheSet.java;4011125520/1;/extjwnl/src/main/java/net/sf/extjwnl/util/cache/HashPool.java;1295856698/1;/extjwnl/src/main/java/net/sf/extjwnl/util/factory/Param.java;2617766171/1;/extjwnl/src/main/java/net/sf/extjwnl/util/CharSequenceTokenizer.java;536917718/1;/extjwnl/src/main/java/net/sf/extjwnl/util/cache/LRUPOSCache.java;3320515070/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestDictionaryElementType.java;4084190155/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestAdjSynset.java;926721695/1;/extjwnl/src/test/java/net/sf/extjwnl/data/BaseData.java;2755041733/1;/extjwnl/src/main/java/net/sf/extjwnl/util/factory/AbstractValueParam.java;1331137952/1;/extjwnl/src/main/java/net/sf/extjwnl/util/factory/NameValueParam.java;1932525782/1;/extjwnl/src/main/java/net/sf/extjwnl/util/factory/Owned.java;2223724317/1;/extjwnl/src/main/java/net/sf/extjwnl/util/factory/ValueParam.java;162629161/1;/extjwnl/src/main/java/net/sf/extjwnl/util/factory/ParamList.java;4015688091/1;/extjwnl/src/main/java/net/sf/extjwnl/util/cache/LRUCache.java;818115397/1;/extjwnl/src/main/java/net/sf/extjwnl/data/Synset.java;1217909552/1;/extjwnl/src/main/java/net/sf/extjwnl/dictionary/Dictionary.java;3657385820/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/file/PrincetonRandomAccessDictionaryFile.java;1210364465/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestAdjectivePosition.java;4047077790/1;/extjwnl/src/main/java/net/sf/extjwnl/princeton/file/PrincetonResourceDictionaryFile.java;2395725824/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestExc.java;736267791/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestIndexWord.java;3786271734/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestIndexWordSet.java;1403694142/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestLexIds.java;63260278/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestPOS.java;2874666973/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestPointer.java;1121988867/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestPointerType.java;2326759652/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestRelationshipList.java;2125137236/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestSynset.java;3838908072/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestVerb.java;3021854319/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestVerbSynset.java;1267408583/1;/extjwnl/src/test/java/net/sf/extjwnl/data/TestWord.java;302166043/1;/extjwnl/src/test/java/net/sf/extjwnl/data/list/TestPointerTargetNode.java;3882204183/1;/extjwnl/src/test/java/net/sf/extjwnl/data/list/TestPointerTargetTree.java;537975546/1;/extjwnl/src/test/java/net/sf/extjwnl/data/relationship/TestAsymmetricRelationship.java;3574974753/1;/extjwnl/src/test/java/net/sf/extjwnl/data/relationship/TestRelationshipFinder.java;4134185258/1;/extjwnl/src/test/java/net/sf/extjwnl/data/relationship/TestRelationshipList.java;2859464668/1;/extjwnl/src/test/java/net/sf/extjwnl/data/relationship/TestSymmetricRelationship.java;2437061070/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/DictionaryEditTester.java;1987625043/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/DictionaryReadTester.java;120629557/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/MultiThreadedTestCase.java;2434934111/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestDictionaryIterate.java;3225502610/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestDictionaryIterateFile.java;324687411/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestDictionaryIterateResource.java;4136643006/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestDictionaryRandom.java;2096914673/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestEditFileBackedDictionary.java;657832125/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestEditFileBackedDictionaryASCII.java;1693758365/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestEditMapBackedDictionary.java;502593723/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestEditMemoryDictionary.java;4137794055/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestGetFileBackedInstance.java;4068371522/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestLemmasLookup.java;202470685/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestMorphologicalProcessor.java;2932435236/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestReadFileBackedDictionary.java;2115396255/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestReadResourceDictionary.java;3291732021/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestThreads.java;2396142875/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestThreadsDictionary.java;1537261163/1;/extjwnl/src/test/java/net/sf/extjwnl/dictionary/TestThreadsLock.java;2575967774/1;/extjwnl/src/test/java/net/sf/extjwnl/princeton/file/TestPrincetonRandomAccessDictionaryFile.java;2267531454/1;/extjwnl/src/test/java/net/sf/extjwnl/princeton/file/TestPrincetonResourceDictionaryFile.java;2346420326/1;/extjwnl/src/test/java/net/sf/extjwnl/util/TestByteArrayCharSequence.java;1461764618/1;/extjwnl/src/test/java/net/sf/extjwnl/util/TestCharBufferCharSequence.java;421825851/1;/extjwnl/src/test/java/net/sf/extjwnl/util/TestPointedCharSequence.java;2549418002/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_nCRdMJFCEeuCTslxszDstQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_nCSEQJFCEeuCTslxszDstQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_nCSrUJFCEeuCTslxszDstQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_nCT5cJFCEeuCTslxszDstQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_nCT5cZFCEeuCTslxszDstQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_nCUggJFCEeuCTslxszDstQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_nCVHkJFCEeuCTslxszDstQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_nCVuoJFCEeuCTslxszDstQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_nCaAEJFCEeuCTslxszDstQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_mlQxEJFCEeuCTslxszDstQ" name="net">
      <packagedElement xmi:type="uml:Package" xmi:id="_mlR_MJFCEeuCTslxszDstQ" name="sf">
        <packagedElement xmi:type="uml:Package" xmi:id="_mluEEJFCEeuCTslxszDstQ" name="extjwnl">
          <packagedElement xmi:type="uml:Package" xmi:id="_mnFWAJFCEeuCTslxszDstQ" name="dictionary">
            <packagedElement xmi:type="uml:Package" xmi:id="_nIpK8JFCEeuCTslxszDstQ" name="database">
              <packagedElement xmi:type="uml:Class" xmi:id="_ohxhEJFCEeuCTslxszDstQ" name="ConnectionManager">
                <ownedComment xmi:id="_sejfsZFCEeuCTslxszDstQ">
                  <body>Connection manager for database-backed dictionaries.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sPLm8JFCEeuCTslxszDstQ" name="dictionary" visibility="private" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_siQ7AJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sPPRUJFCEeuCTslxszDstQ" name="driverClass" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPRtkJFCEeuCTslxszDstQ" name="url" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPUw4JFCEeuCTslxszDstQ" name="userName" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPWmEJFCEeuCTslxszDstQ" name="password" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPXNIJFCEeuCTslxszDstQ" name="connection" type="_rnTHkJFCEeuCTslxszDstQ" isReadOnly="true" association="_siSwMZFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-AO5FCEeuCTslxszDstQ" name="ConnectionManager" specification="_r9D8MJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa-APJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa-APZFCEeuCTslxszDstQ" name="driverClass">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa-APpFCEeuCTslxszDstQ" name="url">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa-AP5FCEeuCTslxszDstQ" name="userName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa-AQJFCEeuCTslxszDstQ" name="password">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa-AQZFCEeuCTslxszDstQ" type="_ohxhEJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
     this.driverClass = driverClass;
     this.url = url;
     this.userName = userName;
     this.password = password;
     registerDriver();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-AQpFCEeuCTslxszDstQ" name="getQuery" specification="_oh3AoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa-AQ5FCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa-ARJFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return new Query(dictionary, sql, getConnection());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-ARZFCEeuCTslxszDstQ" name="registerDriver" specification="_oh75IJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>try {
         Driver driver = (Driver) Class.forName(driverClass).newInstance();
         DriverManager.registerDriver(driver);
     } catch (SQLException | ClassNotFoundException | IllegalAccessException | InstantiationException e) {
         throw new JWNLRuntimeException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_024&quot;, driverClass), e);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-nQJFCEeuCTslxszDstQ" name="close" specification="_oh9HQJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (null != connection) {
         try {
             connection.close();
         } catch (SQLException e) {
             //nop
         }
         connection = null;
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oh3AoJFCEeuCTslxszDstQ" name="getQuery" method="_sa-AQpFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oh6D8JFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnUVsJFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oh75IJFCEeuCTslxszDstQ" name="registerDriver" visibility="private" method="_sa-ARZFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_oh9HQJFCEeuCTslxszDstQ" name="close" method="_sa-nQJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_r9D8MJFCEeuCTslxszDstQ" name="ConnectionManager" method="_sa-AO5FCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r9FKUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r9FKUZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r9D8MZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r9EjQJFCEeuCTslxszDstQ" name="driverClass">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r9EjQZFCEeuCTslxszDstQ" name="url">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r9EjQpFCEeuCTslxszDstQ" name="userName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r9EjQ5FCEeuCTslxszDstQ" name="password">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r9FxYJFCEeuCTslxszDstQ" type="_ohxhEJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_oiJUgJFCEeuCTslxszDstQ" name="DatabaseManager">
                <ownedComment xmi:id="_sekt0JFCEeuCTslxszDstQ">
                  <body>Interface for database managers.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rnU8wJFCEeuCTslxszDstQ" general="_o0LfsJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_oiUToJFCEeuCTslxszDstQ" name="close">
                  <ownedComment xmi:id="_selU4JFCEeuCTslxszDstQ">
                    <body>Closes the connections and frees associated resources.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_rnU8wZFCEeuCTslxszDstQ" name="getIndexWordSynsetsQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnU8wpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnU8w5FCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnVj0JFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnVj0ZFCEeuCTslxszDstQ" name="getIndexWordLemmasQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnVj0pFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnVj05FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnVj1JFCEeuCTslxszDstQ" name="getIndexWordLemmasQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnVj1ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnVj1pFCEeuCTslxszDstQ" name="substring">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnVj15FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnWK4JFCEeuCTslxszDstQ" name="getRandomIndexWordQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnWK4ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnWK4pFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnWK45FCEeuCTslxszDstQ" name="getSynsetQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnWK5JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnWK5ZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnWK5pFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnWx8JFCEeuCTslxszDstQ" name="getSynsetWordQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnWx8ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnWx8pFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnWx85FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnXZAJFCEeuCTslxszDstQ" name="getPointerQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnXZAZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnXZApFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnXZA5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnXZBJFCEeuCTslxszDstQ" name="getVerbFrameQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnXZBZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnXZBpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnYAEJFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnYAEZFCEeuCTslxszDstQ" name="getSynsetsQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnYAEpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnYAE5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnYAFJFCEeuCTslxszDstQ" name="getExceptionQuery" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnYAFZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnYAFpFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnYAF5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnYnIJFCEeuCTslxszDstQ" name="getExceptionsQuery" visibility="package" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnYnIZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnYnIpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oivKYJFCEeuCTslxszDstQ" name="DatabaseManagerImpl">
                <ownedComment xmi:id="_sel78JFCEeuCTslxszDstQ">
                  <body>Database manager.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sPYbQJFCEeuCTslxszDstQ" name="DRIVER" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPYbQZFCEeuCTslxszDstQ" value="&quot;driver&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPZCUJFCEeuCTslxszDstQ" name="URL" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPZCUZFCEeuCTslxszDstQ" value="&quot;url&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPZCUpFCEeuCTslxszDstQ" name="USERNAME" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPZCU5FCEeuCTslxszDstQ" value="&quot;username&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPZCVJFCEeuCTslxszDstQ" name="PASSWORD" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPZCVZFCEeuCTslxszDstQ" value="&quot;password&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPZCVpFCEeuCTslxszDstQ" name="LEMMA_FOR_INDEX_WORD_ID_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPZpYJFCEeuCTslxszDstQ" value="&quot;SELECT iw.lemma &quot; +&#xA;                    &quot;FROM indexword iw &quot; +&#xA;                    &quot;WHERE iw.pos = ? AND iw.index_word_id = ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPZpYZFCEeuCTslxszDstQ" name="SYNSET_IDS_FOR_INDEX_WORD_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPZpYpFCEeuCTslxszDstQ" value="&quot;SELECT syn.file_offset, iws.synset_id, syn.synset_id &quot;&#xA;                    + &quot;FROM indexwordsynset iws, indexword iw, synset syn &quot;&#xA;                    + &quot;WHERE iws.index_word_id = iw.index_word_id AND syn.synset_id = iws.synset_id AND iw.pos = ?  AND iw.lemma = ? ORDER BY iws.synset_rank ASC&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPZpY5FCEeuCTslxszDstQ" name="COUNT_INDEX_WORDS_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPZpZJFCEeuCTslxszDstQ" value="&quot;SELECT MIN(index_word_id), MAX(index_word_id) FROM indexword WHERE pos = ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPZpZZFCEeuCTslxszDstQ" name="ALL_LEMMAS_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPZpZpFCEeuCTslxszDstQ" value="&quot;SELECT lemma FROM indexword WHERE pos = ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPZpZ5FCEeuCTslxszDstQ" name="ALL_LEMMAS_LIKE_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPZpaJFCEeuCTslxszDstQ" value="&quot;SELECT lemma FROM indexword WHERE pos = ? AND lemma LIKE ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPaQcJFCEeuCTslxszDstQ" name="SYNSET_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPaQcZFCEeuCTslxszDstQ" value="&quot;SELECT is_adj_cluster, gloss, lex_file_num FROM synset WHERE pos = ? AND file_offset = ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPaQcpFCEeuCTslxszDstQ" name="SYNSET_WORD_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPaQc5FCEeuCTslxszDstQ" value="&quot;SELECT sw.word, sw.word_index, sw.usage_cnt, sw.lex_id &quot; +&#xA;                    &quot;FROM synset s, synsetword sw &quot; +&#xA;                    &quot;WHERE s.synset_id = sw.synset_id AND s.pos = ? AND s.file_offset = ? &quot; +&#xA;                    &quot;ORDER BY sw.word_index&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPaQdJFCEeuCTslxszDstQ" name="SYNSET_POINTER_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPaQdZFCEeuCTslxszDstQ" value="&quot;SELECT sp.pointer_type, sp.target_offset, sp.target_pos, sp.source_index, sp.target_index &quot; +&#xA;                    &quot;FROM synset s, synsetpointer sp &quot; +&#xA;                    &quot;WHERE s.synset_id = sp.synset_id AND s.pos = ? AND s.file_offset = ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPaQdpFCEeuCTslxszDstQ" name="SYNSET_VERB_FRAME_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPa3gJFCEeuCTslxszDstQ" value="&quot;SELECT svf.frame_number, svf.word_index &quot; +&#xA;                    &quot;FROM synset s, synsetverbframe svf &quot; +&#xA;                    &quot;WHERE s.synset_id = svf.synset_id AND s.pos = ? AND s.file_offset = ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPa3gZFCEeuCTslxszDstQ" name="ALL_SYNSETS_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPa3gpFCEeuCTslxszDstQ" value="&quot;SELECT file_offset FROM synset WHERE pos = ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPa3g5FCEeuCTslxszDstQ" name="EXCEPTION_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPa3hJFCEeuCTslxszDstQ" value="&quot;SELECT base FROM exceptions WHERE pos = ? AND derivation = ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPa3hZFCEeuCTslxszDstQ" name="ALL_EXCEPTIONS_SQL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPa3hpFCEeuCTslxszDstQ" value="&quot;SELECT derivation FROM exceptions WHERE pos = ?&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPa3h5FCEeuCTslxszDstQ" name="rand" visibility="protected" isLeaf="true" isStatic="true" type="_rnZOMJFCEeuCTslxszDstQ" isReadOnly="true" association="_siUlYZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sPa3iJFCEeuCTslxszDstQ" value="new Random()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPbekJFCEeuCTslxszDstQ" name="connectionManager" visibility="protected" isLeaf="true" type="_ohxhEJFCEeuCTslxszDstQ" isReadOnly="true" association="_siXBoZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sPbekpFCEeuCTslxszDstQ" name="minMaxIds" visibility="protected" isLeaf="true" type="_oi_CAJFCEeuCTslxszDstQ" isReadOnly="true" association="_siZd4JFCEeuCTslxszDstQ">
                  <qualifier xmi:id="_sPcFoZFCEeuCTslxszDstQ" type="_sPbelJFCEeuCTslxszDstQ"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPcssJFCEeuCTslxszDstQ" name="dictionary" visibility="protected" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_sibTEZFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_rnZ1QZFCEeuCTslxszDstQ" client="_oivKYJFCEeuCTslxszDstQ" supplier="_oiJUgJFCEeuCTslxszDstQ" contract="_oiJUgJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-nQZFCEeuCTslxszDstQ" name="DatabaseManagerImpl" specification="_r9OUQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa-nQpFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa-nQ5FCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa-nRJFCEeuCTslxszDstQ" type="_oivKYJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>String driverClassName = params.containsKey(DRIVER) ? params.get(DRIVER).getValue() : null;
     String url = params.containsKey(URL) ? params.get(URL).getValue() : null;
     String userName = params.containsKey(USERNAME) ? params.get(USERNAME).getValue() : null;
     String password = params.containsKey(PASSWORD) ? params.get(PASSWORD).getValue() : null;
     connectionManager = new ConnectionManager(dictionary, driverClassName, url, userName, password);

     this.dictionary = dictionary;
     this.minMaxIds = new EnumMap&lt;>(POS.class);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-nRZFCEeuCTslxszDstQ" name="getIndexWordSynsetsQuery" specification="_rnacUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa-nRpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa-nR5FCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa-nSJFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSStringQuery(pos, lemma, SYNSET_IDS_FOR_INDEX_WORD_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-nSZFCEeuCTslxszDstQ" name="getIndexWordLemmasQuery" specification="_rnbDYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa-nSpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa-nS5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSQuery(pos, ALL_LEMMAS_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-nTJFCEeuCTslxszDstQ" name="getIndexWordLemmasQuery" specification="_rnbDY5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa-nTZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa-nTpFCEeuCTslxszDstQ" name="substring">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa-nT5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSStringQuery(pos, &quot;%&quot; + substring + &quot;%&quot;, ALL_LEMMAS_LIKE_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-nUJFCEeuCTslxszDstQ" name="getRandomIndexWordQuery" specification="_rnbDZ5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa-nUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa-nUpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>MinMax minMax = minMaxIds.get(pos);
     if (minMax == null) {
         Query query = createPOSQuery(pos, COUNT_INDEX_WORDS_SQL);
         try {
             query.execute();
             query.getResults().next();
             minMax = new MinMax(query.getResults().getInt(1), query.getResults().getInt(2));
             minMaxIds.put(pos, minMax);
         } finally {
             if (query != null) {
                 query.close();
             }
         }
     }
     int id = minMax.getMin() + rand.nextInt(minMax.getMax() - minMax.getMin());
     return createPOSIdQuery(pos, id, LEMMA_FOR_INDEX_WORD_ID_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_OWJFCEeuCTslxszDstQ" name="getSynsetQuery" specification="_rnbqcZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_OWZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_OWpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_OW5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSOffsetQuery(pos, offset, SYNSET_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_OXJFCEeuCTslxszDstQ" name="getSynsetWordQuery" specification="_rncRg5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_OXZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_OXpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_OX5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSOffsetQuery(pos, offset, SYNSET_WORD_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_OYJFCEeuCTslxszDstQ" name="getPointerQuery" specification="_rnc4k5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_OYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_OYpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_OY5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSOffsetQuery(pos, offset, SYNSET_POINTER_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_OZJFCEeuCTslxszDstQ" name="getVerbFrameQuery" specification="_rnc4l5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_OZZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_OZpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_OZ5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSOffsetQuery(pos, offset, SYNSET_VERB_FRAME_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1YJFCEeuCTslxszDstQ" name="getSynsetsQuery" specification="_rndfo5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_1YZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_1YpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSQuery(pos, ALL_SYNSETS_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1Y5FCEeuCTslxszDstQ" name="getExceptionQuery" specification="_rneGsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_1ZJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_1ZZFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_1ZpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSStringQuery(pos, derivation, EXCEPTION_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1Z5FCEeuCTslxszDstQ" name="getExceptionsQuery" specification="_rneGtJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_1aJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_1aZFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return createPOSQuery(pos, ALL_EXCEPTIONS_SQL);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1apFCEeuCTslxszDstQ" name="close" specification="_ojQu0JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>minMaxIds.clear();
     connectionManager.close();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1a5FCEeuCTslxszDstQ" name="createPOSQuery" specification="_rnetwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_1bJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_1bZFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_1bpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>Query query = null;
     try {
         query = connectionManager.getQuery(sql);
         query.getStatement().setString(1, pos.getKey());
         return query;
     } catch (SQLException e) {
         if (query != null) {
             query.close();
         }
         throw e;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1b5FCEeuCTslxszDstQ" name="createPOSStringQuery" specification="_rngi8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_1cJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_1cZFCEeuCTslxszDstQ" name="str">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_1cpFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_1c5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>Query query = null;
     try {
         query = connectionManager.getQuery(sql);
         query.getStatement().setString(1, pos.getKey());
         query.getStatement().setString(2, str);
         return query;
     } catch (SQLException e) {
         if (query != null) {
             query.close();
         }
         throw e;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1dJFCEeuCTslxszDstQ" name="createPOSOffsetQuery" specification="_rniYIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_1dZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_1dpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_1d5FCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_1eJFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>Query query = null;
     try {
         query = connectionManager.getQuery(sql);
         query.getStatement().setString(1, pos.getKey());
         query.getStatement().setLong(2, offset);
         return query;
     } catch (SQLException e) {
         if (query != null) {
             query.close();
         }
         throw e;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1eZFCEeuCTslxszDstQ" name="createPOSIdQuery" specification="_rnkNUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_1epFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa_1e5FCEeuCTslxszDstQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_1fJFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa_1fZFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>Query query = null;
     try {
         query = connectionManager.getQuery(sql);
         query.getStatement().setString(1, pos.getKey());
         query.getStatement().setInt(2, id);
         return query;
     } catch (SQLException e) {
         if (query != null) {
             query.close();
         }
         throw e;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1fpFCEeuCTslxszDstQ" name="getDictionary" specification="_ojYDkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_1f5FCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return dictionary;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_1gJFCEeuCTslxszDstQ" name="setDictionary" specification="_r9ahgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa_1gZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ojQu0JFCEeuCTslxszDstQ" name="close" method="_sa_1apFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ojYDkJFCEeuCTslxszDstQ" name="getDictionary" method="_sa_1fpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r9ZTYJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnacUJFCEeuCTslxszDstQ" name="getIndexWordSynsetsQuery" method="_sa-nRZFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnacUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnacUpFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnacU5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnbDYJFCEeuCTslxszDstQ" name="getIndexWordLemmasQuery" method="_sa-nSZFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnbDYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnbDYpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnbDY5FCEeuCTslxszDstQ" name="getIndexWordLemmasQuery" method="_sa-nTJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnbDZJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnbDZZFCEeuCTslxszDstQ" name="substring">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnbDZpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnbDZ5FCEeuCTslxszDstQ" name="getRandomIndexWordQuery" method="_sa-nUJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rnbDaZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rnbDapFCEeuCTslxszDstQ" key="synchronized"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rnbDaJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnbqcJFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnbqcZFCEeuCTslxszDstQ" name="getSynsetQuery" method="_sa_OWJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rncRgJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rncRgZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rncRgpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rncRg5FCEeuCTslxszDstQ" name="getSynsetWordQuery" method="_sa_OXJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnc4kJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnc4kZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnc4kpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnc4k5FCEeuCTslxszDstQ" name="getPointerQuery" method="_sa_OYJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnc4lJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnc4lZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnc4lpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnc4l5FCEeuCTslxszDstQ" name="getVerbFrameQuery" method="_sa_OZJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rndfoJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rndfoZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rndfopFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rndfo5FCEeuCTslxszDstQ" name="getSynsetsQuery" method="_sa_1YJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rndfpJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rndfpZFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rneGsJFCEeuCTslxszDstQ" name="getExceptionQuery" method="_sa_1Y5FCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rneGsZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rneGspFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rneGs5FCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rneGtJFCEeuCTslxszDstQ" name="getExceptionsQuery" method="_sa_1Z5FCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rneGtZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rneGtpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnetwJFCEeuCTslxszDstQ" name="createPOSQuery" visibility="protected" method="_sa_1a5FCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnetwZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnfU0JFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnfU0ZFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rngi8JFCEeuCTslxszDstQ" name="createPOSStringQuery" visibility="protected" method="_sa_1b5FCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rngi8ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rngi8pFCEeuCTslxszDstQ" name="str">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnhKAJFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnhKAZFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rniYIJFCEeuCTslxszDstQ" name="createPOSOffsetQuery" visibility="protected" method="_sa_1dJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rniYIZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rniYIpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rni_MJFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rni_MZFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rnkNUJFCEeuCTslxszDstQ" name="createPOSIdQuery" visibility="protected" method="_sa_1eZFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rnkNUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rnkNUpFCEeuCTslxszDstQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnk0YJFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rnk0YZFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r9OUQJFCEeuCTslxszDstQ" name="DatabaseManagerImpl" method="_sa-nQZFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r9PiYJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r9PiYZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r9O7UJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r9O7UZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r9PiYpFCEeuCTslxszDstQ" type="_oivKYJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r9ahgJFCEeuCTslxszDstQ" name="setDictionary" method="_sa_1gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r9bIkJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_oi_CAJFCEeuCTslxszDstQ" name="MinMax" visibility="private" isLeaf="true">
                  <eAnnotations xmi:id="_ojAQIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ojAQIZFCEeuCTslxszDstQ" key="static"/>
                  </eAnnotations>
                  <ownedAttribute xmi:id="_sPdTwJFCEeuCTslxszDstQ" name="min" visibility="private" isLeaf="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_sPdTwZFCEeuCTslxszDstQ" name="max" visibility="private" isLeaf="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_OUJFCEeuCTslxszDstQ" name="MinMax" specification="_ojCsYJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sa_OUZFCEeuCTslxszDstQ" name="min">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_sa_OUpFCEeuCTslxszDstQ" name="max">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_sa_OU5FCEeuCTslxszDstQ" type="_oi_CAJFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>this.min = min;
         this.max = max;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_OVJFCEeuCTslxszDstQ" name="getMin" specification="_ojFvsJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sa_OVZFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return min;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa_OVpFCEeuCTslxszDstQ" name="getMax" specification="_ojHk4JFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sa_OV5FCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return max;
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_ojCsYJFCEeuCTslxszDstQ" name="MinMax" method="_sa_OUJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_ojD6gJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_ojD6gZFCEeuCTslxszDstQ" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_ojDTcJFCEeuCTslxszDstQ" name="min">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_ojDTcZFCEeuCTslxszDstQ" name="max">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_ojD6gpFCEeuCTslxszDstQ" type="_oi_CAJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_ojFvsJFCEeuCTslxszDstQ" name="getMin" method="_sa_OVJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_ojGWwJFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_ojHk4JFCEeuCTslxszDstQ" name="getMax" method="_sa_OVpFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_ojHk4ZFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_okQNUJFCEeuCTslxszDstQ" name="Query">
                <ownedComment xmi:id="_seq0cJFCEeuCTslxszDstQ">
                  <body>Helper class to manage queries.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sPfwAJFCEeuCTslxszDstQ" name="dictionary" visibility="private" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_sidIQJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sPg-IJFCEeuCTslxszDstQ" name="connection" visibility="private" isLeaf="true" type="_rnTHkJFCEeuCTslxszDstQ" isReadOnly="true" association="_sie9cJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sPizUJFCEeuCTslxszDstQ" name="statement" type="_rn2hMJFCEeuCTslxszDstQ" isReadOnly="true" association="_sihZsZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sPnEwJFCEeuCTslxszDstQ" name="results" type="_rVzu8JFCEeuCTslxszDstQ" isReadOnly="true" association="_sij18JFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sPnr0JFCEeuCTslxszDstQ" name="sql" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbAccpFCEeuCTslxszDstQ" name="Query" specification="_r9pyEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbAcc5FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbAcdJFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbAcdZFCEeuCTslxszDstQ" name="conn" type="_rnTHkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbAcdpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
     this.connection = conn;
     this.sql = sql;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbAcd5FCEeuCTslxszDstQ" name="execute" specification="_okRbcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbAceJFCEeuCTslxszDstQ" type="_rVzu8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (isExecuted()) {
         throw new JWNLRuntimeException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_025&quot;));
     }
     return (results = (getStatement().execute()) ? getStatement().getResultSet() : null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbAceZFCEeuCTslxszDstQ" name="isExecuted" specification="_okSCgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbAcepFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (results != null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbAce5FCEeuCTslxszDstQ" name="close" specification="_okSCgpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (results != null) {
         try {
             results.close();
             results = null;
         } catch (SQLException ex) {
             //nop
         }
     }
     if (statement != null) {
         try {
             statement.close();
             statement = null;
         } catch (SQLException ex) {
             //nop
         }
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_okRbcJFCEeuCTslxszDstQ" name="execute" method="_sbAcd5FCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r9s1YJFCEeuCTslxszDstQ" type="_rVzu8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_okSCgJFCEeuCTslxszDstQ" name="isExecuted" method="_sbAceZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_okSCgZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_okSCgpFCEeuCTslxszDstQ" name="close" method="_sbAce5FCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_r9pyEJFCEeuCTslxszDstQ" name="Query" method="_sbAccpFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r9rAMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r9rAMZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r9pyEZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r9qZIJFCEeuCTslxszDstQ" name="sql">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r9qZIZFCEeuCTslxszDstQ" name="conn" type="_rnTHkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r9rAMpFCEeuCTslxszDstQ" type="_okQNUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_sPbelJFCEeuCTslxszDstQ" name="POS"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_siQ7AJFCEeuCTslxszDstQ" name="" memberEnd="_siQ7AZFCEeuCTslxszDstQ _sPLm8JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_siQ7AZFCEeuCTslxszDstQ" name="" type="_ohxhEJFCEeuCTslxszDstQ" association="_siQ7AJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_siSwMZFCEeuCTslxszDstQ" name="" memberEnd="_siSwMpFCEeuCTslxszDstQ _sPXNIJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_siSwMpFCEeuCTslxszDstQ" name="" type="_ohxhEJFCEeuCTslxszDstQ" association="_siSwMZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_siUlYZFCEeuCTslxszDstQ" name="" memberEnd="_siVMcJFCEeuCTslxszDstQ _sPa3h5FCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_siVMcJFCEeuCTslxszDstQ" name="" type="_oivKYJFCEeuCTslxszDstQ" association="_siUlYZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_siXBoZFCEeuCTslxszDstQ" name="" memberEnd="_siXBopFCEeuCTslxszDstQ _sPbekJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_siXBopFCEeuCTslxszDstQ" name="" type="_oivKYJFCEeuCTslxszDstQ" association="_siXBoZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_siZd4JFCEeuCTslxszDstQ" name="" memberEnd="_siZd4ZFCEeuCTslxszDstQ _sPbekpFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_siZd4ZFCEeuCTslxszDstQ" name="" type="_oivKYJFCEeuCTslxszDstQ" association="_siZd4JFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sibTEZFCEeuCTslxszDstQ" name="" memberEnd="_sibTEpFCEeuCTslxszDstQ _sPcssJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sibTEpFCEeuCTslxszDstQ" name="" type="_oivKYJFCEeuCTslxszDstQ" association="_sibTEZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sidIQJFCEeuCTslxszDstQ" name="" memberEnd="_sidIQZFCEeuCTslxszDstQ _sPfwAJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sidIQZFCEeuCTslxszDstQ" name="" type="_okQNUJFCEeuCTslxszDstQ" association="_sidIQJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sie9cJFCEeuCTslxszDstQ" name="" memberEnd="_sie9cZFCEeuCTslxszDstQ _sPg-IJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sie9cZFCEeuCTslxszDstQ" name="" type="_okQNUJFCEeuCTslxszDstQ" association="_sie9cJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sihZsZFCEeuCTslxszDstQ" name="" memberEnd="_sihZspFCEeuCTslxszDstQ _sPizUJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sihZspFCEeuCTslxszDstQ" name="" type="_okQNUJFCEeuCTslxszDstQ" association="_sihZsZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sij18JFCEeuCTslxszDstQ" name="" memberEnd="_sij18ZFCEeuCTslxszDstQ _sPnEwJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sij18ZFCEeuCTslxszDstQ" name="" type="_okQNUJFCEeuCTslxszDstQ" association="_sij18JFCEeuCTslxszDstQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_nI0xIJFCEeuCTslxszDstQ" name="file">
              <packagedElement xmi:type="uml:Class" xmi:id="_okYwMJFCEeuCTslxszDstQ" name="AbstractDictionaryFile" isAbstract="true">
                <ownedComment xmi:id="_sesCkJFCEeuCTslxszDstQ">
                  <body>Abstract implementation of &lt;code>DictionaryFile&lt;/code>. This class
should be implemented for each file naming scheme used.
It is assumed that each file will be associated with both a POS and a file type.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sPuZgJFCEeuCTslxszDstQ" name="dictionary" visibility="protected" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_silEEZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sPw1wJFCEeuCTslxszDstQ" name="params" visibility="protected" isLeaf="true" type="_oyrD0JFCEeuCTslxszDstQ" isReadOnly="true" association="_simSMZFCEeuCTslxszDstQ">
                  <qualifier xmi:id="_sPzSAJFCEeuCTslxszDstQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </qualifier>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sPz5EJFCEeuCTslxszDstQ" name="path" visibility="protected" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sP1uQJFCEeuCTslxszDstQ" name="pos" visibility="protected" isLeaf="true" type="_oLknkJFCEeuCTslxszDstQ" isReadOnly="true"/>
                <ownedAttribute xmi:id="_sP28YJFCEeuCTslxszDstQ" name="fileType" visibility="protected" isLeaf="true" type="_omdz0JFCEeuCTslxszDstQ" isReadOnly="true"/>
                <interfaceRealization xmi:id="_roFKsJFCEeuCTslxszDstQ" client="_okYwMJFCEeuCTslxszDstQ" supplier="_omHOgJFCEeuCTslxszDstQ" contract="_omHOgJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbAcfJFCEeuCTslxszDstQ" name="AbstractDictionaryFile" specification="_r9xt4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbAcfZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbAcfpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbAcf5FCEeuCTslxszDstQ" type="_okYwMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
     this.params = params;
     this.path = null;
     this.pos = null;
     this.fileType = null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbBDgJFCEeuCTslxszDstQ" name="AbstractDictionaryFile" specification="_r91_UJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbBDgZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbBDgpFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbBDg5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbBDhJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbBDhZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbBDhpFCEeuCTslxszDstQ" type="_okYwMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
     this.params = params;
     this.pos = pos;
     this.fileType = fileType;
     this.path = path;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbBDh5FCEeuCTslxszDstQ" name="getPOS" specification="_okgE8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbBDiJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return pos;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbBDiZFCEeuCTslxszDstQ" name="getFileType" specification="_okhTEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbBDipFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return fileType;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbBDi5FCEeuCTslxszDstQ" name="getDictionary" specification="_okihMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbBDjJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return dictionary;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbBDjZFCEeuCTslxszDstQ" name="setDictionary" specification="_r99UEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbBDjpFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_okgE8JFCEeuCTslxszDstQ" name="getPOS" method="_sbBDh5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_roI1EJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_okhTEJFCEeuCTslxszDstQ" name="getFileType" method="_sbBDiZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_roJcIJFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_okihMJFCEeuCTslxszDstQ" name="getDictionary" method="_sbBDi5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r98F8JFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r9xt4JFCEeuCTslxszDstQ" name="AbstractDictionaryFile" method="_sbAcfJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r9yU8ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r9yU8pFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_sesCkZFCEeuCTslxszDstQ">
                    <body>Factory constructor.
     *
     * @param dictionary dictionary
     * @param params     params</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r9xt4ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r9yU8JFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r9yU85FCEeuCTslxszDstQ" type="_okYwMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r91_UJFCEeuCTslxszDstQ" name="AbstractDictionaryFile" visibility="protected" method="_sbBDgJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r94bkJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r94bkZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_setQsJFCEeuCTslxszDstQ">
                    <body>Instance constructor.
     *
     * @param dictionary dictionary
     * @param path       path
     * @param pos        part of speech
     * @param fileType   file type
     * @param params     parameters</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r92mYJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r92mYZFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r93NcJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r93NcZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r930gJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r94bkpFCEeuCTslxszDstQ" type="_okYwMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r99UEJFCEeuCTslxszDstQ" name="setDictionary" method="_sbBDjZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r99UEZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_okwjoJFCEeuCTslxszDstQ" name="DictionaryCatalog">
                <ownedComment xmi:id="_set3wJFCEeuCTslxszDstQ">
                  <body>A container for the files associated with a catalog (the index, data, and exception
files associated with a POS).
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sP5YoJFCEeuCTslxszDstQ" name="DICTIONARY_PATH_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sP5_sJFCEeuCTslxszDstQ" value="&quot;dictionary_path&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sP6mwJFCEeuCTslxszDstQ" name="DICTIONARY_FILE_TYPE_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sP6mwZFCEeuCTslxszDstQ" value="&quot;file_type&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sP7N0JFCEeuCTslxszDstQ" name="files" visibility="private" isLeaf="true" type="_r-BlgJFCEeuCTslxszDstQ" isReadOnly="true" association="_sipVgJFCEeuCTslxszDstQ">
                  <qualifier xmi:id="_sP-4MZFCEeuCTslxszDstQ" type="_sP9DAJFCEeuCTslxszDstQ"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sQAGUJFCEeuCTslxszDstQ" name="fileType" isLeaf="true" type="_omdz0JFCEeuCTslxszDstQ" isReadOnly="true"/>
                <ownedAttribute xmi:id="_sQEXwJFCEeuCTslxszDstQ" name="dictionary" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_sirKsJFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_roUbQJFCEeuCTslxszDstQ" client="_okwjoJFCEeuCTslxszDstQ" supplier="_o0LfsJFCEeuCTslxszDstQ" contract="_o0LfsJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbBDk5FCEeuCTslxszDstQ" name="DictionaryCatalog" specification="_r-KIYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbBDlJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbBDlZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbBDlpFCEeuCTslxszDstQ" name="desiredDictionaryFileType" type="_r-ITMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbBDl5FCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbBDmJFCEeuCTslxszDstQ" type="_okwjoJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.files = new EnumMap&lt;>(POS.class);
     this.dictionary = dictionary;
     this.fileType = fileType;

     if (!params.containsKey(DICTIONARY_PATH_KEY)) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_052&quot;, DICTIONARY_PATH_KEY));
     }
     String path = params.get(DICTIONARY_PATH_KEY).getValue();

     if (!params.containsKey(DICTIONARY_FILE_TYPE_KEY)) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_052&quot;, DICTIONARY_FILE_TYPE_KEY));
     }

     try {
         Class fileClass;
         try {
             fileClass = Class.forName(params.get(DICTIONARY_FILE_TYPE_KEY).getValue());
             if (!desiredDictionaryFileType.isAssignableFrom(fileClass)) {
                 throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_003&quot;, new Object[]{fileClass, desiredDictionaryFileType.getCanonicalName()}));
             }
         } catch (ClassNotFoundException e) {
             throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_002&quot;), e);
         }

         DictionaryFileFactory&lt;E> factory = (DictionaryFileFactory&lt;E>) params.get(DICTIONARY_FILE_TYPE_KEY).create();
         for (POS pos : POS.getAllPOS()) {
             E file = factory.newInstance(dictionary, path, pos, fileType);
             files.put(file.getPOS(), file);
         }
     } catch (JWNLException e) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_018&quot;, fileType), e);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbBqkJFCEeuCTslxszDstQ" name="getKey" specification="_ok4fcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbBqkZFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return getFileType();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbBqkpFCEeuCTslxszDstQ" name="open" specification="_ok6UoJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (!isOpen()) {
         for (Iterator&lt;E> itr = getFileIterator(); itr.hasNext(); ) {
             itr.next().open();
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbCRoJFCEeuCTslxszDstQ" name="delete" specification="_ok67sJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbCRoZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>boolean result = true;
     for (Iterator&lt;E> itr = getFileIterator(); itr.hasNext(); ) {
         E file = itr.next();
         if (file instanceof DictionaryDiskFile) {
             result = result &amp;&amp; ((DictionaryDiskFile) file).delete();
         }
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbCRopFCEeuCTslxszDstQ" name="isOpen" specification="_ok8w4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbCRo5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>for (Iterator&lt;E> itr = getFileIterator(); itr.hasNext(); ) {
         if (!itr.next().isOpen()) {
             return false;
         }
     }
     return true;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbCRpJFCEeuCTslxszDstQ" name="close" specification="_ok9X8JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>for (Iterator&lt;E> itr = getFileIterator(); itr.hasNext(); ) {
         itr.next().close();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbC4sJFCEeuCTslxszDstQ" name="size" specification="_ok9_AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbC4sZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return files.size();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbDfwJFCEeuCTslxszDstQ" name="getFileIterator" specification="_ok_NIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbDfwZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return files.values().iterator();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbEG0JFCEeuCTslxszDstQ" name="get" specification="_roZTwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbEG0ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbEG0pFCEeuCTslxszDstQ" type="_r-BlgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return files.get(pos);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbEt4JFCEeuCTslxszDstQ" name="setDictionary" specification="_r-L9kZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbEt4ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbEt4pFCEeuCTslxszDstQ" name="save" specification="_olC3gJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>for (Iterator&lt;E> itr = getFileIterator(); itr.hasNext(); ) {
         itr.next().save();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbFU8JFCEeuCTslxszDstQ" name="edit" specification="_olDekJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>for (Iterator&lt;E> itr = getFileIterator(); itr.hasNext(); ) {
         itr.next().edit();
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ok4fcJFCEeuCTslxszDstQ" name="getKey" method="_sbBqkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_roYFoJFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ok6UoJFCEeuCTslxszDstQ" name="open" method="_sbBqkpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ok67sJFCEeuCTslxszDstQ" name="delete" method="_sbCRoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ok7iwJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ok8w4JFCEeuCTslxszDstQ" name="isOpen" method="_sbCRopFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ok8w4ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ok9X8JFCEeuCTslxszDstQ" name="close" method="_sbCRpJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ok9_AJFCEeuCTslxszDstQ" name="size" method="_sbC4sJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ok-mEJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ok_NIJFCEeuCTslxszDstQ" name="getFileIterator" method="_sbDfwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r-LWg5FCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_olC3gJFCEeuCTslxszDstQ" name="save" method="_sbEt4pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_olDekJFCEeuCTslxszDstQ" name="edit" method="_sbFU8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_roZTwJFCEeuCTslxszDstQ" name="get" method="_sbEG0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_roZTwZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-L9kJFCEeuCTslxszDstQ" type="_r-BlgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-KIYJFCEeuCTslxszDstQ" name="DictionaryCatalog" method="_sbBDk5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r-KIZZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r-KIZpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r-KIYZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-KIYpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-KIY5FCEeuCTslxszDstQ" name="desiredDictionaryFileType" type="_r-ITMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-KIZJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-KvcZFCEeuCTslxszDstQ" type="_okwjoJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-L9kZFCEeuCTslxszDstQ" name="setDictionary" method="_sbEt4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r-L9kpFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_olY1wJFCEeuCTslxszDstQ" name="DictionaryCatalogSet">
                <ownedComment xmi:id="_sevF4JFCEeuCTslxszDstQ">
                  <body>Simple container for &lt;code>DictionaryCatalog&lt;/code>s that allows
a &lt;code>DictionaryFile&lt;/code> to be retrieved by its &lt;code>POS&lt;/code>
and &lt;code>DictionaryFileType&lt;/code>.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sQZH4JFCEeuCTslxszDstQ" name="catalogs" visibility="private" isLeaf="true" type="_okwjoJFCEeuCTslxszDstQ" isReadOnly="true" association="_sis_4ZFCEeuCTslxszDstQ">
                  <qualifier xmi:id="_sQeAYJFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sQencJFCEeuCTslxszDstQ" name="dictionary" visibility="private" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_siuOAZFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_rojEwJFCEeuCTslxszDstQ" client="_olY1wJFCEeuCTslxszDstQ" supplier="_o0LfsJFCEeuCTslxszDstQ" contract="_o0LfsJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbF8AJFCEeuCTslxszDstQ" name="DictionaryCatalogSet" specification="_r-NywJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbGjEJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbGjEZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbGjEpFCEeuCTslxszDstQ" name="desiredDictionaryFileType" type="_r-ITMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbGjE5FCEeuCTslxszDstQ" type="_olY1wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
     this.catalogs = new EnumMap&lt;>(DictionaryFileType.class);
     for (DictionaryFileType d : DictionaryFileType.getAllDictionaryFileTypes()) {
         DictionaryCatalog&lt;E> cat = new DictionaryCatalog&lt;>(dictionary, d, desiredDictionaryFileType, params);
         catalogs.put(cat.getKey(), cat);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbGjFJFCEeuCTslxszDstQ" name="open" specification="_olgxkJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (!isOpen()) {
         for (Iterator&lt;DictionaryCatalog&lt;E>> itr = getCatalogIterator(); itr.hasNext(); ) {
             itr.next().open();
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbHKIJFCEeuCTslxszDstQ" name="delete" specification="_olh_sJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbHKIZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>boolean result = true;
     for (Iterator&lt;DictionaryCatalog&lt;E>> itr = getCatalogIterator(); itr.hasNext(); ) {
         final DictionaryCatalog&lt;E> catalog = itr.next();
         result = result &amp;&amp; catalog.delete();
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbHKIpFCEeuCTslxszDstQ" name="isOpen" specification="_oljN0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbHKI5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>for (Iterator&lt;DictionaryCatalog&lt;E>> itr = getCatalogIterator(); itr.hasNext(); ) {
         if (!itr.next().isOpen()) {
             return false;
         }
     }
     return true;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbHxMJFCEeuCTslxszDstQ" name="close" specification="_olkb8JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>for (Iterator&lt;DictionaryCatalog&lt;E>> itr = getCatalogIterator(); itr.hasNext(); ) {
         itr.next().close();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbHxMZFCEeuCTslxszDstQ" name="get" specification="_rolhAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbHxMpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbHxM5FCEeuCTslxszDstQ" type="_okwjoJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return catalogs.get(fileType);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbIYQJFCEeuCTslxszDstQ" name="size" specification="_ollqEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbIYQZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return catalogs.size();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbIYQpFCEeuCTslxszDstQ" name="getCatalogIterator" specification="_olm4MJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbIYQ5FCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return catalogs.values().iterator();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbI_UJFCEeuCTslxszDstQ" name="getDictionaryFile" specification="_ropLYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbI_UZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbI_UpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbI_U5FCEeuCTslxszDstQ" type="_r-BlgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>final DictionaryCatalog&lt;E> catalog = get(fileType);
     if (null != catalog) {
         return catalog.get(pos);
     } else {
         return null;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbJmYJFCEeuCTslxszDstQ" name="getDictionary" specification="_olrJoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbJmYZFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return dictionary;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbKNcJFCEeuCTslxszDstQ" name="setDictionary" specification="_r-WVoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbKNcZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbK0gJFCEeuCTslxszDstQ" name="save" specification="_olsXwJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>for (Iterator&lt;DictionaryCatalog&lt;E>> itr = getCatalogIterator(); itr.hasNext(); ) {
         itr.next().save();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbK0gZFCEeuCTslxszDstQ" name="edit" specification="_oltl4JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>for (Iterator&lt;DictionaryCatalog&lt;E>> itr = getCatalogIterator(); itr.hasNext(); ) {
         itr.next().edit();
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_olgxkJFCEeuCTslxszDstQ" name="open" method="_sbGjFJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_olh_sJFCEeuCTslxszDstQ" name="delete" method="_sbHKIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_olimwJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oljN0JFCEeuCTslxszDstQ" name="isOpen" method="_sbHKIpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_olj04JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_olkb8JFCEeuCTslxszDstQ" name="close" method="_sbHxMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ollqEJFCEeuCTslxszDstQ" name="size" method="_sbIYQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_olmRIJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_olm4MJFCEeuCTslxszDstQ" name="getCatalogIterator" method="_sbIYQpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r-SrQJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_olrJoJFCEeuCTslxszDstQ" name="getDictionary" method="_sbJmYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r-VHgJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_olsXwJFCEeuCTslxszDstQ" name="save" method="_sbK0gJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_oltl4JFCEeuCTslxszDstQ" name="edit" method="_sbK0gZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_rolhAJFCEeuCTslxszDstQ" name="get" method="_sbHxMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rolhAZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ron9QJFCEeuCTslxszDstQ" type="_okwjoJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ropLYJFCEeuCTslxszDstQ" name="getDictionaryFile" method="_sbI_UJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ropLYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ropLYpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-T5YJFCEeuCTslxszDstQ" type="_r-BlgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-NywJFCEeuCTslxszDstQ" name="DictionaryCatalogSet" method="_sbF8AJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r-PA4JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r-PA4ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_sevF4ZFCEeuCTslxszDstQ">
                    <body>Creates a catalog set of the specified type of file using files in the specified dictionary directory.
     *
     * @param dictionary                dictionary
     * @param params                    parameters
     * @param desiredDictionaryFileType desiredDictionaryFileType
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r-OZ0JFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-OZ0ZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-OZ0pFCEeuCTslxszDstQ" name="desiredDictionaryFileType" type="_r-ITMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-PA4pFCEeuCTslxszDstQ" type="_olY1wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-WVoJFCEeuCTslxszDstQ" name="setDictionary" method="_sbKNcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r-W8sJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_ol_5wJFCEeuCTslxszDstQ" name="DictionaryDiskFile">
                <ownedComment xmi:id="_sevs8JFCEeuCTslxszDstQ">
                  <body>Represents a single dictionary file on disk.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_ro0xkJFCEeuCTslxszDstQ" general="_omHOgJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_omBu8JFCEeuCTslxszDstQ" name="file" type="_roxuQJFCEeuCTslxszDstQ" isReadOnly="true" association="_sg4a8JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_omDkIJFCEeuCTslxszDstQ" name="delete" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_omELMJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_omHOgJFCEeuCTslxszDstQ" name="DictionaryFile">
                <ownedComment xmi:id="_sewUAJFCEeuCTslxszDstQ">
                  <body>Represents a single dictionary file.
The &quot;file&quot; can represent something not necessary on the disk: stream, resource.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_ro2mwJFCEeuCTslxszDstQ" general="_o0LfsJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_omJDsJFCEeuCTslxszDstQ" name="pOS" type="_oLknkJFCEeuCTslxszDstQ" isReadOnly="true"/>
                <ownedAttribute xmi:id="_omKR0JFCEeuCTslxszDstQ" name="filename" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_omK44JFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ" isReadOnly="true"/>
                <ownedAttribute xmi:id="_omN8MJFCEeuCTslxszDstQ" name="open" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedAttribute>
                <ownedOperation xmi:id="_omLf8JFCEeuCTslxszDstQ" name="open" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_omMuEJFCEeuCTslxszDstQ" name="close" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_omOjQJFCEeuCTslxszDstQ" name="save" visibility="package" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_omPxYJFCEeuCTslxszDstQ" name="edit" visibility="package" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_omUp4JFCEeuCTslxszDstQ" name="DictionaryFileFactory">
                <ownedComment xmi:id="_sew7EJFCEeuCTslxszDstQ">
                  <body>A dictionary file factory.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedOperation xmi:id="_r-e4gJFCEeuCTslxszDstQ" name="newInstance">
                  <ownedParameter xmi:id="_r-ffkJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-gGoJFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r-gGoZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-gtsJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-hUwJFCEeuCTslxszDstQ" type="_r-BlgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_omdz0JFCEeuCTslxszDstQ" name="DictionaryFileType">
                <ownedComment xmi:id="_sew7EZFCEeuCTslxszDstQ">
                  <body>Enumerates different types of dictionary files.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sQl8MJFCEeuCTslxszDstQ" name="ALL_TYPES" visibility="private" isLeaf="true" isStatic="true" type="_omdz0JFCEeuCTslxszDstQ" isOrdered="true" isReadOnly="true">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sQmjQJFCEeuCTslxszDstQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sQnKUJFCEeuCTslxszDstQ" value="Collections.unmodifiableList(Arrays.asList(&#xA;                    INDEX,&#xA;                    DATA,&#xA;                    EXCEPTION))"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sQo_gJFCEeuCTslxszDstQ" name="name" visibility="private" isLeaf="true" isReadOnly="true">
                  <eAnnotations xmi:id="_sQo_gZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sQpmkJFCEeuCTslxszDstQ" key="transient"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sQtQ8JFCEeuCTslxszDstQ" name="elementType" visibility="private" isLeaf="true" type="_oGGRsJFCEeuCTslxszDstQ" isReadOnly="true">
                  <eAnnotations xmi:id="_sQt4AJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sQt4AZFCEeuCTslxszDstQ" key="transient"/>
                  </eAnnotations>
                </ownedAttribute>
                <ownedOperation xmi:id="_omlvoJFCEeuCTslxszDstQ" name="getAllDictionaryFileTypes" isStatic="true" method="_sbMCoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_omlvoZFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ommWsJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_omr2QJFCEeuCTslxszDstQ" name="getName" method="_sbNQwpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_omsdUJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_omtrcJFCEeuCTslxszDstQ" name="getElementType" method="_sbNQxJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rpCM8JFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_omuSgJFCEeuCTslxszDstQ" name="toString" method="_sbN30ZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_omu5kJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rpA-0JFCEeuCTslxszDstQ" name="DictionaryFileType" visibility="package" method="_sbMpspFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rpBl4JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rpBl4ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rpA-0ZFCEeuCTslxszDstQ" name="type">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpA-0pFCEeuCTslxszDstQ" name="elementType" type="_oGGRsJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpBl4pFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedLiteral xmi:id="_omgQEJFCEeuCTslxszDstQ" name="INDEX">
                  <specification xmi:type="uml:Expression" xmi:id="_omgQEZFCEeuCTslxszDstQ">
                    <operand xmi:type="uml:LiteralString" xmi:id="_sew7EpFCEeuCTslxszDstQ" value="&quot;index&quot;"/>
                    <operand xmi:type="uml:LiteralString" xmi:id="_sexiIJFCEeuCTslxszDstQ" value="DictionaryElementType.INDEX_WORD"/>
                  </specification>
                </ownedLiteral>
                <ownedLiteral xmi:id="_omg3IJFCEeuCTslxszDstQ" name="DATA">
                  <specification xmi:type="uml:Expression" xmi:id="_omg3IZFCEeuCTslxszDstQ">
                    <operand xmi:type="uml:LiteralString" xmi:id="_sexiIZFCEeuCTslxszDstQ" value="&quot;data&quot;"/>
                    <operand xmi:type="uml:LiteralString" xmi:id="_sexiIpFCEeuCTslxszDstQ" value="DictionaryElementType.SYNSET"/>
                  </specification>
                </ownedLiteral>
                <ownedLiteral xmi:id="_omheMJFCEeuCTslxszDstQ" name="EXCEPTION">
                  <specification xmi:type="uml:Expression" xmi:id="_omheMZFCEeuCTslxszDstQ">
                    <operand xmi:type="uml:LiteralString" xmi:id="_sexiI5FCEeuCTslxszDstQ" value="&quot;exception&quot;"/>
                    <operand xmi:type="uml:LiteralString" xmi:id="_seyJMJFCEeuCTslxszDstQ" value="DictionaryElementType.EXCEPTION"/>
                  </specification>
                </ownedLiteral>
                <ownedLiteral xmi:id="_omheMpFCEeuCTslxszDstQ" name="SENSEINDEX">
                  <specification xmi:type="uml:Expression" xmi:id="_omiFQJFCEeuCTslxszDstQ">
                    <operand xmi:type="uml:LiteralString" xmi:id="_seyJMZFCEeuCTslxszDstQ" value="&quot;index.sense&quot;"/>
                    <operand xmi:type="uml:LiteralString" xmi:id="_seyJMpFCEeuCTslxszDstQ" value="null"/>
                  </specification>
                </ownedLiteral>
                <ownedLiteral xmi:id="_omiFQZFCEeuCTslxszDstQ" name="REVCNTLIST">
                  <specification xmi:type="uml:Expression" xmi:id="_omisUJFCEeuCTslxszDstQ">
                    <operand xmi:type="uml:LiteralString" xmi:id="_seyJM5FCEeuCTslxszDstQ" value="&quot;cntlist.rev&quot;"/>
                    <operand xmi:type="uml:LiteralString" xmi:id="_seyJNJFCEeuCTslxszDstQ" value="null"/>
                  </specification>
                </ownedLiteral>
                <ownedLiteral xmi:id="_omisUZFCEeuCTslxszDstQ" name="CNTLIST">
                  <specification xmi:type="uml:Expression" xmi:id="_omjTYJFCEeuCTslxszDstQ">
                    <operand xmi:type="uml:LiteralString" xmi:id="_seyJNZFCEeuCTslxszDstQ" value="&quot;cntlist&quot;"/>
                    <operand xmi:type="uml:LiteralString" xmi:id="_seywQJFCEeuCTslxszDstQ" value="null"/>
                  </specification>
                </ownedLiteral>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_om-KIJFCEeuCTslxszDstQ" name="ObjectDictionaryFile">
                <ownedComment xmi:id="_seywQZFCEeuCTslxszDstQ">
                  <body>&lt;code>DictionaryFile&lt;/code> that reads and writes serialized objects.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rpHsgJFCEeuCTslxszDstQ" general="_omHOgJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_om__UJFCEeuCTslxszDstQ" name="readObject" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r-qesJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-rFwJFCEeuCTslxszDstQ" name="writeObject" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r-rs0JFCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_onE30JFCEeuCTslxszDstQ" name="RandomAccessDictionaryFile">
                <ownedComment xmi:id="_sezXUJFCEeuCTslxszDstQ">
                  <body>&lt;code>DictionaryFile&lt;/code> that reads lines from a random-access text file.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rpLW4JFCEeuCTslxszDstQ" general="_omHOgJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_onH7IJFCEeuCTslxszDstQ" name="readLine" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sezXUZFCEeuCTslxszDstQ">
                    <body>Reads starting at &lt;var>offset&lt;/var> and till the end of line.
     *
     * @param offset offset
     * @return a line from the file
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_onH7IZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpL98JFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_onJwUJFCEeuCTslxszDstQ" name="readWord" visibility="package" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sezXUpFCEeuCTslxszDstQ">
                    <body>Reads starting at &lt;var>offset&lt;/var> and till space.
     *
     * @param offset offset
     * @return one word from the file (e.g. offset, index word)
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_onKXYJFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpL98ZFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_onMMkJFCEeuCTslxszDstQ" name="getFirstLineOffset" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sez-YJFCEeuCTslxszDstQ">
                    <body>Returns offset of the first line.
     *
     * @return offset of the first line
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_onMMkZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_onOBwJFCEeuCTslxszDstQ" name="getNextLineOffset" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sez-YZFCEeuCTslxszDstQ">
                    <body>Returns start of the next line or -1 if no new line.
     *
     * @param offset starting offset
     * @return start of the next line or -1 if no new line.
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_onOBwZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_onOo0JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_onP28JFCEeuCTslxszDstQ" name="length" visibility="package" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sez-YpFCEeuCTslxszDstQ">
                    <body>Returns the length, in bytes, of the file.
     *
     * @return the length, in bytes, of the file
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_onQeAJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_onRsIJFCEeuCTslxszDstQ" name="getOffsetLength" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sez-Y5FCEeuCTslxszDstQ">
                    <body>Returns offset length that accommodates largest offset.
     *
     * @return offset length that accommodates largest offset
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_onSTMJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_onThUJFCEeuCTslxszDstQ" name="setOffsetLength" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_se0lcJFCEeuCTslxszDstQ">
                    <body>Sets offset length to be used while rendering the file.
     *
     * @param length offset length to be used while rendering the file
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_onUIYJFCEeuCTslxszDstQ" name="length">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_r-BlgJFCEeuCTslxszDstQ" name="E"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_sP9DAJFCEeuCTslxszDstQ" name="POS"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_sg4a8JFCEeuCTslxszDstQ" name="" memberEnd="_sg4a8ZFCEeuCTslxszDstQ _omBu8JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sg4a8ZFCEeuCTslxszDstQ" name="" type="_ol_5wJFCEeuCTslxszDstQ" association="_sg4a8JFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_silEEZFCEeuCTslxszDstQ" name="" memberEnd="_silEEpFCEeuCTslxszDstQ _sPuZgJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_silEEpFCEeuCTslxszDstQ" name="" type="_okYwMJFCEeuCTslxszDstQ" association="_silEEZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_simSMZFCEeuCTslxszDstQ" name="" memberEnd="_sim5QJFCEeuCTslxszDstQ _sPw1wJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sim5QJFCEeuCTslxszDstQ" name="" type="_okYwMJFCEeuCTslxszDstQ" association="_simSMZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sipVgJFCEeuCTslxszDstQ" name="" memberEnd="_sipVgZFCEeuCTslxszDstQ _sP7N0JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sipVgZFCEeuCTslxszDstQ" name="" type="_okwjoJFCEeuCTslxszDstQ" association="_sipVgJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sirKsJFCEeuCTslxszDstQ" name="" memberEnd="_sirKsZFCEeuCTslxszDstQ _sQEXwJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sirKsZFCEeuCTslxszDstQ" name="" type="_okwjoJFCEeuCTslxszDstQ" association="_sirKsJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sis_4ZFCEeuCTslxszDstQ" name="" memberEnd="_sis_4pFCEeuCTslxszDstQ _sQZH4JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sis_4pFCEeuCTslxszDstQ" name="" type="_olY1wJFCEeuCTslxszDstQ" association="_sis_4ZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_siuOAZFCEeuCTslxszDstQ" name="" memberEnd="_siuOApFCEeuCTslxszDstQ _sQencJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_siuOApFCEeuCTslxszDstQ" name="" type="_olY1wJFCEeuCTslxszDstQ" association="_siuOAZFCEeuCTslxszDstQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_nI0xIZFCEeuCTslxszDstQ" name="file_manager">
              <packagedElement xmi:type="uml:Interface" xmi:id="_ona2EJFCEeuCTslxszDstQ" name="FileManager">
                <ownedComment xmi:id="_se0lcZFCEeuCTslxszDstQ">
                  <body>&lt;code>FileManager&lt;/code> defines the interface between the &lt;code>FileBackedDictionary&lt;/code> and the file system.
Methods in this interface operate on and return offsets, which are indices into a dictionary file.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rpNzIJFCEeuCTslxszDstQ" general="_o0LfsJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_onjY8JFCEeuCTslxszDstQ" name="getUseCount" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_onkAAJFCEeuCTslxszDstQ" name="senseKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_onknEJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_onl1MJFCEeuCTslxszDstQ" name="close" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_onnDUJFCEeuCTslxszDstQ" name="save" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_onoRcJFCEeuCTslxszDstQ" name="delete" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ono4gJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_onqGoJFCEeuCTslxszDstQ" name="edit" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_rpOaMJFCEeuCTslxszDstQ" name="getIndexedLine" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rpPBQJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpPBQZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpPoUJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpQPYJFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rpRdgJFCEeuCTslxszDstQ" name="readLineAt" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rpSEkJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpSEkZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpSEkpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpSEk5FCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rpTSsJFCEeuCTslxszDstQ" name="getMatchingLine" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rpTSsZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpT5wJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpT5wZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpT5wpFCEeuCTslxszDstQ" name="substring">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpUg0JFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rpWWAJFCEeuCTslxszDstQ" name="getRandomLine" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rpWWAZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpWWApFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpW9EJFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rpXkIJFCEeuCTslxszDstQ" name="getFirstLineOffset" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rpYLMJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpYLMZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpYyQJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_ooEWUJFCEeuCTslxszDstQ" name="FileManagerImpl">
                <ownedComment xmi:id="_se1MgJFCEeuCTslxszDstQ">
                  <body>An implementation of &lt;code>FileManager&lt;/code> that reads files from the local file system.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sQwUQJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_sivcIZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sQw7UJFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(FileManagerImpl.class)"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sQxiYJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ" association="_se1zkJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sQyJcJFCEeuCTslxszDstQ" name="CHECK_PATH_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sQyJcZFCEeuCTslxszDstQ" value="&quot;check_path&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sQywgJFCEeuCTslxszDstQ" name="files" visibility="private" isLeaf="true" type="_olY1wJFCEeuCTslxszDstQ" isReadOnly="true" association="_sixRUJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sQ3B8JFCEeuCTslxszDstQ" name="CACHE_USE_COUNT_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sQ3B8ZFCEeuCTslxszDstQ" value="&quot;cache_use_count&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sQ4QEJFCEeuCTslxszDstQ" name="cacheUseCount" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sQ4QEZFCEeuCTslxszDstQ" value="false"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sQ6FQJFCEeuCTslxszDstQ" name="useCountCache" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <qualifier xmi:id="_sQ76cJFCEeuCTslxszDstQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </qualifier>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sQ6sUJFCEeuCTslxszDstQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sQ76cZFCEeuCTslxszDstQ" name="revCntList" visibility="private" type="_onE30JFCEeuCTslxszDstQ" association="_sizGgZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sQ-WsJFCEeuCTslxszDstQ" name="cntList" visibility="private" type="_onE30JFCEeuCTslxszDstQ" association="_si07sZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sQ_k0ZFCEeuCTslxszDstQ" name="senseIndex" visibility="private" type="_onE30JFCEeuCTslxszDstQ" association="_si3X8JFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_rpdqwJFCEeuCTslxszDstQ" client="_ooEWUJFCEeuCTslxszDstQ" supplier="_ona2EJFCEeuCTslxszDstQ" contract="_ona2EJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbPtAJFCEeuCTslxszDstQ" name="FileManagerImpl" specification="_r-36EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbPtAZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbPtApFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbPtA5FCEeuCTslxszDstQ" type="_ooEWUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>try {
         if (!params.containsKey(DictionaryCatalog.DICTIONARY_PATH_KEY)) {
             throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;JWNL_EXCEPTION_004&quot;, DictionaryCatalog.DICTIONARY_PATH_KEY));
         }

         boolean checkPath = true;
         if (params.containsKey(CHECK_PATH_KEY)) {
             checkPath = Boolean.parseBoolean(params.get(CHECK_PATH_KEY).getValue());
         }

         String path = params.get(DictionaryCatalog.DICTIONARY_PATH_KEY).getValue();

         if (checkPath) {
             File dictionaryPath = new File(path);
             if (!dictionaryPath.exists()) {
                 throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;JWNL_EXCEPTION_009&quot;, path));
             }
         }

         this.dictionary = dictionary;
         files = new DictionaryCatalogSet&lt;>(dictionary, params, RandomAccessDictionaryFile.class);
         files.open();

         try {
             Class fileClass = Class.forName(params.get(DictionaryCatalog.DICTIONARY_FILE_TYPE_KEY).getValue());
             if (!RandomAccessDictionaryFile.class.isAssignableFrom(fileClass)) {
                 throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_003&quot;,
                         new Object[]{fileClass, RandomAccessDictionaryFile.class.getCanonicalName()}));
             }
         } catch (ClassNotFoundException e) {
             throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_002&quot;), e);
         }

         @SuppressWarnings(&quot;unchecked&quot;)
         DictionaryFileFactory&lt;RandomAccessDictionaryFile> factory =
                 (DictionaryFileFactory&lt;RandomAccessDictionaryFile>) params.get(DictionaryCatalog.DICTIONARY_FILE_TYPE_KEY).create();

         revCntList = factory.newInstance(dictionary, path, null, DictionaryFileType.REVCNTLIST);
         revCntList.open();

         cntList = factory.newInstance(dictionary, path, null, DictionaryFileType.CNTLIST);
         cntList.open();

         senseIndex = factory.newInstance(dictionary, path, null, DictionaryFileType.SENSEINDEX);
         senseIndex.open();

         if (params.containsKey(CACHE_USE_COUNT_KEY)) {
             cacheUseCount = Boolean.parseBoolean(params.get(CACHE_USE_COUNT_KEY).getValue());
         }

         if (cacheUseCount) {
             cacheUseCounts();
         }
     } catch (JWNLException e) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_016&quot;), e);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbPtBJFCEeuCTslxszDstQ" name="close" specification="_ooLrEJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>files.close();
     cntList.close();
     revCntList.close();
     senseIndex.close();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbQUEJFCEeuCTslxszDstQ" name="delete" specification="_ooPVcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbQUEZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>boolean result = files.delete();
     if (cntList instanceof DictionaryDiskFile) {
         result = result &amp;&amp; ((DictionaryDiskFile) cntList).delete();
     }
     if (revCntList instanceof DictionaryDiskFile) {
         result = result &amp;&amp; ((DictionaryDiskFile) revCntList).delete();
     }
     if (senseIndex instanceof DictionaryDiskFile) {
         result = result &amp;&amp; ((DictionaryDiskFile) senseIndex).delete();
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbQ7IJFCEeuCTslxszDstQ" name="edit" specification="_ooSYwJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>files.edit();
     revCntList.edit();
     cntList.edit();
     senseIndex.edit();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbRiMJFCEeuCTslxszDstQ" name="readLineAt" specification="_rphVIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbRiMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbRiMpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbRiM5FCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbRiNJFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>RandomAccessDictionaryFile file = getFile(pos, fileType);
     if (null == file || file.length() == 0) {
         return null;
     }
     return file.readLine(offset);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbSJQJFCEeuCTslxszDstQ" name="getMatchingLine" specification="_rplmkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbSJQZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbSJQpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbSJQ5FCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbSJRJFCEeuCTslxszDstQ" name="substring">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbSJRZFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>RandomAccessDictionaryFile file = getFile(pos, fileType);
     if (null == file || file.length() == 0) {
         return null;
     }

     PointedCharSequence word = file.readWord(offset);

     while (null != word &amp;&amp; -1 == word.indexOf(substring)) {
         offset = file.getNextLineOffset(word.getLastBytePosition() + 1);
         word = file.readWord(offset);
     }

     if (null == word) {
         return null;
     } else {
         return file.readLine(offset);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbSwUJFCEeuCTslxszDstQ" name="getIndexedLine" specification="_rpqfEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbSwUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbSwUpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbSwU5FCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbSwVJFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>RandomAccessDictionaryFile file = getFile(pos, fileType);
     if (null == file || file.length() == 0) {
         return null;
     }
     PointedCharSequence result = null;
     long start = file.getFirstLineOffset();
     long stop = file.length() - 1;
     long offset; // current offset within the file, midpoint of binary search
     int compare;
     PointedCharSequence word; // current word
     out:
     while (start &lt; stop) {
         offset = start + (stop - start) / 2;
         offset = file.getNextLineOffset(offset);
         if (stop == offset || -1 == offset) {
             // we hit somewhere in the line ending at stop or eol,
             // e.g. can't advance midpoint enough to catch a line
             // search sequentially from start remaining lines
             offset = start;
             while (stop != offset &amp;&amp; -1 != offset) {
                 word = file.readWord(offset);
                 if (0 == word.compareTo(index)) {
                     result = file.readLine(offset);
                     break out;
                 } else {
                     offset = file.getNextLineOffset(offset);
                 }
             }
             break;
         }
         word = file.readWord(offset);
         compare = word.compareTo(index);
         if (compare == 0) {
             result = file.readLine(offset);
             break;
         } else if (compare > 0) {
             stop = offset;
         } else {
             start = offset;
         }
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbTXYJFCEeuCTslxszDstQ" name="getRandomLine" specification="_rpuJcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbTXYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbTXYpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbTXY5FCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>// favors successors of long lines...
     final RandomAccessDictionaryFile file = getFile(pos, fileType);
     long start = file.getFirstLineOffset();
     int range = ((int) file.length()) - (int) start;
     PointedCharSequence result;
     long offset;
     do {
         // casts break long files...
         offset = start + (long) getDictionary().getRandom().nextInt(range);
         // first line is at a disadvantage
         result = file.readLine(file.getNextLineOffset(offset));
     } while (null == result);
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbT-cJFCEeuCTslxszDstQ" name="getFirstLineOffset" specification="_rpwlsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbT-cZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbT-cpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbT-c5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>RandomAccessDictionaryFile file = getFile(pos, fileType);
     return file.getFirstLineOffset();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbUlgJFCEeuCTslxszDstQ" name="save" specification="_ooa7oJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>files.delete();
     files.open();

     // find max offset length
     int maxOffsetLength = 0;
     {
         Iterator&lt;RandomAccessDictionaryFile> itr = files.get(DictionaryFileType.DATA).getFileIterator();
         while (itr.hasNext()) {
             RandomAccessDictionaryFile radf = itr.next();
             int offsetLength = radf.getOffsetLength();
             if (maxOffsetLength &lt; offsetLength) {
                 maxOffsetLength = offsetLength;
             }
         }
     }

     // set the same max offset length for all files
     for (DictionaryFileType dft : DictionaryFileType.getAllDictionaryFileTypes()) {
         Iterator&lt;RandomAccessDictionaryFile> itr = files.get(dft).getFileIterator();
         while (itr.hasNext()) {
             RandomAccessDictionaryFile radf = itr.next();
             radf.setOffsetLength(maxOffsetLength);
         }
     }
     revCntList.setOffsetLength(maxOffsetLength);
     cntList.setOffsetLength(maxOffsetLength);
     senseIndex.setOffsetLength(maxOffsetLength);

     files.save();

     revCntList.save();
     cntList.save();
     senseIndex.save();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbUlgZFCEeuCTslxszDstQ" name="getUseCount" specification="_ood-8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbUlgpFCEeuCTslxszDstQ" name="senseKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbUlg5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (cacheUseCount) {
         Integer result = useCountCache.get(senseKey);
         return null == result ? 0 : result;
     } else {
         int result = 0;
         PointedCharSequence line = getIndexedLine(null, DictionaryFileType.REVCNTLIST, senseKey);
         if (null != line &amp;&amp; 0 != line.length()) {
             // sense_key  sense_number  tag_cnt
             CharSequenceParser p = new CharSequenceParser(line);
             p.skipToken(); // sense_key
             p.skipToken(); // sense_number
             result = p.nextInt(); // tag_cnt
         }
         return result;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbVMkJFCEeuCTslxszDstQ" name="getFile" specification="_rp03IJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbVMkZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbVMkpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbVMk5FCEeuCTslxszDstQ" type="_onE30JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>RandomAccessDictionaryFile file = files.getDictionaryFile(pos, fileType);
     if (null == file) {
         if (DictionaryFileType.REVCNTLIST == fileType) {
             file = revCntList;
         } else if (DictionaryFileType.CNTLIST == fileType) {
             file = cntList;
         } else if (DictionaryFileType.SENSEINDEX == fileType) {
             file = senseIndex;
         }
     }
     return file;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbVzoJFCEeuCTslxszDstQ" name="cacheUseCounts" specification="_oohCQJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (log.isDebugEnabled()) {
         log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_018&quot;));
     }

     PointedCharSequence line = revCntList.readLine(0);
     while (null != line &amp;&amp; 0 != line.length()) {
         //sense_key  sense_number  tag_cnt
         CharSequenceParser p = new CharSequenceParser(line);
         String senseKey = p.nextToken(); // sense_key
         p.skipToken(); // skip sense_number
         Integer useCnt = p.nextInt(); // tag_cnt
         useCountCache.put(senseKey, useCnt);
         line = revCntList.readLine(line.getLastBytePosition() + 1);
     }
     if (log.isDebugEnabled()) {
         log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_019&quot;));
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ooLrEJFCEeuCTslxszDstQ" name="close" method="_sbPtBJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ooPVcJFCEeuCTslxszDstQ" name="delete" method="_sbQUEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ooP8gJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ooSYwJFCEeuCTslxszDstQ" name="edit" method="_sbQ7IJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ooa7oJFCEeuCTslxszDstQ" name="save" method="_sbUlgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_oobisJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oocJwJFCEeuCTslxszDstQ" key="synchronized"/>
                  </eAnnotations>
                </ownedOperation>
                <ownedOperation xmi:id="_ood-8JFCEeuCTslxszDstQ" name="getUseCount" method="_sbUlgZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ooemAJFCEeuCTslxszDstQ" name="senseKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ooemAZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oohCQJFCEeuCTslxszDstQ" name="cacheUseCounts" visibility="private" method="_sbVzoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_rphVIJFCEeuCTslxszDstQ" name="readLineAt" method="_sbRiMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rphVIZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rphVIpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rph8MJFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpijQJFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rplmkJFCEeuCTslxszDstQ" name="getMatchingLine" method="_sbSJQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rpmNoJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpmNoZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpmNopFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpm0sJFCEeuCTslxszDstQ" name="substring">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rpm0sZFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rpqfEJFCEeuCTslxszDstQ" name="getIndexedLine" method="_sbSwUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rprGIJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rprGIZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rprGIpFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rprtMJFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rpuJcJFCEeuCTslxszDstQ" name="getRandomLine" method="_sbTXYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rpuJcZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpuwgJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpvXkJFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rpwlsJFCEeuCTslxszDstQ" name="getFirstLineOffset" method="_sbT-cJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rpwlsZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpwlspFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rpxz0JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rp03IJFCEeuCTslxszDstQ" name="getFile" visibility="private" method="_sbVMkJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_se3BsJFCEeuCTslxszDstQ">
                    <body>Returns the file from a part of speech and file type (ie data.noun).
     *
     * @param pos      - the part of speech (NOUN, ADJ, VERB, ADV) or null
     * @param fileType - the file type (data, index, exc, cntlist)
     * @return - dictionary file</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rp03IZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rp03IpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rp1eMJFCEeuCTslxszDstQ" type="_onE30JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r-36EJFCEeuCTslxszDstQ" name="FileManagerImpl" method="_sbPtAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r-4hIZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r-5IMJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r-36EZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-4hIJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r-5IMZFCEeuCTslxszDstQ" type="_ooEWUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_se1zkJFCEeuCTslxszDstQ" name="" memberEnd="_sQxiYJFCEeuCTslxszDstQ _se1zkZFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_se1zkZFCEeuCTslxszDstQ" name="" type="_ooEWUJFCEeuCTslxszDstQ" association="_se1zkJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sivcIZFCEeuCTslxszDstQ" name="" memberEnd="_sivcIpFCEeuCTslxszDstQ _sQwUQJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sivcIpFCEeuCTslxszDstQ" name="" type="_ooEWUJFCEeuCTslxszDstQ" association="_sivcIZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sixRUJFCEeuCTslxszDstQ" name="" memberEnd="_sixRUZFCEeuCTslxszDstQ _sQywgJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sixRUZFCEeuCTslxszDstQ" name="" type="_ooEWUJFCEeuCTslxszDstQ" association="_sixRUJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sizGgZFCEeuCTslxszDstQ" name="" memberEnd="_sizGgpFCEeuCTslxszDstQ _sQ76cZFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sizGgpFCEeuCTslxszDstQ" name="" type="_ooEWUJFCEeuCTslxszDstQ" association="_sizGgZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_si07sZFCEeuCTslxszDstQ" name="" memberEnd="_si07spFCEeuCTslxszDstQ _sQ-WsJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_si07spFCEeuCTslxszDstQ" name="" type="_ooEWUJFCEeuCTslxszDstQ" association="_si07sZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_si3X8JFCEeuCTslxszDstQ" name="" memberEnd="_si3X8ZFCEeuCTslxszDstQ _sQ_k0ZFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_si3X8ZFCEeuCTslxszDstQ" name="" type="_ooEWUJFCEeuCTslxszDstQ" association="_si3X8JFCEeuCTslxszDstQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_ngMvUJFCEeuCTslxszDstQ" name="morph">
              <packagedElement xmi:type="uml:Class" xmi:id="_opFqAJFCEeuCTslxszDstQ" name="AbstractDelegatingOperation" isAbstract="true">
                <ownedComment xmi:id="_se4P0JFCEeuCTslxszDstQ">
                  <body>Base class for operations.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rqNRoJFCEeuCTslxszDstQ" general="_opYk8JFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sRG5kJFCEeuCTslxszDstQ" name="operationSets" visibility="private" isLeaf="true" type="_rWnAMZFCEeuCTslxszDstQ" isReadOnly="true" association="_si4mEZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sRKj8JFCEeuCTslxszDstQ" name="params" visibility="protected" isLeaf="true" type="_oyrD0JFCEeuCTslxszDstQ" isReadOnly="true" association="_si7CUJFCEeuCTslxszDstQ">
                  <qualifier xmi:id="_sRLyEJFCEeuCTslxszDstQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </qualifier>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbYP4JFCEeuCTslxszDstQ" name="AbstractDelegatingOperation" specification="_r_HKoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbYP4ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbYP4pFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbYP45FCEeuCTslxszDstQ" type="_opFqAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary);
     this.params = params;
     operationSets = new HashMap&lt;>();
     String[] keys = getKeys();
     for (String key : keys) {
         ParamList paramList = (ParamList) params.get(key);
         if (paramList != null) {
             @SuppressWarnings(&quot;unchecked&quot;)
             List&lt;Operation> operations = (List&lt;Operation>) paramList.create();
             Operation[] operationArray = operations.toArray(new Operation[0]);
             this.addDelegate(key, operationArray);
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbY28JFCEeuCTslxszDstQ" name="addDelegate" specification="_rqF84JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbY28ZFCEeuCTslxszDstQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbY28pFCEeuCTslxszDstQ" name="operations" type="_orcacJFCEeuCTslxszDstQ">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sbY285FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>operationSets.put(key, operations);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbZeAJFCEeuCTslxszDstQ" name="hasDelegate" specification="_opM-wJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbZeAZFCEeuCTslxszDstQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbZeApFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return operationSets.containsKey(key);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbaFEJFCEeuCTslxszDstQ" name="delegate" specification="_rqJnQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbaFEZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbaFEpFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbaFE5FCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbaFFJFCEeuCTslxszDstQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbaFFZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Operation[] operations = operationSets.get(key);
     boolean result = false;
     for (Operation operation : operations) {
         if (operation.execute(pos, lemma, forms)) {
             result = true;
         }
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_opKigJFCEeuCTslxszDstQ" name="getKeys" visibility="protected" isAbstract="true">
                  <ownedParameter xmi:id="_opLJkJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_opLwoJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_opM-wJFCEeuCTslxszDstQ" name="hasDelegate" visibility="protected" method="_sbZeAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_opNl0JFCEeuCTslxszDstQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_opOM4JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rqF84JFCEeuCTslxszDstQ" name="addDelegate" method="_sbY28JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rqGj8JFCEeuCTslxszDstQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rqGj8ZFCEeuCTslxszDstQ" name="operations" type="_orcacJFCEeuCTslxszDstQ">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqHyEJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rqJnQJFCEeuCTslxszDstQ" name="delegate" visibility="protected" method="_sbaFEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rqKOUJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rqK1YJFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rqK1YZFCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rqK1YpFCEeuCTslxszDstQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rqLccJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r_HKoJFCEeuCTslxszDstQ" name="AbstractDelegatingOperation" method="_sbYP4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r_IYwZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r_I_0JFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r_HxsJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r_IYwJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r_I_0ZFCEeuCTslxszDstQ" type="_opFqAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_opYk8JFCEeuCTslxszDstQ" name="AbstractOperation" isAbstract="true">
                <ownedComment xmi:id="_se424JFCEeuCTslxszDstQ">
                  <body>Base class for operations.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sROOUJFCEeuCTslxszDstQ" name="dictionary" visibility="protected" type="_rVLc0JFCEeuCTslxszDstQ" association="_si9ekJFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_rqTYQJFCEeuCTslxszDstQ" client="_opYk8JFCEeuCTslxszDstQ" supplier="_orcacJFCEeuCTslxszDstQ" contract="_orcacJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbasIJFCEeuCTslxszDstQ" name="AbstractOperation" specification="_r_RisJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbasIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbasIpFCEeuCTslxszDstQ" type="_opYk8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbbTMJFCEeuCTslxszDstQ" name="getDictionary" specification="_opboQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbbTMZFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return dictionary;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbb6QJFCEeuCTslxszDstQ" name="setDictionary" specification="_r_V0IJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbb6QZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_opboQJFCEeuCTslxszDstQ" name="getDictionary" method="_sbbTMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r_UmAJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_RisJFCEeuCTslxszDstQ" name="AbstractOperation" visibility="protected" method="_sbasIJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r_Sw0JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r_Sw0ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r_RisZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r_Sw0pFCEeuCTslxszDstQ" type="_opYk8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_V0IJFCEeuCTslxszDstQ" name="setDictionary" method="_sbb6QJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r_WbMJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_opiV8JFCEeuCTslxszDstQ" name="BaseFormSet">
                <ownedComment xmi:id="_se424ZFCEeuCTslxszDstQ">
                  <body>A group of possible base forms for a particular lemma.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sRRRoJFCEeuCTslxszDstQ" name="dictionary" visibility="private" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_si_60ZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sRTt4JFCEeuCTslxszDstQ" name="forms" visibility="private" isLeaf="true" isOrdered="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sRTt4ZFCEeuCTslxszDstQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sRUU8JFCEeuCTslxszDstQ" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sRVjEZFCEeuCTslxszDstQ" name="allowDuplicates" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sRX_UJFCEeuCTslxszDstQ" name="index" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sRX_UZFCEeuCTslxszDstQ" value="-1"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbchUJFCEeuCTslxszDstQ" name="BaseFormSet" specification="_r_asoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbchUZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbchUpFCEeuCTslxszDstQ" type="_opiV8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(dictionary, false);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbdvcJFCEeuCTslxszDstQ" name="BaseFormSet" specification="_r_ch0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbdvcZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbdvcpFCEeuCTslxszDstQ" name="allowDuplicates">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbdvc5FCEeuCTslxszDstQ" type="_opiV8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
     this.allowDuplicates = allowDuplicates;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbeWgJFCEeuCTslxszDstQ" name="add" specification="_opnOcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbeWgZFCEeuCTslxszDstQ" name="s">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (allowDuplicates || !forms.contains(s)) {
         forms.add(s);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbe9kJFCEeuCTslxszDstQ" name="addAll" specification="_rqb7IJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbe9kZFCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (allowDuplicates) {
         this.forms.addAll(forms.forms);
     } else {
         for (int i = 0; i &lt; forms.forms.size(); i++) {
             add(forms.forms.get(i));
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbfkoJFCEeuCTslxszDstQ" name="getForm" specification="_oppDoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbfkoZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbfkopFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!isFormAvailable(index)) {
         throw new IllegalArgumentException(String.valueOf(index));
     }
     return forms.get(index);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbgLsJFCEeuCTslxszDstQ" name="getForms" specification="_opq40JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbgLsZFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sbgLspFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return forms;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbgywJFCEeuCTslxszDstQ" name="isCurrentFormAvailable" specification="_opt8IJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbgywZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return isFormAvailable(index);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbgywpFCEeuCTslxszDstQ" name="getCurrentForm" specification="_opvKQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbgyw5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!isCurrentFormAvailable()) {
         throw new JWNLRuntimeException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_012&quot;));
     }
     return getForm(index);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbhZ0JFCEeuCTslxszDstQ" name="isMoreFormsAvailable" specification="_opw_cJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbhZ0ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return isFormAvailable(index + 1);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbhZ0pFCEeuCTslxszDstQ" name="getNextForm" specification="_opyNkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbhZ05FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!isMoreFormsAvailable()) {
         throw new JWNLRuntimeException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_013&quot;));
     }
     return getForm(++index);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbhZ1JFCEeuCTslxszDstQ" name="setIndex" specification="_op0CwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbhZ1ZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (index &lt; forms.size()) {
         this.index = index;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbiA4JFCEeuCTslxszDstQ" name="size" specification="_op1Q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbiA4ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return forms.size();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbin8JFCEeuCTslxszDstQ" name="isFormAvailable" specification="_op3tIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbin8ZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbin8pFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (index >= 0 &amp;&amp; index &lt; forms.size());
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_opnOcJFCEeuCTslxszDstQ" name="add" method="_sbeWgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_opnOcZFCEeuCTslxszDstQ" name="s">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oppDoJFCEeuCTslxszDstQ" name="getForm" method="_sbfkoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oppDoZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oppqsJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_opq40JFCEeuCTslxszDstQ" name="getForms" method="_sbgLsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_opsG8JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_opsG8ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_opt8IJFCEeuCTslxszDstQ" name="isCurrentFormAvailable" method="_sbgywJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_opujMJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_opvKQJFCEeuCTslxszDstQ" name="getCurrentForm" method="_sbgywpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_opwYYJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_opw_cJFCEeuCTslxszDstQ" name="isMoreFormsAvailable" method="_sbhZ0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_opxmgJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_opyNkJFCEeuCTslxszDstQ" name="getNextForm" method="_sbhZ0pFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_opy0oJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_op0CwJFCEeuCTslxszDstQ" name="setIndex" method="_sbhZ1JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_op0CwZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_op1Q4JFCEeuCTslxszDstQ" name="size" method="_sbiA4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_op138JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_op3tIJFCEeuCTslxszDstQ" name="isFormAvailable" visibility="private" method="_sbin8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_op3tIZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_op4UMJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rqb7IJFCEeuCTslxszDstQ" name="addAll" method="_sbe9kJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rqb7IZFCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_asoJFCEeuCTslxszDstQ" name="BaseFormSet" method="_sbchUJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r_bTsJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r_bTsZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r_asoZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r_bTspFCEeuCTslxszDstQ" type="_opiV8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_ch0JFCEeuCTslxszDstQ" name="BaseFormSet" method="_sbdvcJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r_dv8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r_dv8ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r_dI4JFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r_dI4ZFCEeuCTslxszDstQ" name="allowDuplicates">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r_dv8pFCEeuCTslxszDstQ" type="_opiV8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oqCsQJFCEeuCTslxszDstQ" name="DefaultMorphologicalProcessor">
                <ownedComment xmi:id="_se5d8JFCEeuCTslxszDstQ">
                  <body>Default implementation of &lt;code>MorphologicalProcessor&lt;/code>. This isn't a true
morphological analyzer (it doesn't figure out all the characteristics of each word
it processes). This is basically a stemmer that uses WordNet exception files instead
of complex stemming rules. It also tries to be intelligent by removing delimiters and
doing concatenation.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sRde4JFCEeuCTslxszDstQ" name="CACHE_CAPACITY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sRetAJFCEeuCTslxszDstQ" value="&quot;cache_capacity&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sRfUEJFCEeuCTslxszDstQ" name="OPERATIONS" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sRgiMJFCEeuCTslxszDstQ" value="&quot;operations&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sRhwUJFCEeuCTslxszDstQ" name="lookupCache" visibility="private" isLeaf="true" type="_ovHZgJFCEeuCTslxszDstQ" isReadOnly="true" association="_sjCXEJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sRmBwJFCEeuCTslxszDstQ" name="operations" visibility="private" isLeaf="true" type="_orcacJFCEeuCTslxszDstQ" isReadOnly="true" association="_sjEMQJFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sRmo0JFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sRpFEJFCEeuCTslxszDstQ" name="dictionary" visibility="private" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_sjGogZFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_rqm6QJFCEeuCTslxszDstQ" client="_oqCsQJFCEeuCTslxszDstQ" supplier="_ohqzYJFCEeuCTslxszDstQ" contract="_ohqzYJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbjPAJFCEeuCTslxszDstQ" name="DefaultMorphologicalProcessor" specification="_r_vcwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbjPAZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbjPApFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbjPA5FCEeuCTslxszDstQ" type="_oqCsQJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
     ParamList operationParams = (ParamList) params.get(OPERATIONS);
     if (operationParams == null) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_026&quot;));
     }
     @SuppressWarnings(&quot;unchecked&quot;)
     List&lt;Operation> operations = (List&lt;Operation>) operationParams.create();
     this.operations = operations.toArray(new Operation[0]);

     Param param = params.get(CACHE_CAPACITY);
     int capacity = (param == null) ? CacheSet.DEFAULT_CACHE_CAPACITY : Integer.parseInt(param.getValue());
     lookupCache = new LRUPOSCache&lt;>(capacity);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbjPBJFCEeuCTslxszDstQ" name="lookupBaseForm" specification="_rqp9kJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbjPBZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbjPBpFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbjPB5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (null == pos || null == derivation || &quot;&quot;.equals(derivation)) {
         return null;
     }
     // See if we've already looked this word up
     LookupInfo info = getCachedLookupInfo(pos, derivation);
     synchronized (info) {
         if (info.getBaseForms().isCurrentFormAvailable()) {
             // get the last base form we retrieved. if you want
             // the next possible base form, use lookupNextBaseForm
             return null == dictionary ? null : dictionary.getIndexWord(pos, info.getBaseForms().getCurrentForm());
         } else {
             return lookupNextBaseForm(pos, info);
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbj2EJFCEeuCTslxszDstQ" name="lookupAllBaseForms" specification="_rqsZ0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbj2EZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbj2EpFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbj2E5FCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sbj2FJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null == pos || null == derivation || &quot;&quot;.equals(derivation)) {
         return Collections.emptyList();
     }

     final LookupInfo info = getCachedLookupInfo(pos, derivation);
     synchronized (info) {
         while (info.isNextOperationAvailable()) {
             info.executeNextOperation();
         }
     }
     return info.getBaseForms().getForms();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbmSUJFCEeuCTslxszDstQ" name="getCachedLookupInfo" specification="_rqu2EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbmSUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbmSUpFCEeuCTslxszDstQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbmSU5FCEeuCTslxszDstQ" type="_oqNrYJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>//DCL idiom... careful...
     LookupInfo info = lookupCache.getCache(pos).get(key);
     if (info == null) {
         synchronized (this) {
             info = lookupCache.getCache(pos).get(key);
             if (info == null) {
                 info = new LookupInfo(pos, key);
                 lookupCache.getCache(pos).put(key, info);
             }
         }
     }
     return info;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbm5YJFCEeuCTslxszDstQ" name="lookupNextBaseForm" specification="_rqwrQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbm5YZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbm5YpFCEeuCTslxszDstQ" name="info" type="_oqNrYJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbm5Y5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>String str = null;
     synchronized (info) {
         // if we've already found another possible base form, return that one
         if (info.getBaseForms().isMoreFormsAvailable()) {
             str = info.getBaseForms().getNextForm();
         } else {
             while (info.isNextOperationAvailable() &amp;&amp; !info.executeNextOperation()) {
             }
             if (info.getBaseForms().isMoreFormsAvailable()) {
                 str = info.getBaseForms().getNextForm();
             }
         }
     }

     return (str == null) ? null : (null == dictionary ? null : dictionary.getIndexWord(pos, str));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbpVoJFCEeuCTslxszDstQ" name="getDictionary" specification="_oqYDcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbpVoZFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return dictionary;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oqYDcJFCEeuCTslxszDstQ" name="getDictionary" method="_sbpVoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r__7cJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rqp9kJFCEeuCTslxszDstQ" name="lookupBaseForm" method="_sbjPBJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_se5d8ZFCEeuCTslxszDstQ">
                    <body>Lookup the first base form of a word. Given a lemma, finds the WordNet
     * entry most like that lemma. This function returns the first base form
     * found. Subsequent calls to this function with the same part-of-speech
     * and word will return the same base form.
     *
     * @param pos        the part-of-speech of the word to look up
     * @param derivation the word to look up
     * @return IndexWord the IndexWord found during lookup or null</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rqp9kZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rqqkoJFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rqrLsJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rqsZ0JFCEeuCTslxszDstQ" name="lookupAllBaseForms" method="_sbj2EJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_se6FAJFCEeuCTslxszDstQ">
                    <body>Returns all base forms of the derivation.
     * @param pos        part of speech
     * @param derivation derivation
     * @return base forms of the derivation
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rqtA4JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rqtA4ZFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rqtn8JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rqtn8ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rqu2EJFCEeuCTslxszDstQ" name="getCachedLookupInfo" visibility="private" method="_sbmSUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rqvdIJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rqvdIZFCEeuCTslxszDstQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rqvdIpFCEeuCTslxszDstQ" type="_oqNrYJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rqwrQJFCEeuCTslxszDstQ" name="lookupNextBaseForm" visibility="private" method="_sbm5YJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_se6FAZFCEeuCTslxszDstQ">
                    <body>Lookup the next base form of a pos/word pair. If a base form has not
     * yet been found for the pos/word, it will find the first base form,
     * otherwise it will find the next base form.
     *
     *
     * @param pos        the part-of-speech of the word to look up
     * @param info       lookup info
     * @return IndexWord the IndexWord found during lookup, or null if an IndexWord is not found
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rqwrQZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rqxSUJFCEeuCTslxszDstQ" name="info" type="_oqNrYJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rqxSUZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r_vcwJFCEeuCTslxszDstQ" name="DefaultMorphologicalProcessor" method="_sbjPAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r_xR8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r_ygEJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r_wD0JFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r_wq4JFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r_ygEZFCEeuCTslxszDstQ" type="_oqCsQJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_oqNrYJFCEeuCTslxszDstQ" name="LookupInfo" visibility="private">
                  <ownedAttribute xmi:id="_sRq6QJFCEeuCTslxszDstQ" name="pos" visibility="private" isLeaf="true" type="_oLknkJFCEeuCTslxszDstQ" isReadOnly="true"/>
                  <ownedAttribute xmi:id="_sRsvcJFCEeuCTslxszDstQ" name="derivation" visibility="private" isLeaf="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_sRukoJFCEeuCTslxszDstQ" name="baseForms" visibility="private" isLeaf="true" type="_opiV8JFCEeuCTslxszDstQ" isReadOnly="true" association="_sjIdsZFCEeuCTslxszDstQ"/>
                  <ownedAttribute xmi:id="_sRwZ0JFCEeuCTslxszDstQ" name="currentOperation" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbngcJFCEeuCTslxszDstQ" name="LookupInfo" specification="_rqygcJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sbngcZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_sbngcpFCEeuCTslxszDstQ" name="derivation">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_sbngc5FCEeuCTslxszDstQ" type="_oqNrYJFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>this.pos = pos;
         this.derivation = derivation;
         baseForms = new BaseFormSet(dictionary);
         currentOperation = -1;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sboHgJFCEeuCTslxszDstQ" name="isNextOperationAvailable" specification="_oqQusJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sboHgZFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return currentOperation + 1 &lt; operations.length;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sboHgpFCEeuCTslxszDstQ" name="executeNextOperation" specification="_oqR80JFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sboHg5FCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (!isNextOperationAvailable()) {
             throw new JWNLRuntimeException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_027&quot;));
         }
         Operation o = operations[++currentOperation];
         return o.execute(pos, derivation, baseForms);
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sboukJFCEeuCTslxszDstQ" name="getBaseForms" specification="_oqTyAJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sboukZFCEeuCTslxszDstQ" type="_opiV8JFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>return baseForms;
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_oqQusJFCEeuCTslxszDstQ" name="isNextOperationAvailable" method="_sboHgJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_oqRVwJFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_oqR80JFCEeuCTslxszDstQ" name="executeNextOperation" method="_sboHgpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_oqSj4JFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_oqTyAJFCEeuCTslxszDstQ" name="getBaseForms" method="_sboukJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_rq0VoJFCEeuCTslxszDstQ" type="_opiV8JFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_rqygcJFCEeuCTslxszDstQ" name="LookupInfo" method="_sbngcJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_rqzHgpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_rqzHg5FCEeuCTslxszDstQ" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_rqzHgJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_rqzHgZFCEeuCTslxszDstQ" name="derivation">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_rqzukJFCEeuCTslxszDstQ" type="_oqNrYJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oq3LoJFCEeuCTslxszDstQ" name="DetachSuffixesOperation">
                <ownedComment xmi:id="_se6sEJFCEeuCTslxszDstQ">
                  <body>Remove all applicable suffixes from the word(s) and do a look-up.
This class accepts parameters in the form of:
&lt;pre>
{@code
 &lt;param name=&quot;{part-of-speech}&quot; value=&quot;|{suffix}={stemmed suffix}|...&quot;/>
}
&lt;/pre>
where suffix is the {suffix} to convert from, and {stemmed suffix} is
the suffix to convert to.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rrDmMJFCEeuCTslxszDstQ" general="_opFqAJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sR3HgJFCEeuCTslxszDstQ" name="OPERATIONS" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sR3ukJFCEeuCTslxszDstQ" value="&quot;operations&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sR48sJFCEeuCTslxszDstQ" name="suffixMap" type="_rWnAMZFCEeuCTslxszDstQ" association="_sjKS4ZFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbp8sJFCEeuCTslxszDstQ" name="DetachSuffixesOperation" specification="_sAQaIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbp8sZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbp8spFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbp8s5FCEeuCTslxszDstQ" type="_oq3LoJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
     suffixMap = new EnumMap&lt;>(POS.class);
     for (Param p : params.values()) {
         POS pos = POS.getPOSForLabel(p.getName());
         if (pos != null) {
             suffixMap.put(pos, getSuffixArray(dictionary, p.getValue()));
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbrK0JFCEeuCTslxszDstQ" name="getSuffixArray" specification="_sAZkEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbrK0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbrK0pFCEeuCTslxszDstQ" name="suffixes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbrK05FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sbrK1JFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringTokenizer tokenizer = new StringTokenizer(suffixes, &quot;|=&quot;, true);
     if (!&quot;|&quot;.equals(tokenizer.nextToken())) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_028&quot;));
     }
     List&lt;String[]> suffixList = new ArrayList&lt;>();
     while (tokenizer.hasMoreTokens()) {
         String next = tokenizer.nextToken();
         String first = &quot;&quot;;
         String second = &quot;&quot;;
         if (!&quot;=&quot;.equals(next)) {
             first = next;
             tokenizer.nextToken();
         }
         next = tokenizer.nextToken();
         if (!&quot;|&quot;.equals(next)) {
             second = next;
             tokenizer.nextToken();
         }
         suffixList.add(new String[]{first, second});
     }
     return suffixList.toArray(new String[suffixList.size()][]);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbrx4JFCEeuCTslxszDstQ" name="getKeys" specification="_oq8EIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbrx4ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sbrx4pFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new String[]{OPERATIONS};
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbsY8JFCEeuCTslxszDstQ" name="execute" specification="_rrBxAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbsY8ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbsY8pFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbsY85FCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbsY9JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String[][] suffixArray = suffixMap.get(pos);
     if (suffixArray == null) {
         return false;
     }

     boolean addedBaseForm = false;
     for (String[] aSuffixArray : suffixArray) {
         if (derivation.endsWith(aSuffixArray[0])) {
             String stem = derivation.substring(0, derivation.length() - aSuffixArray[0].length()) + aSuffixArray[1];
             if (delegate(pos, stem, forms, OPERATIONS)) {
                 addedBaseForm = true;
             }
         }
     }
     return addedBaseForm;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oq8EIJFCEeuCTslxszDstQ" name="getKeys" visibility="protected" method="_sbrx4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oq8rMJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oq9SQJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rrBxAJFCEeuCTslxszDstQ" name="execute" method="_sbsY8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rrBxAZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrCYEJFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrCYEZFCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrC_IJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sAQaIJFCEeuCTslxszDstQ" name="DetachSuffixesOperation" method="_sbp8sJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sATdcJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sATdcZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sAQaIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sARoQJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sATdcpFCEeuCTslxszDstQ" type="_oq3LoJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sAZkEJFCEeuCTslxszDstQ" name="getSuffixArray" visibility="private" method="_sbrK0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sAZkEZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sAaLIJFCEeuCTslxszDstQ" name="suffixes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sAayMJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sAbZQJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_orKtoJFCEeuCTslxszDstQ" name="LookupExceptionsOperation">
                <ownedComment xmi:id="_se6sEZFCEeuCTslxszDstQ">
                  <body>Looks up the word in the exceptions file of the given part-of-speech.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rrMJEJFCEeuCTslxszDstQ" general="_opYk8JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbtAAJFCEeuCTslxszDstQ" name="LookupExceptionsOperation" specification="_sAkjMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbtAAZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbtAApFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbtAA5FCEeuCTslxszDstQ" type="_orKtoJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbtnEJFCEeuCTslxszDstQ" name="execute" specification="_rrKT4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbtnEZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbtnEpFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbtnE5FCEeuCTslxszDstQ" name="form" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbtnFJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Exc exc = null == dictionary ? null : dictionary.getException(pos, derivation);
     if (null != exc) {
         for (String exception : exc.getExceptions()) {
             form.add(exception);
         }
         return true;
     }
     return false;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_rrKT4JFCEeuCTslxszDstQ" name="execute" method="_sbtnEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rrK68JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrK68ZFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrK68pFCEeuCTslxszDstQ" name="form" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrLiAJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sAkjMJFCEeuCTslxszDstQ" name="LookupExceptionsOperation" method="_sbtAAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sAlxUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sAlxUZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sAlKQJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sAlKQZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sAlxUpFCEeuCTslxszDstQ" type="_orKtoJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_orT3kJFCEeuCTslxszDstQ" name="LookupIndexWordOperation">
                <ownedComment xmi:id="_se7TIJFCEeuCTslxszDstQ">
                  <body>Looks up index words.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rrRBkJFCEeuCTslxszDstQ" general="_opYk8JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbuOIJFCEeuCTslxszDstQ" name="LookupIndexWordOperation" specification="_sAqp0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbuOIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbuOIpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbuOI5FCEeuCTslxszDstQ" type="_orT3kJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbu1MJFCEeuCTslxszDstQ" name="execute" specification="_rrPzcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbu1MZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbu1MpFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbu1M5FCEeuCTslxszDstQ" name="baseForms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbu1NJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (dictionary.getIndexWord(pos, lemma) != null) {
         baseForms.add(lemma);
         return true;
     }
     return false;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_rrPzcJFCEeuCTslxszDstQ" name="execute" method="_sbu1MJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rrPzcZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrPzcpFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrQagJFCEeuCTslxszDstQ" name="baseForms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrQagZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sAqp0JFCEeuCTslxszDstQ" name="LookupIndexWordOperation" method="_sbuOIJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sAr38JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sAr38ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sAqp0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sArQ4JFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sAr38pFCEeuCTslxszDstQ" type="_orT3kJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_orcacJFCEeuCTslxszDstQ" name="Operation">
                <ownedComment xmi:id="_se7TIZFCEeuCTslxszDstQ">
                  <body>Base class for morphological operations.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rrTd0JFCEeuCTslxszDstQ" general="_o0LfsJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_rrUr8JFCEeuCTslxszDstQ" name="execute" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rrUr8ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrUr8pFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrVTAJFCEeuCTslxszDstQ" name="baseForms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrVTAZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_orkWQJFCEeuCTslxszDstQ" name="TokenizerOperation">
                <ownedComment xmi:id="_se76MJFCEeuCTslxszDstQ">
                  <body>Tokenizer operation.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a>
@author John Didion (jdidion@didion.net)</body>
                </ownedComment>
                <generalization xmi:id="_rrg5MJFCEeuCTslxszDstQ" general="_opFqAJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sR_DUJFCEeuCTslxszDstQ" name="TOKEN_OPERATIONS" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sR_qYJFCEeuCTslxszDstQ" value="&quot;token_operations&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sR_qYZFCEeuCTslxszDstQ" name="PHRASE_OPERATIONS" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSARcJFCEeuCTslxszDstQ" value="&quot;phrase_operations&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sSARcZFCEeuCTslxszDstQ" name="DELIMITERS" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSA4gJFCEeuCTslxszDstQ" value="&quot;delimiters&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sSBfkJFCEeuCTslxszDstQ" name="delimiters" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sSBfkZFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbvcQJFCEeuCTslxszDstQ" name="TokenizerOperation" specification="_sAwwcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbvcQZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbvcQpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbvcQ5FCEeuCTslxszDstQ" type="_orkWQJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
     ParamList delimiters = (ParamList) params.get(DELIMITERS);
     if (delimiters == null || delimiters.getParams().size() == 0) {
         this.delimiters = new String[]{&quot; &quot;};
     } else {
         this.delimiters = new String[delimiters.getParams().size()];
         for (int i = 0; i &lt; delimiters.getParams().size(); i++) {
             this.delimiters[i] = delimiters.getParams().get(i).getValue();
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbwDUJFCEeuCTslxszDstQ" name="getKeys" specification="_orwjgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbwDUZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sbwDUpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new String[]{TOKEN_OPERATIONS, PHRASE_OPERATIONS};
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbwqYJFCEeuCTslxszDstQ" name="execute" specification="_rrY9YJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbwqYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbwqYpFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbwqY5FCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbwqZJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String[] tokens = Util.split(lemma);
     BaseFormSet[] tokenForms = new BaseFormSet[tokens.length];

     if (!hasDelegate(TOKEN_OPERATIONS)) {
         addDelegate(TOKEN_OPERATIONS, new Operation[]{new LookupIndexWordOperation(dictionary, params)});
     }
     if (!hasDelegate(PHRASE_OPERATIONS)) {
         addDelegate(PHRASE_OPERATIONS, new Operation[]{new LookupIndexWordOperation(dictionary, params)});
     }

     for (int i = 0; i &lt; tokens.length; i++) {
         tokenForms[i] = new BaseFormSet(dictionary);
         tokenForms[i].add(tokens[i]);
         delegate(pos, tokens[i], tokenForms[i], TOKEN_OPERATIONS);
     }
     boolean foundForms = false;
     for (int i = 0; i &lt; tokenForms.length; i++) {
         for (int j = tokenForms.length - 1; j >= i; j--) {
             if (tryAllCombinations(pos, tokenForms, i, j, forms)) {
                 foundForms = true;
             }
         }
     }
     return foundForms;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbxRcJFCEeuCTslxszDstQ" name="tryAllCombinations" specification="_rrbZoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbxRcZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbxRcpFCEeuCTslxszDstQ" name="tokenForms" type="_opiV8JFCEeuCTslxszDstQ">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sbxRc5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbxRdJFCEeuCTslxszDstQ" name="startIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbxRdZFCEeuCTslxszDstQ" name="endIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbxRdpFCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbxRd5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int length = endIndex - startIndex + 1;
     int[] indexArray = new int[length];
     int[] endArray = new int[length];
     for (int i = 0; i &lt; indexArray.length; i++) {
         indexArray[i] = 0;
         endArray[i] = tokenForms[startIndex + i].size() - 1;
     }

     boolean foundForms = false;
     for (; ;) {
         String[] tokens = new String[length];
         for (int i = 0; i &lt; length; i++) {
             tokens[i] = tokenForms[i + startIndex].getForm(indexArray[i]);
         }
         for (String delimiter : delimiters) {
             if (tryAllCombinations(pos, tokens, delimiter, forms)) {
                 foundForms = true;
             }
         }

         if (Arrays.equals(indexArray, endArray)) {
             break;
         }

         for (int i = length - 1; i >= 0; i--) {
             if (indexArray[i] == endArray[i]) {
                 indexArray[i] = 0;
             } else {
                 indexArray[i]++;
                 break;
             }
         }
     }
     return foundForms;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sbyfkJFCEeuCTslxszDstQ" name="tryAllCombinations" specification="_rrec8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sbzGoJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbzGoZFCEeuCTslxszDstQ" name="tokens">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sbzGopFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbzGo5FCEeuCTslxszDstQ" name="delimiter">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sbzGpJFCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sbzGpZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>BitSet bits = new BitSet();
     int size = tokens.length - 1;

     boolean foundForms = false;
     do {
         String lemma = Util.getLemma(tokens, bits, delimiter);
         if (delegate(pos, lemma, forms, PHRASE_OPERATIONS)) {
             foundForms = true;
         }
     } while (Util.increment(bits, size));

     return foundForms;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_orwjgJFCEeuCTslxszDstQ" name="getKeys" visibility="protected" method="_sbwDUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_orwjgZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_orxKkJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rrY9YJFCEeuCTslxszDstQ" name="execute" method="_sbwqYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rrY9YZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrZkcJFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrZkcZFCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rraLgJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rrbZoJFCEeuCTslxszDstQ" name="tryAllCombinations" visibility="private" method="_sbxRcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rrbZoZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrcAsJFCEeuCTslxszDstQ" name="tokenForms" type="_opiV8JFCEeuCTslxszDstQ">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrdO0JFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrcAsZFCEeuCTslxszDstQ" name="startIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrcAspFCEeuCTslxszDstQ" name="endIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrcnwJFCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrcnwZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rrec8JFCEeuCTslxszDstQ" name="tryAllCombinations" visibility="private" method="_sbyfkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rrfEAJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrfEAZFCEeuCTslxszDstQ" name="tokens">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rrgSIJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrfEApFCEeuCTslxszDstQ" name="delimiter">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rrfrEJFCEeuCTslxszDstQ" name="forms" type="_opiV8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rrfrEZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sAwwcJFCEeuCTslxszDstQ" name="TokenizerOperation" method="_sbvcQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sAx-kJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sAx-kZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sAwwcZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sAxXgJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sAx-kpFCEeuCTslxszDstQ" type="_orkWQJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_osKMIJFCEeuCTslxszDstQ" name="Util" isAbstract="true">
                <ownedComment xmi:id="_se8hQJFCEeuCTslxszDstQ">
                  <body>Utility class.
 *
@author John Didion (jdidion@didion.net)</body>
                </ownedComment>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb0UwJFCEeuCTslxszDstQ" name="getLemma" specification="_sA9kwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb0UwZFCEeuCTslxszDstQ" name="tokens">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sb0UwpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb0Uw5FCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb0UxJFCEeuCTslxszDstQ" name="delimiter">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb0UxZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuilder buf = new StringBuilder();
     for (int i = 0; i &lt; tokens.length; i++) {
         if (i != 0 &amp;&amp; !bits.get(i - 1)) {
             buf.append(delimiter);
         }
         buf.append(tokens[i]);
     }
     return buf.toString();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb070JFCEeuCTslxszDstQ" name="increment" specification="_sBAoEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb070ZFCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb070pFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb0705FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int i = size - 1;
     while (i >= 0 &amp;&amp; bits.get(i)) {
         bits.set(i--, false);
     }
     if (i &lt; 0) {
         return false;
     }
     bits.set(i, true);
     return true;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb1i4JFCEeuCTslxszDstQ" name="split" specification="_osOdkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb1i4ZFCEeuCTslxszDstQ" name="str">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb1i4pFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sb1i45FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>char[] chars = str.toCharArray();
     List&lt;String> tokens = new ArrayList&lt;>();
     StringBuilder buf = new StringBuilder();
     for (char aChar : chars) {
         if ((aChar >= 'a' &amp;&amp; aChar &lt;= 'z') || aChar == '\'') {
             buf.append(aChar);
         } else {
             if (buf.length() > 0) {
                 tokens.add(buf.toString());
                 buf = new StringBuilder();
             }
         }
     }
     if (buf.length() > 0) {
         tokens.add(buf.toString());
     }
     return tokens.toArray(new String[0]);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb2J8JFCEeuCTslxszDstQ" name="getRootCause" specification="_sBEScJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb2J8ZFCEeuCTslxszDstQ" name="e" type="_rxDggJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb2J8pFCEeuCTslxszDstQ" type="_rxDggJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>Throwable result = e.getCause();
     while (null != result &amp;&amp; null != result.getCause()) {
         result = result.getCause();
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_osOdkJFCEeuCTslxszDstQ" name="split" isStatic="true" method="_sb1i4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_osPEoJFCEeuCTslxszDstQ" name="str">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_osPrsJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_osPrsZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sA9kwJFCEeuCTslxszDstQ" name="getLemma" isStatic="true" method="_sb0UwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sA9kwZFCEeuCTslxszDstQ" name="tokens">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sA_Z8JFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sA-L0JFCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sA-L0ZFCEeuCTslxszDstQ" name="delimiter">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sA-y4JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sBAoEJFCEeuCTslxszDstQ" name="increment" isStatic="true" method="_sb070JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sBBPIJFCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBBPIZFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sBB2MJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sBEScJFCEeuCTslxszDstQ" name="getRootCause" isStatic="true" method="_sb2J8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sBGHoJFCEeuCTslxszDstQ" name="e" type="_rxDggJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBH80JFCEeuCTslxszDstQ" type="_rxDggJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_si4mEZFCEeuCTslxszDstQ" name="" memberEnd="_si4mEpFCEeuCTslxszDstQ _sRG5kJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_si4mEpFCEeuCTslxszDstQ" name="" type="_opFqAJFCEeuCTslxszDstQ" association="_si4mEZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_si7CUJFCEeuCTslxszDstQ" name="" memberEnd="_si7CUZFCEeuCTslxszDstQ _sRKj8JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_si7CUZFCEeuCTslxszDstQ" name="" type="_opFqAJFCEeuCTslxszDstQ" association="_si7CUJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_si9ekJFCEeuCTslxszDstQ" name="" memberEnd="_si9ekZFCEeuCTslxszDstQ _sROOUJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_si9ekZFCEeuCTslxszDstQ" name="" type="_opYk8JFCEeuCTslxszDstQ" association="_si9ekJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_si_60ZFCEeuCTslxszDstQ" name="" memberEnd="_si_60pFCEeuCTslxszDstQ _sRRRoJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_si_60pFCEeuCTslxszDstQ" name="" type="_opiV8JFCEeuCTslxszDstQ" association="_si_60ZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjCXEJFCEeuCTslxszDstQ" name="" memberEnd="_sjCXEZFCEeuCTslxszDstQ _sRhwUJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjCXEZFCEeuCTslxszDstQ" name="" type="_oqCsQJFCEeuCTslxszDstQ" association="_sjCXEJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjEMQJFCEeuCTslxszDstQ" name="" memberEnd="_sjEMQZFCEeuCTslxszDstQ _sRmBwJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjEMQZFCEeuCTslxszDstQ" name="" type="_oqCsQJFCEeuCTslxszDstQ" association="_sjEMQJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjGogZFCEeuCTslxszDstQ" name="" memberEnd="_sjGogpFCEeuCTslxszDstQ _sRpFEJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjGogpFCEeuCTslxszDstQ" name="" type="_oqCsQJFCEeuCTslxszDstQ" association="_sjGogZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjIdsZFCEeuCTslxszDstQ" name="" memberEnd="_sjIdspFCEeuCTslxszDstQ _sRukoJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjIdspFCEeuCTslxszDstQ" name="" type="_oqNrYJFCEeuCTslxszDstQ" association="_sjIdsZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjKS4ZFCEeuCTslxszDstQ" name="" memberEnd="_sjKS4pFCEeuCTslxszDstQ _sR48sJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjKS4pFCEeuCTslxszDstQ" name="" type="_oq3LoJFCEeuCTslxszDstQ" association="_sjKS4ZFCEeuCTslxszDstQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oaDvgJFCEeuCTslxszDstQ" name="AbstractCachingDictionary" isAbstract="true">
              <ownedComment xmi:id="_seQkwJFCEeuCTslxszDstQ">
                <body>Extends &lt;code>Dictionary&lt;/code> to provide caching of elements.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_r7nKspFCEeuCTslxszDstQ" general="_rVLc0JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sNDgAJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_sh3SYJFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sNEHEJFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(AbstractCachingDictionary.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sNMC4JFCEeuCTslxszDstQ" name="caches" visibility="private" type="_ox9SIJFCEeuCTslxszDstQ" association="_sh8x8ZFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_sNMp8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sNMp8ZFCEeuCTslxszDstQ" key="volatile"/>
                </eAnnotations>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sNPtQJFCEeuCTslxszDstQ" name="isCachingEnabled" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sak-oJFCEeuCTslxszDstQ" name="AbstractCachingDictionary" specification="_r7JQoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sak-oZFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sak-opFCEeuCTslxszDstQ" type="_oaDvgJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(doc);
     isCachingEnabled = true;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sallsJFCEeuCTslxszDstQ" name="isCachingEnabled" specification="_oaaU0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sallsZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return isCachingEnabled;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_samMwJFCEeuCTslxszDstQ" name="setCachingEnabled" specification="_oacKAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_samMwZFCEeuCTslxszDstQ" name="cachingEnabled">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>isCachingEnabled = cachingEnabled;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_samz0JFCEeuCTslxszDstQ" name="getCacheSizes" specification="_rhezcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_samz0ZFCEeuCTslxszDstQ" name="type" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_samz0pFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return getCaches().getCacheSize(type);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sana4JFCEeuCTslxszDstQ" name="getCacheCapacity" specification="_rhfagZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sana4ZFCEeuCTslxszDstQ" name="type" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sana4pFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <language>java</language>
                <body>return getCaches().getCacheCapacity(type);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saoB8JFCEeuCTslxszDstQ" name="setCacheCapacity" specification="_oaemQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_saoB8ZFCEeuCTslxszDstQ" name="size">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>for (DictionaryElementType d : DictionaryElementType.getAllDictionaryElementTypes()) {
         setCacheCapacity(d, size);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saoB8pFCEeuCTslxszDstQ" name="setCacheCapacity" specification="_rhgBkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_saopAJFCEeuCTslxszDstQ" name="type" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_saopAZFCEeuCTslxszDstQ" name="size">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>getCaches().setCacheCapacity(type, size);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saopApFCEeuCTslxszDstQ" name="clearCache" specification="_oagbcJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>for (DictionaryElementType d : DictionaryElementType.getAllDictionaryElementTypes()) {
         clearCache(d);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sapQEJFCEeuCTslxszDstQ" name="clearCache" specification="_rhgBk5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sapQEZFCEeuCTslxszDstQ" name="elementType" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>if (isCachingEnabled()) {
         getCaches().clearCache(elementType);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sap3IJFCEeuCTslxszDstQ" name="cacheIndexWord" specification="_rhgooJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sap3IZFCEeuCTslxszDstQ" name="word" type="_oHXdAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sap3IpFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (IndexWord) cache(DictionaryElementType.INDEX_WORD, word);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saqeMJFCEeuCTslxszDstQ" name="clearIndexWord" specification="_r7LF0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_saqeMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_saqeMpFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>clear(DictionaryElementType.INDEX_WORD, pos, key);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sarFQJFCEeuCTslxszDstQ" name="getCachedIndexWord" specification="_r7M7AJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sarFQZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sarFQpFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sarFQ5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (IndexWord) getCached(DictionaryElementType.INDEX_WORD, pos, key);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sarsUJFCEeuCTslxszDstQ" name="cacheSynset" specification="_r7OwMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sarsUZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>cache(DictionaryElementType.SYNSET, synset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sasTYJFCEeuCTslxszDstQ" name="clearSynset" specification="_r7P-UJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sasTYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sasTYpFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>clear(DictionaryElementType.SYNSET, pos, key);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sasTY5FCEeuCTslxszDstQ" name="getCachedSynset" specification="_r7RzgJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sasTZJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sasTZZFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sasTZpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Synset) getCached(DictionaryElementType.SYNSET, pos, key);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sathgJFCEeuCTslxszDstQ" name="cacheException" specification="_rhh2wJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sathgZFCEeuCTslxszDstQ" name="exception" type="_oGjksJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sathgpFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Exc) cache(DictionaryElementType.EXCEPTION, exception);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sauIkJFCEeuCTslxszDstQ" name="clearException" specification="_r7TosJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sauIkZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sauIkpFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>clear(DictionaryElementType.EXCEPTION, pos, key);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sauvoJFCEeuCTslxszDstQ" name="getCachedException" specification="_r7U20JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sauvoZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sauvopFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sauvo5FCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Exc) getCached(DictionaryElementType.EXCEPTION, pos, key);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_savWsJFCEeuCTslxszDstQ" name="getCaches" specification="_oaks4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_savWsZFCEeuCTslxszDstQ" type="_ox9SIJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (!isCachingEnabled()) {
         throw new IllegalStateException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_022&quot;));
     }
     // fixed DCL idiom: http://en.wikipedia.org/wiki/Double-checked_locking
     CacheSet&lt;DictionaryElementType, Object, DictionaryElement> result = caches;
     if (null == result) {
         synchronized (this) {
             result = caches;
             if (null == result) {
                 caches = result = new LRUCacheSet&lt;>(DictionaryElementType.getAllDictionaryElementTypes());
             }
         }
     }
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sav9wJFCEeuCTslxszDstQ" name="cache" specification="_rhjE4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sav9wZFCEeuCTslxszDstQ" name="fileType" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sav9wpFCEeuCTslxszDstQ" name="obj" type="_oFhp8JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sav9w5FCEeuCTslxszDstQ" type="_oFhp8JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (isCachingEnabled() &amp;&amp; null != obj) {
         getCaches().cacheObject(fileType, obj.getPOS(), obj.getKey(), obj);
     }
     return obj;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sawk0JFCEeuCTslxszDstQ" name="clear" specification="_r7WsAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sawk0ZFCEeuCTslxszDstQ" name="fileType" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sawk0pFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sawk05FCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>if (isCachingEnabled()) {
         getCaches().clearObject(fileType, pos, key);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saxy8JFCEeuCTslxszDstQ" name="getCached" specification="_r7ZIQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_saxy8ZFCEeuCTslxszDstQ" name="fileType" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_saxy8pFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_saxy85FCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_saxy9JFCEeuCTslxszDstQ" type="_oFhp8JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (isCachingEnabled()) {
         return getCaches().getCachedObject(fileType, pos, key);
     }
     return null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sazBEJFCEeuCTslxszDstQ" name="getExceptionIterator" specification="_rhjr8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sazBEZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sazBEpFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Iterator&lt;Exc>) (Object) caches.getCache(DictionaryElementType.EXCEPTION).getCache(pos).values().iterator();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sazoIJFCEeuCTslxszDstQ" name="getSynsetIterator" specification="_rhlhIpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sazoIZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sazoIpFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Iterator&lt;Synset>) (Object) caches.getCache(DictionaryElementType.SYNSET).getCache(pos).values().iterator();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa0PMJFCEeuCTslxszDstQ" name="getIndexWordIterator" specification="_rhnWUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa0PMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa0PMpFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Iterator&lt;IndexWord>) (Object) caches.getCache(DictionaryElementType.INDEX_WORD).getCache(pos).values().iterator();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa02QJFCEeuCTslxszDstQ" name="getIndexWordIterator" specification="_rhurEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa02QZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa02QpFCEeuCTslxszDstQ" name="substring">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa02Q5FCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>substring = prepareQueryString(substring);

     final Iterator&lt;IndexWord> itr = getIndexWordIterator(pos);
     IndexWord start = null;
     while (itr.hasNext()) {
         IndexWord word = itr.next();
         if (word.getLemma().contains(substring)) {
             start = word;
             break;
         }
     }
     return new IndexWordIterator(itr, substring, start);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa02RJFCEeuCTslxszDstQ" name="edit" specification="_oaud4JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (!isEditable()) {
         cacheAll();
         super.edit();
         // resolving pointers here to use faster iterators on hashes
         resolveAllPointers();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa1dUJFCEeuCTslxszDstQ" name="addSynset" specification="_r7fO4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa1dUZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>super.addSynset(synset);
     cacheSynset(synset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa1dUpFCEeuCTslxszDstQ" name="removeSynset" specification="_r7iSMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa1dU5FCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>clearSynset(synset.getPOS(), synset.getKey());
     super.removeSynset(synset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa1dVJFCEeuCTslxszDstQ" name="addException" specification="_rh-isJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa1dVZFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>super.addException(exc);
     cacheException(exc);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa1dVpFCEeuCTslxszDstQ" name="removeException" specification="_riECQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa1dV5FCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>clearException(exc.getPOS(), exc.getKey());
     super.removeException(exc);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa1dWJFCEeuCTslxszDstQ" name="addIndexWord" specification="_riITsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa1dWZFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>super.addIndexWord(indexWord);
     cacheIndexWord(indexWord);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa1dWpFCEeuCTslxszDstQ" name="removeIndexWord" specification="_riLXAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa1dW5FCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>clearIndexWord(indexWord.getPOS(), indexWord.getKey());
     super.removeIndexWord(indexWord);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa1dXJFCEeuCTslxszDstQ" name="cacheAll" specification="_oa1LkJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>setCacheCapacity(Integer.MAX_VALUE);
     for (POS pos : POS.getAllPOS()) {
         cachePOS(pos);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa2EYJFCEeuCTslxszDstQ" name="iterateIterator" specification="_r7l8kJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa2EYZFCEeuCTslxszDstQ" name="i" type="_rXB28JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sa2EYpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sa2EY5FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <language>java</language>
                <body>int count = 0;
     while (i.hasNext()) {
         if (count % 10000 == 0) {
             if (log.isDebugEnabled()) {
                 log.debug(getMessages().resolveMessage(&quot;DICTIONARY_INFO_005&quot;, count));
             }
         }
         count++;
         i.next();
     }
     if (log.isDebugEnabled()) {
         log.debug(getMessages().resolveMessage(&quot;DICTIONARY_INFO_006&quot;, count));
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa2EZJFCEeuCTslxszDstQ" name="cachePOS" specification="_riOaUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa2EZZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>if (log.isDebugEnabled()) {
         log.debug(getMessages().resolveMessage(&quot;DICTIONARY_INFO_003&quot;, pos.getLabel()));
     }

     if (log.isDebugEnabled()) {
         log.debug(getMessages().resolveMessage(&quot;DICTIONARY_INFO_007&quot;));
     }
     iterateIterator(getExceptionIterator(pos));

     if (log.isDebugEnabled()) {
         log.debug(getMessages().resolveMessage(&quot;DICTIONARY_INFO_008&quot;));
     }
     iterateIterator(getSynsetIterator(pos));

     if (log.isDebugEnabled()) {
         log.debug(getMessages().resolveMessage(&quot;DICTIONARY_INFO_004&quot;));
     }
     iterateIterator(getIndexWordIterator(pos));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oaaU0JFCEeuCTslxszDstQ" name="isCachingEnabled" method="_sallsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oaa74JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oacKAJFCEeuCTslxszDstQ" name="setCachingEnabled" method="_samMwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oacKAZFCEeuCTslxszDstQ" name="cachingEnabled">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oaemQJFCEeuCTslxszDstQ" name="setCacheCapacity" method="_saoB8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oafNUJFCEeuCTslxszDstQ" name="size">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oagbcJFCEeuCTslxszDstQ" name="clearCache" method="_saopApFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_oaks4JFCEeuCTslxszDstQ" name="getCaches" visibility="private" method="_savWsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhid0JFCEeuCTslxszDstQ" type="_ox9SIJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oaud4JFCEeuCTslxszDstQ" name="edit" method="_sa02RJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oavE8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oavE8ZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_oa1LkJFCEeuCTslxszDstQ" name="cacheAll" method="_sa1dXJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oa1LkZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oa1yoJFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_rhezcJFCEeuCTslxszDstQ" name="getCacheSizes" method="_samz0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhezcZFCEeuCTslxszDstQ" name="type" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rhfagJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rhfagZFCEeuCTslxszDstQ" name="getCacheCapacity" method="_sana4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhfagpFCEeuCTslxszDstQ" name="type" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rhfag5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rhgBkJFCEeuCTslxszDstQ" name="setCacheCapacity" method="_saoB8pFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhgBkZFCEeuCTslxszDstQ" name="type" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rhgBkpFCEeuCTslxszDstQ" name="size">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rhgBk5FCEeuCTslxszDstQ" name="clearCache" method="_sapQEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhgBlJFCEeuCTslxszDstQ" name="elementType" type="_oGGRsJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rhgooJFCEeuCTslxszDstQ" name="cacheIndexWord" visibility="protected" method="_sap3IJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhgooZFCEeuCTslxszDstQ" name="word" type="_oHXdAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rhgoopFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rhh2wJFCEeuCTslxszDstQ" name="cacheException" visibility="protected" method="_sathgJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhh2wZFCEeuCTslxszDstQ" name="exception" type="_oGjksJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rhh2wpFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rhjE4JFCEeuCTslxszDstQ" name="cache" visibility="private" method="_sav9wJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhjE4ZFCEeuCTslxszDstQ" name="fileType" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rhjE4pFCEeuCTslxszDstQ" name="obj" type="_oFhp8JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rhjE45FCEeuCTslxszDstQ" type="_oFhp8JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rhjr8JFCEeuCTslxszDstQ" name="getExceptionIterator" method="_sazBEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhjr8ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7cLkJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rhlhIpFCEeuCTslxszDstQ" name="getSynsetIterator" method="_sazoIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhlhI5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7cyoJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rhnWUJFCEeuCTslxszDstQ" name="getIndexWordIterator" method="_sa0PMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhnWUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7dZsJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rhurEJFCEeuCTslxszDstQ" name="getIndexWordIterator" method="_sa02QJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rhurEZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rhvSIJFCEeuCTslxszDstQ" name="substring">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r7eAwJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rh-isJFCEeuCTslxszDstQ" name="addException" method="_sa1dVJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rh-isZFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_riECQJFCEeuCTslxszDstQ" name="removeException" method="_sa1dVpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_riEpUJFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_riITsJFCEeuCTslxszDstQ" name="addIndexWord" method="_sa1dWJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_riITsZFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_riLXAJFCEeuCTslxszDstQ" name="removeIndexWord" method="_sa1dWpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_riLXAZFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_riOaUJFCEeuCTslxszDstQ" name="cachePOS" visibility="protected" method="_sa2EZJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_riPBYJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7JQoJFCEeuCTslxszDstQ" name="AbstractCachingDictionary" visibility="protected" method="_sak-oJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r7J3sJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r7J3sZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r7JQoZFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7J3spFCEeuCTslxszDstQ" type="_oaDvgJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7LF0JFCEeuCTslxszDstQ" name="clearIndexWord" visibility="protected" method="_saqeMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7Ls4JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7Ls4ZFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7M7AJFCEeuCTslxszDstQ" name="getCachedIndexWord" visibility="protected" method="_sarFQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7M7AZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7NiEJFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7NiEZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7OwMJFCEeuCTslxszDstQ" name="cacheSynset" method="_sarsUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7OwMZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7P-UJFCEeuCTslxszDstQ" name="clearSynset" method="_sasTYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7P-UZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7P-UpFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7RzgJFCEeuCTslxszDstQ" name="getCachedSynset" visibility="protected" method="_sasTY5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7RzgZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7RzgpFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7SakJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7TosJFCEeuCTslxszDstQ" name="clearException" visibility="protected" method="_sauIkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7TosZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7TospFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7U20JFCEeuCTslxszDstQ" name="getCachedException" visibility="protected" method="_sauvoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7U20ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7Vd4JFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7Vd4ZFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7WsAJFCEeuCTslxszDstQ" name="clear" visibility="private" method="_sawk0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7WsAZFCEeuCTslxszDstQ" name="fileType" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7XTEJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7XTEZFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7ZIQJFCEeuCTslxszDstQ" name="getCached" visibility="private" method="_saxy8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7ZvUJFCEeuCTslxszDstQ" name="fileType" type="_oGGRsJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7ZvUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7ZvUpFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7aWYJFCEeuCTslxszDstQ" type="_oFhp8JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7fO4JFCEeuCTslxszDstQ" name="addSynset" method="_sa1dUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7fO4ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7iSMJFCEeuCTslxszDstQ" name="removeSynset" method="_sa1dUpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7i5QJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7l8kJFCEeuCTslxszDstQ" name="iterateIterator" visibility="private" method="_sa2EYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r7mjoJFCEeuCTslxszDstQ" name="i" type="_rXB28JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r7nKsJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r7nKsZFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oaIA8JFCEeuCTslxszDstQ" name="IndexWordIterator" isLeaf="true">
                <eAnnotations xmi:id="_oaIoAJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oaIoAZFCEeuCTslxszDstQ" key="static"/>
                </eAnnotations>
                <ownedAttribute xmi:id="_sNEuIJFCEeuCTslxszDstQ" name="itr" visibility="private" isLeaf="true" type="_rXB28JFCEeuCTslxszDstQ" isReadOnly="true" association="_sh5HkJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sNHxcJFCEeuCTslxszDstQ" name="searchString" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sNJmoJFCEeuCTslxszDstQ" name="startWord" visibility="private" type="_oHXdAJFCEeuCTslxszDstQ" association="_sh68wZFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_r6-4kJFCEeuCTslxszDstQ" client="_oaIA8JFCEeuCTslxszDstQ" supplier="_rXB28JFCEeuCTslxszDstQ" contract="_rXB28JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saiiYJFCEeuCTslxszDstQ" name="IndexWordIterator" specification="_r7DKAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saiiYZFCEeuCTslxszDstQ" name="itr" type="_rXB28JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saiiYpFCEeuCTslxszDstQ" name="searchString">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_saiiY5FCEeuCTslxszDstQ" name="startWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saiiZJFCEeuCTslxszDstQ" type="_oaIA8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.itr = itr;
         this.searchString = searchString;
         this.startWord = startWord;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sajJcJFCEeuCTslxszDstQ" name="hasNext" specification="_oaNggJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sajJcZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (startWord != null);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sakXkJFCEeuCTslxszDstQ" name="next" specification="_oaOuoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sakXkZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (hasNext()) {
             IndexWord thisWord = startWord;
             startWord = null;
             while (itr.hasNext()) {
                 IndexWord word = itr.next();
                 if (word.getLemma().contains(searchString)) {
                     startWord = word;
                     break;
                 }
             }
             return thisWord;
         } else {
             throw new NoSuchElementException();
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sakXkpFCEeuCTslxszDstQ" name="remove" specification="_oaP8wJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oaNggJFCEeuCTslxszDstQ" name="hasNext" method="_sajJcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oaOHkJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oaOuoJFCEeuCTslxszDstQ" name="next" method="_sakXkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rheMYJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oaP8wJFCEeuCTslxszDstQ" name="remove" method="_sakXkpFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_r7DKAJFCEeuCTslxszDstQ" name="IndexWordIterator" method="_saiiYJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r7EYIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r7EYIZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r7DxEJFCEeuCTslxszDstQ" name="itr" type="_rXB28JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r7DxEZFCEeuCTslxszDstQ" name="searchString">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r7DxEpFCEeuCTslxszDstQ" name="startWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r7EYIpFCEeuCTslxszDstQ" type="_oaIA8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ob_CIJFCEeuCTslxszDstQ" name="DatabaseBackedDictionary">
              <ownedComment xmi:id="_seUPIJFCEeuCTslxszDstQ">
                <body>Database-backed dictionary.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rkFbgJFCEeuCTslxszDstQ" general="_oaDvgJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sNe90JFCEeuCTslxszDstQ" name="DATABASE_MANAGER" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sNgL8JFCEeuCTslxszDstQ" value="&quot;database_manager&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sNgzAJFCEeuCTslxszDstQ" name="factory" visibility="private" type="_oFFlEJFCEeuCTslxszDstQ" association="_sh-nIZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sNjPQJFCEeuCTslxszDstQ" name="dbManager" visibility="private" type="_oiJUgJFCEeuCTslxszDstQ" association="_siBDYJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa2rcJFCEeuCTslxszDstQ" name="DatabaseBackedDictionary" specification="_r7zX8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa2rcZFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa2rcpFCEeuCTslxszDstQ" type="_ob_CIJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(doc);

     this.factory = (DatabaseDictionaryElementFactory) elementFactory;

     if (!params.containsKey(DATABASE_MANAGER)) {
         throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_001&quot;, DATABASE_MANAGER));
     }
     Param param = params.get(DATABASE_MANAGER);
     this.dbManager = (param == null) ? null : (DatabaseManager) param.create();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa2rc5FCEeuCTslxszDstQ" name="getIndexWord" specification="_rjDgwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa2rdJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa2rdZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa2rdpFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>lemma = prepareQueryString(lemma);
     IndexWord word = null;
     if (lemma.length() > 0) {
         if (isCachingEnabled()) {
             word = getCachedIndexWord(pos, lemma);
         }
         if (word == null) {
             Query query = null;
             try {
                 query = dbManager.getIndexWordSynsetsQuery(pos, lemma);
                 word = factory.createIndexWord(pos, lemma, query.execute());
                 if (word != null &amp;&amp; isCachingEnabled()) {
                     cacheIndexWord(word);
                 }
             } catch (SQLException e) {
                 throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_004&quot;, new Object[]{pos.getLabel(), lemma}), e);
             } finally {
                 if (query != null) {
                     query.close();
                 }
             }
         }
     }
     return word;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa2rd5FCEeuCTslxszDstQ" name="getIndexWordIterator" specification="_rjEu4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa2reJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa2reZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Query query;
     try {
         query = dbManager.getIndexWordLemmasQuery(pos);
     } catch (SQLException e) {
         throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_064&quot;, pos.getLabel()), e);
     }
     return new IndexWordIterator(pos, query);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa2repFCEeuCTslxszDstQ" name="getIndexWordIterator" specification="_rjIZQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa2re5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa2rfJFCEeuCTslxszDstQ" name="substring">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa2rfZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Query query;
     try {
         query = dbManager.getIndexWordLemmasQuery(pos, substring);
     } catch (SQLException e) {
         throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_065&quot;, new Object[]{pos.getLabel(), substring}), e);
     }
     return new IndexWordIterator(pos, query);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa3SgJFCEeuCTslxszDstQ" name="getRandomIndexWord" specification="_rjOf4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa3SgZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa3SgpFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Query query = null;
     String lemma;

     try {
         query = dbManager.getRandomIndexWordQuery(pos);
         query.execute();
         query.getResults().next();
         lemma = query.getResults().getString(1);
     } catch (SQLException e) {
         throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_004&quot;, new Object[]{pos.getLabel(), &quot;random&quot;}), e);
     } finally {
         if (null != query) {
             query.close();
         }
     }

     return getIndexWord(pos, lemma);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa3Sg5FCEeuCTslxszDstQ" name="getSynsetAt" specification="_rjQ8IJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa3ShJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa3ShZFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa3ShpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Synset synset = null;
     if (isCachingEnabled()) {
         synset = getCachedSynset(pos, offset);
     }
     if (synset == null) {
         Query query = null;
         Query wordQuery = null;
         Query pointerQuery = null;
         Query verbFrameQuery = null;
         try {
             query = dbManager.getSynsetQuery(pos, offset);
             wordQuery = dbManager.getSynsetWordQuery(pos, offset);
             pointerQuery = dbManager.getPointerQuery(pos, offset);
             verbFrameQuery = dbManager.getVerbFrameQuery(pos, offset);
             synset = factory.createSynset(pos, offset, query.execute(), wordQuery.execute(),
                     pointerQuery.execute(), POS.VERB == pos ? verbFrameQuery.execute() : null);
             if (synset != null &amp;&amp; isCachingEnabled()) {
                 cacheSynset(synset);
             }
         } catch (SQLException e) {
             throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_005&quot;, new Object[]{pos.getLabel(), offset}), e);
         } finally {
             if (query != null) {
                 query.close();
             }
             if (wordQuery != null) {
                 wordQuery.close();
             }
             if (pointerQuery != null) {
                 pointerQuery.close();
             }
             if (verbFrameQuery != null) {
                 verbFrameQuery.close();
             }
         }
     }
     return synset;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa3Sh5FCEeuCTslxszDstQ" name="getSynsetIterator" specification="_rjTYYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa3SiJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa3SiZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Query query;
     try {
         query = dbManager.getSynsetsQuery(pos);
     } catch (SQLException e) {
         throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_066&quot;, pos.getLabel()), e);
     }
     return new SynsetIterator(pos, query);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa3SipFCEeuCTslxszDstQ" name="getException" specification="_rjXp0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa3Si5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa3SjJFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa3SjZFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>derivation = prepareQueryString(derivation);
     Exc exc = null;
     if (isCachingEnabled()) {
         exc = getCachedException(pos, derivation);
     }
     if (exc == null) {
         Query query = null;
         try {
             query = dbManager.getExceptionQuery(pos, derivation);
             exc = factory.createExc(pos, derivation, query.execute());
             if (exc != null &amp;&amp; isCachingEnabled()) {
                 cacheException(exc);
             }
         } catch (SQLException e) {
             throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_006&quot;, new Object[]{pos.getLabel(), derivation}), e);
         } finally {
             if (query != null) {
                 query.close();
             }
         }
     }
     return exc;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa3SjpFCEeuCTslxszDstQ" name="getExceptionIterator" specification="_rjaGEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa3Sj5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa3SkJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Query query;
     try {
         query = dbManager.getExceptionsQuery(pos);
     } catch (SQLException e) {
         throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_067&quot;, pos.getLabel()), e);
     }
     return new ExceptionIterator(pos, query);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa3SkZFCEeuCTslxszDstQ" name="close" specification="_ocQH4JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dbManager.close();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa3SkpFCEeuCTslxszDstQ" name="cacheAll" specification="_ocRWAJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (factory instanceof AbstractDictionaryElementFactory) {
         ((AbstractDictionaryElementFactory) factory).startCaching();
     }
     super.cacheAll();
     if (factory instanceof AbstractDictionaryElementFactory) {
         ((AbstractDictionaryElementFactory) factory).stopCaching();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa3Sk5FCEeuCTslxszDstQ" name="edit" specification="_ocVncJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>throw new UnsupportedOperationException();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ocQH4JFCEeuCTslxszDstQ" name="close" method="_sa3SkZFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ocQu8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocQu8ZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_ocRWAJFCEeuCTslxszDstQ" name="cacheAll" method="_sa3SkpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ocR9EJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocR9EZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_ocVncJFCEeuCTslxszDstQ" name="edit" method="_sa3Sk5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ocVncZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ocVncpFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_rjDgwJFCEeuCTslxszDstQ" name="getIndexWord" method="_sa2rc5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rjDgwZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rjEH0JFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rjEH0ZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rjEu4JFCEeuCTslxszDstQ" name="getIndexWordIterator" method="_sa2rd5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rjFV8JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r71NIJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rjIZQJFCEeuCTslxszDstQ" name="getIndexWordIterator" method="_sa2repFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rjJAUJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rjJAUZFCEeuCTslxszDstQ" name="substring">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r71NIZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rjOf4JFCEeuCTslxszDstQ" name="getRandomIndexWord" method="_sa3SgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rjOf4ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rjPG8JFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rjQ8IJFCEeuCTslxszDstQ" name="getSynsetAt" method="_sa3Sg5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rjQ8IZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rjQ8IpFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r72bQJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rjTYYJFCEeuCTslxszDstQ" name="getSynsetIterator" method="_sa3Sh5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rjTYYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r72bQZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rjXp0JFCEeuCTslxszDstQ" name="getException" method="_sa3SipFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rjYQ4JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rjYQ4ZFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rjY38JFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rjaGEJFCEeuCTslxszDstQ" name="getExceptionIterator" method="_sa3SjpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rjaGEZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r73CUJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r7zX8JFCEeuCTslxszDstQ" name="DatabaseBackedDictionary" method="_sa2rcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r7z_AJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r7z_AZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r7zX8ZFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r7z_ApFCEeuCTslxszDstQ" type="_ob_CIJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ocZ44JFCEeuCTslxszDstQ" name="DatabaseElementIterator" visibility="private" isAbstract="true">
                <ownedAttribute xmi:id="_sNm5oJFCEeuCTslxszDstQ" name="pos" visibility="private" isLeaf="true" type="_oLknkJFCEeuCTslxszDstQ" isReadOnly="true"/>
                <ownedAttribute xmi:id="_sNpV4JFCEeuCTslxszDstQ" name="lemmas" visibility="private" isLeaf="true" type="_okQNUJFCEeuCTslxszDstQ" isReadOnly="true" association="_siC4kZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sNryIJFCEeuCTslxszDstQ" name="advanced" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sNsZMJFCEeuCTslxszDstQ" value="false"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sNu1cJFCEeuCTslxszDstQ" name="hasNext" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sNvcgJFCEeuCTslxszDstQ" value="false"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_r73pYJFCEeuCTslxszDstQ" client="_ocZ44JFCEeuCTslxszDstQ" supplier="_rXB28JFCEeuCTslxszDstQ" contract="_rXB28JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa35kJFCEeuCTslxszDstQ" name="DatabaseElementIterator" specification="_rjgzwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa35kZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa35kpFCEeuCTslxszDstQ" name="query" type="_okQNUJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa35k5FCEeuCTslxszDstQ" type="_ocZ44JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.pos = pos;
         lemmas = query;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa35lJFCEeuCTslxszDstQ" name="hasNext" specification="_ocgmkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa35lZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!advanced) {
             advanced = true;
             try {
                 hasNext = getResults().next();
             } catch (SQLException e) {
                 throw new JWNLRuntimeException(e);
             }
         }
         if (!hasNext) {
             lemmas.close();
         }
         return hasNext;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa35lpFCEeuCTslxszDstQ" name="next" specification="_och0sJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa35l5FCEeuCTslxszDstQ" type="_r76FoJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (hasNext()) {
             advanced = false;
             try {
                 return createElement();
             } catch (JWNLException | SQLException e) {
                 throw new JWNLRuntimeException(e);
             }
         }
         throw new NoSuchElementException();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa35mJFCEeuCTslxszDstQ" name="remove" specification="_ocjC0JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa35mZFCEeuCTslxszDstQ" name="getPOS" specification="_ocmtMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa35mpFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return pos;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa35m5FCEeuCTslxszDstQ" name="getResults" specification="_ocoiYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa35nJFCEeuCTslxszDstQ" type="_rVzu8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (!lemmas.isExecuted()) {
             lemmas.execute();
         }
         return lemmas.getResults();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa35nZFCEeuCTslxszDstQ" name="finalize" specification="_ocpwgJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>super.finalize();
         lemmas.close();
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ocgmkJFCEeuCTslxszDstQ" name="hasNext" method="_sa35lJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ochNoJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_och0sJFCEeuCTslxszDstQ" name="next" method="_sa35lpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r78h4JFCEeuCTslxszDstQ" type="_r76FoJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ocjC0JFCEeuCTslxszDstQ" name="remove" method="_sa35mJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ockQ8JFCEeuCTslxszDstQ" name="createElement" visibility="protected" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ _rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r79I8JFCEeuCTslxszDstQ" type="_r76FoJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ocmtMJFCEeuCTslxszDstQ" name="getPOS" visibility="protected" method="_sa35mZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rjj3EJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ocoiYJFCEeuCTslxszDstQ" name="getResults" visibility="protected" method="_sa35m5FCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r79wAJFCEeuCTslxszDstQ" type="_rVzu8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ocpwgJFCEeuCTslxszDstQ" name="finalize" visibility="protected" method="_sa35nZFCEeuCTslxszDstQ" raisedException="_rxDggJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_rjgzwJFCEeuCTslxszDstQ" name="DatabaseElementIterator" visibility="protected" method="_sa35kJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rjha0JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rjha0ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rjgzwZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rjgzwpFCEeuCTslxszDstQ" name="query" type="_okQNUJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rjha0pFCEeuCTslxszDstQ" type="_ocZ44JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ocxsUJFCEeuCTslxszDstQ" name="IndexWordIterator" visibility="private">
                <generalization xmi:id="_rjpWoJFCEeuCTslxszDstQ" general="_ocZ44JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa35npFCEeuCTslxszDstQ" name="IndexWordIterator" specification="_rjm6YJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa35n5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa35oJFCEeuCTslxszDstQ" name="query" type="_okQNUJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa35oZFCEeuCTslxszDstQ" type="_ocxsUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(pos, query);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa35opFCEeuCTslxszDstQ" name="createElement" specification="_oczhgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa35o5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>String lemma = getResults().getString(1);
         return getIndexWord(getPOS(), lemma);
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oczhgJFCEeuCTslxszDstQ" name="createElement" visibility="protected" method="_sa35opFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rjovkJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rjm6YJFCEeuCTslxszDstQ" name="IndexWordIterator" method="_sa35npFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rjnhcZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rjoIgJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rjm6YZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rjnhcJFCEeuCTslxszDstQ" name="query" type="_okQNUJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rjoIgZFCEeuCTslxszDstQ" type="_ocxsUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oc5oIJFCEeuCTslxszDstQ" name="SynsetIterator" visibility="private">
                <generalization xmi:id="_rjx5gJFCEeuCTslxszDstQ" general="_ocZ44JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa4goJFCEeuCTslxszDstQ" name="SynsetIterator" specification="_rjtoEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa4goZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa4gopFCEeuCTslxszDstQ" name="query" type="_okQNUJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa4go5FCEeuCTslxszDstQ" type="_oc5oIJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(pos, query);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa4gpJFCEeuCTslxszDstQ" name="createElement" specification="_oc8EYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa4gpZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>long offset = getResults().getLong(1);
         return getSynsetAt(getPOS(), offset);
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oc8EYJFCEeuCTslxszDstQ" name="createElement" visibility="protected" method="_sa4gpJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r8AzUJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rjtoEJFCEeuCTslxszDstQ" name="SynsetIterator" method="_sa4goJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rju2MZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rjvdQJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rjuPIJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rju2MJFCEeuCTslxszDstQ" name="query" type="_okQNUJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rjvdQZFCEeuCTslxszDstQ" type="_oc5oIJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_odA84JFCEeuCTslxszDstQ" name="ExceptionIterator" visibility="private">
                <generalization xmi:id="_rj_78JFCEeuCTslxszDstQ" general="_ocZ44JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa4gppFCEeuCTslxszDstQ" name="ExceptionIterator" specification="_rj4AIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa4gp5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa4gqJFCEeuCTslxszDstQ" name="query" type="_okQNUJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa4gqZFCEeuCTslxszDstQ" type="_odA84JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(pos, query);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa4gqpFCEeuCTslxszDstQ" name="createElement" specification="_odDZIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa4gq5FCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>String derivation = getResults().getString(1);
         return getException(getPOS(), derivation);
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_odDZIJFCEeuCTslxszDstQ" name="createElement" visibility="protected" method="_sa4gqpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rV2LMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rj-t0JFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rj4AIJFCEeuCTslxszDstQ" name="ExceptionIterator" method="_sa4gppFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rj8RkJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rj8RkZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rj5OQJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rj7qgJFCEeuCTslxszDstQ" name="query" type="_okQNUJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rj8RkpFCEeuCTslxszDstQ" type="_odA84JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oeDesJFCEeuCTslxszDstQ" name="FileBackedDictionary">
              <ownedComment xmi:id="_seYgkZFCEeuCTslxszDstQ">
                <body>A &lt;code>Dictionary&lt;/code> that retrieves objects from the text files
in the WordNet distribution directory.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rmHb0JFCEeuCTslxszDstQ" general="_oaDvgJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sOFawJFCEeuCTslxszDstQ" name="FILE_MANAGER" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sOGo4JFCEeuCTslxszDstQ" value="&quot;file_manager&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sOHP8JFCEeuCTslxszDstQ" name="ENABLE_CACHING" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sOIeEJFCEeuCTslxszDstQ" value="&quot;enable_caching&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sOIeEZFCEeuCTslxszDstQ" name="CACHE_SIZE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sOJFIJFCEeuCTslxszDstQ" value="&quot;cache_size&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sOJsMJFCEeuCTslxszDstQ" name="INDEX_WORD_CACHE_SIZE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sOK6UJFCEeuCTslxszDstQ" value="&quot;index_word_cache_size&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sOMIcJFCEeuCTslxszDstQ" name="SYNSET_WORD_CACHE_SIZE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sOMvgJFCEeuCTslxszDstQ" value="&quot;synset_word_cache_size&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sOPLwJFCEeuCTslxszDstQ" name="EXCEPTION_WORD_CACHE_SIZE" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sOPy0JFCEeuCTslxszDstQ" value="&quot;exception_word_cache_size&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sORoAJFCEeuCTslxszDstQ" name="fileManager" visibility="private" isLeaf="true" type="_ona2EJFCEeuCTslxszDstQ" isReadOnly="true" association="_siEtwZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sOUEQJFCEeuCTslxszDstQ" name="factory" visibility="private" isLeaf="true" type="_oHHlYJFCEeuCTslxszDstQ" isReadOnly="true" association="_siGi8ZFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5HsJFCEeuCTslxszDstQ" name="FileBackedDictionary" specification="_r8LycJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa5HsZFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa5HspFCEeuCTslxszDstQ" type="_oeDesJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(doc);

     FileManager manager = (FileManager) (params.get(FILE_MANAGER)).create();

     // caching is enabled by default
     boolean enableCaching =
             !params.containsKey(ENABLE_CACHING) || !params.get(ENABLE_CACHING).getValue().equalsIgnoreCase(&quot;false&quot;);

     this.setCachingEnabled(enableCaching);
     this.fileManager = manager;
     this.factory = (FileDictionaryElementFactory) elementFactory;

     if (params.containsKey(CACHE_SIZE)) {
         this.setCacheCapacity(Integer.parseInt((params.get(CACHE_SIZE)).getValue()));
     } else {
         if (params.containsKey(INDEX_WORD_CACHE_SIZE)) {
             this.setCacheCapacity(DictionaryElementType.INDEX_WORD,
                     Integer.parseInt(params.get(INDEX_WORD_CACHE_SIZE).getValue()));
         }
         if (params.containsKey(SYNSET_WORD_CACHE_SIZE)) {
             this.setCacheCapacity(DictionaryElementType.SYNSET,
                     Integer.parseInt(params.get(SYNSET_WORD_CACHE_SIZE).getValue()));
         }
         if (params.containsKey(EXCEPTION_WORD_CACHE_SIZE)) {
             this.setCacheCapacity(DictionaryElementType.EXCEPTION,
                     Integer.parseInt(params.get(EXCEPTION_WORD_CACHE_SIZE).getValue()));
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5Hs5FCEeuCTslxszDstQ" name="close" specification="_oeMooJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>fileManager.close();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5HtJFCEeuCTslxszDstQ" name="delete" specification="_oeQTAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa5HtZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return fileManager.delete();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5uwJFCEeuCTslxszDstQ" name="getIndexWordIterator" specification="_rkj8oJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa5uwZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sa5uwpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sa5uw5FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_sa5uxJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (!isEditable()) {
         return new IndexFileLookaheadIterator(pos);
     } else {
         return super.getIndexWordIterator(pos);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5uxZFCEeuCTslxszDstQ" name="getIndexWordIterator" specification="_rkuUsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa5uxpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sa5ux5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sa5uyJFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_sa5uyZFCEeuCTslxszDstQ" name="substring">
                  <eAnnotations xmi:id="_sa5uypFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sa5uy5FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa5uzJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (!isEditable()) {
         // replace here kind of &quot;leaks out&quot; file format
         return new SubstringIndexFileLookaheadIterator(pos, prepareQueryString(substring.replace(' ', '_')));
     } else {
         return super.getIndexWordIterator(pos, substring);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5uzZFCEeuCTslxszDstQ" name="getIndexWord" specification="_rk7JAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa5uzpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa5uz5FCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa5u0JFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>lemma = prepareQueryString(lemma);

     IndexWord word = null;
     if (lemma.length() > 0) {
         if (isCachingEnabled()) {
             word = getCachedIndexWord(pos, lemma);
         }
         if (!isEditable() &amp;&amp; null == word) {
             try {
                 // replace here kind of &quot;leaks out&quot; file format
                 CharSequence line = fileManager.getIndexedLine(pos, DictionaryFileType.INDEX, lemma.replace(' ', '_'));
                 if (null != line) {
                     word = parseAndCacheIndexWord(pos, line);
                 }
             } catch (JWNLIOException e) {
                 throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_004&quot;, new Object[]{pos.getLabel(), lemma}), e);
             }
         }
     }
     return word;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5u0ZFCEeuCTslxszDstQ" name="getRandomIndexWord" specification="_rlAokJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa5u0pFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa5u05FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (!isEditable()) {
         CharSequence line = fileManager.getRandomLine(pos, DictionaryFileType.INDEX);
         return parseAndCacheIndexWord(pos, line);
     } else {
         throw new UnsupportedOperationException();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5u1JFCEeuCTslxszDstQ" name="getSynsetIterator" specification="_rlES8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa5u1ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa5u1pFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (!isEditable()) {
         return new FileLookaheadIterator&lt;Synset>(pos, DictionaryFileType.DATA) {
             @Override
             protected Synset parseLine(POS pos, PointedCharSequence line) {
                 try {
                     return parseAndCacheSynset(pos, line);
                 } catch (JWNLException e) {
                     throw new JWNLRuntimeException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_005&quot;,
                             new Object[]{pos.getLabel(), &quot;?&quot;}), e);
                 }
             }
         };
     } else {
         return super.getSynsetIterator(pos);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5u15FCEeuCTslxszDstQ" name="getSynsetAt" specification="_rlLnsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa5u2JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa5u2ZFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa5u2pFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Synset synset = getCachedSynset(pos, offset);
     if (!isEditable() &amp;&amp; null == synset) {
         PointedCharSequence line = fileManager.readLineAt(pos, DictionaryFileType.DATA, offset);
         synset = parseAndCacheSynset(pos, line);
     }
     return synset;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa5u25FCEeuCTslxszDstQ" name="getExceptionIterator" specification="_rlP5IJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa5u3JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa5u3ZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (!isEditable()) {
         return new FileLookaheadIterator&lt;Exc>(pos, DictionaryFileType.EXCEPTION) {
             @Override
             protected Exc parseLine(POS pos, PointedCharSequence line) throws JWNLException {
                 return parseAndCacheExceptionLine(pos, line);
             }
         };
     } else {
         return super.getExceptionIterator(pos);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa6V0JFCEeuCTslxszDstQ" name="getException" specification="_rlXN4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa6V0ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa6V0pFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa6V05FCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Exc exc = null;
     if (null != derivation) {
         derivation = prepareQueryString(derivation);
         if (derivation.length() > 0) {
             if (isCachingEnabled()) {
                 exc = getCachedException(pos, derivation);
             }
             if (!isEditable() &amp;&amp; null == exc) {
                 try {
                     CharSequence line = fileManager.getIndexedLine(
                             // replace here kind of &quot;leaks out&quot; file format
                             pos, DictionaryFileType.EXCEPTION, derivation.replace(' ', '_'));
                     if (null != line) {
                         exc = parseAndCacheExceptionLine(pos, line);
                     }
                 } catch (JWNLIOException e) {
                     throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_006&quot;,
                             new Object[]{pos.getLabel(), derivation}), e);
                 }
             }
         }
     }
     return exc;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa684JFCEeuCTslxszDstQ" name="edit" specification="_oeb5MJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (!isEditable()) {
         if (!isCachingEnabled()) {
             throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_030&quot;));
         }
         super.edit();
         fileManager.edit();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa684ZFCEeuCTslxszDstQ" name="save" specification="_oefjkJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>super.save();
     fileManager.save();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa684pFCEeuCTslxszDstQ" name="cacheAll" specification="_oegxs5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (factory instanceof AbstractDictionaryElementFactory) {
         ((AbstractDictionaryElementFactory) factory).startCaching();
     }
     super.cacheAll();
     if (factory instanceof AbstractDictionaryElementFactory) {
         ((AbstractDictionaryElementFactory) factory).stopCaching();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa7j_JFCEeuCTslxszDstQ" name="parseAndCacheIndexWord" specification="_r8WxkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa7j_ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa7j_pFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa7j_5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return cacheIndexWord(factory.createIndexWord(pos, line));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa7kAJFCEeuCTslxszDstQ" name="parseAndCacheExceptionLine" specification="_r8YmwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa7kAZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa7kApFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa7kA5FCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return cacheException(factory.createExc(pos, line));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa7kBJFCEeuCTslxszDstQ" name="parseAndCacheSynset" specification="_rmEYgJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa7kBZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa7kBpFCEeuCTslxszDstQ" name="line" type="_oxZRcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa7kB5FCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Synset result = null;
     if (null != line) {
         result = factory.createSynset(pos, line);
         for (Word w : result.getWords()) {
             w.setUseCount(fileManager.getUseCount(w.getSenseKeyWithAdjClass()));
         }

         cacheSynset(result);
     }
     return result;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oeMooJFCEeuCTslxszDstQ" name="close" method="_sa5Hs5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oeNPsJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oeNPsZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_oeQTAJFCEeuCTslxszDstQ" name="delete" method="_sa5HtJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oeQTAZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oeQ6EJFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oeQ6EZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oeb5MJFCEeuCTslxszDstQ" name="edit" method="_sa684JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oeb5MZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oecgQJFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_oefjkJFCEeuCTslxszDstQ" name="save" method="_sa684ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oegKoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oegKoZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_oegxs5FCEeuCTslxszDstQ" name="cacheAll" method="_sa684pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oegxtJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oegxtZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_rkj8oJFCEeuCTslxszDstQ" name="getIndexWordIterator" method="_sa5uwJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rkkjsJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rkqqUZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rkqqUpFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_r8NnoJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rkuUsJFCEeuCTslxszDstQ" name="getIndexWordIterator" method="_sa5uxZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rku7wJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rk1pcJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rk1pcZFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <ownedParameter xmi:id="_rku7wZFCEeuCTslxszDstQ" name="substring">
                  <eAnnotations xmi:id="_rk2QgJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rk3eoJFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r8OOsJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rk7JAJFCEeuCTslxszDstQ" name="getIndexWord" method="_sa5uzZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rk7JAZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rk7wEJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rk8XIJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rlAokJFCEeuCTslxszDstQ" name="getRandomIndexWord" method="_sa5u0ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rlAokZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rlBPoJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rlES8JFCEeuCTslxszDstQ" name="getSynsetIterator" method="_sa5u1JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rlES8ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8Pc0JFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rlLnsJFCEeuCTslxszDstQ" name="getSynsetAt" method="_sa5u15FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rlLnsZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rlMOwJFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r8QD4JFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rlP5IJFCEeuCTslxszDstQ" name="getExceptionIterator" method="_sa5u25FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rlP5IZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8Qq8JFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rlXN4JFCEeuCTslxszDstQ" name="getException" method="_sa6V0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rlX08JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rlX08ZFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rlZqIJFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rmEYgJFCEeuCTslxszDstQ" name="parseAndCacheSynset" visibility="private" method="_sa7kBJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rmE_kJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rmFmoJFCEeuCTslxszDstQ" name="line" type="_oxZRcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8ab8JFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r8LycJFCEeuCTslxszDstQ" name="FileBackedDictionary" method="_sa5HsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r8MZgZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r8MZgpFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r8MZgJFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8MZg5FCEeuCTslxszDstQ" type="_oeDesJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r8WxkJFCEeuCTslxszDstQ" name="parseAndCacheIndexWord" visibility="private" method="_sa7j_JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r8WxkZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8WxkpFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8Wxk5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r8YmwJFCEeuCTslxszDstQ" name="parseAndCacheExceptionLine" visibility="private" method="_sa7kAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r8YmwZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8ZN0JFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8ZN0ZFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oeh_0JFCEeuCTslxszDstQ" name="FileLookaheadIterator" visibility="private" isAbstract="true">
                <ownedComment xmi:id="_sebj4JFCEeuCTslxszDstQ">
                  <body>A lookahead iterator over a dictionary file.
     * Each element in the enumeration is a line in the enumerated file.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_sOXuoJFCEeuCTslxszDstQ" name="next" visibility="protected" type="_oxZRcJFCEeuCTslxszDstQ" association="_siIYIJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sOZj0JFCEeuCTslxszDstQ" name="pos" visibility="protected" isLeaf="true" type="_oLknkJFCEeuCTslxszDstQ" isReadOnly="true"/>
                <ownedAttribute xmi:id="_sOcnIJFCEeuCTslxszDstQ" name="fileType" visibility="protected" isLeaf="true" type="_omdz0JFCEeuCTslxszDstQ" isReadOnly="true"/>
                <interfaceRealization xmi:id="_r8RSAJFCEeuCTslxszDstQ" client="_oeh_0JFCEeuCTslxszDstQ" supplier="_rXB28JFCEeuCTslxszDstQ" contract="_rXB28JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa6845FCEeuCTslxszDstQ" name="FileLookaheadIterator" specification="_rlfJsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa685JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa685ZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa685pFCEeuCTslxszDstQ" name="skipLookup">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa6855FCEeuCTslxszDstQ" type="_oeh_0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.pos = pos;
         this.fileType = fileType;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa686JFCEeuCTslxszDstQ" name="FileLookaheadIterator" specification="_rli0EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa686ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa686pFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa6865FCEeuCTslxszDstQ" type="_oeh_0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.pos = pos;
         this.fileType = fileType;
         next = fileManager.readLineAt(pos, fileType, fileManager.getFirstLineOffset(pos, fileType));
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa687JFCEeuCTslxszDstQ" name="next" specification="_oej1AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa687ZFCEeuCTslxszDstQ" type="_r76FoJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (!hasNext()) {
             throw new NoSuchElementException();
         }

         E result;
         try {
             result = parseLine(pos, next);
             next = fileManager.readLineAt(pos, fileType, next.getLastBytePosition() + 1);
         } catch (JWNLException e) {
             throw new JWNLRuntimeException(e);
         }
         return result;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa687pFCEeuCTslxszDstQ" name="hasNext" specification="_oelDIpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa6875FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return null != next;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa688JFCEeuCTslxszDstQ" name="remove" specification="_oelqM5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oej1AJFCEeuCTslxszDstQ" name="next" method="_sa687JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r8UVUJFCEeuCTslxszDstQ" type="_r76FoJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oelDIpFCEeuCTslxszDstQ" name="hasNext" method="_sa687pFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oelDI5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oelqM5FCEeuCTslxszDstQ" name="remove" method="_sa688JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_rlfJsJFCEeuCTslxszDstQ" name="FileLookaheadIterator" method="_sa6845FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rlgX0ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rlg-4JFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rlfwwJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rlfwwZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rlgX0JFCEeuCTslxszDstQ" name="skipLookup">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rlg-4ZFCEeuCTslxszDstQ" type="_oeh_0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rli0EJFCEeuCTslxszDstQ" name="FileLookaheadIterator" method="_sa686JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rlkCMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rlkCMZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rli0EZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rljbIJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rlkCMpFCEeuCTslxszDstQ" type="_oeh_0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rloToJFCEeuCTslxszDstQ" name="parseLine" visibility="protected" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rlo6sJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rlo6sZFCEeuCTslxszDstQ" name="line" type="_oxZRcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r8U8YJFCEeuCTslxszDstQ" type="_r76FoJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oeotgJFCEeuCTslxszDstQ" name="IndexFileLookaheadIterator" visibility="private">
                <generalization xmi:id="_rl2WEpFCEeuCTslxszDstQ" general="_oeh_0JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa688ZFCEeuCTslxszDstQ" name="IndexFileLookaheadIterator" specification="_rlr-AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa688pFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa6885FCEeuCTslxszDstQ" type="_oeotgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(pos, DictionaryFileType.INDEX);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa689JFCEeuCTslxszDstQ" name="IndexFileLookaheadIterator" specification="_rlvBUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa689ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa689pFCEeuCTslxszDstQ" name="skipLookup">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa6895FCEeuCTslxszDstQ" type="_oeotgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(pos, DictionaryFileType.INDEX, true);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa7j8JFCEeuCTslxszDstQ" name="parseLine" specification="_rlyrsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa7j8ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa7j8pFCEeuCTslxszDstQ" name="line" type="_oxZRcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa7j85FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return parseAndCacheIndexWord(pos, line);
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_rlr-AJFCEeuCTslxszDstQ" name="IndexFileLookaheadIterator" method="_sa688ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rltzMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rltzMZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rltMIJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rltzMpFCEeuCTslxszDstQ" type="_oeotgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rlvBUJFCEeuCTslxszDstQ" name="IndexFileLookaheadIterator" method="_sa689JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rlwPcZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rlwPcpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rlvoYJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rlwPcJFCEeuCTslxszDstQ" name="skipLookup">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rlwPc5FCEeuCTslxszDstQ" type="_oeotgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rlyrsJFCEeuCTslxszDstQ" name="parseLine" visibility="protected" method="_sa7j8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rlyrsZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rlzSwJFCEeuCTslxszDstQ" name="line" type="_oxZRcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rlz50JFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oeuNEJFCEeuCTslxszDstQ" name="SubstringIndexFileLookaheadIterator" visibility="private">
                <generalization xmi:id="_rl-48JFCEeuCTslxszDstQ" general="_oeotgJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sOg4kJFCEeuCTslxszDstQ" name="substring" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa7j9JFCEeuCTslxszDstQ" name="SubstringIndexFileLookaheadIterator" specification="_rl71oJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa7j9ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa7j9pFCEeuCTslxszDstQ" name="substring">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sa7j95FCEeuCTslxszDstQ" type="_oeuNEJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(pos, true);
         this.substring = substring;
         next = fileManager.getMatchingLine(pos, fileType, fileManager.getFirstLineOffset(pos, fileType), substring);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa7j-JFCEeuCTslxszDstQ" name="next" specification="_oexQYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa7j-ZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (!hasNext()) {
             throw new NoSuchElementException();
         }

         IndexWord result;
         try {
             result = parseLine(pos, next);
             next = fileManager.getMatchingLine(pos, fileType, next.getLastBytePosition() + 1, substring);
         } catch (JWNLException e) {
             throw new JWNLRuntimeException(e);
         }
         return result;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa7j-pFCEeuCTslxszDstQ" name="hasNext" specification="_oe06wJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa7j-5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return null != next;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oexQYJFCEeuCTslxszDstQ" name="next" method="_sa7j-JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rl-R4JFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oe06wJFCEeuCTslxszDstQ" name="hasNext" method="_sa7j-pFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oe1h0JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rl71oJFCEeuCTslxszDstQ" name="SubstringIndexFileLookaheadIterator" method="_sa7j9JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rl9DwJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rl9DwZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rl8csJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rl8csZFCEeuCTslxszDstQ" name="substring">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rl9DwpFCEeuCTslxszDstQ" type="_oeuNEJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ogLloJFCEeuCTslxszDstQ" name="MapBackedDictionary">
              <ownedComment xmi:id="_sedZEJFCEeuCTslxszDstQ">
                <body>A &lt;code>Dictionary&lt;/code> backed by &lt;code>Map&lt;/code>s. Warning: this has huge memory requirements.
Make sure to start JVM with a large enough free memory pool to accommodate this.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rmpAQJFCEeuCTslxszDstQ" general="_ogzQsJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sOwJIJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_siKNUJFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sOxXQJFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(MapBackedDictionary.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sOylYJFCEeuCTslxszDstQ" name="files" visibility="private" isLeaf="true" type="_olY1wJFCEeuCTslxszDstQ" isReadOnly="true" association="_siLbcZFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8LAJFCEeuCTslxszDstQ" name="MapBackedDictionary" specification="_r8hwsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8LAZFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8LApFCEeuCTslxszDstQ" type="_ogLloJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(doc);
     files = new DictionaryCatalogSet&lt;>(this, params, ObjectDictionaryFile.class);
     this.load();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8LA5FCEeuCTslxszDstQ" name="delete" specification="_ogQeIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8LBJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return files.delete();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8LBZFCEeuCTslxszDstQ" name="close" specification="_ogUvkJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>files.close();
     super.close();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8LBpFCEeuCTslxszDstQ" name="edit" specification="_ogZBAJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (!isEditable()) {
         super.edit();
         files.edit();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8LB5FCEeuCTslxszDstQ" name="save" specification="_ogd5gJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>super.save();
     files.save();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8LCJFCEeuCTslxszDstQ" name="load" specification="_ogiK8JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>// because restore variable is static
     synchronized (Dictionary.class) {
         Dictionary.setRestoreDictionary(this);
         try {
             if (!files.isOpen()) {
                 files.open();
             }
             // load all the hash tables into memory
             if (log.isDebugEnabled()) {
                 log.debug(getMessages().resolveMessage(&quot;DICTIONARY_INFO_009&quot;));
             }
             if (log.isTraceEnabled()) {
                 log.trace(getMessages().resolveMessage(&quot;DICTIONARY_INFO_010&quot;, Runtime.getRuntime().freeMemory()));
             }

             for (DictionaryFileType fileType : DictionaryFileType.getAllDictionaryFileTypes()) {
                 DictionaryCatalog&lt;ObjectDictionaryFile> catalog = files.get(fileType);
                 for (POS pos : POS.getAllPOS()) {
                     if (log.isDebugEnabled()) {
                         log.debug(getMessages().resolveMessage(&quot;DICTIONARY_INFO_011&quot;, new Object[]{pos.getLabel(), fileType.getName()}));
                     }
                     putTable(pos, fileType, loadDictFile(catalog.get(pos)));
                     if (log.isTraceEnabled()) {
                         log.trace(getMessages().resolveMessage(&quot;DICTIONARY_INFO_012&quot;, Runtime.getRuntime().freeMemory()));
                     }
                 }
             }
             files.close();
         } finally {
             Dictionary.setRestoreDictionary(null);
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8yEJFCEeuCTslxszDstQ" name="loadDictFile" specification="_rmjgsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8yEZFCEeuCTslxszDstQ" name="file" type="_om-KIJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8yEpFCEeuCTslxszDstQ" type="_rWnAMZFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>try {
         @SuppressWarnings({&quot;unchecked&quot;, &quot;UnnecessaryLocalVariable&quot;})
         Map&lt;Object, DictionaryElement> result = (Map&lt;Object, DictionaryElement>) file.readObject();
         return result;
     } catch (Exception e) {
         throw new JWNLException(getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_020&quot;, file.getFilename()), e);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8yE5FCEeuCTslxszDstQ" name="putTable" specification="_r8kM8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8yFJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8yFZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8yFpFCEeuCTslxszDstQ" name="table" type="_rWnAMZFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>tableMap.get(pos).put(fileType, table);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ogQeIJFCEeuCTslxszDstQ" name="delete" method="_sa8LA5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ogQeIZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ogRFMJFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ogRFMZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ogUvkJFCEeuCTslxszDstQ" name="close" method="_sa8LBZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ogVWoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ogVWoZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_ogZBAJFCEeuCTslxszDstQ" name="edit" method="_sa8LBpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ogZoEJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ogZoEZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_ogd5gJFCEeuCTslxszDstQ" name="save" method="_sa8LB5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ogegkJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ogegkZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_ogiK8JFCEeuCTslxszDstQ" name="load" visibility="private" method="_sa8LCJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_rmjgsJFCEeuCTslxszDstQ" name="loadDictFile" visibility="private" method="_sa8yEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rmkHwJFCEeuCTslxszDstQ" name="file" type="_om-KIJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8jl4JFCEeuCTslxszDstQ" type="_rWnAMZFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r8hwsJFCEeuCTslxszDstQ" name="MapBackedDictionary" method="_sa8LAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r8iXwZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r8iXwpFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r8iXwJFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8iXw5FCEeuCTslxszDstQ" type="_ogLloJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r8kM8JFCEeuCTslxszDstQ" name="putTable" visibility="private" method="_sa8yE5FCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sefOQJFCEeuCTslxszDstQ">
                  <body>Use &lt;var>table&lt;/var> for lookups to the file represented by &lt;var>pos&lt;/var> and
     * &lt;var>fileType&lt;/var>.
     *
     * @param pos      POS
     * @param fileType element type
     * @param table    hashmap with elements</body>
                </ownedComment>
                <ownedParameter xmi:id="_r8k0AJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8k0AZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8k0ApFCEeuCTslxszDstQ" name="table" type="_rWnAMZFCEeuCTslxszDstQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ogzQsJFCEeuCTslxszDstQ" name="MapDictionary">
              <ownedComment xmi:id="_sef1UJFCEeuCTslxszDstQ">
                <body>Base class for map-based dictionaries.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_r83H4ZFCEeuCTslxszDstQ" general="_rVLc0JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sO4sAJFCEeuCTslxszDstQ" name="rand" visibility="protected" isLeaf="true" isStatic="true" type="_rnZOMJFCEeuCTslxszDstQ" isReadOnly="true" association="_siN3sJFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sO5TEJFCEeuCTslxszDstQ" value="new Random()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sO56IJFCEeuCTslxszDstQ" name="tableMap" visibility="protected" isLeaf="true" type="_rWnAMZFCEeuCTslxszDstQ" isReadOnly="true" association="_siPF0ZFCEeuCTslxszDstQ">
                <qualifier xmi:id="_sPAn0ZFCEeuCTslxszDstQ" type="_sO-yoJFCEeuCTslxszDstQ"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8yF5FCEeuCTslxszDstQ" name="MapDictionary" specification="_r8oeYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8yGJFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8yGZFCEeuCTslxszDstQ" type="_ogzQsJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(doc);

     tableMap = new EnumMap&lt;>(POS.class);
     for (POS pos : POS.values()) {
         Map&lt;DictionaryFileType, Map&lt;Object, DictionaryElement>> files = new EnumMap&lt;>(DictionaryFileType.class);
         tableMap.put(pos, files);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8yGpFCEeuCTslxszDstQ" name="getIndexWord" specification="_rm2boJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8yG5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8yHJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa8yHZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (IndexWord) getTable(pos, DictionaryFileType.INDEX).get(prepareQueryString(lemma));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8yHpFCEeuCTslxszDstQ" name="getIndexWordIterator" specification="_rm5e8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8yH5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8yIJFCEeuCTslxszDstQ" name="substring">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa8yIZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>substring = prepareQueryString(substring);

     final Iterator&lt;IndexWord> itr = getIndexWordIterator(pos);
     IndexWord start = null;
     while (itr.hasNext()) {
         IndexWord word = itr.next();
         if (word.getLemma().contains(substring)) {
             start = word;
             break;
         }
     }
     return new AbstractCachingDictionary.IndexWordIterator(itr, substring, start);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8yIpFCEeuCTslxszDstQ" name="getIndexWordIterator" specification="_rm9JUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8yI5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8yJJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Iterator&lt;IndexWord>) getIterator(getTable(pos, DictionaryFileType.INDEX));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8yJZFCEeuCTslxszDstQ" name="getRandomIndexWord" specification="_rnCo4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8yJpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8yJ5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>// this is a very inefficient implementation, but a better
     // one would require a custom Map implementation that allowed
     // access to the underlying Entry array.
     int index = rand.nextInt(getTable(pos, DictionaryFileType.INDEX).size());
     Iterator&lt;IndexWord> itr = getIndexWordIterator(pos);
     for (int i = 0; i &lt; index &amp;&amp; itr.hasNext(); i++) {
         itr.next();
     }
     return itr.hasNext() ? itr.next() : null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa8yKJFCEeuCTslxszDstQ" name="getSynsetIterator" specification="_rnEeEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa8yKZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa8yKpFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Iterator&lt;Synset>) getIterator(getTable(pos, DictionaryFileType.DATA));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZIJFCEeuCTslxszDstQ" name="getExceptionIterator" specification="_rnJWkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa9ZIZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa9ZIpFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Iterator&lt;Exc>) getIterator(getTable(pos, DictionaryFileType.EXCEPTION));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZI5FCEeuCTslxszDstQ" name="getIterator" specification="_r8sv0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa9ZJJFCEeuCTslxszDstQ" name="map" type="_rWnAMZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa9ZJZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return map.values().iterator();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZJpFCEeuCTslxszDstQ" name="getSynsetAt" specification="_rnNA85FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa9ZJ5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa9ZKJFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa9ZKZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Synset) getTable(pos, DictionaryFileType.DATA).get(offset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZKpFCEeuCTslxszDstQ" name="getException" specification="_rnNoAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa9ZK5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa9ZLJFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sa9ZLZFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return (Exc) getTable(pos, DictionaryFileType.EXCEPTION).get(prepareQueryString(derivation));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZLpFCEeuCTslxszDstQ" name="close" specification="_og_d8JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>tableMap.clear();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZL5FCEeuCTslxszDstQ" name="edit" specification="_ohBTIJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (!isEditable()) {
         super.edit();
         resolveAllPointers();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZMJFCEeuCTslxszDstQ" name="addSynset" specification="_r8xoUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa9ZMZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>super.addSynset(synset);
     getTable(synset.getPOS(), DictionaryFileType.DATA).put(synset.getKey(), synset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZMpFCEeuCTslxszDstQ" name="removeSynset" specification="_r80roJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa9ZM5FCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>getTable(synset.getPOS(), DictionaryFileType.DATA).remove(synset.getKey());
     super.removeSynset(synset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZNJFCEeuCTslxszDstQ" name="addException" specification="_rnOPEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa9ZNZFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>super.addException(exc);
     getTable(exc.getPOS(), DictionaryFileType.EXCEPTION).put(exc.getKey(), exc);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZNpFCEeuCTslxszDstQ" name="removeException" specification="_rnOPFZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa9ZN5FCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>getTable(exc.getPOS(), DictionaryFileType.EXCEPTION).remove(exc.getKey());
     super.removeException(exc);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa9ZOJFCEeuCTslxszDstQ" name="addIndexWord" specification="_rnO2I5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa9ZOZFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>super.addIndexWord(indexWord);
     getTable(indexWord.getPOS(), DictionaryFileType.INDEX).put(indexWord.getKey(), indexWord);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-AMJFCEeuCTslxszDstQ" name="removeIndexWord" specification="_rnPdMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa-AMZFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>getTable(indexWord.getPOS(), DictionaryFileType.INDEX).remove(indexWord.getKey());
     super.removeIndexWord(indexWord);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-AMpFCEeuCTslxszDstQ" name="getTable" specification="_rnQEQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa-AM5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa-ANJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa-ANZFCEeuCTslxszDstQ" type="_rWnAMZFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return tableMap.get(pos).get(fileType);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_og_d8JFCEeuCTslxszDstQ" name="close" method="_sa9ZLpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ohAFAJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ohAFAZFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_ohBTIJFCEeuCTslxszDstQ" name="edit" method="_sa9ZL5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ohBTIZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ohB6MJFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_rm2boJFCEeuCTslxszDstQ" name="getIndexWord" method="_sa8yGpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rm3CsJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rm3pwJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rm4Q0JFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rm5e8JFCEeuCTslxszDstQ" name="getIndexWordIterator" method="_sa8yHpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rm6GAJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rm6GAZFCEeuCTslxszDstQ" name="substring">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r8psgJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rm9JUJFCEeuCTslxszDstQ" name="getIndexWordIterator" method="_sa8yIpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rm9JUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8qTkJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnCo4JFCEeuCTslxszDstQ" name="getRandomIndexWord" method="_sa8yJZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnCo4ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rnDP8JFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnEeEJFCEeuCTslxszDstQ" name="getSynsetIterator" method="_sa8yKJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnEeEZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8q6oJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnJWkJFCEeuCTslxszDstQ" name="getExceptionIterator" method="_sa9ZIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnJ9oJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8rhsJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnNA85FCEeuCTslxszDstQ" name="getSynsetAt" method="_sa9ZJpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnNA9JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rnNA9ZFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r8waMJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnNoAJFCEeuCTslxszDstQ" name="getException" method="_sa9ZKpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnNoAZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rnNoApFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rnNoA5FCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnOPEJFCEeuCTslxszDstQ" name="addException" method="_sa9ZNJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnOPEZFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnOPFZFCEeuCTslxszDstQ" name="removeException" method="_sa9ZNpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnOPFpFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnO2I5FCEeuCTslxszDstQ" name="addIndexWord" method="_sa9ZOJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnO2JJFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnPdMJFCEeuCTslxszDstQ" name="removeIndexWord" method="_sa-AMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnPdMZFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnQEQJFCEeuCTslxszDstQ" name="getTable" method="_sa-AMpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnQEQZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rnQEQpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r83H4JFCEeuCTslxszDstQ" type="_rWnAMZFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r8oeYJFCEeuCTslxszDstQ" name="MapDictionary" method="_sa8yF5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r8pFcZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r8pFcpFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r8pFcJFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8pFc5FCEeuCTslxszDstQ" type="_ogzQsJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r8sv0JFCEeuCTslxszDstQ" name="getIterator" visibility="private" method="_sa9ZI5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r8sv0ZFCEeuCTslxszDstQ" name="map" type="_rWnAMZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8ulAJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r8xoUJFCEeuCTslxszDstQ" name="addSynset" method="_sa9ZMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r8xoUZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r80roJFCEeuCTslxszDstQ" name="removeSynset" method="_sa9ZMpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r80roZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ohmh8JFCEeuCTslxszDstQ" name="MemoryDictionary">
              <ownedComment xmi:id="_sei4oJFCEeuCTslxszDstQ">
                <body>A in-memory &lt;code>Dictionary&lt;/code> backed by &lt;code>HashMap&lt;/code>s.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rnR5cJFCEeuCTslxszDstQ" general="_ogzQsJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa-ANpFCEeuCTslxszDstQ" name="MemoryDictionary" specification="_r88ncJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sa-AN5FCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sa-AOJFCEeuCTslxszDstQ" type="_ohmh8JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(doc);
     for (POS pos : POS.values()) {
         Map&lt;DictionaryFileType, Map&lt;Object, DictionaryElement>> files = tableMap.get(pos);
         for (DictionaryFileType type : DictionaryFileType.getAllDictionaryFileTypes()) {
             Map&lt;Object, DictionaryElement> file = new HashMap&lt;>();
             files.put(type, file);
         }
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r88ncJFCEeuCTslxszDstQ" name="MemoryDictionary" method="_sa-ANpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r891kZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r8-coJFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r891kJFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r8-coZFCEeuCTslxszDstQ" type="_ohmh8JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ohqzYJFCEeuCTslxszDstQ" name="MorphologicalProcessor">
              <ownedComment xmi:id="_sejfsJFCEeuCTslxszDstQ">
                <body>A &lt;code>MorphologicalProcessor&lt;/code> tries to turn the inflected form of a word or phrase into
the form that can be found in WordNet. For example, if one calls
lookupBaseForm(POS.VERB, &quot;running&quot;), the index word for &quot;run&quot; should be returned.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedOperation xmi:id="_rnSggJFCEeuCTslxszDstQ" name="lookupBaseForm" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnSggZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rnSggpFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rnSgg5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rnSghJFCEeuCTslxszDstQ" name="lookupAllBaseForms" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rnSghZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rnSghpFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rnSgh5FCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rnSgiJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_rVLc0JFCEeuCTslxszDstQ" name="Dictionary" isAbstract="true">
              <ownedComment xmi:id="_yzMtkJFCEeuCTslxszDstQ">
                <body>Abstract representation of a WordNet dictionary.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_ytkmsJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0LlAZFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytl00JFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(Dictionary.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytmb4JFCEeuCTslxszDstQ" name="rand" visibility="private" type="_rnZOMJFCEeuCTslxszDstQ" association="_y0LlBJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ytmb4ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ytmb4pFCEeuCTslxszDstQ" key="volatile"/>
                </eAnnotations>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytmb45FCEeuCTslxszDstQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytnC8ZFCEeuCTslxszDstQ" name="STATIC_MESSAGES" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytoREJFCEeuCTslxszDstQ" value="&quot;net.sf.extjwnl.dictionary.messages_static&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytoREZFCEeuCTslxszDstQ" name="staticMessages" visibility="private" isLeaf="true" isStatic="true" type="_oxlesJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0LlB5FCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yto4IJFCEeuCTslxszDstQ" value="new ResourceBundleSet(STATIC_MESSAGES)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yto4IZFCEeuCTslxszDstQ" name="MESSAGES" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytpfMJFCEeuCTslxszDstQ" value="&quot;net.sf.extjwnl.dictionary.messages&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytpfMZFCEeuCTslxszDstQ" name="messages" isLeaf="true" type="_oxlesJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0MMEZFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytqGQZFCEeuCTslxszDstQ" value="new ResourceBundleSet(MESSAGES)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytrUYJFCEeuCTslxszDstQ" name="MORPHOLOGICAL_PROCESSOR" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytr7cJFCEeuCTslxszDstQ" value="&quot;morphological_processor&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytsigJFCEeuCTslxszDstQ" name="EDIT_MANAGE_SYMMETRIC_POINTERS" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytsigZFCEeuCTslxszDstQ" value="&quot;edit_manage_symmetric_pointers&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yttJkJFCEeuCTslxszDstQ" name="editManageSymmetricPointers" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yttJkZFCEeuCTslxszDstQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yttwoJFCEeuCTslxszDstQ" name="EDIT_CHECK_ALIEN_POINTERS" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yttwoZFCEeuCTslxszDstQ" value="&quot;edit_check_alien_pointers&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytuXsJFCEeuCTslxszDstQ" name="editCheckAlienPointers" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytuXsZFCEeuCTslxszDstQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytvl0JFCEeuCTslxszDstQ" name="VERSION_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytvl0ZFCEeuCTslxszDstQ" value="&quot;version&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytwM4JFCEeuCTslxszDstQ" name="DICTIONARY_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytwM4ZFCEeuCTslxszDstQ" value="&quot;dictionary&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytwM4pFCEeuCTslxszDstQ" name="PARAM_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytwz8JFCEeuCTslxszDstQ" value="&quot;param&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytwz8ZFCEeuCTslxszDstQ" name="RESOURCE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytxbAJFCEeuCTslxszDstQ" value="&quot;resource&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytxbAZFCEeuCTslxszDstQ" name="LANGUAGE_ATTRIBUTE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytyCEJFCEeuCTslxszDstQ" value="&quot;language&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytyCEZFCEeuCTslxszDstQ" name="COUNTRY_ATTRIBUTE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytypIJFCEeuCTslxszDstQ" value="&quot;country&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytypIZFCEeuCTslxszDstQ" name="CLASS_ATTRIBUTE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytzQMJFCEeuCTslxszDstQ" value="&quot;class&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytz3QJFCEeuCTslxszDstQ" name="NAME_ATTRIBUTE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytz3QZFCEeuCTslxszDstQ" value="&quot;name&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytz3QpFCEeuCTslxszDstQ" name="VALUE_ATTRIBUTE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yt0eUJFCEeuCTslxszDstQ" value="&quot;value&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt0eUZFCEeuCTslxszDstQ" name="PUBLISHER_ATTRIBUTE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yt1FYJFCEeuCTslxszDstQ" value="&quot;publisher&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt1FYZFCEeuCTslxszDstQ" name="NUMBER_ATTRIBUTE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yt1scJFCEeuCTslxszDstQ" value="&quot;number&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt1scZFCEeuCTslxszDstQ" name="CHECK_LEX_IDS_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yt1scpFCEeuCTslxszDstQ" value="&quot;check_lex_ids&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt2TgJFCEeuCTslxszDstQ" name="checkLexIds" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yt2TgZFCEeuCTslxszDstQ" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt26kZFCEeuCTslxszDstQ" name="restore" visibility="private" isStatic="true" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0MMFJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yt4IsZFCEeuCTslxszDstQ" name="params" visibility="protected" isLeaf="true" type="_oyrD0JFCEeuCTslxszDstQ" isReadOnly="true" association="_y0MMF5FCEeuCTslxszDstQ">
                <qualifier xmi:id="_yt4vwZFCEeuCTslxszDstQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </qualifier>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt594JFCEeuCTslxszDstQ" name="version" visibility="private" isLeaf="true" type="_yQb-wJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0MzIZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yt594pFCEeuCTslxszDstQ" name="morph" visibility="private" isLeaf="true" type="_ohqzYJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0MzJJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yt7MAJFCEeuCTslxszDstQ" name="editable" visibility="private">
                <eAnnotations xmi:id="_yt7MAZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yt7MApFCEeuCTslxszDstQ" key="volatile"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt7zEJFCEeuCTslxszDstQ" name="DEFAULT_FILE_DICTIONARY_PATH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yt7zEZFCEeuCTslxszDstQ" value="&quot;./data/wn30&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt8aIJFCEeuCTslxszDstQ" name="DEFAULT_MAP_DICTIONARY_PATH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yt8aIZFCEeuCTslxszDstQ" value="&quot;./data/map&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt8aIpFCEeuCTslxszDstQ" name="DEFAULT_DB_DICTIONARY_PATH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yt9BMJFCEeuCTslxszDstQ" value="&quot;jdbc:mysql://localhost/jwnl?user=root&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt9BMZFCEeuCTslxszDstQ" name="DEFAULT_RESOURCE_CONFIG_PATH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yt9BMpFCEeuCTslxszDstQ" value="&quot;/extjwnl_resource_properties.xml&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yt9oQJFCEeuCTslxszDstQ" name="wordLexIdComparator" visibility="private" isLeaf="true" isStatic="true" type="_rzBPYJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0MzJ5FCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuAEgJFCEeuCTslxszDstQ" value="Comparator.comparingInt(Word::getLexId)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yuAEgZFCEeuCTslxszDstQ" name="verbFrames" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yuArkJFCEeuCTslxszDstQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yuB5sJFCEeuCTslxszDstQ" name="DICTIONARY_ELEMENT_FACTORY" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuB5sZFCEeuCTslxszDstQ" value="&quot;dictionary_element_factory&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yuCgwJFCEeuCTslxszDstQ" name="elementFactory" visibility="protected" isLeaf="true" type="_oFyIoJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0NaMZFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw9R4pFCEeuCTslxszDstQ" name="getInstance" specification="_yCOjoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw9R45FCEeuCTslxszDstQ" name="properties" type="_rtYhcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yw9R5JFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (null == properties) {
         throw new IllegalArgumentException();
     }
     return getInstance(new InputSource(properties));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw948JFCEeuCTslxszDstQ" name="getInstance" specification="_yqy_gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw948ZFCEeuCTslxszDstQ" name="properties" type="_yokK5ZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yw948pFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Document doc;
     try {
         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
         factory.setValidating(false);
         DocumentBuilder docBuilder = factory.newDocumentBuilder();
         doc = docBuilder.parse(properties);
     } catch (IOException | ParserConfigurationException | SAXException e) {
         throw new JWNLException(staticMessages.resolveMessage(&quot;DICTIONARY_ERROR_PARSING_PROPERTIES&quot;), e);
     }

     org.w3c.dom.Element root = doc.getDocumentElement();

     // parse dictionary
     NodeList dictionaryNodeList = root.getElementsByTagName(DICTIONARY_TAG);
     if (dictionaryNodeList.getLength() == 0) {
         throw new JWNLException(staticMessages.resolveMessage(&quot;DICTIONARY_PROPERTIES_MUST_SPECIFY_DICTIONARY&quot;));
     }
     Node dictionaryNode = dictionaryNodeList.item(0);
     String dictionaryClassName = getAttribute(dictionaryNode, CLASS_ATTRIBUTE);
     Dictionary dictionary;
     try {
         Class clazz = Class.forName(dictionaryClassName);
         Constructor c = clazz.getConstructor(Document.class);
         dictionary = (Dictionary) c.newInstance(doc);
     } catch (ClassNotFoundException | NoSuchMethodException | InstantiationException | InvocationTargetException | IllegalAccessException e) {
         throw new JWNLException(staticMessages.resolveMessage(&quot;DICTIONARY_UNABLE_TO_CREATE_INSTANCE&quot;, new Object[]{dictionaryClassName, Util.getRootCause(e)}), e);
     }

     return dictionary;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw-gAJFCEeuCTslxszDstQ" name="getFileBackedInstance" specification="_yQpaIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw-gAZFCEeuCTslxszDstQ" name="dictionaryPath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yw-gApFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>try {
         String properties = getResourceProperties(&quot;file_properties.xml&quot;);
         properties = properties.replace(DEFAULT_FILE_DICTIONARY_PATH, dictionaryPath);
         return getInstance(new InputSource(new StringReader(properties)));
     } catch (IOException e) {
         throw new JWNLException(staticMessages.resolveMessage(&quot;DICTIONARY_IO_ERROR_OPENING_PROPERTIES&quot;), e);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw-gA5FCEeuCTslxszDstQ" name="getMapBackedInstance" specification="_yQqoQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw-gBJFCEeuCTslxszDstQ" name="dictionaryPath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yw-gBZFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>try {
         String properties = getResourceProperties(&quot;map_properties.xml&quot;);
         properties = properties.replace(DEFAULT_MAP_DICTIONARY_PATH, dictionaryPath);
         return getInstance(new InputSource(new StringReader(properties)));
     } catch (IOException e) {
         throw new JWNLException(staticMessages.resolveMessage(&quot;DICTIONARY_IO_ERROR_OPENING_PROPERTIES&quot;), e);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw_HEJFCEeuCTslxszDstQ" name="getDatabaseBackedInstance" specification="_yQr2YJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw_HEZFCEeuCTslxszDstQ" name="dbURL">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yw_HEpFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>try {
         String properties = getResourceProperties(&quot;database_properties.xml&quot;);
         properties = properties.replace(DEFAULT_DB_DICTIONARY_PATH, dbURL);
         return getInstance(new InputSource(new StringReader(properties)));
     } catch (IOException e) {
         throw new JWNLException(staticMessages.resolveMessage(&quot;DICTIONARY_IO_ERROR_OPENING_PROPERTIES&quot;), e);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw_HE5FCEeuCTslxszDstQ" name="getDefaultResourceInstance" specification="_yCPxwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw_HFJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getResourceInstance(DEFAULT_RESOURCE_CONFIG_PATH);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw_HFZFCEeuCTslxszDstQ" name="getResourceInstance" specification="_yQsdcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw_HFpFCEeuCTslxszDstQ" name="propertiesPath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yw_HF5FCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>InputStream properties = Dictionary.class.getResourceAsStream(propertiesPath);
     return getInstance(properties);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw_uIJFCEeuCTslxszDstQ" name="setRestoreDictionary" specification="_yCPxwpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw_uIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>restore = dictionary;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw_uIpFCEeuCTslxszDstQ" name="getRestoreDictionary" specification="_yCQY05FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw_uI5FCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return restore;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw_uJJFCEeuCTslxszDstQ" name="Dictionary" specification="_yCQ_4ZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw_uJZFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yw_uJpFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>org.w3c.dom.Element root = doc.getDocumentElement();

     // set messages locale
     messages.setLocale(getLocale(getAttribute(root, LANGUAGE_ATTRIBUTE), getAttribute(root, COUNTRY_ATTRIBUTE)));

     // add additional resources
     NodeList resourceNodes = root.getElementsByTagName(RESOURCE_TAG);
     for (int i = 0; i &lt; resourceNodes.getLength(); i++) {
         String resource = getAttribute(resourceNodes.item(i), CLASS_ATTRIBUTE);
         if (resource != null) {
             messages.addResource(resource);
         }
     }

     // parse version information
     NodeList versionNodes = root.getElementsByTagName(VERSION_TAG);
     if (versionNodes.getLength() == 0) {
         throw new JWNLException(messages.resolveMessage(&quot;EXC_PROPERTIES_FILE_MUST_SPECIFY_VERSION&quot;));
     }
     Node version = versionNodes.item(0);

     String number = getAttribute(version, NUMBER_ATTRIBUTE);
     this.version = new Version(
             getAttribute(version, PUBLISHER_ATTRIBUTE),
             (number == null) ? 0.0 : Double.parseDouble(number),
             getLocale(getAttribute(version, LANGUAGE_ATTRIBUTE), getAttribute(version, COUNTRY_ATTRIBUTE)));

     // parse dictionary
     NodeList dictionaryNodeList = root.getElementsByTagName(DICTIONARY_TAG);
     Node dictionaryNode = dictionaryNodeList.item(0);

     params = new HashMap&lt;>();
     for (Param p : getParams(this, dictionaryNode.getChildNodes())) {
         params.put(p.getName(), p);
     }

     if (!params.containsKey(DICTIONARY_ELEMENT_FACTORY)) {
         throw new IllegalArgumentException(messages.resolveMessage(&quot;DICTIONARY_EXCEPTION_001&quot;, DICTIONARY_ELEMENT_FACTORY));
     }
     elementFactory = (DictionaryElementFactory) (params.get(DICTIONARY_ELEMENT_FACTORY)).create();

     if (params.containsKey(CHECK_LEX_IDS_KEY)) {
         checkLexIds = Boolean.parseBoolean(params.get(CHECK_LEX_IDS_KEY).getValue());
     }

     Param param = params.get(MORPHOLOGICAL_PROCESSOR);
     morph = (param == null) ? null : (MorphologicalProcessor) param.create();

     if (params.containsKey(EDIT_MANAGE_SYMMETRIC_POINTERS)) {
         editManageSymmetricPointers = Boolean.parseBoolean(params.get(EDIT_MANAGE_SYMMETRIC_POINTERS).getValue());
     }

     if (params.containsKey(EDIT_CHECK_ALIEN_POINTERS)) {
         editCheckAlienPointers = Boolean.parseBoolean(params.get(EDIT_CHECK_ALIEN_POINTERS).getValue());
     }

     // initialize verb frames
     int framesCount = Integer.parseInt(messages.resolveMessage(&quot;NUMBER_OF_VERB_FRAMES&quot;));
     verbFrames = new String[framesCount];
     for (int i = 1; i &lt;= framesCount; i++) {
         verbFrames[i - 1] = messages.resolveMessage(&quot;VERB_FRAME_&quot; + i);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxAVMJFCEeuCTslxszDstQ" name="getMorphologicalProcessor" specification="_yCaJ0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxAVMZFCEeuCTslxszDstQ" type="_ohqzYJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return morph;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxA8QJFCEeuCTslxszDstQ" name="getWordBySenseKey" specification="_yQ1nYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxA8QZFCEeuCTslxszDstQ" name="senseKey">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxA8QpFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (senseKey == null || senseKey.isEmpty()) {
         return null;
     }

     final int percentIndex = senseKey.indexOf('%');
     if (percentIndex == -1) {
         return null;
     }

     final int colonIndex = senseKey.indexOf(':', percentIndex);
     if (colonIndex == -1) {
         return null;
     }

     final String ssType = senseKey.substring(percentIndex + 1, colonIndex);
     final int ssTypeId;
     try {
         ssTypeId = Integer.parseInt(ssType);
     } catch (NumberFormatException e) {
         return null;
     }

     final POS pos = POS.getPOSForId(ssTypeId);
     if (pos == null) {
         return null;
     }

     final String lemma = senseKey.substring(0, percentIndex).replace('_', ' ');
     final IndexWord iw = getIndexWord(pos, lemma);
     if (iw == null) {
         return null;
     }

     Word result = null;
     searchB:
     for (final Synset synset : iw.getSenses()) {
         for (final Word word : synset.getWords()) {
             if (senseKey.equals(word.getSenseKey())) {
                 result = word;
                 break searchB;
             }
         }
     }
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxA8Q5FCEeuCTslxszDstQ" name="lookupIndexWord" specification="_yQ2OcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxA8RJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxA8RZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxA8RpFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>lemma = prepareQueryString(lemma);
     IndexWord word = getIndexWord(pos, lemma);
     if (word == null &amp;&amp; getMorphologicalProcessor() != null) {
         word = getMorphologicalProcessor().lookupBaseForm(pos, lemma);
     }
     return word;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxA8R5FCEeuCTslxszDstQ" name="lookupAllIndexWords" specification="_yQ3ckJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxA8SJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxA8SZFCEeuCTslxszDstQ" type="_oKC9kJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>lemma = prepareQueryString(lemma);
     IndexWordSet set = new IndexWordSet(lemma);
     for (POS pos : POS.getAllPOS()) {
         IndexWord current = lookupIndexWord(pos, lemma);
         if (current != null) {
             set.add(current);
         }
     }
     return set;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxBjUJFCEeuCTslxszDstQ" name="getVersion" specification="_yCaw4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxBjUZFCEeuCTslxszDstQ" type="_yQb-wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return version;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxBjUpFCEeuCTslxszDstQ" name="isEditable" specification="_yCaw4ZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxBjU5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return editable;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxBjVJFCEeuCTslxszDstQ" name="edit" specification="_yCbX8JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (!editable) {
         editable = true;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxCKYJFCEeuCTslxszDstQ" name="save" specification="_yCbX85FCEeuCTslxszDstQ">
                <language>java</language>
                <body>checkEditable();
     if (log.isInfoEnabled()) {
         log.info(messages.resolveMessage(&quot;DICTIONARY_INFO_014&quot;));
     }
     if (checkLexIds) {
         //fixing word lex ids
         for (POS pos : POS.getAllPOS()) {
             if (log.isDebugEnabled()) {
                 log.debug(messages.resolveMessage(&quot;DICTIONARY_INFO_015&quot;, pos.getLabel()));
             }
             Iterator&lt;IndexWord> ii = getIndexWordIterator(pos);
             while (ii.hasNext()) {
                 IndexWord iw = ii.next();
                 //lex ids should be unique within lex file name
                 //lex file name -> list of words
                 Map&lt;Long, List&lt;Word>> words = new HashMap&lt;>();
                 for (Synset sense : iw.getSenses()) {
                     for (Word word : sense.getWords()) {
                         if (word.getLemma().equalsIgnoreCase(iw.getLemma())) {
                             List&lt;Word> list = words.computeIfAbsent(sense.getLexFileNum(), k -> new ArrayList&lt;>());
                             list.add(word);
                         }
                     }
                 }

                 for (Map.Entry&lt;Long, List&lt;Word>> entry : words.entrySet()) {
                     List&lt;Word> list = entry.getValue();
                     list.sort(wordLexIdComparator);
                     int maxId = -1;
                     for (Word word : list) {
                         if (maxId &lt; word.getLexId()) {
                             maxId = word.getLexId();
                         }
                     }
                     for (Word word : list) {
                         if (-1 == word.getLexId()) {
                             maxId++;
                             word.setLexId(maxId);
                         }
                     }
                 }
             }
             if (log.isDebugEnabled()) {
                 log.debug(messages.resolveMessage(&quot;DICTIONARY_INFO_016&quot;, pos.getLabel()));
             }
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxCKYZFCEeuCTslxszDstQ" name="delete" specification="_yCb_AZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxCKYpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return false;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxCKY5FCEeuCTslxszDstQ" name="addElement" specification="_yCb_BJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxCKZJFCEeuCTslxszDstQ" name="element" type="_oFhp8JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>checkEditable();
     if (element instanceof Exc) {
         addException((Exc) element);
     } else if (element instanceof IndexWord) {
         addIndexWord((IndexWord) element);
     } else if (element instanceof Synset) {
         addSynset((Synset) element);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxCxcJFCEeuCTslxszDstQ" name="removeElement" specification="_yCcmEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxCxcZFCEeuCTslxszDstQ" name="element" type="_oFhp8JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>checkEditable();
     if (element instanceof Exc) {
         removeException((Exc) element);
     } else if (element instanceof IndexWord) {
         removeIndexWord((IndexWord) element);
     } else if (element instanceof Synset) {
         removeSynset((Synset) element);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxCxcpFCEeuCTslxszDstQ" name="createException" specification="_yQ5RwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxCxc5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxCxdJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxCxdZFCEeuCTslxszDstQ" name="exceptions" type="_rV_8MJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxCxdpFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>checkEditable();
     return elementFactory.createException(pos, lemma, exceptions);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxCxd5FCEeuCTslxszDstQ" name="addException" specification="_yCdNIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxCxeJFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>checkEditable();
     exc.setDictionary(this);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxDYgJFCEeuCTslxszDstQ" name="removeException" specification="_yCd0MJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxDYgZFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>checkEditable();
     exc.setDictionary(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxD_kJFCEeuCTslxszDstQ" name="createSynset" specification="_yCebQZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxD_kZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxD_kpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>checkEditable();
     return elementFactory.createSynset(pos);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxD_k5FCEeuCTslxszDstQ" name="addSynset" specification="_yCfpYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxD_lJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>checkEditable();
     synset.setDictionary(this);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxEmoJFCEeuCTslxszDstQ" name="removeSynset" specification="_yCgQcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxEmoZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>checkEditable();

     // take care of pointers
     // this will delete symmetric ones
     // asymmetric ones will be checked by the synset on gets and removed
     synset.getPointers().clear();

     synset.setDictionary(null);

     // take care of index words
     List&lt;Word> copy = new ArrayList&lt;>(synset.getWords());
     for (Word word : copy) {
         IndexWord indexWord = getIndexWord(synset.getPOS(), word.getLemma());
         if (null != indexWord) {
             indexWord.getSenses().remove(synset);
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxEmopFCEeuCTslxszDstQ" name="createIndexWord" specification="_yQ9jMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxEmo5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxEmpJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxEmpZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxEmppFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>checkEditable();
     return elementFactory.createIndexWord(pos, lemma, synset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxFNsJFCEeuCTslxszDstQ" name="addIndexWord" specification="_yCg3gZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxFNsZFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>checkEditable();
     indexWord.setDictionary(this);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxFNspFCEeuCTslxszDstQ" name="removeIndexWord" specification="_yChekZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxFNs5FCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>checkEditable();

     indexWord.setDictionary(null);

     // take care of words in synsets
     List&lt;Synset> copy = new ArrayList&lt;>(indexWord.getSenses());
     for (Synset synset : copy) {
         List&lt;Word> wordsCopy = new ArrayList&lt;>(synset.getWords());
         for (Word word : wordsCopy) {
             if (word.getLemma().equalsIgnoreCase(indexWord.getLemma())) {
                 synset.getWords().remove(word);
                 break;
             }
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxF0wJFCEeuCTslxszDstQ" name="getManageSymmetricPointers" specification="_yCissJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxF0wZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return editManageSymmetricPointers;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxF0wpFCEeuCTslxszDstQ" name="getCheckAlienPointers" specification="_yCissZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxF0w5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return editCheckAlienPointers;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxF0xJFCEeuCTslxszDstQ" name="getFrames" specification="_yCjTwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxF0xZFCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxF0xpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxF0x5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return getFrames(bits, verbFrames);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxGb0JFCEeuCTslxszDstQ" name="getFrames" specification="_yQ__cJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxGb0ZFCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxGb0pFCEeuCTslxszDstQ" name="verbFrames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxGb05FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxGb1JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxGb1ZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>int[] indices = getVerbFrameIndices(bits);
     String[] frames = new String[indices.length];
     for (int i = 0; i &lt; indices.length; i++) {
         frames[i] = verbFrames[indices[i] - 1];
     }
     return frames;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxGb1pFCEeuCTslxszDstQ" name="getVerbFrameIndices" specification="_yCkh4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxGb15FCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxGb2JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxGb2ZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>int[] indices = new int[bits.cardinality()];
     int index = 0;
     for (int i = bits.nextSetBit(0); i >= 0; i = bits.nextSetBit(i + 1)) {
         indices[index++] = i;
     }

     return indices;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxHC4JFCEeuCTslxszDstQ" name="getRandom" specification="_yClwAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxHC4ZFCEeuCTslxszDstQ" type="_rnZOMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>Random localRef = rand;
     if (localRef == null) {
         synchronized (this) {
             localRef = rand;
             if (localRef == null) {
                 rand = localRef = new Random(new Date().getTime());
             }
         }
     }
     return localRef;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxHC4pFCEeuCTslxszDstQ" name="setRandom" specification="_yCmXEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxHC45FCEeuCTslxszDstQ" name="rand" type="_rnZOMJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>this.rand = rand;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxHC5JFCEeuCTslxszDstQ" name="prepareQueryString" specification="_yRDp0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxHC5ZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxHC5pFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return lemma.trim().toLowerCase();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxHp8JFCEeuCTslxszDstQ" name="checkEditable" specification="_yCm-IJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (!isEditable()) {
         throw new JWNLException(messages.resolveMessage(&quot;DICTIONARY_EXCEPTION_029&quot;));
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxHp8ZFCEeuCTslxszDstQ" name="resolveAllPointers" specification="_yCm-IZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>for (POS pos : POS.getAllPOS()) {
         resolvePointers(pos);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxHp8pFCEeuCTslxszDstQ" name="resolvePointers" specification="_yCnlMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxHp85FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>if (log.isDebugEnabled()) {
         log.debug(getMessages().resolveMessage(&quot;DICTIONARY_INFO_013&quot;, pos.getLabel()));
     }

     {
         Iterator&lt;Synset> si = getSynsetIterator(pos);
         while (si.hasNext()) {
             Synset s = si.next();
             for (Pointer p : s.getPointers()) {
                 // resolve pointers
                 p.getTarget();
             }
         }
     }

     {
         Iterator&lt;IndexWord> ii = getIndexWordIterator(pos);
         while (ii.hasNext()) {
             IndexWord iw = ii.next();
             // load synsets
             iw.getSenses().iterator();
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxIRAJFCEeuCTslxszDstQ" name="getParams" specification="_yq3Q8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxIRAZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxIRApFCEeuCTslxszDstQ" name="list" type="_yokK45FCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxIRA5FCEeuCTslxszDstQ" type="_oyrD0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxIRBJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;Param> params = new ArrayList&lt;>();
     for (int i = 0; i &lt; list.getLength(); i++) {
         Node n = list.item(i);
         if (n.getNodeType() == Node.ELEMENT_NODE &amp;&amp; n.getNodeName().equals(PARAM_TAG)) {
             String name = getAttribute(n, NAME_ATTRIBUTE);
             String value = getAttribute(n, VALUE_ATTRIBUTE);
             if (name == null &amp;&amp; value == null) {
                 throw new JWNLException(messages.resolveMessage(&quot;JWNL_EXCEPTION_008&quot;));
             } else {
                 Param param;
                 if (value == null) {
                     param = new ParamList(name.toLowerCase(), getParams(dictionary, n.getChildNodes()));
                 } else if (name == null) {
                     param = new ValueParam(dictionary, value, getParams(dictionary, n.getChildNodes()));
                 } else {
                     param = new NameValueParam(dictionary, name.toLowerCase(), value, getParams(dictionary, n.getChildNodes()));
                 }
                 params.add(param);
             }
         }
     }
     return params;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxI4EJFCEeuCTslxszDstQ" name="getAttribute" specification="_yq67UJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxI4EZFCEeuCTslxszDstQ" name="node" type="_yokK4ZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yxI4EpFCEeuCTslxszDstQ" name="attributeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxI4E5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>NamedNodeMap map = node.getAttributes();
     if (map != null) {
         Node n = map.getNamedItem(attributeName);
         if (n != null) {
             return n.getNodeValue();
         }
     }
     return null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxI4FJFCEeuCTslxszDstQ" name="getLocale" specification="_yRGtIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxI4FZFCEeuCTslxszDstQ" name="language">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxI4FpFCEeuCTslxszDstQ" name="country">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxI4F5FCEeuCTslxszDstQ" type="_sEDVAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (language == null) {
         return Locale.getDefault();
     } else if (country == null) {
         return new Locale(language);
     } else {
         return new Locale(language, country);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxJfIJFCEeuCTslxszDstQ" name="getResourceProperties" specification="_yRIiUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yxJfIZFCEeuCTslxszDstQ" name="resourceName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yxJfIpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>try (final InputStream inputStream = Dictionary.class.getResourceAsStream(resourceName)) {
         try (final BufferedReader fileCheck = new BufferedReader(new InputStreamReader(inputStream))) {
             final StringBuilder fileText = new StringBuilder();
             String line;
             while (null != (line = fileCheck.readLine())) {
                 fileText.append(line).append(&quot;\n&quot;);
             }
             return fileText.toString();
         }
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yCOjoJFCEeuCTslxszDstQ" name="getInstance" isStatic="true" method="_yw9R4pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzNUoZFCEeuCTslxszDstQ">
                  <body>Parses a properties file and creates a dictionary.
     *
     * @param properties the properties file stream
     * @return dictionary
     * @throws JWNLException various JWNL exceptions, depending on where this fails</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCOjoZFCEeuCTslxszDstQ" name="properties" type="_rtYhcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yCPKsJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCPxwJFCEeuCTslxszDstQ" name="getDefaultResourceInstance" isStatic="true" method="_yw_HE5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzN7s5FCEeuCTslxszDstQ">
                  <body>Returns Dictionary instance configured from classpath by default.
     *
     * @return Dictionary instance configured from classpath by default
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCPxwZFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCPxwpFCEeuCTslxszDstQ" name="setRestoreDictionary" isStatic="true" method="_yw_uIJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yCQY0ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yCQY0pFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yCQY0JFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCQY05FCEeuCTslxszDstQ" name="getRestoreDictionary" isStatic="true" method="_yw_uIpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yCQ_4JFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCQ_4ZFCEeuCTslxszDstQ" name="Dictionary" visibility="protected" method="_yw_uJJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yCRm8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yCRm8ZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yCQ_4pFCEeuCTslxszDstQ" name="doc" type="_rhYs0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yCQ_45FCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCRm8pFCEeuCTslxszDstQ" name="getIndexWordIterator" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzN7tZFCEeuCTslxszDstQ">
                  <body>Returns an Iterator over all the IndexWords of part-of-speech &lt;var>pos&lt;/var>.
     *
     * @param pos The part-of-speech
     * @return iterator over &lt;code>IndexWord&lt;/code>s
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCRm85FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yCSOAJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCTcIJFCEeuCTslxszDstQ" name="getRandomIndexWord" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzOiwpFCEeuCTslxszDstQ">
                  <body>Returns a random index word of a specified &lt;var>pos&lt;/var>.
     *
     * @param pos part of speech
     * @return a random index word of a specified &lt;var>pos&lt;/var>
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCTcIZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yCTcIpFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCUDMJFCEeuCTslxszDstQ" name="getSynsetIterator" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzOiw5FCEeuCTslxszDstQ">
                  <body>Returns an iterator over all the synsets of part-of-speech &lt;var>pos&lt;/var>.
     *
     * @param pos The part-of-speech.
     * @return An iterator over &lt;code>Synset&lt;/code>s.
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCUDMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yCUDMpFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCXGgJFCEeuCTslxszDstQ" name="getExceptionIterator" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzOixZFCEeuCTslxszDstQ">
                  <body>Returns an iterator over all the exceptions.
     *
     * @param pos the part-of-speech
     * @return an iterator over &lt;code>Exc&lt;/code>s
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCXGgZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yCXGgpFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCZiwJFCEeuCTslxszDstQ" name="close" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzOix5FCEeuCTslxszDstQ">
                  <body>Shuts down the dictionary, freeing resources.
     *
     * @throws JWNLException JWNLException</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yCaJ0JFCEeuCTslxszDstQ" name="getMorphologicalProcessor" method="_yxAVMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yCaJ0ZFCEeuCTslxszDstQ" type="_ohqzYJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCaw4JFCEeuCTslxszDstQ" name="getVersion" method="_yxBjUJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPJ05FCEeuCTslxszDstQ">
                  <body>Returns the current dictionary version.
     *
     * @return current dictionary version</body>
                </ownedComment>
                <ownedParameter xmi:id="_yomAEJFCEeuCTslxszDstQ" type="_yQb-wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCaw4ZFCEeuCTslxszDstQ" name="isEditable" method="_yxBjUpFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPJ1JFCEeuCTslxszDstQ">
                  <body>Returns whether the dictionary is editable.
     *
     * @return whether the dictionary is editable</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQ4DoJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCbX8JFCEeuCTslxszDstQ" name="edit" method="_yxBjVJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yCbX8ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yCbX8pFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
                <ownedComment xmi:id="_yzPJ1ZFCEeuCTslxszDstQ">
                  <body>Puts the dictionary into edit mode.
     *
     * @throws JWNLException JWNLException</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yCbX85FCEeuCTslxszDstQ" name="save" method="_yxCKYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yCbX9JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yCb_AJFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
                <ownedComment xmi:id="_yzPJ1pFCEeuCTslxszDstQ">
                  <body>Saves the dictionary.
     *
     * @throws JWNLException JWNLException</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yCb_AZFCEeuCTslxszDstQ" name="delete" method="_yxCKYZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yCb_ApFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yCb_A5FCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
                <ownedComment xmi:id="_yzPJ15FCEeuCTslxszDstQ">
                  <body>Deletes dictionary files.
     *
     * @return true if deleted
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQ4qsJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCb_BJFCEeuCTslxszDstQ" name="addElement" method="_yxCKY5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPw4JFCEeuCTslxszDstQ">
                  <body>Adds dictionary element to the dictionary.
     *
     * @param element element to add
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCb_BZFCEeuCTslxszDstQ" name="element" type="_oFhp8JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCcmEJFCEeuCTslxszDstQ" name="removeElement" method="_yxCxcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPw4ZFCEeuCTslxszDstQ">
                  <body>Removes the dictionary &lt;var>element&lt;/var> from the dictionary.
     *
     * @param element element to be removed
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCcmEZFCEeuCTslxszDstQ" name="element" type="_oFhp8JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCdNIJFCEeuCTslxszDstQ" name="addException" method="_yxCxd5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPw45FCEeuCTslxszDstQ">
                  <body>Adds exception to the dictionary.
     *
     * @param exc exception to add
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCdNIZFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCd0MJFCEeuCTslxszDstQ" name="removeException" method="_yxDYgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPw5JFCEeuCTslxszDstQ">
                  <body>Removes the &lt;var>exc&lt;/var> from the dictionary.
     *
     * @param exc exc to be removed
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCebQJFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCebQZFCEeuCTslxszDstQ" name="createSynset" method="_yxD_kJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPw5ZFCEeuCTslxszDstQ">
                  <body>Creates synset of the specified part of speech.
     *
     * @param pos part of speech
     * @return synset object
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCfCUJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yCfCUZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCfpYJFCEeuCTslxszDstQ" name="addSynset" method="_yxD_k5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPw5pFCEeuCTslxszDstQ">
                  <body>Adds synset to the dictionary.
     *
     * @param synset synset to add
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCfpYZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCgQcJFCEeuCTslxszDstQ" name="removeSynset" method="_yxEmoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yCgQcpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yCg3gJFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
                <ownedComment xmi:id="_yzQX8JFCEeuCTslxszDstQ">
                  <body>Removes &lt;var>synset&lt;/var> from the dictionary.
     *
     * @param synset synset to remove
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCgQcZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCg3gZFCEeuCTslxszDstQ" name="addIndexWord" method="_yxFNsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzQX8pFCEeuCTslxszDstQ">
                  <body>Adds index word to the dictionary.
     *
     * @param indexWord index word to add
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yChekJFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yChekZFCEeuCTslxszDstQ" name="removeIndexWord" method="_yxFNspFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yCiFoZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yCiFopFCEeuCTslxszDstQ" key="synchronized"/>
                </eAnnotations>
                <ownedComment xmi:id="_yzQX85FCEeuCTslxszDstQ">
                  <body>Removes &lt;var>indexWord&lt;/var> from the dictionary.
     *
     * @param indexWord index word to remove
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCiFoJFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCissJFCEeuCTslxszDstQ" name="getManageSymmetricPointers" method="_yxF0wJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yQ_YYJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCissZFCEeuCTslxszDstQ" name="getCheckAlienPointers" method="_yxF0wpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yQ_YYZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCjTwJFCEeuCTslxszDstQ" name="getFrames" method="_yxF0xJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzQX9JFCEeuCTslxszDstQ">
                  <body>Returns the frames at the indexes encoded in &lt;var>l&lt;/var>.
     * Verb Frames are encoded within &lt;code>Word&lt;/code>s as a long. Each bit represents
     * the frame at its corresponding index. If the bit is set, that verb
     * frame is valid for the word.
     *
     * @param bits frame flags
     * @return the frames at the indexes encoded in &lt;var>l&lt;/var></body>
                </ownedComment>
                <ownedParameter xmi:id="_yCjTwZFCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yCjTwpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yCjTw5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yCkh4JFCEeuCTslxszDstQ" name="getVerbFrameIndices" isStatic="true" method="_yxGb1pFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzQX9pFCEeuCTslxszDstQ">
                  <body>Returns the verb frame indices for a synset. This is the collection
     * of f_num values for a synset definition. In the case of a synset, this
     * is only the values that are true for all words with the synset. In other
     * words, only the sentence frames that belong to all words.
     *
     * @param bits the bit set
     * @return an integer collection</body>
                </ownedComment>
                <ownedParameter xmi:id="_yCkh4ZFCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yClI8JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yClI8ZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yClwAJFCEeuCTslxszDstQ" name="getRandom" method="_yxHC4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yClwAZFCEeuCTslxszDstQ" type="_rnZOMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCmXEJFCEeuCTslxszDstQ" name="setRandom" method="_yxHC4pFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yCmXEZFCEeuCTslxszDstQ" name="rand" type="_rnZOMJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yCm-IJFCEeuCTslxszDstQ" name="checkEditable" visibility="protected" method="_yxHp8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzQ_AJFCEeuCTslxszDstQ">
                  <body>Checks whether dictionary is editable and throws if not;
     *
     * @throws JWNLException JWNLException</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yCm-IZFCEeuCTslxszDstQ" name="resolveAllPointers" visibility="protected" method="_yxHp8ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzQ_AZFCEeuCTslxszDstQ">
                  <body>Loads all targets in load all pointers and all synsets in all index words.
     *
     * @throws JWNLException JWNLException</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_yCnlMJFCEeuCTslxszDstQ" name="resolvePointers" visibility="protected" method="_yxHp8pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yCnlMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQpaIJFCEeuCTslxszDstQ" name="getFileBackedInstance" isStatic="true" method="_yw-gAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzN7sJFCEeuCTslxszDstQ">
                  <body>Returns FileBackedDictionary instance with default configuration.
     *
     * @param dictionaryPath dictionary path
     * @return FileBackedDictionary instance with default configuration
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQpaIZFCEeuCTslxszDstQ" name="dictionaryPath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQpaIpFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQqoQJFCEeuCTslxszDstQ" name="getMapBackedInstance" isStatic="true" method="_yw-gA5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzN7sZFCEeuCTslxszDstQ">
                  <body>Returns MapBackedDictionary instance with default configuration.
     *
     * @param dictionaryPath dictionary path
     * @return MapBackedDictionary instance with default configuration
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQqoQZFCEeuCTslxszDstQ" name="dictionaryPath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQqoQpFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQr2YJFCEeuCTslxszDstQ" name="getDatabaseBackedInstance" isStatic="true" method="_yw_HEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzN7spFCEeuCTslxszDstQ">
                  <body>Returns DatabaseBackedDictionary instance with default configuration.
     *
     * @param dbURL database url
     * @return DatabaseBackedDictionary instance with default configuration
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQr2YZFCEeuCTslxszDstQ" name="dbURL">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQr2YpFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQsdcJFCEeuCTslxszDstQ" name="getResourceInstance" isStatic="true" method="_yw_HFZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzN7tJFCEeuCTslxszDstQ">
                  <body>Returns Dictionary instance configured from classpath.
     *
     * @param propertiesPath path to properties, for example &quot;/net/sf/extjwnl/data/wordnet/wn31/res_properties.xml&quot;
     * @return Dictionary instance configured from classpath
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQtEgJFCEeuCTslxszDstQ" name="propertiesPath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQtEgZFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQtrkJFCEeuCTslxszDstQ" name="getIndexWordIterator" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzOiwJFCEeuCTslxszDstQ">
                  <body>Returns an Iterator over all the IndexWords of part-of-speech &lt;var>pos&lt;/var>
     * whose lemmas contain &lt;var>substring&lt;/var> as a substring.
     *
     * @param pos       The part-of-speech.
     * @param substring substring
     * @return An iterator over &lt;code>IndexWord&lt;/code>s.
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQtrkZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQtrkpFCEeuCTslxszDstQ" name="substring">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQuSoJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQwu4JFCEeuCTslxszDstQ" name="getIndexWord" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzOiwZFCEeuCTslxszDstQ">
                  <body>Looks up a word. The search is case-independent,
     * and phrases are separated by spaces (&quot;look up&quot;, not &quot;look_up&quot;).
     * Note: this method does not subject &lt;var>lemma&lt;/var> to any
     * morphological processing. If you want this, use {@link #lookupIndexWord(POS, String)}.
     *
     * @param pos   The part-of-speech
     * @param lemma The orthographic representation of the word
     * @return An IndexWord representing the word, or &lt;code>null&lt;/code> if
     * no such entry exists
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQxV8JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQxV8ZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQxV8pFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQzLIJFCEeuCTslxszDstQ" name="getSynsetAt" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzOixJFCEeuCTslxszDstQ">
                  <body>Returns the &lt;code>Synset&lt;/code> at offset &lt;var>offset&lt;/var>.
     *
     * @param pos    The part-of-speech file to look in
     * @param offset The offset of the synset in the file
     * @return A synset containing the parsed line from the database
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQzLIZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQzLIpFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQzyMJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ0ZQJFCEeuCTslxszDstQ" name="getException" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzOixpFCEeuCTslxszDstQ">
                  <body>Looks up &lt;var>derivation&lt;/var> in the exceptions file of part-of-speech &lt;var>
     * pos&lt;/var> and return an Exc object containing the results.
     *
     * @param pos        the exception file to look in
     * @param derivation the word to look up
     * @return the Exc object
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQ0ZQZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQ1AUJFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQ1AUZFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ1nYJFCEeuCTslxszDstQ" name="getWordBySenseKey" method="_yxA8QJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPJ0JFCEeuCTslxszDstQ">
                  <body>Returns a word by specified &lt;var>senseKey&lt;/var> or null if not found.
     *
     * @param senseKey sense key
     * @return a word by specified &lt;var>senseKey&lt;/var> or null if not found
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQ1nYZFCEeuCTslxszDstQ" name="senseKey">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQ1nYpFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ2OcJFCEeuCTslxszDstQ" name="lookupIndexWord" method="_yxA8Q5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPJ0ZFCEeuCTslxszDstQ">
                  <body>Looks up a word &lt;var>lemma&lt;/var>. First tries a normal lookup. If that doesn't work,
     * tries looking up the stemmed form of the lemma.
     *
     * @param pos   the part-of-speech of the word to look up
     * @param lemma the lemma to look up
     * @return the IndexWord found by the lookup procedure, or null
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQ2OcZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQ2OcpFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQ21gJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ3ckJFCEeuCTslxszDstQ" name="lookupAllIndexWords" method="_yxA8R5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPJ0pFCEeuCTslxszDstQ">
                  <body>Returns a set of &lt;code>IndexWord&lt;/code>s, with each element in the set
     * corresponding to a part-of-speech of &lt;var>word&lt;/var>.
     *
     * @param lemma the word for which to lookup senses
     * @return An array of IndexWords, each of which is a sense of &lt;var>word&lt;/var>
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQ3ckZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQ3ckpFCEeuCTslxszDstQ" type="_oKC9kJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ5RwJFCEeuCTslxszDstQ" name="createException" method="_yxCxcpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzPw4pFCEeuCTslxszDstQ">
                  <body>Creates an exception in the dictionary.
     *
     * @param pos        exception part of speech
     * @param lemma      exception lemma
     * @param exceptions list of base forms
     * @return exception object
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQ540JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQ540ZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQ540pFCEeuCTslxszDstQ" name="exceptions" type="_rV_8MJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQ6f4JFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ9jMJFCEeuCTslxszDstQ" name="createIndexWord" method="_yxEmopFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzQX8ZFCEeuCTslxszDstQ">
                  <body>Creates index word.
     *
     * @param pos    part of speech
     * @param lemma  lemma
     * @param synset synset
     * @return index word object
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQ9jMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQ-KQJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQ-KQZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQ-xUJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQ__cJFCEeuCTslxszDstQ" name="getFrames" isStatic="true" method="_yxGb0JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzQX9ZFCEeuCTslxszDstQ">
                  <body>Returns the frames at the indexes encoded in &lt;var>l&lt;/var>.
     * Verb Frames are encoded within &lt;code>Word&lt;/code>s as a long. Each bit represents
     * the frame at its corresponding index. If the bit is set, that verb
     * frame is valid for the word.
     *
     * @param bits       frame flags
     * @param verbFrames frames
     * @return the frames at the indexes encoded in &lt;var>l&lt;/var></body>
                </ownedComment>
                <ownedParameter xmi:id="_yRAmgJFCEeuCTslxszDstQ" name="bits" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yRAmgZFCEeuCTslxszDstQ" name="verbFrames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yRCbsJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRAmgpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yRBNkJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRDp0JFCEeuCTslxszDstQ" name="prepareQueryString" visibility="protected" isStatic="true" method="_yxHC5JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzQX95FCEeuCTslxszDstQ">
                  <body>Prepares the lemma for being used in a lookup operation.
     * Specifically, this method trims whitespace and converts the lemma
     * to lower case.
     *
     * @param lemma the lemma to be prepared
     * @return String the prepared lemma</body>
                </ownedComment>
                <ownedParameter xmi:id="_yREQ4JFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yREQ4ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yRGtIJFCEeuCTslxszDstQ" name="getLocale" visibility="private" isStatic="true" method="_yxI4FJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yRGtIZFCEeuCTslxszDstQ" name="language">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRHUMJFCEeuCTslxszDstQ" name="country">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRH7QJFCEeuCTslxszDstQ" type="_sEDVAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yRIiUJFCEeuCTslxszDstQ" name="getResourceProperties" visibility="private" isStatic="true" method="_yxJfIJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yRIiUZFCEeuCTslxszDstQ" name="resourceName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yRJJYJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yqy_gJFCEeuCTslxszDstQ" name="getInstance" isStatic="true" method="_yw948JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yqy_gZFCEeuCTslxszDstQ" name="properties" type="_yokK5ZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yqzmkJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yq3Q8JFCEeuCTslxszDstQ" name="getParams" visibility="private" method="_yxIRAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yq34AJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yq34AZFCEeuCTslxszDstQ" name="list" type="_yokK45FCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yq4fEJFCEeuCTslxszDstQ" type="_oyrD0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yq4fEZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yq67UJFCEeuCTslxszDstQ" name="getAttribute" visibility="private" isStatic="true" method="_yxI4EJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yq67UZFCEeuCTslxszDstQ" name="node" type="_yokK4ZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yq67UpFCEeuCTslxszDstQ" name="attributeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yq7iYJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yQb-wJFCEeuCTslxszDstQ" name="Version" isLeaf="true">
                <ownedComment xmi:id="_yzNUoJFCEeuCTslxszDstQ">
                  <body>Represents a version of WordNet.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_yuDH0ZFCEeuCTslxszDstQ" name="UNSPECIFIED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuDH0pFCEeuCTslxszDstQ" value="&quot;unspecified&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuDu4JFCEeuCTslxszDstQ" name="publisher" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuEV8ZFCEeuCTslxszDstQ" name="number" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuE9AZFCEeuCTslxszDstQ" name="locale" visibility="private" isLeaf="true" type="_sEDVAJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0NaNJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw6OkJFCEeuCTslxszDstQ" name="Version" specification="_yQebAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yw6OkZFCEeuCTslxszDstQ" name="publisher">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yw6OkpFCEeuCTslxszDstQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yw6Ok5FCEeuCTslxszDstQ" name="locale" type="_sEDVAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yw6OlJFCEeuCTslxszDstQ" type="_yQb-wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (publisher == null) {
             publisher = UNSPECIFIED;
         }
         this.publisher = publisher;
         this.number = number;
         this.locale = locale;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw61oJFCEeuCTslxszDstQ" name="getPublisher" specification="_yQfpIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yw61oZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return publisher;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw7csJFCEeuCTslxszDstQ" name="getNumber" specification="_yQgQMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yw7csZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return number;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw8DwJFCEeuCTslxszDstQ" name="getLocale" specification="_yQg3QZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yw8DwZFCEeuCTslxszDstQ" type="_sEDVAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return locale;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw8DwpFCEeuCTslxszDstQ" name="equals" specification="_yQheUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yw8Dw5FCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yw8DxJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (obj instanceof Version)
                 &amp;&amp; publisher.equals(((Version) obj).publisher)
                 &amp;&amp; number == ((Version) obj).number
                 &amp;&amp; locale.equals(((Version) obj).locale);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw8q0JFCEeuCTslxszDstQ" name="toString" specification="_yQj6kZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yw8q0ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return messages.resolveMessage(&quot;JWNL_TOSTRING_002&quot;, new Object[]{publisher, number, locale});
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw9R4JFCEeuCTslxszDstQ" name="hashCode" specification="_yQmW0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yw9R4ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return publisher.hashCode() ^ (int) (number * 100);
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yQebAJFCEeuCTslxszDstQ" name="Version" method="_yw6OkJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yQfCEJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yQfCEZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yQebAZFCEeuCTslxszDstQ" name="publisher">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yQebApFCEeuCTslxszDstQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yQebA5FCEeuCTslxszDstQ" name="locale" type="_sEDVAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yQfCEpFCEeuCTslxszDstQ" type="_yQb-wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQfpIJFCEeuCTslxszDstQ" name="getPublisher" method="_yw61oJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yQfpIZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yQgQMJFCEeuCTslxszDstQ" name="getNumber" method="_yw7csJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yQg3QJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yQg3QZFCEeuCTslxszDstQ" name="getLocale" method="_yw8DwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yQg3QpFCEeuCTslxszDstQ" type="_sEDVAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQheUJFCEeuCTslxszDstQ" name="equals" method="_yw8DwpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yQheUZFCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yQiFYJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yQj6kZFCEeuCTslxszDstQ" name="toString" method="_yw8q0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yQkhoJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yQmW0JFCEeuCTslxszDstQ" name="hashCode" method="_yw9R4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yQm94JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r76FoJFCEeuCTslxszDstQ" name="E"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sO-yoJFCEeuCTslxszDstQ" name="POS"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_sh3SYJFCEeuCTslxszDstQ" name="" memberEnd="_sh3SYZFCEeuCTslxszDstQ _sNDgAJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sh3SYZFCEeuCTslxszDstQ" name="" type="_oaDvgJFCEeuCTslxszDstQ" association="_sh3SYJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sh5HkJFCEeuCTslxszDstQ" name="" memberEnd="_sh5HkZFCEeuCTslxszDstQ _sNEuIJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sh5HkZFCEeuCTslxszDstQ" name="" type="_oaIA8JFCEeuCTslxszDstQ" association="_sh5HkJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sh68wZFCEeuCTslxszDstQ" name="" memberEnd="_sh68wpFCEeuCTslxszDstQ _sNJmoJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sh68wpFCEeuCTslxszDstQ" name="" type="_oaIA8JFCEeuCTslxszDstQ" association="_sh68wZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sh8x8ZFCEeuCTslxszDstQ" name="" memberEnd="_sh8x8pFCEeuCTslxszDstQ _sNMC4JFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sh8x8pFCEeuCTslxszDstQ" name="" type="_oaDvgJFCEeuCTslxszDstQ" association="_sh8x8ZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sh-nIZFCEeuCTslxszDstQ" name="" memberEnd="_sh-nIpFCEeuCTslxszDstQ _sNgzAJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sh-nIpFCEeuCTslxszDstQ" name="" type="_ob_CIJFCEeuCTslxszDstQ" association="_sh-nIZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_siBDYJFCEeuCTslxszDstQ" name="" memberEnd="_siBDYZFCEeuCTslxszDstQ _sNjPQJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_siBDYZFCEeuCTslxszDstQ" name="" type="_ob_CIJFCEeuCTslxszDstQ" association="_siBDYJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_siC4kZFCEeuCTslxszDstQ" name="" memberEnd="_siC4kpFCEeuCTslxszDstQ _sNpV4JFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_siC4kpFCEeuCTslxszDstQ" name="" type="_ocZ44JFCEeuCTslxszDstQ" association="_siC4kZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_siEtwZFCEeuCTslxszDstQ" name="" memberEnd="_siEtwpFCEeuCTslxszDstQ _sORoAJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_siEtwpFCEeuCTslxszDstQ" name="" type="_oeDesJFCEeuCTslxszDstQ" association="_siEtwZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_siGi8ZFCEeuCTslxszDstQ" name="" memberEnd="_siGi8pFCEeuCTslxszDstQ _sOUEQJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_siGi8pFCEeuCTslxszDstQ" name="" type="_oeDesJFCEeuCTslxszDstQ" association="_siGi8ZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_siIYIJFCEeuCTslxszDstQ" name="" memberEnd="_siIYIZFCEeuCTslxszDstQ _sOXuoJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_siIYIZFCEeuCTslxszDstQ" name="" type="_oeh_0JFCEeuCTslxszDstQ" association="_siIYIJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_siKNUJFCEeuCTslxszDstQ" name="" memberEnd="_siKNUZFCEeuCTslxszDstQ _sOwJIJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_siKNUZFCEeuCTslxszDstQ" name="" type="_ogLloJFCEeuCTslxszDstQ" association="_siKNUJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_siLbcZFCEeuCTslxszDstQ" name="" memberEnd="_siLbcpFCEeuCTslxszDstQ _sOylYJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_siLbcpFCEeuCTslxszDstQ" name="" type="_ogLloJFCEeuCTslxszDstQ" association="_siLbcZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_siN3sJFCEeuCTslxszDstQ" name="" memberEnd="_siN3sZFCEeuCTslxszDstQ _sO4sAJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_siN3sZFCEeuCTslxszDstQ" name="" type="_ogzQsJFCEeuCTslxszDstQ" association="_siN3sJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_siPF0ZFCEeuCTslxszDstQ" name="" memberEnd="_siPF0pFCEeuCTslxszDstQ _sO56IJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_siPF0pFCEeuCTslxszDstQ" name="" type="_ogzQsJFCEeuCTslxszDstQ" association="_siPF0ZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yV6Uo5FCEeuCTslxszDstQ" name="DictionaryEditTester" isAbstract="true">
              <eAnnotations xmi:id="_yV6UpJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yV6UpZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yV6UppFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_yvAxIJFCEeuCTslxszDstQ" name="entityGloss" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvAxIZFCEeuCTslxszDstQ" value="&quot;that which is perceived or known or inferred to have its own distinct existence (living or nonliving)&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvBYMJFCEeuCTslxszDstQ" name="entityLemma" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvBYMZFCEeuCTslxszDstQ" value="&quot;entity&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvB_QJFCEeuCTslxszDstQ" name="physical_entityGloss" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvB_QZFCEeuCTslxszDstQ" value="&quot;an entity that has physical existence&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvCmUJFCEeuCTslxszDstQ" name="physical_entityLemma" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvCmUZFCEeuCTslxszDstQ" value="&quot;physìcal entìty&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvDNYJFCEeuCTslxszDstQ" name="abstractionGloss" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvDNYZFCEeuCTslxszDstQ" value="&quot;a general concept formed by extracting common features from specific examples&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvDNYpFCEeuCTslxszDstQ" name="abstractionWords" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvDNY5FCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvD0cZFCEeuCTslxszDstQ" value="{&quot;abstraction&quot;, &quot;abstract entity&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvEbgJFCEeuCTslxszDstQ" name="exception1" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvEbgZFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvFCkJFCEeuCTslxszDstQ" value="{&quot;alto-relievos&quot;, &quot;alto-relievo&quot;, &quot;alto-rilievo&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvFCkZFCEeuCTslxszDstQ" name="exception2" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvFpoJFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvGQsZFCEeuCTslxszDstQ" value="{&quot;aìdes-de-camp&quot;, &quot;aìde-de-camp&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvG3wJFCEeuCTslxszDstQ" name="exception3" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvG3wZFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvHe0ZFCEeuCTslxszDstQ" value="{&quot;altocumuli&quot;, &quot;altocumulus&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvIF4JFCEeuCTslxszDstQ" name="first" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvIF4ZFCEeuCTslxszDstQ" value="&quot;first&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvIs8JFCEeuCTslxszDstQ" name="second" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvIs8ZFCEeuCTslxszDstQ" value="&quot;second&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvIs8pFCEeuCTslxszDstQ" name="dictionary" visibility="protected" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0QdgZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yvJUAJFCEeuCTslxszDstQ" name="mapDictionary" visibility="private" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0QdhJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyFTQZFCEeuCTslxszDstQ" name="setUp" specification="_yV67s5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary = Dictionary.getInstance(getProperties());
     dictionary.close();
     dictionary.delete();

     dictionary = Dictionary.getInstance(getProperties());
     mapDictionary = Dictionary.getResourceInstance(&quot;/net/sf/extjwnl/dictionary/mem_properties.xml&quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyF6UJFCEeuCTslxszDstQ" name="tearDown" specification="_yV7iwpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.close();
     dictionary.delete();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyF6UZFCEeuCTslxszDstQ" name="testSaveReadOnly" specification="_yV7ixZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.save();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyF6UpFCEeuCTslxszDstQ" name="testAddElementReadOnly" specification="_yV7iyZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.addElement(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyGhYJFCEeuCTslxszDstQ" name="testAddElementAlien" specification="_yV7izZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.addElement(new Synset(dictionary, POS.NOUN));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyGhYZFCEeuCTslxszDstQ" name="testAddElementExc" specification="_yV8J05FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     final Exc exc = new Exc(dictionary, POS.NOUN, &quot;test&quot;, Collections.singletonList(&quot;tests&quot;));
     dictionary.addElement(exc);

     List&lt;Exc> excs = new ArrayList&lt;Exc>(1);
     Iterator&lt;Exc> i = dictionary.getExceptionIterator(POS.NOUN);
     while (i.hasNext()) {
         excs.add(i.next());
     }
     Assert.assertEquals(1, excs.size());
     Assert.assertEquals(exc, excs.get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyHIcJFCEeuCTslxszDstQ" name="testAddElementIndexWord" specification="_yV8J1pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     final Synset s = new Synset(dictionary, POS.NOUN);
     final IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     dictionary.addElement(iw);

     List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>(1);
     Iterator&lt;IndexWord> i = dictionary.getIndexWordIterator(POS.NOUN);
     while (i.hasNext()) {
         indexWords.add(i.next());
     }
     Assert.assertEquals(1, indexWords.size());
     Assert.assertEquals(iw, indexWords.get(0));

     List&lt;Synset> synsets = new ArrayList&lt;Synset>(1);
     Iterator&lt;Synset> ii = dictionary.getSynsetIterator(POS.NOUN);
     while (ii.hasNext()) {
         synsets.add(ii.next());
     }
     Assert.assertEquals(1, synsets.size());
     Assert.assertEquals(s, synsets.get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyHIcZFCEeuCTslxszDstQ" name="testRemoveReadOnly" specification="_yV8J2ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.removeElement(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyHIcpFCEeuCTslxszDstQ" name="testCreateExceptionReadOnly" specification="_yV8J3ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.createException(null, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyHIc5FCEeuCTslxszDstQ" name="testAddExceptionReadOnly" specification="_yV8w45FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.addException(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyHvgJFCEeuCTslxszDstQ" name="testAddExceptionAlien" specification="_yV8w55FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.addException(new Exc(dictionary, POS.NOUN, &quot;test&quot;, Collections.singletonList(&quot;tests&quot;)));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyHvgZFCEeuCTslxszDstQ" name="testRemoveExceptionReadOnly" specification="_yV8w65FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.removeException(new Exc(dictionary, POS.NOUN, &quot;test&quot;, Collections.singletonList(&quot;tests&quot;)));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyHvgpFCEeuCTslxszDstQ" name="testCreateSynsetReadOnly" specification="_yV8w75FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.createSynset(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyHvg5FCEeuCTslxszDstQ" name="testCreateVerbSynset" specification="_yV9X85FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Assert.assertTrue(dictionary.createSynset(POS.VERB) instanceof VerbSynset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyHvhJFCEeuCTslxszDstQ" name="testCreateAdjectiveSynset" specification="_yV9X9pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Assert.assertTrue(dictionary.createSynset(POS.ADJECTIVE) instanceof AdjectiveSynset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyIWkJFCEeuCTslxszDstQ" name="testCreateNounSynset" specification="_yV9X-ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Assert.assertNotNull(dictionary.createSynset(POS.NOUN));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyIWkZFCEeuCTslxszDstQ" name="testAddSynsetReadOnly" specification="_yV9X_JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.addSynset(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyIWkpFCEeuCTslxszDstQ" name="testAddSynsetAlien" specification="_yV9_A5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     mapDictionary.edit();
     Synset synset = new Synset(mapDictionary, POS.NOUN, 100);
     dictionary.addSynset(synset);
     Assert.assertEquals(dictionary, synset.getDictionary());
     Assert.assertEquals(synset, dictionary.getSynsetAt(POS.NOUN, 100));
     Assert.assertNull(mapDictionary.getSynsetAt(POS.NOUN, 100));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyIWk5FCEeuCTslxszDstQ" name="testRemoveSynsetReadOnly" specification="_yV9_BpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.removeSynset(new Synset(dictionary, POS.NOUN));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyIWlJFCEeuCTslxszDstQ" name="testCreateIndexWordReadOnly" specification="_yV9_CpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.createIndexWord(null, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyI9oJFCEeuCTslxszDstQ" name="testAddIndexWordReadOnly" specification="_yV9_DpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.addIndexWord(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyI9oZFCEeuCTslxszDstQ" name="testAddIndexWordAlien" specification="_yV-mE5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.addIndexWord(new IndexWord(mapDictionary, &quot;test&quot;, POS.NOUN, new Synset(mapDictionary, POS.NOUN)));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyI9opFCEeuCTslxszDstQ" name="testRemoveIndexWordReadOnly" specification="_yV-mF5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.removeIndexWord(new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, new Synset(dictionary, POS.NOUN)));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyI9o5FCEeuCTslxszDstQ" name="testEmptyDictionary" specification="_yV-mG5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>for (POS pos : POS.getAllPOS()) {
         Assert.assertFalse(dictionary.getSynsetIterator(pos).hasNext());
         Assert.assertFalse(dictionary.getIndexWordIterator(pos).hasNext());
         Assert.assertFalse(dictionary.getIndexWordIterator(pos, &quot;car&quot;).hasNext());
         Assert.assertFalse(dictionary.getExceptionIterator(pos).hasNext());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyI9pJFCEeuCTslxszDstQ" name="testExceptionsCreate" specification="_yV-mHpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createExceptions(dictionary);
     checkThreeExceptions(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyJksJFCEeuCTslxszDstQ" name="testExceptionsRecreate" specification="_yV_NIpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createExceptions(dictionary);
     saveAndReloadDictionary();
     checkThreeExceptions(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyJksZFCEeuCTslxszDstQ" name="testExceptionsSetNull" specification="_yV_NJZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createExceptions(dictionary);
     checkThreeExceptions(dictionary);

     Exc e3 = dictionary.getException(POS.NOUN, exception3[0]);
     e3.setDictionary(null);
     Assert.assertNull(e3.getDictionary());
     testTwoExceptions(dictionary);
     Assert.assertNull(dictionary.getException(POS.NOUN, exception3[0]));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyJkspFCEeuCTslxszDstQ" name="testExceptionsSetNullRecreate" specification="_yV_NKJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createExceptions(dictionary);
     checkThreeExceptions(dictionary);

     Exc e3 = dictionary.getException(POS.NOUN, exception3[0]);
     e3.setDictionary(null);
     Assert.assertNull(e3.getDictionary());

     saveAndReloadDictionary();
     testTwoExceptions(dictionary);
     Assert.assertNull(dictionary.getException(POS.NOUN, exception3[0]));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyJks5FCEeuCTslxszDstQ" name="testExceptionsRemove" specification="_yV_0MpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createExceptions(dictionary);
     checkThreeExceptions(dictionary);

     Exc e3 = dictionary.getException(POS.NOUN, exception3[0]);
     dictionary.removeException(e3);

     Assert.assertNull(e3.getDictionary());
     testTwoExceptions(dictionary);
     e3 = dictionary.getException(POS.NOUN, exception3[0]);
     Assert.assertNull(e3);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyJktJFCEeuCTslxszDstQ" name="testExceptionsRemoveRecreate" specification="_yV_0NZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createExceptions(dictionary);
     checkThreeExceptions(dictionary);

     Exc e3 = dictionary.getException(POS.NOUN, exception3[0]);
     dictionary.removeException(e3);
     Assert.assertNull(e3.getDictionary());
     testTwoExceptions(dictionary);
     e3 = dictionary.getException(POS.NOUN, exception3[0]);
     Assert.assertNull(e3);

     saveAndReloadDictionary();

     testTwoExceptions(dictionary);
     e3 = dictionary.getException(POS.NOUN, exception3[0]);
     Assert.assertNull(e3);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKLwJFCEeuCTslxszDstQ" name="saveAndReloadDictionary" specification="_yV_0OJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (!(dictionary instanceof MemoryDictionary)) {
         dictionary.save();
         dictionary.close();
         dictionary = Dictionary.getInstance(getProperties());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKLwZFCEeuCTslxszDstQ" name="createExceptions" specification="_yV_0OpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyKLwpFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>dictionary.createException(POS.NOUN, exception1[0], Arrays.asList(exception1[1], exception1[2]));
     dictionary.createException(POS.NOUN, exception2[0], Collections.singletonList(exception2[1]));
     dictionary.createException(POS.NOUN, exception3[0], Collections.singletonList(exception3[1]));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKLw5FCEeuCTslxszDstQ" name="checkThreeExceptions" specification="_yWAbQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyKLxJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>Exc e1 = dictionary.getException(POS.NOUN, exception1[0]);
     Exc e2 = dictionary.getException(POS.NOUN, exception2[0]);
     Exc e3 = dictionary.getException(POS.NOUN, exception3[0]);

     Assert.assertNotNull(e1);
     Assert.assertEquals(exception1[0], e1.getLemma());
     Assert.assertEquals(2, e1.getExceptions().size());
     Assert.assertEquals(exception1[1], e1.getExceptions().get(0));
     Assert.assertEquals(exception1[2], e1.getExceptions().get(1));
     Assert.assertNotNull(e2);
     Assert.assertNotNull(e3);

     List&lt;Exc> exceptions = new ArrayList&lt;Exc>(3);
     Iterator&lt;Exc> ei = dictionary.getExceptionIterator(POS.NOUN);
     while (ei.hasNext()) {
         exceptions.add(ei.next());
     }
     Assert.assertEquals(3, exceptions.size());
     Assert.assertTrue(exceptions.contains(e1));
     Assert.assertTrue(exceptions.contains(e2));
     Assert.assertTrue(exceptions.contains(e3));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKy0JFCEeuCTslxszDstQ" name="testTwoExceptions" specification="_yWAbQ5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyKy0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>Exc e1 = dictionary.getException(POS.NOUN, exception1[0]);
     Exc e2 = dictionary.getException(POS.NOUN, exception2[0]);

     Assert.assertNotNull(e1);
     Assert.assertEquals(exception1[0], e1.getLemma());
     Assert.assertEquals(2, e1.getExceptions().size());
     Assert.assertEquals(exception1[1], e1.getExceptions().get(0));
     Assert.assertEquals(exception1[2], e1.getExceptions().get(1));
     Assert.assertNotNull(e2);

     List&lt;Exc> exceptions = new ArrayList&lt;Exc>(2);
     Iterator&lt;Exc> ei = dictionary.getExceptionIterator(POS.NOUN);
     while (ei.hasNext()) {
         exceptions.add(ei.next());
     }
     Assert.assertEquals(2, exceptions.size());
     Assert.assertTrue(exceptions.contains(e1));
     Assert.assertTrue(exceptions.contains(e2));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKy0pFCEeuCTslxszDstQ" name="testCreateSynset" specification="_yWAbRpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     Synset synEntity = dictionary.createSynset(POS.NOUN);
     Assert.assertNotNull(synEntity);
     Assert.assertEquals(POS.NOUN, synEntity.getPOS());
     Assert.assertTrue(-1 &lt; synEntity.getOffset());
     Assert.assertEquals(0, synEntity.getPointers().size());
     Assert.assertEquals(0, synEntity.getWords().size());

     ArrayList&lt;Synset> synsets = new ArrayList&lt;Synset>();
     Iterator&lt;Synset> si = dictionary.getSynsetIterator(POS.NOUN);
     while (si.hasNext()) {
         synsets.add(si.next());
     }
     Assert.assertEquals(1, synsets.size());
     Assert.assertTrue(synsets.contains(synEntity));

     synEntity.setGloss(entityGloss);
     Assert.assertEquals(entityGloss, synEntity.getGloss());

     int iwCount = 0;
     Iterator&lt;IndexWord> ii = dictionary.getIndexWordIterator(POS.NOUN);
     while (ii.hasNext()) {
         iwCount++;
     }
     Assert.assertEquals(0, iwCount);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKy05FCEeuCTslxszDstQ" name="testCreateSynsetRecreate" specification="_yWAbSZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     Synset synEntity = dictionary.createSynset(POS.NOUN);
     synEntity.setGloss(entityGloss);

     saveAndReloadDictionary();

     ArrayList&lt;Synset> synsets = new ArrayList&lt;Synset>();
     Iterator&lt;Synset> si = dictionary.getSynsetIterator(POS.NOUN);
     while (si.hasNext()) {
         synsets.add(si.next());
     }
     Assert.assertEquals(1, synsets.size());
     Assert.assertTrue(synsets.contains(synEntity));

     synEntity = synsets.get(0);

     Assert.assertNotNull(synEntity);
     Assert.assertEquals(POS.NOUN, synEntity.getPOS());
     Assert.assertTrue(-1 &lt; synEntity.getOffset());
     Assert.assertEquals(0, synEntity.getPointers().size());
     Assert.assertEquals(0, synEntity.getWords().size());
     Assert.assertEquals(entityGloss, synEntity.getGloss());

     int iwCount = 0;
     Iterator&lt;IndexWord> ii = dictionary.getIndexWordIterator(POS.NOUN);
     while (ii.hasNext()) {
         iwCount++;
     }
     Assert.assertEquals(0, iwCount);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKy1JFCEeuCTslxszDstQ" name="testCreateWord" specification="_yWBCUpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     createEntityWord(dictionary);
     checkEntityWord(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKy1ZFCEeuCTslxszDstQ" name="testCreateWordRecreate" specification="_yWBCVZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     createEntityWord(dictionary);
     saveAndReloadDictionary();
     checkEntityWord(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKy1pFCEeuCTslxszDstQ" name="createEntityWord" specification="_yWBpYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyKy15FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>Synset synEntity = dictionary.createSynset(POS.NOUN);
     synEntity.setGloss(entityGloss);
     synEntity.getWords().add(new Word(dictionary, synEntity, entityLemma));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKy2JFCEeuCTslxszDstQ" name="checkEntityWord" specification="_yWBpY5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyKy2ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>IndexWord iwEntity = dictionary.getIndexWord(POS.NOUN, entityLemma);
     Assert.assertNotNull(iwEntity);
     Assert.assertFalse(iwEntity.getSenses().isEmpty());
     Assert.assertEquals(1, iwEntity.getSenses().size());
     Assert.assertEquals(entityLemma, iwEntity.getLemma());
     Assert.assertEquals(POS.NOUN, iwEntity.getPOS());
     Assert.assertNotNull(iwEntity.getSynsetOffsets());
     Assert.assertEquals(1, iwEntity.getSynsetOffsets().length);

     ArrayList&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>();
     Iterator&lt;IndexWord> ii = dictionary.getIndexWordIterator(POS.NOUN);
     while (ii.hasNext()) {
         indexWords.add(ii.next());
     }
     Assert.assertTrue(indexWords.contains(iwEntity));

     Synset synEntity = iwEntity.getSenses().get(0);
     Assert.assertEquals(1, synEntity.getWords().size());
     Assert.assertNotNull(synEntity.getWords().get(0));
     Assert.assertEquals(entityLemma, synEntity.getWords().get(0).getLemma());
     Assert.assertEquals(1, synEntity.getWords().get(0).getIndex());
     Assert.assertEquals(POS.NOUN, synEntity.getWords().get(0).getPOS());
     Assert.assertEquals(synEntity, synEntity.getWords().get(0).getSynset());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKy2pFCEeuCTslxszDstQ" name="createPEntityWord" specification="_yWBpZpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyKy25FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>Synset synPEntity = dictionary.createSynset(POS.NOUN);
     synPEntity.setGloss(physical_entityGloss);
     synPEntity.getWords().add(new Word(dictionary, synPEntity, physical_entityLemma));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyKy3JFCEeuCTslxszDstQ" name="checkPEntityWord" specification="_yWBpaZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyKy3ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>IndexWord iwpEntity = dictionary.getIndexWord(POS.NOUN, physical_entityLemma);
     Assert.assertNotNull(iwpEntity);
     Assert.assertEquals(1, iwpEntity.getSenses().size());
     Assert.assertEquals(physical_entityLemma, iwpEntity.getLemma());
     Assert.assertEquals(POS.NOUN, iwpEntity.getPOS());
     Assert.assertNotNull(iwpEntity.getSynsetOffsets());
     Assert.assertEquals(1, iwpEntity.getSynsetOffsets().length);

     ArrayList&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>();
     Iterator&lt;IndexWord> ii = dictionary.getIndexWordIterator(POS.NOUN);
     while (ii.hasNext()) {
         indexWords.add(ii.next());
     }
     Assert.assertTrue(indexWords.contains(iwpEntity));

     Synset synPEntity = iwpEntity.getSenses().get(0);
     Assert.assertEquals(1, synPEntity.getWords().size());
     Assert.assertNotNull(synPEntity.getWords().get(0));
     Assert.assertEquals(physical_entityLemma, synPEntity.getWords().get(0).getLemma());
     Assert.assertEquals(1, synPEntity.getWords().get(0).getIndex());
     Assert.assertEquals(POS.NOUN, synPEntity.getWords().get(0).getPOS());
     Assert.assertEquals(synPEntity, synPEntity.getWords().get(0).getSynset());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyLZ4JFCEeuCTslxszDstQ" name="testCreatePointer" specification="_yWBpbJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);

     checkEntityWord(dictionary);
     checkPEntityWord(dictionary);
     checkEntityPEntityPointer(dictionary);
     checkIterators(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyLZ4ZFCEeuCTslxszDstQ" name="testCreatePointerRecreate" specification="_yWCQcpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);

     saveAndReloadDictionary();

     checkEntityWord(dictionary);
     checkPEntityWord(dictionary);
     checkEntityPEntityPointer(dictionary);
     checkIterators(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyMA8JFCEeuCTslxszDstQ" name="createEntityPEntityPointer" specification="_yWCQdZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyMA8ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>IndexWord iwEntity = dictionary.getIndexWord(POS.NOUN, entityLemma);
     Synset synEntity = iwEntity.getSenses().get(0);
     IndexWord iwPEntity = dictionary.getIndexWord(POS.NOUN, physical_entityLemma);
     Synset synPEntity = iwPEntity.getSenses().get(0);

     Assert.assertEquals(0, synEntity.getPointers().size());
     Assert.assertEquals(0, synPEntity.getPointers().size());

     synPEntity.getPointers().add(new Pointer(PointerType.HYPERNYM, synPEntity, synEntity));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyMA8pFCEeuCTslxszDstQ" name="checkEntityPEntityPointer" specification="_yWCQeJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyMA85FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>IndexWord iwEntity = dictionary.getIndexWord(POS.NOUN, entityLemma);
     Synset synEntity = iwEntity.getSenses().get(0);
     IndexWord iwPEntity = dictionary.getIndexWord(POS.NOUN, physical_entityLemma);
     Synset synPEntity = iwPEntity.getSenses().get(0);

     //direct pointer
     Assert.assertEquals(1, synPEntity.getPointers().size());
     Assert.assertNotNull(synPEntity.getPointers().get(0));
     Assert.assertEquals(PointerType.HYPERNYM, synPEntity.getPointers().get(0).getType());
     Assert.assertEquals(synPEntity, synPEntity.getPointers().get(0).getSource());
     Assert.assertEquals(synEntity, synPEntity.getPointers().get(0).getTarget());

     //reverse pointer
     Assert.assertEquals(1, synEntity.getPointers().size());
     Assert.assertNotNull(synEntity.getPointers().get(0));
     Assert.assertEquals(PointerType.HYPONYM, synEntity.getPointers().get(0).getType());
     Assert.assertEquals(synEntity, synEntity.getPointers().get(0).getSource());
     Assert.assertEquals(synPEntity, synEntity.getPointers().get(0).getTarget());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyMoAJFCEeuCTslxszDstQ" name="testIndexWordRemove" specification="_yWCQe5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);
     createAbstractionWords(dictionary);
     testAbstractionWords(dictionary);

     IndexWord iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[1]);
     dictionary.removeIndexWord(iwAbstraction);
     iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[1]);
     Assert.assertNull(iwAbstraction);

     iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[0]);
     Synset synAbstraction = iwAbstraction.getSenses().get(0);
     Assert.assertEquals(1, synAbstraction.getWords().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyMoAZFCEeuCTslxszDstQ" name="testIndexWordRemoveRecreate" specification="_yWC3gpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);
     createAbstractionWords(dictionary);
     testAbstractionWords(dictionary);

     IndexWord iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[1]);
     dictionary.removeIndexWord(iwAbstraction);

     saveAndReloadDictionary();

     iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[1]);
     Assert.assertNull(iwAbstraction);
     iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[0]);
     Synset synAbstraction = iwAbstraction.getSenses().get(0);
     Assert.assertEquals(1, synAbstraction.getWords().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyMoApFCEeuCTslxszDstQ" name="testUseCount" specification="_yWC3hZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);
     createAbstractionWords(dictionary);
     saveAndReloadDictionary();
     testAbstractionWords(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyNPEJFCEeuCTslxszDstQ" name="testIndexWordSubstringIterator" specification="_yWC3iJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);
     createAbstractionWords(dictionary);

     Iterator&lt;IndexWord> i = dictionary.getIndexWordIterator(POS.NOUN, &quot;abstract&quot;);
     List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>(2);
     List&lt;String> lemmas = new ArrayList&lt;String>(2);
     while (i.hasNext()) {
         indexWords.add(i.next());
         lemmas.add(indexWords.get(indexWords.size() - 1).getLemma());
     }
     Assert.assertEquals(2, indexWords.size());
     Assert.assertTrue(lemmas.contains(abstractionWords[0]));
     Assert.assertTrue(lemmas.contains(abstractionWords[1]));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyNPEZFCEeuCTslxszDstQ" name="testIndexWordSubstringIteratorRecreate" specification="_yWC3i5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);
     createAbstractionWords(dictionary);

     saveAndReloadDictionary();

     Iterator&lt;IndexWord> i = dictionary.getIndexWordIterator(POS.NOUN, &quot;abstract&quot;);
     List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>(2);
     List&lt;String> lemmas = new ArrayList&lt;String>(2);
     while (i.hasNext()) {
         indexWords.add(i.next());
         lemmas.add(indexWords.get(indexWords.size() - 1).getLemma());
     }
     Assert.assertEquals(2, indexWords.size());
     Assert.assertTrue(lemmas.contains(abstractionWords[0]));
     Assert.assertTrue(lemmas.contains(abstractionWords[1]));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyNPEpFCEeuCTslxszDstQ" name="createAbstractionWords" specification="_yWDekpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyNPE5FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>IndexWord iwEntity = dictionary.getIndexWord(POS.NOUN, entityLemma);
     Synset synEntity = iwEntity.getSenses().get(0);

     Synset synAbstraction = dictionary.createSynset(POS.NOUN);
     synAbstraction.setGloss(abstractionGloss);
     synAbstraction.getPointers().add(new Pointer(PointerType.HYPERNYM, synAbstraction, synEntity));

     for (int i = 0; i &lt; abstractionWords.length; i++) {
         Word word = new Word(dictionary, synAbstraction, abstractionWords[i]);
         word.setUseCount(i + 1);
         synAbstraction.getWords().add(word);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyN2IJFCEeuCTslxszDstQ" name="testAbstractionWords" specification="_yWDelZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyN2IZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>IndexWord iwEntity = dictionary.getIndexWord(POS.NOUN, entityLemma);
     Synset synEntity = iwEntity.getSenses().get(0);

     IndexWord iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[0]);
     Synset synAbstraction = iwAbstraction.getSenses().get(0);
     Assert.assertNotNull(synAbstraction);
     Assert.assertEquals(2, synEntity.getPointers().size());
     Assert.assertEquals(2, synAbstraction.getWords().size());

     IndexWord[] iwAbstractions = new IndexWord[2];
     for (int i = 0; i &lt; abstractionWords.length; i++) {
         iwAbstractions[i] = dictionary.getIndexWord(POS.NOUN, abstractionWords[i]);
         Assert.assertNotNull(iwAbstractions[i]);
         Assert.assertEquals(1, iwAbstractions[i].getSenses().size());
         Assert.assertEquals(synAbstraction, iwAbstractions[i].getSenses().get(0));
         Assert.assertEquals(abstractionWords[i], iwAbstractions[i].getLemma());
         Assert.assertEquals(POS.NOUN, iwAbstractions[i].getPOS());
         Assert.assertNotNull(iwAbstractions[i].getSynsetOffsets());
         Assert.assertEquals(1, iwAbstractions[i].getSynsetOffsets().length);
         Assert.assertEquals(synAbstraction.getOffset(), iwAbstractions[i].getSynsetOffsets()[0]);
     }
     for (int i = 0; i &lt; abstractionWords.length; i++) {
         Word word = synAbstraction.getWords().get(synAbstraction.indexOfWord(abstractionWords[i]));
         Assert.assertEquals(i + 1, word.getUseCount());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyN2IpFCEeuCTslxszDstQ" name="testSynsetRemove" specification="_yWDemJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);
     checkIterators(dictionary);
     createAbstractionWords(dictionary);

     IndexWord iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[0]);
     Synset synAbstraction = iwAbstraction.getSenses().get(0);
     dictionary.removeSynset(synAbstraction);
     testSynsetIterator(dictionary);

     IndexWord iwEntity = dictionary.getIndexWord(POS.NOUN, entityLemma);
     Synset synEntity = iwEntity.getSenses().get(0);
     Assert.assertEquals(1, synEntity.getPointers().size());

     IndexWord[] iwAbstractions = new IndexWord[2];
     for (int i = 0; i &lt; abstractionWords.length; i++) {
         iwAbstractions[i] = dictionary.getIndexWord(POS.NOUN, abstractionWords[i]);
         Assert.assertNull(iwAbstractions[i]);
     }
     testIndexWordIterator(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyOdMJFCEeuCTslxszDstQ" name="testSynsetRemoveRecreate" specification="_yWDem5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);
     checkIterators(dictionary);
     createAbstractionWords(dictionary);

     saveAndReloadDictionary();

     IndexWord iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[0]);
     Synset synAbstraction = iwAbstraction.getSenses().get(0);
     dictionary.edit();
     dictionary.removeSynset(synAbstraction);

     saveAndReloadDictionary();

     testSynsetIterator(dictionary);

     IndexWord iwEntity = dictionary.getIndexWord(POS.NOUN, entityLemma);
     Synset synEntity = iwEntity.getSenses().get(0);
     Assert.assertEquals(1, synEntity.getPointers().size());

     IndexWord[] iwAbstractions = new IndexWord[2];
     for (int i = 0; i &lt; abstractionWords.length; i++) {
         iwAbstractions[i] = dictionary.getIndexWord(POS.NOUN, abstractionWords[i]);
         Assert.assertNull(iwAbstractions[i]);
     }
     testIndexWordIterator(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyOdMZFCEeuCTslxszDstQ" name="checkIterators" specification="_yWDenpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyOdMpFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>testSynsetIterator(dictionary);
     testIndexWordIterator(dictionary);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyOdM5FCEeuCTslxszDstQ" name="testSynsetIterator" specification="_yWEFopFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyOdNJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>List&lt;Synset> synsets = new ArrayList&lt;Synset>();
     Iterator&lt;Synset> si = dictionary.getSynsetIterator(POS.NOUN);
     while (si.hasNext()) {
         synsets.add(si.next());
     }
     Assert.assertEquals(2, synsets.size());
     IndexWord iwEntity = dictionary.getIndexWord(POS.NOUN, entityLemma);
     Synset synEntity = iwEntity.getSenses().get(0);
     Assert.assertTrue(synsets.contains(synEntity));

     IndexWord iwpEntity = dictionary.getIndexWord(POS.NOUN, physical_entityLemma);
     Synset synPEntity = iwpEntity.getSenses().get(0);
     Assert.assertTrue(synsets.contains(synPEntity));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyPEQJFCEeuCTslxszDstQ" name="testIndexWordIterator" specification="_yWEFpZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyPEQZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>();
     Iterator&lt;IndexWord> ii = dictionary.getIndexWordIterator(POS.NOUN);
     while (ii.hasNext()) {
         indexWords.add(ii.next());
     }
     Assert.assertEquals(2, indexWords.size());

     IndexWord iwEntity = dictionary.getIndexWord(POS.NOUN, entityLemma);
     Assert.assertTrue(indexWords.contains(iwEntity));

     IndexWord iwpEntity = dictionary.getIndexWord(POS.NOUN, physical_entityLemma);
     Assert.assertTrue(indexWords.contains(iwpEntity));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyPEQpFCEeuCTslxszDstQ" name="testWordRemove" specification="_yWEFqJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);
     createAbstractionWords(dictionary);
     testAbstractionWords(dictionary);

     IndexWord iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[0]);
     Synset synAbstraction = iwAbstraction.getSenses().get(0);
     Assert.assertEquals(2, synAbstraction.getWords().size());

     synAbstraction.getWords().remove(0);
     Assert.assertEquals(1, synAbstraction.getWords().size());

     iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[0]);
     Assert.assertNull(iwAbstraction);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyPrUJFCEeuCTslxszDstQ" name="testWordRemoveRecreate" specification="_yWEFq5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     createEntityWord(dictionary);
     createPEntityWord(dictionary);
     createEntityPEntityPointer(dictionary);
     createAbstractionWords(dictionary);
     testAbstractionWords(dictionary);

     IndexWord iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[0]);
     Synset synAbstraction = iwAbstraction.getSenses().get(0);
     Assert.assertEquals(2, synAbstraction.getWords().size());

     synAbstraction.getWords().remove(0);
     Assert.assertEquals(1, synAbstraction.getWords().size());

     saveAndReloadDictionary();

     iwAbstraction = dictionary.getIndexWord(POS.NOUN, abstractionWords[0]);
     Assert.assertNull(iwAbstraction);

     IndexWord iwAbstractEntity = dictionary.getIndexWord(POS.NOUN, abstractionWords[1]);
     Assert.assertNotNull(iwAbstractEntity);
     Assert.assertEquals(1, iwAbstractEntity.getSenses().size());
     Assert.assertTrue(iwAbstractEntity.getSenses().contains(synAbstraction));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyPrUZFCEeuCTslxszDstQ" name="testSynsetOffsetsIncrease" specification="_yWEssZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     Synset s1 = dictionary.createSynset(POS.NOUN);
     s1.setGloss(&quot;first gloss&quot;);
     s1.getWords().add(new Word(dictionary, s1, &quot;first&quot;));
     long o1 = s1.getOffset();

     saveAndReloadDictionary();
     dictionary.edit();

     Synset s2 = dictionary.createSynset(POS.NOUN);
     s2.getWords().add(new Word(dictionary, s2, &quot;second&quot;));
     s2.setGloss(&quot;second gloss&quot;);
     long o2 = s2.getOffset();

     Assert.assertTrue(o1 &lt; o2);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyPrUpFCEeuCTslxszDstQ" name="testCounts" specification="_yWEstJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     Synset s1 = dictionary.createSynset(POS.NOUN);
     s1.setGloss(first + &quot; gloss&quot;);
     final Word w1 = new Word(dictionary, s1, first);
     w1.setUseCount(1);
     s1.getWords().add(w1);

     Synset s2 = dictionary.createSynset(POS.NOUN);
     s2.setGloss(second + &quot; gloss&quot;);
     final Word w2 = new Word(dictionary, s2, second);
     w2.setUseCount(2);
     s2.getWords().add(w2);

     saveAndReloadDictionary();

     IndexWord f = dictionary.getIndexWord(POS.NOUN, first);
     Assert.assertNotNull(f);
     Assert.assertEquals(1, f.getSenses().size());
     s1 = f.getSenses().get(0);
     Assert.assertNotNull(s1);
     Assert.assertEquals(1, s1.getWords().size());
     Assert.assertEquals(1, s1.getWords().get(0).getUseCount());

     IndexWord s = dictionary.getIndexWord(POS.NOUN, second);
     Assert.assertNotNull(s);
     Assert.assertEquals(1, s.getSenses().size());
     s2 = s.getSenses().get(0);
     Assert.assertNotNull(s2);
     Assert.assertEquals(1, s2.getWords().size());
     Assert.assertEquals(2, s2.getWords().get(0).getUseCount());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yV67sJFCEeuCTslxszDstQ" name="getProperties" visibility="protected" isAbstract="true">
                <ownedParameter xmi:id="_yV67sZFCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yV67s5FCEeuCTslxszDstQ" name="setUp" method="_yyFTQZFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV7iwpFCEeuCTslxszDstQ" name="tearDown" method="_yyF6UJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV7ixZFCEeuCTslxszDstQ" name="testSaveReadOnly" method="_yyF6UZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV7iyZFCEeuCTslxszDstQ" name="testAddElementReadOnly" method="_yyF6UpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV7izZFCEeuCTslxszDstQ" name="testAddElementAlien" method="_yyGhYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV8J05FCEeuCTslxszDstQ" name="testAddElementExc" method="_yyGhYZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV8J1pFCEeuCTslxszDstQ" name="testAddElementIndexWord" method="_yyHIcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV8J2ZFCEeuCTslxszDstQ" name="testRemoveReadOnly" method="_yyHIcZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV8J3ZFCEeuCTslxszDstQ" name="testCreateExceptionReadOnly" method="_yyHIcpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV8w45FCEeuCTslxszDstQ" name="testAddExceptionReadOnly" method="_yyHIc5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV8w55FCEeuCTslxszDstQ" name="testAddExceptionAlien" method="_yyHvgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV8w65FCEeuCTslxszDstQ" name="testRemoveExceptionReadOnly" method="_yyHvgZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV8w75FCEeuCTslxszDstQ" name="testCreateSynsetReadOnly" method="_yyHvgpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV9X85FCEeuCTslxszDstQ" name="testCreateVerbSynset" method="_yyHvg5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV9X9pFCEeuCTslxszDstQ" name="testCreateAdjectiveSynset" method="_yyHvhJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV9X-ZFCEeuCTslxszDstQ" name="testCreateNounSynset" method="_yyIWkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV9X_JFCEeuCTslxszDstQ" name="testAddSynsetReadOnly" method="_yyIWkZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV9_A5FCEeuCTslxszDstQ" name="testAddSynsetAlien" method="_yyIWkpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV9_BpFCEeuCTslxszDstQ" name="testRemoveSynsetReadOnly" method="_yyIWk5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV9_CpFCEeuCTslxszDstQ" name="testCreateIndexWordReadOnly" method="_yyIWlJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV9_DpFCEeuCTslxszDstQ" name="testAddIndexWordReadOnly" method="_yyI9oJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV-mE5FCEeuCTslxszDstQ" name="testAddIndexWordAlien" method="_yyI9oZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV-mF5FCEeuCTslxszDstQ" name="testRemoveIndexWordReadOnly" method="_yyI9opFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV-mG5FCEeuCTslxszDstQ" name="testEmptyDictionary" method="_yyI9o5FCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV-mHpFCEeuCTslxszDstQ" name="testExceptionsCreate" method="_yyI9pJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _yowYIpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV_NIpFCEeuCTslxszDstQ" name="testExceptionsRecreate" method="_yyJksJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV_NJZFCEeuCTslxszDstQ" name="testExceptionsSetNull" method="_yyJksZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV_NKJFCEeuCTslxszDstQ" name="testExceptionsSetNullRecreate" method="_yyJkspFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _yowYIpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV_0MpFCEeuCTslxszDstQ" name="testExceptionsRemove" method="_yyJks5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV_0NZFCEeuCTslxszDstQ" name="testExceptionsRemoveRecreate" method="_yyJktJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV_0OJFCEeuCTslxszDstQ" name="saveAndReloadDictionary" visibility="private" method="_yyKLwJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _yowYIpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yV_0OpFCEeuCTslxszDstQ" name="createExceptions" visibility="private" method="_yyKLwZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yV_0O5FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWAbQJFCEeuCTslxszDstQ" name="checkThreeExceptions" visibility="private" method="_yyKLw5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWAbQZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWAbQ5FCEeuCTslxszDstQ" name="testTwoExceptions" visibility="private" method="_yyKy0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWAbRJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWAbRpFCEeuCTslxszDstQ" name="testCreateSynset" method="_yyKy0pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWAbSZFCEeuCTslxszDstQ" name="testCreateSynsetRecreate" method="_yyKy05FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _yowYIpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWBCUpFCEeuCTslxszDstQ" name="testCreateWord" method="_yyKy1JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWBCVZFCEeuCTslxszDstQ" name="testCreateWordRecreate" method="_yyKy1ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _yowYIpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWBpYJFCEeuCTslxszDstQ" name="createEntityWord" visibility="private" method="_yyKy1pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWBpYZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWBpY5FCEeuCTslxszDstQ" name="checkEntityWord" visibility="private" method="_yyKy2JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWBpZJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWBpZpFCEeuCTslxszDstQ" name="createPEntityWord" visibility="private" method="_yyKy2pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWBpZ5FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWBpaZFCEeuCTslxszDstQ" name="checkPEntityWord" visibility="private" method="_yyKy3JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWBpapFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWBpbJFCEeuCTslxszDstQ" name="testCreatePointer" method="_yyLZ4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWCQcpFCEeuCTslxszDstQ" name="testCreatePointerRecreate" method="_yyLZ4ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _yowYIpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWCQdZFCEeuCTslxszDstQ" name="createEntityPEntityPointer" visibility="private" method="_yyMA8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWCQdpFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWCQeJFCEeuCTslxszDstQ" name="checkEntityPEntityPointer" visibility="private" method="_yyMA8pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWCQeZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWCQe5FCEeuCTslxszDstQ" name="testIndexWordRemove" method="_yyMoAJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWC3gpFCEeuCTslxszDstQ" name="testIndexWordRemoveRecreate" method="_yyMoAZFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWC3hZFCEeuCTslxszDstQ" name="testUseCount" method="_yyMoApFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWC3iJFCEeuCTslxszDstQ" name="testIndexWordSubstringIterator" method="_yyNPEJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWC3i5FCEeuCTslxszDstQ" name="testIndexWordSubstringIteratorRecreate" method="_yyNPEZFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWDekpFCEeuCTslxszDstQ" name="createAbstractionWords" visibility="private" method="_yyNPEpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWDek5FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWDelZFCEeuCTslxszDstQ" name="testAbstractionWords" visibility="private" method="_yyN2IJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWDelpFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWDemJFCEeuCTslxszDstQ" name="testSynsetRemove" method="_yyN2IpFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWDem5FCEeuCTslxszDstQ" name="testSynsetRemoveRecreate" method="_yyOdMJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWDenpFCEeuCTslxszDstQ" name="checkIterators" visibility="private" method="_yyOdMZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWEFoJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWEFopFCEeuCTslxszDstQ" name="testSynsetIterator" visibility="private" method="_yyOdM5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWEFo5FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWEFpZFCEeuCTslxszDstQ" name="testIndexWordIterator" visibility="private" method="_yyPEQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWEFppFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWEFqJFCEeuCTslxszDstQ" name="testWordRemove" method="_yyPEQpFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWEFq5FCEeuCTslxszDstQ" name="testWordRemoveRecreate" method="_yyPrUJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWEssZFCEeuCTslxszDstQ" name="testSynsetOffsetsIncrease" method="_yyPrUZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _yowYIpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWEstJFCEeuCTslxszDstQ" name="testCounts" method="_yyPrUpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _yowYIpFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWHwAJFCEeuCTslxszDstQ" name="DictionaryReadTester">
              <eAnnotations xmi:id="_yWHwAZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWHwApFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWHwA5FCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_yvOzkJFCEeuCTslxszDstQ" name="wn21TankOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvOzkZFCEeuCTslxszDstQ" value="4337089"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvPaoJFCEeuCTslxszDstQ" name="wn30TankOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvPaoZFCEeuCTslxszDstQ" value="4389033"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvQBsJFCEeuCTslxszDstQ" name="wn31TankOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvQBsZFCEeuCTslxszDstQ" value="4396120"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvQowJFCEeuCTslxszDstQ" name="wn21VerbOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvQowZFCEeuCTslxszDstQ" value="479055"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvRP0JFCEeuCTslxszDstQ" name="wn30VerbOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvRP0ZFCEeuCTslxszDstQ" value="484166"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvR24JFCEeuCTslxszDstQ" name="wn31VerbOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvR24ZFCEeuCTslxszDstQ" value="485097"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvSd8JFCEeuCTslxszDstQ" name="wn21BrightOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvSd8ZFCEeuCTslxszDstQ" value="301258"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvTFAJFCEeuCTslxszDstQ" name="wn30BrightOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvTFAZFCEeuCTslxszDstQ" value="278551"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvTsEJFCEeuCTslxszDstQ" name="wn31BrightOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvTsEZFCEeuCTslxszDstQ" value="279417"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvUTIJFCEeuCTslxszDstQ" name="wn21DissilientOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvUTIZFCEeuCTslxszDstQ" value="3681"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvUTIpFCEeuCTslxszDstQ" name="wn30DissilientOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvU6MJFCEeuCTslxszDstQ" value="3700"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvVhQJFCEeuCTslxszDstQ" name="wn31DissilientOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvVhQZFCEeuCTslxszDstQ" value="3699"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvWIUJFCEeuCTslxszDstQ" name="wn21BrightAdvOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvWIUZFCEeuCTslxszDstQ" value="77569"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvWvYJFCEeuCTslxszDstQ" name="wn30BrightAdvOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvWvYZFCEeuCTslxszDstQ" value="77168"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvXWcJFCEeuCTslxszDstQ" name="wn31BrightAdvOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvXWcZFCEeuCTslxszDstQ" value="77434"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvX9gJFCEeuCTslxszDstQ" name="verbOffsets" visibility="protected" isLeaf="true" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvX9gZFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvX9gpFCEeuCTslxszDstQ" value="Arrays.asList(wn21VerbOffset, wn30VerbOffset, wn31VerbOffset)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvX9g5FCEeuCTslxszDstQ" name="nounOffsets" visibility="protected" isLeaf="true" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvYkkJFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvYkkZFCEeuCTslxszDstQ" value="Arrays.asList(wn21TankOffset, wn30TankOffset, wn31TankOffset)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvZLoJFCEeuCTslxszDstQ" name="adjOffsets" visibility="protected" isLeaf="true" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvZLoZFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvZLopFCEeuCTslxszDstQ" value="Arrays.asList(wn21BrightOffset, wn30BrightOffset, wn31BrightOffset)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvZysJFCEeuCTslxszDstQ" name="adjSOffsets" visibility="protected" isLeaf="true" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvZysZFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvaZwJFCEeuCTslxszDstQ" value="Arrays.asList(wn21DissilientOffset, wn30DissilientOffset, wn31DissilientOffset)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvaZwZFCEeuCTslxszDstQ" name="advOffsets" visibility="protected" isLeaf="true" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvbA0JFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvbA0ZFCEeuCTslxszDstQ" value="Arrays.asList(wn21BrightAdvOffset, wn30BrightAdvOffset, wn31BrightAdvOffset)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvbA0pFCEeuCTslxszDstQ" name="glossDefinition" visibility="package" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvbn4JFCEeuCTslxszDstQ" value="&quot;an enclosed armored military vehicle; has a cannon and moves on caterpillar treads&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvbn4ZFCEeuCTslxszDstQ" name="lemmas" visibility="protected" isLeaf="true" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvcO8JFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvcO8ZFCEeuCTslxszDstQ" value="Arrays.asList(&quot;tank&quot;, &quot;army tank&quot;, &quot;armored combat vehicle&quot;, &quot;armoured combat vehicle&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvcO8pFCEeuCTslxszDstQ" name="adjLemmas" visibility="protected" isLeaf="true" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvc2AJFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvddEJFCEeuCTslxszDstQ" value="Arrays.asList(&quot;bright&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvddEZFCEeuCTslxszDstQ" name="advLemmas" visibility="protected" isLeaf="true" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvddEpFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yveEIJFCEeuCTslxszDstQ" value="Arrays.asList(&quot;brilliantly&quot;, &quot;brightly&quot;, &quot;bright&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yveEIZFCEeuCTslxszDstQ" name="exceptions" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yveEIpFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvfSQJFCEeuCTslxszDstQ" value="{&quot;bicennaries&quot;, &quot;bicentenary&quot;, &quot;bicentennial&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvggYJFCEeuCTslxszDstQ" name="iteratorLemma" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvggYZFCEeuCTslxszDstQ" value="&quot;stop&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvhHcJFCEeuCTslxszDstQ" name="iteratorSpacedLemma" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvhHcZFCEeuCTslxszDstQ" value="&quot;zoom in&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yviVkJFCEeuCTslxszDstQ" name="s_dictionary" visibility="protected" isStatic="true" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0REkZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yvi8oJFCEeuCTslxszDstQ" name="dictionary" visibility="protected" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0RElJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yySHkJFCEeuCTslxszDstQ" name="setup" specification="_yWI-IJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (null != s_dictionary) {
         dictionary = s_dictionary;
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yySHkZFCEeuCTslxszDstQ" name="DictionaryReadTester" specification="_yWI-J5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yySuoJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yySuoZFCEeuCTslxszDstQ" type="_yWHwAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.dictionary = dictionary;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yySuopFCEeuCTslxszDstQ" name="testTank" specification="_yWJlMZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iw = dictionary.getIndexWord(POS.NOUN, &quot;tank&quot;);
     Assert.assertNotNull(&quot;IndexWord loaded&quot;, iw);
     Synset synset = null;
     for (Synset s : iw.getSenses()) {
         if (nounOffsets.contains(s.getOffset())) {
             synset = s;
             break;
         }
     }
     Assert.assertNotNull(&quot;Synset search&quot;, synset);
     Assert.assertEquals(&quot;Pointer testing&quot;, 7, synset.getPointers().size());
     Assert.assertEquals(&quot;Synset gloss test&quot;, glossDefinition, synset.getGloss());
     for (Word w : synset.getWords()) {
         Assert.assertTrue(&quot;Synset word loading: &quot; + w.getLemma(), lemmas.contains(w.getLemma()));
     }
     Assert.assertEquals(&quot;Use count testing&quot;, 7, synset.getWords().get(0).getUseCount());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyTVsJFCEeuCTslxszDstQ" name="testBrightAdj" specification="_yWJlNJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iw = dictionary.getIndexWord(POS.ADJECTIVE, &quot;bright&quot;);
     Assert.assertNotNull(&quot;IndexWord loaded&quot;, iw);
     Synset synset = null;
     for (Synset s : iw.getSenses()) {
         if (adjOffsets.contains(s.getOffset())) {
             synset = s;
             break;
         }
     }

     Assert.assertNotNull(&quot;Synset search&quot;, synset);
     Assert.assertEquals(&quot;Pointer testing&quot;, 22, synset.getPointers().size());
     for (Word w : synset.getWords()) {
         Assert.assertTrue(&quot;Synset word loading: &quot; + w.getLemma(), adjLemmas.contains(w.getLemma()));
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyTVsZFCEeuCTslxszDstQ" name="testRedAdj" specification="_yWJlN5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iw = dictionary.getIndexWord(POS.ADJECTIVE, &quot;red&quot;);
     Assert.assertNotNull(&quot;IndexWord loaded&quot;, iw);
     Synset synset = iw.getSenses().get(0);
     Word word = synset.getWords().get(0);
     Assert.assertEquals(&quot;Use count testing&quot;, 43, word.getUseCount());
     Assert.assertEquals(&quot;Sense key testing&quot;, &quot;red%5:00:01:chromatic:00&quot;, word.getSenseKeyWithAdjClass());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyTVspFCEeuCTslxszDstQ" name="testDissilientAdjS" specification="_yWJlOpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iw = dictionary.getIndexWord(POS.ADJECTIVE, &quot;dissilient&quot;);
     Assert.assertNotNull(&quot;IndexWord loaded&quot;, iw);
     Synset synset = null;
     for (Synset s : iw.getSenses()) {
         if (adjSOffsets.contains(s.getOffset())) {
             synset = s;
             break;
         }
     }

     Assert.assertNotNull(&quot;Synset search&quot;, synset);
     Assert.assertEquals(&quot;Pointer testing&quot;, 2, synset.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyT8wJFCEeuCTslxszDstQ" name="testBrightAdv" specification="_yWJlPZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iw = dictionary.getIndexWord(POS.ADVERB, &quot;bright&quot;);
     Assert.assertNotNull(&quot;IndexWord loaded&quot;, iw);
     Synset synset = null;
     for (Synset s : iw.getSenses()) {
         if (advOffsets.contains(s.getOffset())) {
             synset = s;
             break;
         }
     }

     Assert.assertNotNull(&quot;Synset search&quot;, synset);
     Assert.assertEquals(&quot;Pointer testing&quot;, 2, synset.getPointers().size());
     for (Word w : synset.getWords()) {
         Assert.assertTrue(&quot;Synset word loading: &quot; + w.getLemma(), advLemmas.contains(w.getLemma()));
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyT8wZFCEeuCTslxszDstQ" name="testRandomIndexWord" specification="_yWKMQpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNotNull(dictionary.getRandomIndexWord(POS.NOUN));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyT8wpFCEeuCTslxszDstQ" name="testComplete" specification="_yWKMRZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iw = dictionary.getIndexWord(POS.VERB, &quot;complete&quot;);
     Assert.assertNotNull(&quot;IndexWord loaded&quot;, iw);
     Synset synset = null;
     for (Synset s : iw.getSenses()) {
         if (verbOffsets.contains(s.getOffset())) {
             synset = s;
             break;
         }
     }
     Assert.assertNotNull(&quot;Synset search&quot;, synset);
     Assert.assertEquals(&quot;Words testing&quot;, 2, synset.getWords().size());
     final Word word = synset.getWords().get(0);
     Assert.assertEquals(&quot;Use count testing&quot;, 52, word.getUseCount());
     int[] indices = synset.getVerbFrameIndices();
     Assert.assertNotNull(indices);
     Assert.assertEquals(&quot;Verb synset frame size test&quot;, 2, indices.length);
     Assert.assertEquals(&quot;Verb synset frame test&quot;, 2, indices[0]);
     Assert.assertEquals(&quot;Verb synset frame test&quot;, 33, indices[1]);
     Assert.assertTrue(synset.getVerbFrameFlags().get(2));
     Assert.assertTrue(synset.getVerbFrameFlags().get(33));
     Assert.assertEquals(2, synset.getVerbFrames().length);

     Assert.assertTrue(word instanceof Verb);
     Verb v = (Verb) word;
     Assert.assertEquals(4, v.getVerbFrameIndices().length);
     Assert.assertEquals(4, v.getVerbFrames().length);
     Assert.assertNotNull(v.toString());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyUj0JFCEeuCTslxszDstQ" name="testCycles" specification="_yWKMSJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord index = dictionary.lookupIndexWord(POS.VERB, &quot;contain&quot;);
     List&lt;Synset> senses = index.getSenses();
     Assert.assertTrue(2 &lt; senses.size());
     PointerUtils.getHypernymTree(senses.get(2));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyUj0ZFCEeuCTslxszDstQ" name="testLexFileNumber" specification="_yWKMS5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iwU = dictionary.getIndexWord(POS.ADJECTIVE, &quot;ugly&quot;);
     Assert.assertNotNull(iwU);
     Assert.assertTrue(1 &lt; iwU.getSenses().size());
     for (Synset synset : iwU.getSenses()) {
         Assert.assertEquals(0, synset.getLexFileNum());
         Assert.assertEquals(&quot;adj.all&quot;, synset.getLexFileName());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyVK4JFCEeuCTslxszDstQ" name="getSynsetBySenseKey" specification="_yWKzUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyVK4ZFCEeuCTslxszDstQ" name="senseKey">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyVK4pFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return dictionary.getWordBySenseKey(senseKey).getSynset();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyVK45FCEeuCTslxszDstQ" name="testAntonym" specification="_yWKzVJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset sB = getSynsetBySenseKey(&quot;beautiful%3:00:00::&quot;);
     Synset sU = getSynsetBySenseKey(&quot;ugly%3:00:00::&quot;);

     RelationshipList list = RelationshipFinder.findRelationships(sB, sU, PointerType.ANTONYM);
     Assert.assertNotNull(list);
     Assert.assertTrue(0 &lt; list.size());
     Assert.assertEquals(PointerType.ANTONYM, list.get(0).getType());
     Assert.assertEquals(sB, list.get(0).getSourceSynset());
     Assert.assertEquals(sU, list.get(0).getTargetSynset());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyVK5JFCEeuCTslxszDstQ" name="testExceptions" specification="_yWKzV5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Exc e = dictionary.getException(POS.NOUN, exceptions[0]);
     Assert.assertNotNull(e);
     Assert.assertEquals(POS.NOUN, e.getPOS());
     Assert.assertEquals(exceptions[0], e.getLemma());
     Assert.assertEquals(2, e.getExceptions().size());
     Assert.assertEquals(exceptions[1], e.getExceptions().get(0));
     Assert.assertEquals(exceptions[2], e.getExceptions().get(1));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyVx8JFCEeuCTslxszDstQ" name="testDerivedForms" specification="_yWKzWpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset sB = getSynsetBySenseKey(&quot;inventor%1:18:00::&quot;);
     Synset sU = getSynsetBySenseKey(&quot;invent%2:36:00::&quot;);

     RelationshipList list = RelationshipFinder.findRelationships(sU, sB, PointerType.DERIVATION);
     Assert.assertNotNull(list);
     Assert.assertEquals(1, list.size());
     Assert.assertEquals(PointerType.DERIVATION, list.get(0).getType());
     Assert.assertEquals(sU.getOffset(), list.get(0).getSourceSynset().getOffset());
     Assert.assertEquals(sB.getOffset(), list.get(0).getTargetSynset().getOffset());

     sB = getSynsetBySenseKey(&quot;adduct%2:35:00::&quot;);
     sU = getSynsetBySenseKey(&quot;adducent%3:00:00::&quot;);

     list = RelationshipFinder.findRelationships(sU, sB, PointerType.DERIVATION);
     Assert.assertNotNull(list);
     Assert.assertEquals(1, list.size());
     Assert.assertEquals(PointerType.DERIVATION, list.get(0).getType());
     Assert.assertEquals(sU.getOffset(), list.get(0).getSourceSynset().getOffset());
     Assert.assertEquals(sB.getOffset(), list.get(0).getTargetSynset().getOffset());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyWZAJFCEeuCTslxszDstQ" name="testRunningAway" specification="_yWLaYpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iw = dictionary.lookupIndexWord(POS.VERB, &quot;running-away&quot;);
     Assert.assertNotNull(iw);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyWZAZFCEeuCTslxszDstQ" name="testFairSenseKey" specification="_yWLaZZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset synset = getSynsetBySenseKey(&quot;fair%5:00:00:feminine:01&quot;);
     Assert.assertNotNull(synset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyWZApFCEeuCTslxszDstQ" name="testOnline" specification="_yWLaaJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWordSet iws = dictionary.lookupAllIndexWords(&quot;on-line&quot;);
     Assert.assertNotNull(iws);
     Assert.assertTrue(0 &lt; iws.size());
     IndexWord word = dictionary.lookupIndexWord(POS.ADJECTIVE, &quot;on-line&quot;);
     Assert.assertNotNull(word);
     iws = dictionary.lookupAllIndexWords(&quot;online&quot;);
     Assert.assertNotNull(iws);
     Assert.assertTrue(0 &lt; iws.size());
     word = dictionary.lookupIndexWord(POS.ADJECTIVE, &quot;online&quot;);
     Assert.assertNotNull(word);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyWZA5FCEeuCTslxszDstQ" name="testVerbFrames" specification="_yWLaa5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset synset = getSynsetBySenseKey(&quot;complete%2:30:02::&quot;);
     Assert.assertNotNull(synset);
     Assert.assertEquals(2, synset.getVerbFrameFlags().cardinality());
     Assert.assertTrue(synset.getVerbFrameFlags().get(2));
     Assert.assertTrue(synset.getVerbFrameFlags().get(33));
     Word w = dictionary.getWordBySenseKey(&quot;complete%2:30:02::&quot;);
     Assert.assertTrue(w instanceof Verb);
     Verb v = (Verb) w;
     Assert.assertTrue(v.getVerbFrameFlags().get(8));
     Assert.assertTrue(v.getVerbFrameFlags().get(11));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyXAEJFCEeuCTslxszDstQ" name="testNonExistentIndexWordIterator" specification="_yWMBcpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Iterator&lt;IndexWord> it = dictionary.getIndexWordIterator(POS.VERB, &quot;??????????????&quot;);
     Assert.assertNotNull(it);
     int count = 0;
     while (it.hasNext()) {
         it.next();
         count++;
     }
     Assert.assertEquals(0, count);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyXAEZFCEeuCTslxszDstQ" name="testIndexWordIterator" specification="_yWMBdZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Iterator&lt;IndexWord> it = dictionary.getIndexWordIterator(POS.VERB, iteratorLemma);
     Assert.assertNotNull(it);
     int count = 0;
     while (it.hasNext()) {
         IndexWord iw = it.next();
         Assert.assertTrue(iw.getLemma().contains(iteratorLemma));
         count++;
     }
     Assert.assertEquals(9, count);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyXAEpFCEeuCTslxszDstQ" name="testSpacedIndexWordIterator" specification="_yWMBeJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Iterator&lt;IndexWord> it = dictionary.getIndexWordIterator(POS.VERB, iteratorSpacedLemma);
     Assert.assertNotNull(it);
     int count = 0;
     while (it.hasNext()) {
         IndexWord iw = it.next();
         Assert.assertTrue(iw.getLemma().contains(iteratorSpacedLemma));
         count++;
     }
     Assert.assertEquals(1, count);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyXAE5FCEeuCTslxszDstQ" name="testMorphoLookupBaseFormNull" specification="_yWMBe5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNull(dictionary.getMorphologicalProcessor().lookupBaseForm(null, null));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyXAFJFCEeuCTslxszDstQ" name="testMorphoLookupBaseForm" specification="_yWMogpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iw = dictionary.getMorphologicalProcessor().lookupBaseForm(POS.NOUN, &quot;copies&quot;);
     Assert.assertNotNull(iw);
     Assert.assertEquals(&quot;copy&quot;, iw.getLemma());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyXnIJFCEeuCTslxszDstQ" name="testMorphoLookupAllBaseFormsNull" specification="_yWMohZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(0, dictionary.getMorphologicalProcessor().lookupAllBaseForms(null, null).size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyXnIZFCEeuCTslxszDstQ" name="testMorphoLookupAllBaseForms" specification="_yWMoiJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>List&lt;String> baseForms = dictionary.getMorphologicalProcessor().lookupAllBaseForms(POS.NOUN, &quot;copies&quot;);
     Assert.assertNotNull(baseForms);
     Assert.assertEquals(1, baseForms.size());
     Assert.assertTrue(baseForms.contains(&quot;copy&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyXnIpFCEeuCTslxszDstQ" name="testExceptionIterator" specification="_yWMoi5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Iterator&lt;Exc> i = dictionary.getExceptionIterator(POS.NOUN);
     Assert.assertNotNull(i);
     Assert.assertTrue(i.hasNext());
     Exc e = i.next();
     Assert.assertNotNull(e);
     Assert.assertNotNull(e.getLemma());
     Assert.assertNotNull(e.getExceptions());
     Assert.assertTrue(0 &lt; e.getExceptions().size());
     Assert.assertEquals(POS.NOUN, e.getPOS());
     Assert.assertEquals(DictionaryElementType.EXCEPTION, e.getType());

     e = i.next();
     Assert.assertNotNull(e);
     Assert.assertNotNull(e.getLemma());
     Assert.assertNotNull(e.getExceptions());
     Assert.assertTrue(0 &lt; e.getExceptions().size());
     Assert.assertEquals(POS.NOUN, e.getPOS());
     Assert.assertEquals(DictionaryElementType.EXCEPTION, e.getType());

     i = dictionary.getExceptionIterator(POS.VERB);
     Assert.assertNotNull(i);
     Assert.assertTrue(i.hasNext());
     e = i.next();
     Assert.assertNotNull(e);
     Assert.assertNotNull(e.getLemma());
     Assert.assertNotNull(e.getExceptions());
     Assert.assertTrue(0 &lt; e.getExceptions().size());
     Assert.assertEquals(POS.VERB, e.getPOS());
     Assert.assertEquals(DictionaryElementType.EXCEPTION, e.getType());

     e = i.next();
     Assert.assertNotNull(e);
     Assert.assertNotNull(e.getLemma());
     Assert.assertNotNull(e.getExceptions());
     Assert.assertTrue(0 &lt; e.getExceptions().size());
     Assert.assertEquals(POS.VERB, e.getPOS());
     Assert.assertEquals(DictionaryElementType.EXCEPTION, e.getType());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyXnI5FCEeuCTslxszDstQ" name="testSynsetIterator" specification="_yWMojpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Iterator&lt;Synset> i = dictionary.getSynsetIterator(POS.NOUN);
     Assert.assertNotNull(i);
     Assert.assertTrue(i.hasNext());
     Synset s = i.next();
     Assert.assertNotNull(s);
     Assert.assertNotNull(s.getGloss());
     Assert.assertNotNull(s.getOffset());
     Assert.assertEquals(POS.NOUN, s.getPOS());
     Assert.assertEquals(DictionaryElementType.SYNSET, s.getType());

     s = i.next();
     Assert.assertNotNull(s);
     Assert.assertNotNull(s.getGloss());
     Assert.assertNotNull(s.getOffset());
     Assert.assertEquals(POS.NOUN, s.getPOS());
     Assert.assertEquals(DictionaryElementType.SYNSET, s.getType());

     i = dictionary.getSynsetIterator(POS.VERB);
     Assert.assertNotNull(i);
     Assert.assertTrue(i.hasNext());
     s = i.next();
     Assert.assertNotNull(s);
     Assert.assertNotNull(s.getGloss());
     Assert.assertNotNull(s.getOffset());
     Assert.assertEquals(POS.VERB, s.getPOS());
     Assert.assertEquals(DictionaryElementType.SYNSET, s.getType());

     s = i.next();
     Assert.assertNotNull(s);
     Assert.assertNotNull(s.getGloss());
     Assert.assertNotNull(s.getOffset());
     Assert.assertEquals(POS.VERB, s.getPOS());
     Assert.assertEquals(DictionaryElementType.SYNSET, s.getType());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyYOMJFCEeuCTslxszDstQ" name="testGetWordBySenseKeyNoPercent" specification="_yWNPkpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNull(dictionary.getWordBySenseKey(&quot;&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyYOMZFCEeuCTslxszDstQ" name="testGetWordBySenseKeyPercentOnly" specification="_yWNPlZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNull(dictionary.getWordBySenseKey(&quot;%&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyYOMpFCEeuCTslxszDstQ" name="testGetWordBySenseKeyNoSynsetType" specification="_yWNPmJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNull(dictionary.getWordBySenseKey(&quot;%:&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyY1QJFCEeuCTslxszDstQ" name="testGetWordBySenseKeyBadSynsetType" specification="_yWNPm5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNull(dictionary.getWordBySenseKey(&quot;%9:&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyY1QZFCEeuCTslxszDstQ" name="testGetWordBySenseKeyMissingWord" specification="_yWNPnpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNull(dictionary.getWordBySenseKey(&quot;©%1:&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyZcUJFCEeuCTslxszDstQ" name="runAllTests" specification="_yWN2opFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testTank();
     testBrightAdj();
     testDissilientAdjS();
     testBrightAdv();
     testRandomIndexWord();
     testComplete();
     testCycles();
     testLexFileNumber();
     testAntonym();
     testExceptions();
     testDerivedForms();
     testRunningAway();
     testFairSenseKey();
     testOnline();
     testVerbFrames();
     testNonExistentIndexWordIterator();
     testIndexWordIterator();
     testSpacedIndexWordIterator();
     testMorphoLookupBaseFormNull();
     testMorphoLookupBaseForm();
     testMorphoLookupAllBaseFormsNull();
     testMorphoLookupAllBaseForms();
     testExceptionIterator();
     testSynsetIterator();
     testGetWordBySenseKeyNoPercent();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWI-IJFCEeuCTslxszDstQ" name="setup" method="_yySHkJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWI-I5FCEeuCTslxszDstQ" name="DictionaryReadTester">
                <eAnnotations xmi:id="_yWI-JJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yWI-JZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yWI-JpFCEeuCTslxszDstQ" type="_yWHwAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWI-J5FCEeuCTslxszDstQ" name="DictionaryReadTester" method="_yySHkZFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yWI-KZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yWI-KpFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yWI-KJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yWI-K5FCEeuCTslxszDstQ" type="_yWHwAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWJlMZFCEeuCTslxszDstQ" name="testTank" method="_yySuopFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWJlNJFCEeuCTslxszDstQ" name="testBrightAdj" method="_yyTVsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWJlN5FCEeuCTslxszDstQ" name="testRedAdj" method="_yyTVsZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWJlOpFCEeuCTslxszDstQ" name="testDissilientAdjS" method="_yyTVspFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWJlPZFCEeuCTslxszDstQ" name="testBrightAdv" method="_yyT8wJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWKMQpFCEeuCTslxszDstQ" name="testRandomIndexWord" method="_yyT8wZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWKMRZFCEeuCTslxszDstQ" name="testComplete" method="_yyT8wpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWKMSJFCEeuCTslxszDstQ" name="testCycles" method="_yyUj0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWKMS5FCEeuCTslxszDstQ" name="testLexFileNumber" method="_yyUj0ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWKzUJFCEeuCTslxszDstQ" name="getSynsetBySenseKey" visibility="private" method="_yyVK4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWKzUZFCEeuCTslxszDstQ" name="senseKey">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yWKzUpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWKzVJFCEeuCTslxszDstQ" name="testAntonym" method="_yyVK45FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWKzV5FCEeuCTslxszDstQ" name="testExceptions" method="_yyVK5JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWKzWpFCEeuCTslxszDstQ" name="testDerivedForms" method="_yyVx8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWLaYpFCEeuCTslxszDstQ" name="testRunningAway" method="_yyWZAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWLaZZFCEeuCTslxszDstQ" name="testFairSenseKey" method="_yyWZAZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWLaaJFCEeuCTslxszDstQ" name="testOnline" method="_yyWZApFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWLaa5FCEeuCTslxszDstQ" name="testVerbFrames" method="_yyWZA5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWMBcpFCEeuCTslxszDstQ" name="testNonExistentIndexWordIterator" method="_yyXAEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWMBdZFCEeuCTslxszDstQ" name="testIndexWordIterator" method="_yyXAEZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWMBeJFCEeuCTslxszDstQ" name="testSpacedIndexWordIterator" method="_yyXAEpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWMBe5FCEeuCTslxszDstQ" name="testMorphoLookupBaseFormNull" method="_yyXAE5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWMogpFCEeuCTslxszDstQ" name="testMorphoLookupBaseForm" method="_yyXAFJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWMohZFCEeuCTslxszDstQ" name="testMorphoLookupAllBaseFormsNull" method="_yyXnIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWMoiJFCEeuCTslxszDstQ" name="testMorphoLookupAllBaseForms" method="_yyXnIZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWMoi5FCEeuCTslxszDstQ" name="testExceptionIterator" method="_yyXnIpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWMojpFCEeuCTslxszDstQ" name="testSynsetIterator" method="_yyXnI5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWNPkpFCEeuCTslxszDstQ" name="testGetWordBySenseKeyNoPercent" method="_yyYOMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWNPlZFCEeuCTslxszDstQ" name="testGetWordBySenseKeyPercentOnly" method="_yyYOMZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWNPmJFCEeuCTslxszDstQ" name="testGetWordBySenseKeyNoSynsetType" method="_yyYOMpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWNPm5FCEeuCTslxszDstQ" name="testGetWordBySenseKeyBadSynsetType" method="_yyY1QJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWNPnpFCEeuCTslxszDstQ" name="testGetWordBySenseKeyMissingWord" method="_yyY1QZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWN2opFCEeuCTslxszDstQ" name="runAllTests" visibility="protected" method="_yyZcUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWQ58JFCEeuCTslxszDstQ" name="MultiThreadedTestCase" isAbstract="true">
              <eAnnotations xmi:id="_yWQ58ZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWQ58pFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWQ585FCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzsc0JFCEeuCTslxszDstQ">
                <body>@author Andy Schneider http://www.javaworld.com/javaworld/jw-12-2000/jw-1221-junit.html</body>
              </ownedComment>
              <generalization xmi:id="_ysBukJFCEeuCTslxszDstQ" general="_yo3F0ZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yvl_8JFCEeuCTslxszDstQ" name="threads" visibility="private" type="_yr5ywJFCEeuCTslxszDstQ" association="_y0REl5FCEeuCTslxszDstQ">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yvmnAJFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvmnApFCEeuCTslxszDstQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvn1IJFCEeuCTslxszDstQ" name="lock" visibility="private" isLeaf="true" type="_ryMwAJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0RroZFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvn1IZFCEeuCTslxszDstQ" value="new Object()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvocMZFCEeuCTslxszDstQ" name="testResult" visibility="private" type="_yo3F05FCEeuCTslxszDstQ" association="_y0RrpJFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvocMpFCEeuCTslxszDstQ" value="null"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyaqcJFCEeuCTslxszDstQ" name="MultiThreadedTestCase" specification="_yWRhAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyaqcZFCEeuCTslxszDstQ" name="name">
                  <eAnnotations xmi:id="_yyaqcpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yyaqc5FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyaqdJFCEeuCTslxszDstQ" type="_yWQ58JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(name);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yybRgJFCEeuCTslxszDstQ" name="run" specification="_yr82EJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yybRgZFCEeuCTslxszDstQ" name="result" type="_yo3F05FCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yybRgpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yybRg5FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <language>java</language>
                <body>testResult = result;
     super.run(result);
     testResult = null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyb4kJFCEeuCTslxszDstQ" name="runTestCaseRunnables" specification="_yo3s4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyb4kZFCEeuCTslxszDstQ" name="runnables" type="_yWSIEJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yyb4kpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yydtwJFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yydtwZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (runnables == null) {
         throw new IllegalArgumentException(&quot;runnables is null&quot;);
     }
     threads = new Thread[runnables.length];
     System.arraycopy(runnables, 0, threads, 0, threads.length);
     for (Thread thread : threads) {
         thread.start();
     }
     try {
         for (Thread thread : threads) {
             thread.join();
         }
     } catch (InterruptedException ignore) {
         System.out.println(&quot;Thread join interrupted.&quot;);
     }
     threads = null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyeU0JFCEeuCTslxszDstQ" name="handleException" specification="_yWRhB5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyeU0ZFCEeuCTslxszDstQ" name="t" type="_rxDggJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yyeU0pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yyeU05FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
                <language>java</language>
                <body>synchronized (testResult) {
         if (t instanceof AssertionFailedError) {
             testResult.addFailure(this, (AssertionFailedError) t);
         } else {
             testResult.addError(this, t);
         }
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWRhAJFCEeuCTslxszDstQ" name="MultiThreadedTestCase" method="_yyaqcJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yWRhApFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yWRhA5FCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yzsc0ZFCEeuCTslxszDstQ">
                  <body>Simple constructor.
     *
     * @param name test name</body>
                </ownedComment>
                <ownedParameter xmi:id="_yWRhAZFCEeuCTslxszDstQ" name="name">
                  <eAnnotations xmi:id="_yWRhBZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yWRhBpFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yWRhBJFCEeuCTslxszDstQ" type="_yWQ58JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWRhB5FCEeuCTslxszDstQ" name="handleException" visibility="protected" method="_yyeU0JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yztD4JFCEeuCTslxszDstQ">
                  <body>Handle an exception. Since multiple threads won't have their
     * exceptions caught the threads must manually catch them and call
     * handleException().
     *
     * @param t Exception to handle.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yWRhCJFCEeuCTslxszDstQ" name="t" type="_rxDggJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yWRhCZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yWRhCpFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yo3s4JFCEeuCTslxszDstQ" name="runTestCaseRunnables" visibility="protected" method="_yyb4kJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yo3s4ZFCEeuCTslxszDstQ" name="runnables" type="_yWSIEJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yo3s45FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yo3s5JFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yo3s4pFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yr82EJFCEeuCTslxszDstQ" name="run" method="_yybRgJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzsc0pFCEeuCTslxszDstQ">
                  <body>Override run so we can save the test result.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yr9dIJFCEeuCTslxszDstQ" name="result" type="_yo3F05FCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yr-EMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yr-EMZFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yWSIEJFCEeuCTslxszDstQ" name="TestCaseRunnable" visibility="protected" isAbstract="true">
                <ownedComment xmi:id="_yztD4ZFCEeuCTslxszDstQ">
                  <body>A test case thread. Override runTestCase () and define
     * behaviour of test in there.</body>
                </ownedComment>
                <generalization xmi:id="_ysBHgJFCEeuCTslxszDstQ" general="_yr5ywJFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_ysAgcZFCEeuCTslxszDstQ" client="_yWSIEJFCEeuCTslxszDstQ" supplier="_yr_SUJFCEeuCTslxszDstQ" contract="_yr_SUJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyeU1JFCEeuCTslxszDstQ" name="run" specification="_yWSIEpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>try {
             runTestCase();
         } catch (Throwable t) /* Any other exception we handle and then we interrupt the other threads.*/ {
             handleException(t);
             interruptThreads();
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyeU1ZFCEeuCTslxszDstQ" name="interruptThreads" specification="_yWSIE5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>synchronized (lock) {
             for (Thread t : threads) {
                 if (null != t &amp;&amp; t.isAlive()) {
                     t.interrupt();
                 }
             }
         }
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yWSIEZFCEeuCTslxszDstQ" name="runTestCase" isAbstract="true" raisedException="_rxDggJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_yztD4pFCEeuCTslxszDstQ">
                    <body>Override this to define the test
         * @throws Throwable Throwable</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_yWSIEpFCEeuCTslxszDstQ" name="run" method="_yyeU1JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_yztD45FCEeuCTslxszDstQ">
                    <body>Run the test in an environment where
         * we can handle the exceptions generated by the test method.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_yWSIE5FCEeuCTslxszDstQ" name="interruptThreads" visibility="protected" method="_yyeU1ZFCEeuCTslxszDstQ"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWSvIJFCEeuCTslxszDstQ" name="TestDictionaryIterate" isAbstract="true">
              <eAnnotations xmi:id="_yWTWMJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWTWMZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWTWMpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_yvqRYJFCEeuCTslxszDstQ" name="r" visibility="protected" isLeaf="true" isStatic="true" type="_rnZOMJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0Rrp5FCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvqRYZFCEeuCTslxszDstQ" value="new Random()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvq4cZFCEeuCTslxszDstQ" name="s_d" visibility="protected" isStatic="true" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0SSsZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yvrfgJFCEeuCTslxszDstQ" name="d" visibility="protected" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0SStJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yye74JFCEeuCTslxszDstQ" name="setUp" specification="_yWTWNJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>d = s_d;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yye74ZFCEeuCTslxszDstQ" name="iterateAll" specification="_yWTWN5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>long start = System.currentTimeMillis();

     for (POS pos : POS.getAllPOS()) {
         Iterator&lt;Exc> ie = d.getExceptionIterator(pos);
         while (ie.hasNext()) {
             ie.next();
         }

         Iterator&lt;IndexWord> ii = d.getIndexWordIterator(pos);
         while (ii.hasNext()) {
             ii.next();
         }

         Iterator&lt;Synset> si = d.getSynsetIterator(pos);
         while (ii.hasNext()) {
             si.next();
         }
     }

     long end = System.currentTimeMillis();
     System.out.println(&quot;Iteration (ms):\t&quot; + (end - start));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yye74pFCEeuCTslxszDstQ" name="randomWalk" specification="_yWT9QZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>long start = System.currentTimeMillis();

     POS pos = POS.getPOSForId(r.nextInt(4) + 1);
     Synset s = d.getSynsetIterator(pos).next();

     for (int i = 0; i &lt; 10000; i++) {
         List&lt;Pointer> ptrs = s.getPointers();
         PointerTarget p = ptrs.get(r.nextInt(ptrs.size())).getTarget();
         s = p.getSynset();
     }

     for (int i = 0; i &lt; 10000; i++) {
         IndexWord w = d.getRandomIndexWord(pos);
     }

     long end = System.currentTimeMillis();
     System.out.println(&quot;Walk (ms):\t&quot; + (end - start));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWTWNJFCEeuCTslxszDstQ" name="setUp" method="_yye74JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWTWN5FCEeuCTslxszDstQ" name="iterateAll" method="_yye74ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWT9QZFCEeuCTslxszDstQ" name="randomWalk" method="_yye74pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWT9RpFCEeuCTslxszDstQ" name="TestDictionaryIterateFile">
              <eAnnotations xmi:id="_yWUkUJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWUkUZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWUkUpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <generalization xmi:id="_yo4T8JFCEeuCTslxszDstQ" general="_yWSvIJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyfi8JFCEeuCTslxszDstQ" name="initDic" specification="_yWUkU5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>s_d = Dictionary.getInstance(TestDictionaryIterateFile.class.getResourceAsStream(&quot;/test_file_properties.xml&quot;));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWUkU5FCEeuCTslxszDstQ" name="initDic" isStatic="true" method="_yyfi8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWUkV5FCEeuCTslxszDstQ" name="TestDictionaryIterateResource">
              <eAnnotations xmi:id="_yWVLYJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWVLYZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWVLYpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <generalization xmi:id="_yo47AJFCEeuCTslxszDstQ" general="_yWSvIJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyfi8ZFCEeuCTslxszDstQ" name="initDic" specification="_yWVLY5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>s_d = Dictionary.getDefaultResourceInstance();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWVLY5FCEeuCTslxszDstQ" name="initDic" isStatic="true" method="_yyfi8ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWVLZ5FCEeuCTslxszDstQ" name="TestDictionaryRandom">
              <eAnnotations xmi:id="_yWVLaJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWVLaZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWVLapFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yygKAJFCEeuCTslxszDstQ" name="testGetRandomIndexWord" specification="_yWVLa5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>final Dictionary d = Dictionary.getDefaultResourceInstance();
     final IndexWord indexWord1 = d.getRandomIndexWord(POS.NOUN);
     final IndexWord indexWord2 = d.getRandomIndexWord(POS.NOUN);
     Assert.assertNotEquals(indexWord1, indexWord2);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yygKAZFCEeuCTslxszDstQ" name="testGetNonRandomIndexWord" specification="_yWVycpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Random r = new Random(1);
     Dictionary d = Dictionary.getDefaultResourceInstance();
     d.setRandom(r);

     IndexWord indexWord = d.getRandomIndexWord(POS.NOUN);
     final String lemma = indexWord.getLemma();

     r = new Random(1);
     d = Dictionary.getDefaultResourceInstance();
     d.setRandom(r);
     indexWord = d.getRandomIndexWord(POS.NOUN);

     Assert.assertEquals(lemma, indexWord.getLemma());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWVLa5FCEeuCTslxszDstQ" name="testGetRandomIndexWord" method="_yygKAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWVycpFCEeuCTslxszDstQ" name="testGetNonRandomIndexWord" method="_yygKAZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWVydpFCEeuCTslxszDstQ" name="TestEditFileBackedDictionary">
              <eAnnotations xmi:id="_yWWZgJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWWZgZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWWZgpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yztq8JFCEeuCTslxszDstQ">
                <body>Tests FileBackedDictionary editing.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yo8lYJFCEeuCTslxszDstQ" general="_yV6Uo5FCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yvstoJFCEeuCTslxszDstQ" name="zero" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvstoZFCEeuCTslxszDstQ" value="&quot;zero&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvt7wJFCEeuCTslxszDstQ" name="third" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvt7wZFCEeuCTslxszDstQ" value="&quot;третий&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yvui0ZFCEeuCTslxszDstQ" name="encoding" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvvJ4JFCEeuCTslxszDstQ" value="&quot;UTF-8&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yygKApFCEeuCTslxszDstQ" name="TestEditFileBackedDictionary" specification="_yWWZg5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yygKA5FCEeuCTslxszDstQ" type="_yWVydpFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>second = &quot;второй&quot;;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yygxEJFCEeuCTslxszDstQ" name="getProperties" specification="_yWXAkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yygxEZFCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return TestEditFileBackedDictionary.class.getResourceAsStream(&quot;/test_clean_file.xml&quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yygxEpFCEeuCTslxszDstQ" name="testCountsSerialization" specification="_yWXAlZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();

     Synset s0 = dictionary.createSynset(POS.NOUN);
     s0.setGloss(zero + &quot; gloss&quot;);
     final Word w0 = new Word(dictionary, s0, zero);
     s0.getWords().add(w0);

     Synset s1 = dictionary.createSynset(POS.NOUN);
     s1.setGloss(first + &quot; gloss&quot;);
     final Word w1 = new Word(dictionary, s1, first);
     w1.setUseCount(1);
     s1.getWords().add(w1);

     Synset s2 = dictionary.createSynset(POS.NOUN);
     s2.setGloss(second + &quot; gloss&quot;);
     final Word w2 = new Word(dictionary, s2, second);
     w2.setUseCount(2);
     s2.getWords().add(w2);

     Synset s3 = dictionary.createSynset(POS.NOUN);
     s3.setGloss(third + &quot; gloss&quot;);
     final Word w3 = new Word(dictionary, s3, third);
     w3.setUseCount(3);
     s3.getWords().add(w3);

     dictionary.save();

     // check serialization
     // 3 третий%1:00:00:: 1
     // 2 second%1:00:00:: 1
     // 1 first%1:00:00:: 1

     // hack the path out
     FileBackedDictionary fbd = (FileBackedDictionary) dictionary;
     Field field = FileBackedDictionary.class.getDeclaredField(&quot;fileManager&quot;);
     field.setAccessible(true);
     FileManagerImpl fm = (FileManagerImpl) field.get(fbd);
     field = FileManagerImpl.class.getDeclaredField(&quot;cntList&quot;);
     field.setAccessible(true);
     RandomAccessDictionaryFile cntList = (RandomAccessDictionaryFile) field.get(fm);

     field = AbstractDictionaryFile.class.getDeclaredField(&quot;path&quot;);
     field.setAccessible(true);
     String path = (String) field.get(cntList);

     Method method = AbstractPrincetonDictionaryFile.class.getDeclaredMethod(&quot;getFilename&quot;);
     method.setAccessible(true);
     String name = (String) method.invoke(cntList);

     dictionary.close();

     BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(path, name)), encoding));
     try {
         String[] lines = new String[3];
         lines[0] = br.readLine();
         lines[1] = br.readLine();
         lines[2] = br.readLine();
         assertEquals(&quot;3 &quot; + third + &quot;%1:00:00:: 1&quot;, lines[0]);
         assertEquals(&quot;2 &quot; + second + &quot;%1:00:00:: 1&quot;, lines[1]);
         assertEquals(&quot;1 &quot; + first + &quot;%1:00:00:: 1&quot;, lines[2]);
     } catch (IOException e) {
         fail(e.getMessage());
     } finally {
         br.close();
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWWZg5FCEeuCTslxszDstQ" name="TestEditFileBackedDictionary" method="_yygKApFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yWWZhJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yWWZhZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yWWZhpFCEeuCTslxszDstQ" type="_yWVydpFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWXAkJFCEeuCTslxszDstQ" name="getProperties" visibility="protected" method="_yygxEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWXAkZFCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWXAlZFCEeuCTslxszDstQ" name="testCountsSerialization" method="_yygxEpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _ysGnEJFCEeuCTslxszDstQ _rtgdQJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWYOsJFCEeuCTslxszDstQ" name="TestEditFileBackedDictionaryASCII">
              <eAnnotations xmi:id="_yWYOsZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWYOspFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWYOs5FCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yztq8ZFCEeuCTslxszDstQ">
                <body>Tests FileBackedDictionary editing.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yo_BoJFCEeuCTslxszDstQ" general="_yWVydpFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyhYIJFCEeuCTslxszDstQ" name="TestEditFileBackedDictionaryASCII" specification="_yWY1wJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyhYIZFCEeuCTslxszDstQ" type="_yWYOsJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>second = &quot;second&quot;;
     third = &quot;third&quot;;
     encoding = &quot;US-ASCII&quot;;
     physical_entityLemma = &quot;physical entity&quot;;
     exception2 = new String[]{&quot;aides-de-camp&quot;, &quot;aide-de-camp&quot;};
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyhYIpFCEeuCTslxszDstQ" name="getProperties" specification="_yWY1xJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyhYI5FCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return TestEditFileBackedDictionaryASCII.class.getResourceAsStream(&quot;/test_clean_file_ascii.xml&quot;);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWY1wJFCEeuCTslxszDstQ" name="TestEditFileBackedDictionaryASCII" method="_yyhYIJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yWY1wZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yWY1wpFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yWY1w5FCEeuCTslxszDstQ" type="_yWYOsJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWY1xJFCEeuCTslxszDstQ" name="getProperties" visibility="protected" method="_yyhYIpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWY1xZFCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWZc0JFCEeuCTslxszDstQ" name="TestEditMapBackedDictionary">
              <eAnnotations xmi:id="_yWZc0ZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWZc0pFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWZc05FCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzuSAJFCEeuCTslxszDstQ">
                <body>Tests MapBackedDictionary editing.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yo_osJFCEeuCTslxszDstQ" general="_yV6Uo5FCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyh_MJFCEeuCTslxszDstQ" name="getProperties" specification="_yWZc1JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyh_MZFCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return TestEditMapBackedDictionary.class.getResourceAsStream(&quot;/test_clean_map.xml&quot;);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWZc1JFCEeuCTslxszDstQ" name="getProperties" visibility="protected" method="_yyh_MJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWZc1ZFCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWaD4ZFCEeuCTslxszDstQ" name="TestEditMemoryDictionary">
              <eAnnotations xmi:id="_yWaD4pFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWaD45FCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWaD5JFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzuSAZFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_ypAPwJFCEeuCTslxszDstQ" general="_yV6Uo5FCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyh_MpFCEeuCTslxszDstQ" name="getProperties" specification="_yWaD5ZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyh_M5FCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return Dictionary.class.getResourceAsStream(&quot;/net/sf/extjwnl/dictionary/mem_properties.xml&quot;);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWaD5ZFCEeuCTslxszDstQ" name="getProperties" visibility="protected" method="_yyh_MpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yWaD5pFCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWaq8JFCEeuCTslxszDstQ" name="TestGetFileBackedInstance">
              <eAnnotations xmi:id="_yWaq8ZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWaq8pFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWaq85FCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzuSApFCEeuCTslxszDstQ">
                <body>Creates a FileBackedDictionary via .getFileBackedInstance and tests it.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_ypBd4ZFCEeuCTslxszDstQ" general="_yWHwAJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yvwYAJFCEeuCTslxszDstQ" name="location" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yvwYAZFCEeuCTslxszDstQ" value="System.getProperty(&quot;extjwnl.testDataFolder&quot;) + &quot;/net/sf/extjwnl/data/wordnet/wn31&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyimQJFCEeuCTslxszDstQ" name="initDictionary" specification="_yWaq9JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>s_dictionary = Dictionary.getFileBackedInstance(location);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyimQZFCEeuCTslxszDstQ" name="closeDictionary" specification="_yWaq-JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (null != s_dictionary) {
         s_dictionary.close();
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWaq9JFCEeuCTslxszDstQ" name="initDictionary" isStatic="true" method="_yyimQJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWaq-JFCEeuCTslxszDstQ" name="closeDictionary" isStatic="true" method="_yyimQZFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWbSApFCEeuCTslxszDstQ" name="TestLemmasLookup">
              <eAnnotations xmi:id="_yWbSA5FCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWbSBJFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWbSBZFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzuSA5FCEeuCTslxszDstQ">
                <body>Tests lookup of non-english lemmas.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_yvw_EJFCEeuCTslxszDstQ" name="dic" visibility="private" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0SSt5FCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyjNUJFCEeuCTslxszDstQ" name="initDictionary" specification="_yWbSBpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dic = Dictionary.getDefaultResourceInstance();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyjNUZFCEeuCTslxszDstQ" name="closeDictionary" specification="_yWb5EpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (null != dic) {
         dic.close();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyj0YJFCEeuCTslxszDstQ" name="testLookups" specification="_yWb5FpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>String lemma = &quot;™&quot;;
     IndexWord iw = dic.getIndexWord(POS.NOUN, lemma);
     assertThat(iw, is(nullValue()));
     lemma = &quot;â&quot;;
     iw = dic.getIndexWord(POS.NOUN, lemma);
     assertThat(iw, is(nullValue()));
     lemma = &quot;zywiec&quot;;
     iw = dic.getIndexWord(POS.NOUN, lemma);
     assertThat(iw, is(nullValue()));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWbSBpFCEeuCTslxszDstQ" name="initDictionary" method="_yyjNUJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWb5EpFCEeuCTslxszDstQ" name="closeDictionary" method="_yyjNUZFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWb5FpFCEeuCTslxszDstQ" name="testLookups" method="_yyj0YJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWcgIJFCEeuCTslxszDstQ" name="TestMorphologicalProcessor">
              <eAnnotations xmi:id="_yWcgIZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWcgIpFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWcgI5FCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzu5EJFCEeuCTslxszDstQ">
                <body>Tests DefaultMorphologicalProcessor.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_yvyNMJFCEeuCTslxszDstQ" name="dic" visibility="private" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0S5wZFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yykbcJFCEeuCTslxszDstQ" name="initDictionary" specification="_yWcgJJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dic = Dictionary.getInstance(
             TestMorphologicalProcessor.class.getResourceAsStream(&quot;/test_file_properties.xml&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yylCgJFCEeuCTslxszDstQ" name="closeDictionary" specification="_yWcgKJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (null != dic) {
         dic.close();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yylCgZFCEeuCTslxszDstQ" name="testRepeatedInvocations" specification="_yWdHMZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>MorphologicalProcessor mp = dic.getMorphologicalProcessor();
     assertThat(mp.lookupAllBaseForms(POS.NOUN, &quot;guts&quot;), hasItems(&quot;gut&quot;, &quot;guts&quot;));
     assertThat(mp.lookupAllBaseForms(POS.NOUN, &quot;guts&quot;), hasItems(&quot;gut&quot;, &quot;guts&quot;));
     assertThat(mp.lookupAllBaseForms(POS.NOUN, &quot;spectacles&quot;), hasItems(&quot;spectacle&quot;, &quot;spectacles&quot;));
     assertThat(mp.lookupAllBaseForms(POS.NOUN, &quot;spectacles&quot;), hasItems(&quot;spectacle&quot;, &quot;spectacles&quot;));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWcgJJFCEeuCTslxszDstQ" name="initDictionary" method="_yykbcJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWcgKJFCEeuCTslxszDstQ" name="closeDictionary" method="_yylCgJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWdHMZFCEeuCTslxszDstQ" name="testRepeatedInvocations" method="_yylCgZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWdHNZFCEeuCTslxszDstQ" name="TestReadFileBackedDictionary">
              <eAnnotations xmi:id="_yWdHNpFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWdHN5FCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWdHOJFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzu5EZFCEeuCTslxszDstQ">
                <body>Creates a FileBackedDictionary and creates all the test cases.
 *
@author Brett Walenz (bwalenz@users.sourceforge.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_ypILkJFCEeuCTslxszDstQ" general="_yWHwAJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yylCgpFCEeuCTslxszDstQ" name="initDictionary" specification="_yWdHOZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>s_dictionary = Dictionary.getInstance(
             TestReadFileBackedDictionary.class.getResourceAsStream(&quot;/test_file_properties.xml&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yylpkJFCEeuCTslxszDstQ" name="closeDictionary" specification="_yWduQ5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (null != s_dictionary) {
         s_dictionary.close();
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWdHOZFCEeuCTslxszDstQ" name="initDictionary" isStatic="true" method="_yylCgpFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWduQ5FCEeuCTslxszDstQ" name="closeDictionary" isStatic="true" method="_yylpkJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWduR5FCEeuCTslxszDstQ" name="TestReadResourceDictionary">
              <eAnnotations xmi:id="_yWduSJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWduSZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWduSpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzu5EpFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_ypIyoJFCEeuCTslxszDstQ" general="_yWHwAJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yylpkZFCEeuCTslxszDstQ" name="initDictionary" specification="_yWeVUJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>s_dictionary = Dictionary.getDefaultResourceInstance();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yylpkpFCEeuCTslxszDstQ" name="closeDictionary" specification="_yWeVVJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>if (null != s_dictionary) {
         s_dictionary.close();
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWeVUJFCEeuCTslxszDstQ" name="initDictionary" isStatic="true" method="_yylpkZFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWeVVJFCEeuCTslxszDstQ" name="closeDictionary" isStatic="true" method="_yylpkpFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWe8YJFCEeuCTslxszDstQ" name="TestThreads">
              <eAnnotations xmi:id="_yWfjcJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWfjcZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWfjcpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzvgIJFCEeuCTslxszDstQ">
                <body>Attempt to reproduce http://sourceforge.net/tracker/?func=detail&amp;aid=3202925&amp;group_id=33824&amp;atid=409470
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a>
@author wangyeee</body>
              </ownedComment>
              <generalization xmi:id="_ypKn0JFCEeuCTslxszDstQ" general="_yWQ58JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yv0CYJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0S5xJFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yv0CYZFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(TestThreads.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yv0pcJFCEeuCTslxszDstQ" name="dictionary" visibility="private" isStatic="true" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0S5x5FCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yv1QgZFCEeuCTslxszDstQ" name="list" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yv13kJFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yv2eoJFCEeuCTslxszDstQ" value="{&quot;tank&quot;, &quot;cooler&quot;, &quot;pile&quot;, &quot;storm&quot;, &quot;perfect&quot;, &quot;crown&quot;, &quot;computer science&quot;,&#xA;            &quot;failure&quot;, &quot;pleasure&quot;, &quot;black&quot;, &quot;Great Pyramid&quot;, &quot;dictionary&quot;, &quot;throw&quot;, &quot;exception&quot;,&#xA;            &quot;boredom&quot;, &quot;file&quot;, &quot;index&quot;, &quot;list&quot;, &quot;apple&quot;, &quot;orange&quot;, &quot;pear&quot;, &quot;find&quot;, &quot;treasure&quot;, &quot;memory&quot;, &quot;good&quot;,&#xA;            &quot;claw&quot;, &quot;feet&quot;, &quot;cold&quot;, &quot;green&quot;, &quot;glee&quot;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yv3FsJFCEeuCTslxszDstQ" name="notlist" visibility="protected" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yv3FsZFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yv3swZFCEeuCTslxszDstQ" value="{&quot;ttank&quot;, &quot;ccooler&quot;, &quot;ppile&quot;, &quot;sstorm&quot;, &quot;pperfect&quot;, &quot;ccrown&quot;, &quot;ccomputer sscience&quot;,&#xA;            &quot;ffailure&quot;, &quot;ppleasure&quot;, &quot;bblack&quot;, &quot;GGreat PPyramid&quot;, &quot;ddictionary&quot;, &quot;tthrow&quot;, &quot;eexception&quot;,&#xA;            &quot;bboredom&quot;, &quot;ffile&quot;, &quot;iindex&quot;, &quot;llist&quot;, &quot;aapple&quot;, &quot;oorange&quot;, &quot;ppear&quot;, &quot;ffind&quot;, &quot;ttreasure&quot;, &quot;mmemory&quot;, &quot;ggood&quot;,&#xA;            &quot;cclaw&quot;, &quot;ffeet&quot;, &quot;ccold&quot;, &quot;ggreen&quot;, &quot;gglee&quot;}"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yymQoJFCEeuCTslxszDstQ" name="TestThreads" specification="_yWgxkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yymQoZFCEeuCTslxszDstQ" name="s">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yymQopFCEeuCTslxszDstQ" type="_yWe8YJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(s);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yym3sJFCEeuCTslxszDstQ" name="testThreadedLookupAllIndexWords" specification="_yWhYo5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary = Dictionary.getInstance(TestThreads.class.getResourceAsStream(&quot;/test_file_properties.xml&quot;));

     List&lt;String> words = new ArrayList&lt;String>(Arrays.asList(list));
     List&lt;String> notwords = new ArrayList&lt;String>(Arrays.asList(notlist));

     TestCaseRunnable t0 = new Lookup(words, true);
     TestCaseRunnable t1 = new Lookup(words, true);
     TestCaseRunnable t2 = new Lookup(notwords, false);

     runTestCaseRunnables(new TestCaseRunnable[]{t0, t1, t2});
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWgxkJFCEeuCTslxszDstQ" name="TestThreads" method="_yymQoJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yWhYoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yWhYoZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yWgxkZFCEeuCTslxszDstQ" name="s">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yWhYopFCEeuCTslxszDstQ" type="_yWe8YJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWhYo5FCEeuCTslxszDstQ" name="testThreadedLookupAllIndexWords" method="_yym3sJFCEeuCTslxszDstQ" raisedException="_yowYIpFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yWjN0JFCEeuCTslxszDstQ" name="Lookup" visibility="private">
                <generalization xmi:id="_ysLfkJFCEeuCTslxszDstQ" general="_ysKRcJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yv464JFCEeuCTslxszDstQ" name="words" visibility="private" isOrdered="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yv464ZFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yv6JAJFCEeuCTslxszDstQ" name="test" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yym3sZFCEeuCTslxszDstQ" name="Lookup" specification="_yWkb8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yym3spFCEeuCTslxszDstQ" name="words" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yym3s5FCEeuCTslxszDstQ" name="test">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yym3tJFCEeuCTslxszDstQ" type="_yWjN0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.words = words;
         this.test = test;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yynewJFCEeuCTslxszDstQ" name="runTestCase" specification="_yWmRIZFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>for (String word : words) {
             if (!isInterrupted()) {
                 //throws an Exception or just stop at here
                 log.debug(&quot;lookup: &quot; + word);
                 IndexWord iws = dictionary.lookupIndexWord(POS.NOUN, word);
                 log.debug(&quot;finished: &quot; + word);
                 Assert.assertEquals(&quot;Can't find: &quot; + word, null != iws, test);
             } else {
                 break;
             }
         }
//            }
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yWkb8JFCEeuCTslxszDstQ" name="Lookup" method="_yym3sZFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yWkb85FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yWlDAJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yWkb8ZFCEeuCTslxszDstQ" name="words" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yWkb8pFCEeuCTslxszDstQ" name="test">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yWlDAZFCEeuCTslxszDstQ" type="_yWjN0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yWmRIZFCEeuCTslxszDstQ" name="runTestCase" method="_yynewJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWqikJFCEeuCTslxszDstQ" name="TestThreadsDictionary">
              <eAnnotations xmi:id="_yWrJoJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yWrJoZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yWrJopFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzvgIZFCEeuCTslxszDstQ">
                <body>Tests thread locking for this case:
https://sourceforge.net/projects/extjwnl/forums/forum/1333399/topic/4772095/index/page/1
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_ypTKsJFCEeuCTslxszDstQ" general="_yWQ58JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yv7XIJFCEeuCTslxszDstQ" name="threadCount" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yv7-MJFCEeuCTslxszDstQ" value="5"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yv8lQJFCEeuCTslxszDstQ" name="runCount" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yv8lQZFCEeuCTslxszDstQ" value="3"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yynewZFCEeuCTslxszDstQ" name="TestThreadsDictionary" specification="_yWrwsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yynewpFCEeuCTslxszDstQ" name="s">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yynew5FCEeuCTslxszDstQ" type="_yWqikJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(s);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyoF1JFCEeuCTslxszDstQ" name="testThreadedFile" specification="_yWwpMJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Dictionary d = Dictionary.getInstance(
             TestThreadsDictionary.class.getResourceAsStream(&quot;/test_file_properties.xml&quot;));

     TestCaseRunnable[] runnables = new TestCaseRunnable[threadCount];
     for (int i = 0; i &lt; threadCount; i++) {
         runnables[i] = new TestThread(d);
     }

     runTestCaseRunnables(runnables);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyos4JFCEeuCTslxszDstQ" name="testThreadedResource" specification="_yWwpMZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Dictionary d = Dictionary.getDefaultResourceInstance();

     TestCaseRunnable[] runnables = new TestCaseRunnable[threadCount];
     for (int i = 0; i &lt; threadCount; i++) {
         runnables[i] = new TestThread(d);
     }

     runTestCaseRunnables(runnables);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWrwsJFCEeuCTslxszDstQ" name="TestThreadsDictionary" method="_yynewZFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yWsXwZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yWsXwpFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yzvgIpFCEeuCTslxszDstQ">
                  <body>Basic constructor - called by the test runners.
     *
     * @param s s</body>
                </ownedComment>
                <ownedParameter xmi:id="_yWsXwJFCEeuCTslxszDstQ" name="s">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yWsXw5FCEeuCTslxszDstQ" type="_yWqikJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWwpMJFCEeuCTslxszDstQ" name="testThreadedFile" method="_yyoF1JFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yWwpMZFCEeuCTslxszDstQ" name="testThreadedResource" method="_yyos4JFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yWtl4JFCEeuCTslxszDstQ" name="TestThread" visibility="protected">
                <generalization xmi:id="_ysOi4JFCEeuCTslxszDstQ" general="_ysKRcJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yv9MUJFCEeuCTslxszDstQ" name="d" visibility="private" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0Tg0ZFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyoF0JFCEeuCTslxszDstQ" name="TestThread" specification="_yWuM8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyoF0ZFCEeuCTslxszDstQ" name="d" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yyoF0pFCEeuCTslxszDstQ" type="_yWtl4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.d = d;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyoF05FCEeuCTslxszDstQ" name="runTestCase" specification="_yWu0A5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>DictionaryReadTester dt = new DictionaryReadTester(d);
         for (int i = 0; i &lt; runCount; i++) {
             dt.runAllTests();
         }
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yWuM8JFCEeuCTslxszDstQ" name="TestThread" method="_yyoF0JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yWu0AJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yWu0AZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yWuM8ZFCEeuCTslxszDstQ" name="d" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yWu0ApFCEeuCTslxszDstQ" type="_yWtl4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yWu0A5FCEeuCTslxszDstQ" name="runTestCase" method="_yyoF05FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWzsgJFCEeuCTslxszDstQ" name="TestThreadsLock">
              <eAnnotations xmi:id="_yW0TkJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yW0TkZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yW0TkpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzwHMJFCEeuCTslxszDstQ">
                <body>Tests thread locking for this case:
https://sourceforge.net/projects/extjwnl/forums/forum/1333399/topic/4772095/index/page/1
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_ypU_4JFCEeuCTslxszDstQ" general="_yWQ58JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yv-acJFCEeuCTslxszDstQ" name="threadCount" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yv_BgJFCEeuCTslxszDstQ" value="5"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyos4ZFCEeuCTslxszDstQ" name="TestThreadsLock" specification="_yW1hsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yyos4pFCEeuCTslxszDstQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yyos45FCEeuCTslxszDstQ" type="_yWzsgJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(name);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yypT8ZFCEeuCTslxszDstQ" name="testThreadedLookupFile" specification="_yW7BQJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Dictionary d = Dictionary.getInstance(
             TestThreadsDictionary.class.getResourceAsStream(&quot;/test_file_properties.xml&quot;));

     List&lt;String> list = new ArrayList&lt;String>();
     Iterator&lt;Exc> exceptions = d.getExceptionIterator(POS.NOUN);
     while (exceptions.hasNext()) {
         list.add(exceptions.next().getLemma());
     }

     TestCaseRunnable[] runnables = new TestCaseRunnable[threadCount];
     for (int i = 0; i &lt; threadCount; i++) {
         runnables[i] = new LookupThread(d, list);
     }

     runTestCaseRunnables(runnables);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yypT8pFCEeuCTslxszDstQ" name="testThreadedLookupResource" specification="_yW7oUJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Dictionary d = Dictionary.getDefaultResourceInstance();

     List&lt;String> list = new ArrayList&lt;String>();
     Iterator&lt;Exc> exceptions = d.getExceptionIterator(POS.NOUN);
     while (exceptions.hasNext()) {
         list.add(exceptions.next().getLemma());
     }

     TestCaseRunnable[] runnables = new TestCaseRunnable[threadCount];
     for (int i = 0; i &lt; threadCount; i++) {
         runnables[i] = new LookupThread(d, list);
     }

     runTestCaseRunnables(runnables);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yW1hsJFCEeuCTslxszDstQ" name="TestThreadsLock" method="_yyos4ZFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yW1hspFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yW2IwJFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_yzwHMZFCEeuCTslxszDstQ">
                  <body>Basic constructor - called by the test runners.
     *
     * @param name test name</body>
                </ownedComment>
                <ownedParameter xmi:id="_yW1hsZFCEeuCTslxszDstQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yW2IwZFCEeuCTslxszDstQ" type="_yWzsgJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yW7BQJFCEeuCTslxszDstQ" name="testThreadedLookupFile" method="_yypT8ZFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yW7oUJFCEeuCTslxszDstQ" name="testThreadedLookupResource" method="_yypT8pFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yW3W4JFCEeuCTslxszDstQ" name="LookupThread" visibility="protected">
                <generalization xmi:id="_ysQYEJFCEeuCTslxszDstQ" general="_ysKRcJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yv_BgZFCEeuCTslxszDstQ" name="list" visibility="private" isOrdered="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yv_okJFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ywAPoZFCEeuCTslxszDstQ" name="d" visibility="private" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0Tg1JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyos5JFCEeuCTslxszDstQ" name="LookupThread" specification="_yW398JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyos5ZFCEeuCTslxszDstQ" name="d" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yyos5pFCEeuCTslxszDstQ" name="list" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yyos55FCEeuCTslxszDstQ" type="_yW3W4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.d = d;
         this.list = list;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yypT8JFCEeuCTslxszDstQ" name="runTestCase" specification="_yW5zIJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>for (String word : list) {
             if (!isInterrupted()) {
                 d.getMorphologicalProcessor().lookupBaseForm(POS.NOUN, word);
             } else {
                 break;
             }
         }
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yW398JFCEeuCTslxszDstQ" name="LookupThread" method="_yyos5JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yW3985FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yW4lAJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yW398ZFCEeuCTslxszDstQ" name="d" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yW398pFCEeuCTslxszDstQ" name="list" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yW4lAZFCEeuCTslxszDstQ" type="_yW3W4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yW5zIJFCEeuCTslxszDstQ" name="runTestCase" method="_yypT8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ysKRcJFCEeuCTslxszDstQ" name="TestCaseRunnable"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0LlAZFCEeuCTslxszDstQ" name="" memberEnd="_y0LlApFCEeuCTslxszDstQ _ytkmsJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0LlApFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0LlAZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0LlBJFCEeuCTslxszDstQ" name="" memberEnd="_y0LlBZFCEeuCTslxszDstQ _ytmb4JFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0LlBZFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0LlBJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0LlB5FCEeuCTslxszDstQ" name="" memberEnd="_y0LlCJFCEeuCTslxszDstQ _ytoREZFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0LlCJFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0LlB5FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0MMEZFCEeuCTslxszDstQ" name="" memberEnd="_y0MMEpFCEeuCTslxszDstQ _ytpfMZFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0MMEpFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0MMEZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0MMFJFCEeuCTslxszDstQ" name="" memberEnd="_y0MMFZFCEeuCTslxszDstQ _yt26kZFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0MMFZFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0MMFJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0MMF5FCEeuCTslxszDstQ" name="" memberEnd="_y0MMGJFCEeuCTslxszDstQ _yt4IsZFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0MMGJFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0MMF5FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0MzIZFCEeuCTslxszDstQ" name="" memberEnd="_y0MzIpFCEeuCTslxszDstQ _yt594JFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0MzIpFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0MzIZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0MzJJFCEeuCTslxszDstQ" name="" memberEnd="_y0MzJZFCEeuCTslxszDstQ _yt594pFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0MzJZFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0MzJJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0MzJ5FCEeuCTslxszDstQ" name="" memberEnd="_y0MzKJFCEeuCTslxszDstQ _yt9oQJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0MzKJFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0MzJ5FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0NaMZFCEeuCTslxszDstQ" name="" memberEnd="_y0NaMpFCEeuCTslxszDstQ _yuCgwJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0NaMpFCEeuCTslxszDstQ" name="" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0NaMZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0NaNJFCEeuCTslxszDstQ" name="" memberEnd="_y0NaNZFCEeuCTslxszDstQ _yuE9AZFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0NaNZFCEeuCTslxszDstQ" name="" type="_yQb-wJFCEeuCTslxszDstQ" association="_y0NaNJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0QdgZFCEeuCTslxszDstQ" name="" memberEnd="_y0QdgpFCEeuCTslxszDstQ _yvIs8pFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0QdgpFCEeuCTslxszDstQ" name="" type="_yV6Uo5FCEeuCTslxszDstQ" association="_y0QdgZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0QdhJFCEeuCTslxszDstQ" name="" memberEnd="_y0QdhZFCEeuCTslxszDstQ _yvJUAJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0QdhZFCEeuCTslxszDstQ" name="" type="_yV6Uo5FCEeuCTslxszDstQ" association="_y0QdhJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0REkZFCEeuCTslxszDstQ" name="" memberEnd="_y0REkpFCEeuCTslxszDstQ _yviVkJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0REkpFCEeuCTslxszDstQ" name="" type="_yWHwAJFCEeuCTslxszDstQ" association="_y0REkZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0RElJFCEeuCTslxszDstQ" name="" memberEnd="_y0RElZFCEeuCTslxszDstQ _yvi8oJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0RElZFCEeuCTslxszDstQ" name="" type="_yWHwAJFCEeuCTslxszDstQ" association="_y0RElJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0REl5FCEeuCTslxszDstQ" name="" memberEnd="_y0REmJFCEeuCTslxszDstQ _yvl_8JFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0REmJFCEeuCTslxszDstQ" name="" type="_yWQ58JFCEeuCTslxszDstQ" association="_y0REl5FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0RroZFCEeuCTslxszDstQ" name="" memberEnd="_y0RropFCEeuCTslxszDstQ _yvn1IJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0RropFCEeuCTslxszDstQ" name="" type="_yWQ58JFCEeuCTslxszDstQ" association="_y0RroZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0RrpJFCEeuCTslxszDstQ" name="" memberEnd="_y0RrpZFCEeuCTslxszDstQ _yvocMZFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0RrpZFCEeuCTslxszDstQ" name="" type="_yWQ58JFCEeuCTslxszDstQ" association="_y0RrpJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0Rrp5FCEeuCTslxszDstQ" name="" memberEnd="_y0RrqJFCEeuCTslxszDstQ _yvqRYJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0RrqJFCEeuCTslxszDstQ" name="" type="_yWSvIJFCEeuCTslxszDstQ" association="_y0Rrp5FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0SSsZFCEeuCTslxszDstQ" name="" memberEnd="_y0SSspFCEeuCTslxszDstQ _yvq4cZFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0SSspFCEeuCTslxszDstQ" name="" type="_yWSvIJFCEeuCTslxszDstQ" association="_y0SSsZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0SStJFCEeuCTslxszDstQ" name="" memberEnd="_y0SStZFCEeuCTslxszDstQ _yvrfgJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0SStZFCEeuCTslxszDstQ" name="" type="_yWSvIJFCEeuCTslxszDstQ" association="_y0SStJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0SSt5FCEeuCTslxszDstQ" name="" memberEnd="_y0SSuJFCEeuCTslxszDstQ _yvw_EJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0SSuJFCEeuCTslxszDstQ" name="" type="_yWbSApFCEeuCTslxszDstQ" association="_y0SSt5FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0S5wZFCEeuCTslxszDstQ" name="" memberEnd="_y0S5wpFCEeuCTslxszDstQ _yvyNMJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0S5wpFCEeuCTslxszDstQ" name="" type="_yWcgIJFCEeuCTslxszDstQ" association="_y0S5wZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0S5xJFCEeuCTslxszDstQ" name="" memberEnd="_y0S5xZFCEeuCTslxszDstQ _yv0CYJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0S5xZFCEeuCTslxszDstQ" name="" type="_yWe8YJFCEeuCTslxszDstQ" association="_y0S5xJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0S5x5FCEeuCTslxszDstQ" name="" memberEnd="_y0S5yJFCEeuCTslxszDstQ _yv0pcJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0S5yJFCEeuCTslxszDstQ" name="" type="_yWe8YJFCEeuCTslxszDstQ" association="_y0S5x5FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0Tg0ZFCEeuCTslxszDstQ" name="" memberEnd="_y0Tg0pFCEeuCTslxszDstQ _yv9MUJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0Tg0pFCEeuCTslxszDstQ" name="" type="_yWtl4JFCEeuCTslxszDstQ" association="_y0Tg0ZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0Tg1JFCEeuCTslxszDstQ" name="" memberEnd="_y0Tg1ZFCEeuCTslxszDstQ _ywAPoZFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0Tg1ZFCEeuCTslxszDstQ" name="" type="_yW3W4JFCEeuCTslxszDstQ" association="_y0Tg1JFCEeuCTslxszDstQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_mpjbMJFCEeuCTslxszDstQ" name="data">
            <packagedElement xmi:type="uml:Package" xmi:id="_m1NRkJFCEeuCTslxszDstQ" name="list">
              <packagedElement xmi:type="uml:Interface" xmi:id="_oTMSgJFCEeuCTslxszDstQ" name="Node">
                <ownedComment xmi:id="_sd8bsJFCEeuCTslxszDstQ">
                  <body>A node in a list.
 *
@author John Didion (jdidion@didion.net)</body>
                </ownedComment>
                <generalization xmi:id="_rbx0EJFCEeuCTslxszDstQ" general="_oxR8sJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oTM5kJFCEeuCTslxszDstQ" name="NodePrinter" isAbstract="true">
                <ownedComment xmi:id="_sd8bsZFCEeuCTslxszDstQ">
                  <body>A printer for displaying the contents of a node list.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sLmugJFCEeuCTslxszDstQ" name="defaultStream" visibility="private" type="_rbybIJFCEeuCTslxszDstQ" association="_shh7MZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sLnVkJFCEeuCTslxszDstQ" value="System.out"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sLojsZFCEeuCTslxszDstQ" name="defaultIndent" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sLpKwJFCEeuCTslxszDstQ" value="0"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZG_AJFCEeuCTslxszDstQ" name="NodePrinter" specification="_oTUOUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZG_AZFCEeuCTslxszDstQ" name="defaultIndent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sZG_ApFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.defaultIndent = defaultIndent;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZHmEJFCEeuCTslxszDstQ" name="NodePrinter" specification="_r4dwEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZHmEZFCEeuCTslxszDstQ" name="defaultStream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZHmEpFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.defaultStream = defaultStream;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZI0MJFCEeuCTslxszDstQ" name="NodePrinter" specification="_r4eXIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZI0MZFCEeuCTslxszDstQ" name="defaultStream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZI0MpFCEeuCTslxszDstQ" name="defaultIndent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sZI0M5FCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.defaultStream = defaultStream;
     this.defaultIndent = defaultIndent;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZJbQJFCEeuCTslxszDstQ" name="print" specification="_r4flQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZJbQZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>print(itr, defaultStream);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZKCUJFCEeuCTslxszDstQ" name="print" specification="_r4gMUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZKCUZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZKCUpFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>print(itr, stream, defaultIndent);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZKpYJFCEeuCTslxszDstQ" name="print" specification="_r4gzYZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZKpYZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZKpYpFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZKpY5FCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>print(itr, stream, indent, indent);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZLQcJFCEeuCTslxszDstQ" name="print" specification="_r4iBgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZLQcZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZLQcpFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>print(itr, indent, indent);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZL3gJFCEeuCTslxszDstQ" name="print" specification="_r4iokZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZL3gZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZL3gpFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sZL3g5FCEeuCTslxszDstQ" name="indentIncrement">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>print(itr, defaultStream, indent, indentIncrement);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZMekJFCEeuCTslxszDstQ" name="print" specification="_r4jPoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZMekZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZMekpFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZMek5FCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sZMelJFCEeuCTslxszDstQ" name="indentIncrement">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>NodeListIteratorWrapper&lt;E> pItr = new NodeListIteratorWrapper&lt;>(itr);
     // Find out where we currently are in the iterator
     int curNode = pItr.currentIndex();
     // Move to the first node in the iterator
     pItr.moveToBeginning();
     // print all the nodes
     while (itr.hasNext()) {
         print(stream, pItr.nextNode(), indent, indentIncrement);
     }
     // go back to our original position
     pItr.moveTo(curNode);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oTRyEJFCEeuCTslxszDstQ" name="NodePrinter">
                  <eAnnotations xmi:id="_oTSZIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oTSZIZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oTTnQJFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oTUOUJFCEeuCTslxszDstQ" name="NodePrinter" method="_sZG_AJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_oTU1YJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oTU1YZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oTUOUZFCEeuCTslxszDstQ" name="defaultIndent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oTVccJFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r4dwEJFCEeuCTslxszDstQ" name="NodePrinter" method="_sZHmEJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r4dwEpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r4dwE5FCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r4dwEZFCEeuCTslxszDstQ" name="defaultStream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4dwFJFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r4eXIJFCEeuCTslxszDstQ" name="NodePrinter" method="_sZI0MJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r4eXI5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r4eXJJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r4eXIZFCEeuCTslxszDstQ" name="defaultStream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4eXIpFCEeuCTslxszDstQ" name="defaultIndent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r4eXJZFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r4e-MZFCEeuCTslxszDstQ" name="print" visibility="protected" isAbstract="true">
                  <ownedComment xmi:id="_sd9CwJFCEeuCTslxszDstQ">
                    <body>Print the contents of the given node, indenting it &lt;var>indent&lt;/var> spaces.
     * In each recursive call to print, &lt;var>indent&lt;/var> should be incremented by
     * &lt;var>indentIncrement&lt;/var>.
     *
     * @param stream          stream to print to
     * @param node            node to print
     * @param indent          indent
     * @param indentIncrement indent increment</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4e-MpFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4e-M5FCEeuCTslxszDstQ" name="node" type="_r4eXJpFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4e-NJFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r4e-NZFCEeuCTslxszDstQ" name="indentIncrement">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4flQJFCEeuCTslxszDstQ" name="print" method="_sZJbQJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sd9CwZFCEeuCTslxszDstQ">
                    <body>Print the contents of &lt;var>itr&lt;/var> using the default indent
     *
     * @param itr iterator with nodes to print</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4flQZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r4gMUJFCEeuCTslxszDstQ" name="print" method="_sZKCUJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sd9CwpFCEeuCTslxszDstQ">
                    <body>Print the contents of &lt;var>itr&lt;/var> to the given stream
     *
     * @param stream stream to print to
     * @param itr    iterator with nodes to print</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4gMUZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4gMUpFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r4gzYZFCEeuCTslxszDstQ" name="print" method="_sZKpYJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sd9Cw5FCEeuCTslxszDstQ">
                    <body>Print the contents of &lt;var>itr&lt;/var> to the given stream indenting each line &lt;var>indent&lt;/var> spaces.
     *
     * @param stream stream to print to
     * @param indent indent
     * @param itr    iterator with nodes to print</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4gzYpFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4gzY5FCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4gzZJFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4iBgJFCEeuCTslxszDstQ" name="print" method="_sZLQcJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sd9p0JFCEeuCTslxszDstQ">
                    <body>Print the contents of &lt;var>itr&lt;/var> indenting each line &lt;var>indent&lt;/var> spaces.
     *
     * @param indent indent
     * @param itr    iterator with nodes to print</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4iBgZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4iBgpFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4iokZFCEeuCTslxszDstQ" name="print" method="_sZL3gJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sd9p0ZFCEeuCTslxszDstQ">
                    <body>Print the contents of &lt;var>itr&lt;/var> to the default stream. Indent the first line &lt;var>indent&lt;/var>
     * spaces. Each level of nesting will be printed intended &lt;var>indentIncrement&lt;/var> spaces more than
     * the previous level of nesting.
     *
     * @param indent          indent
     * @param indentIncrement indent increment
     * @param itr             iterator with nodes to print</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4iokpFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4iok5FCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r4iolJFCEeuCTslxszDstQ" name="indentIncrement">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4jPoJFCEeuCTslxszDstQ" name="print" method="_sZMekJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sd9p0pFCEeuCTslxszDstQ">
                    <body>Print the contents of &lt;var>itr&lt;/var> to the given stream. Indent the first line &lt;var>indent&lt;/var>
     * spaces. Each level of nesting will be printed intended &lt;var>indentIncrement&lt;/var> spaces more than
     * the previous level of nesting.
     *
     * @param stream          stream to print to
     * @param indent          indent
     * @param indentIncrement indent increment
     * @param itr             iterator with nodes to print</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4jPoZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4jPopFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4jPo5FCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r4jPpJFCEeuCTslxszDstQ" name="indentIncrement">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_oTdYQJFCEeuCTslxszDstQ" name="NodeListIteratorWrapper" visibility="private" isLeaf="true">
                  <eAnnotations xmi:id="_oTd_UJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oTd_UZFCEeuCTslxszDstQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_sd9p05FCEeuCTslxszDstQ">
                    <body>Wrapper for a NodeListIterator that allows the next pointer to be moved to any index.</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_sLsOEJFCEeuCTslxszDstQ" name="itr" visibility="private" isLeaf="true" type="_rbzCMJFCEeuCTslxszDstQ" isReadOnly="true" association="_shjJUZFCEeuCTslxszDstQ"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZNssJFCEeuCTslxszDstQ" name="NodeListIteratorWrapper" specification="_r4j2sJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sZNssZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_sZNsspFCEeuCTslxszDstQ" type="_oTdYQJFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>this.itr = itr;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZOTwJFCEeuCTslxszDstQ" name="nextNode" specification="_oThCoJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sZOTwZFCEeuCTslxszDstQ" type="_r4eXJpFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>return itr.next();
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZPh4JFCEeuCTslxszDstQ" name="previousNode" specification="_oTi30JFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sZPh4ZFCEeuCTslxszDstQ" type="_r4eXJpFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>return itr.previous();
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZQI8JFCEeuCTslxszDstQ" name="currentIndex" specification="_oTktAJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sZQI8ZFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return itr.nextIndex() - 1;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZQwAJFCEeuCTslxszDstQ" name="moveTo" specification="_oTnJQJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_sZQwAZFCEeuCTslxszDstQ" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_sZQwApFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (currentIndex() &lt; index) {
             while (currentIndex() &lt; index &amp;&amp; itr.hasNext()) {
                 itr.next();
             }
         } else if (currentIndex() > index) {
             while (currentIndex() > index &amp;&amp; itr.hasPrevious()) {
                 itr.previous();
             }
         }
         return currentIndex();
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZRXEJFCEeuCTslxszDstQ" name="moveToBeginning" specification="_oTo-cJFCEeuCTslxszDstQ">
                    <language>java</language>
                    <body>moveTo(-1);
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZRXEZFCEeuCTslxszDstQ" name="moveToFirst" specification="_oTplgJFCEeuCTslxszDstQ">
                    <language>java</language>
                    <body>moveTo(0);
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZRXEpFCEeuCTslxszDstQ" name="moveToLast" specification="_oTqzoJFCEeuCTslxszDstQ">
                    <language>java</language>
                    <body>// just give it a really big number since it will stop
         // when it gets to the end of the list
         moveTo(Integer.MAX_VALUE);
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_oThCoJFCEeuCTslxszDstQ" name="nextNode" method="_sZOTwJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_r4kdwJFCEeuCTslxszDstQ" type="_r4eXJpFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_oTi30JFCEeuCTslxszDstQ" name="previousNode" method="_sZPh4JFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_r4kdwZFCEeuCTslxszDstQ" type="_r4eXJpFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_oTktAJFCEeuCTslxszDstQ" name="currentIndex" method="_sZQI8JFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_oTktAZFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_oTnJQJFCEeuCTslxszDstQ" name="moveTo" method="_sZQwAJFCEeuCTslxszDstQ">
                    <ownedComment xmi:id="_sd-Q4JFCEeuCTslxszDstQ">
                      <body>Moves the iterator to a point in the iterator where the next index is &lt;var>index&lt;/var>.
         *
         * @param index the next index
         * @return current index</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_oTnJQZFCEeuCTslxszDstQ" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_oTnwUJFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_oTo-cJFCEeuCTslxszDstQ" name="moveToBeginning" method="_sZRXEJFCEeuCTslxszDstQ">
                    <ownedComment xmi:id="_sd-Q4ZFCEeuCTslxszDstQ">
                      <body>Move to the initial position in the list (where nextNode() returns the first node in the list</body>
                    </ownedComment>
                  </ownedOperation>
                  <ownedOperation xmi:id="_oTplgJFCEeuCTslxszDstQ" name="moveToFirst" method="_sZRXEZFCEeuCTslxszDstQ">
                    <ownedComment xmi:id="_sd-Q4pFCEeuCTslxszDstQ">
                      <body>Move to the first position in the iterator</body>
                    </ownedComment>
                  </ownedOperation>
                  <ownedOperation xmi:id="_oTqzoJFCEeuCTslxszDstQ" name="moveToLast" method="_sZRXEpFCEeuCTslxszDstQ">
                    <ownedComment xmi:id="_sd-Q45FCEeuCTslxszDstQ">
                      <body>Move to the last position in the iterator</body>
                    </ownedComment>
                  </ownedOperation>
                  <ownedOperation xmi:id="_r4j2sJFCEeuCTslxszDstQ" name="NodeListIteratorWrapper" method="_sZNssJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_r4j2spFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_r4j2s5FCEeuCTslxszDstQ" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_r4j2sZFCEeuCTslxszDstQ" name="itr" type="_rbzCMJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_r4j2tJFCEeuCTslxszDstQ" type="_oTdYQJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oUAx4JFCEeuCTslxszDstQ" name="PointerTargetNode">
                <ownedComment xmi:id="_sd-38JFCEeuCTslxszDstQ">
                  <body>A node in a &lt;code>PointerTargetNodeList&lt;/code>.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sL0w8JFCEeuCTslxszDstQ" name="target" visibility="private" isLeaf="true" type="_oNn2AJFCEeuCTslxszDstQ" isReadOnly="true" association="_shkXcZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sL1_EZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ" association="_seBUMJFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_rcCSwJFCEeuCTslxszDstQ" client="_oUAx4JFCEeuCTslxszDstQ" supplier="_oTMSgJFCEeuCTslxszDstQ" contract="_oTMSgJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZSlMJFCEeuCTslxszDstQ" name="PointerTargetNode" specification="_rcF9IJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZSlMZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZSlMpFCEeuCTslxszDstQ" type="_oUAx4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(target, null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZTMQJFCEeuCTslxszDstQ" name="PointerTargetNode" specification="_rcKOkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZTMQZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZTMQpFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZTMQ5FCEeuCTslxszDstQ" type="_oUAx4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.target = target;
     this.type = type;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZTzUJFCEeuCTslxszDstQ" name="getPointerTarget" specification="_oUG4gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZTzUZFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return target;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZUaYJFCEeuCTslxszDstQ" name="isLexical" specification="_oUIGoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZUaYZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return target instanceof Word;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZUaYpFCEeuCTslxszDstQ" name="getSynset" specification="_oUJUwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZUaY5FCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return target.getSynset();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZVBcJFCEeuCTslxszDstQ" name="getWord" specification="_oUKi4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZVBcZFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (isLexical()) {
         return (Word) target;
     } else {
         return null;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZVBcpFCEeuCTslxszDstQ" name="equals" specification="_r4sZkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZVBc5FCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZVBdJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (object instanceof PointerTargetNode) {
         PointerTargetNode node = (PointerTargetNode) object;
         return getPointerTarget().equals(node.getPointerTarget()) &amp;&amp; getType() == node.getType();
     }
     return false;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZVogJFCEeuCTslxszDstQ" name="toString" specification="_oUMYEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZVogZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return ResourceBundleSet.insertParams(&quot;[PointerTargetNode: {0} {1}]&quot;, new Object[]{getPointerTarget(), getType()});
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZWPkJFCEeuCTslxszDstQ" name="hashCode" specification="_oUNmMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZWPkZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getPointerTarget().hashCode() ^ getType().hashCode();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZWPkpFCEeuCTslxszDstQ" name="clone" specification="_oUO0UJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZWPk5FCEeuCTslxszDstQ" type="_oUAx4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return (PointerTargetNode) super.clone();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZW2oJFCEeuCTslxszDstQ" name="deepClone" specification="_oUQCcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZW2oZFCEeuCTslxszDstQ" type="_oUAx4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oUG4gJFCEeuCTslxszDstQ" name="getPointerTarget" method="_sZTzUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rcN48JFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oUIGoJFCEeuCTslxszDstQ" name="isLexical" method="_sZUaYJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seCiUJFCEeuCTslxszDstQ">
                    <body>Returns true if the target is a Word, else false.
     *
     * @return true if the target is a Word, else false</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_oUItsJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUJUwJFCEeuCTslxszDstQ" name="getSynset" method="_sZUaYpFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seCiUZFCEeuCTslxszDstQ">
                    <body>If the target is a synset, return it, otherwise it's a word
     * so return the word's parent synset.
     *
     * @return If the target is a synset, return it, otherwise it's a word so return the word's parent synset</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4rLcJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oUKi4JFCEeuCTslxszDstQ" name="getWord" method="_sZVBcJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seDJYJFCEeuCTslxszDstQ">
                    <body>If the target is a word, return it, otherwise return null.
     *
     * @return if the target is a word, return it, otherwise return null</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rcOgAJFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oUMYEJFCEeuCTslxszDstQ" name="toString" method="_sZVogJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oUM_IJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUNmMJFCEeuCTslxszDstQ" name="hashCode" method="_sZWPkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oUONQJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUO0UJFCEeuCTslxszDstQ" name="clone" method="_sZWPkpFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rcPuIJFCEeuCTslxszDstQ" type="_oUAx4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oUQCcJFCEeuCTslxszDstQ" name="deepClone" method="_sZW2oJFCEeuCTslxszDstQ" raisedException="_r4wrAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rcQVMJFCEeuCTslxszDstQ" type="_oUAx4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rcF9IJFCEeuCTslxszDstQ" name="PointerTargetNode" method="_sZSlMJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rcHLQJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rcHyUJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rcGkMJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rcHyUZFCEeuCTslxszDstQ" type="_oUAx4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rcKOkJFCEeuCTslxszDstQ" name="PointerTargetNode" method="_sZTMQJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rcMq0JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rcMq0ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rcK1oJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rcLcsJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rcMq0pFCEeuCTslxszDstQ" type="_oUAx4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r4sZkJFCEeuCTslxszDstQ" name="equals" method="_sZVBcpFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seDJYZFCEeuCTslxszDstQ">
                    <body>Two PointerTargetNodes are equal if they have the same type and PointerTarget</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4sZkZFCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r4tAoJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oUc2wJFCEeuCTslxszDstQ" name="PointerTargetNodeList">
                <ownedComment xmi:id="_seDwcJFCEeuCTslxszDstQ">
                  <body>A &lt;code>PointerTargetNodeList&lt;/code> holds the results of a relationship method.
Each node contains a &lt;code>PointerTarget&lt;/code> (a synset or word) and the type of
relationship that the node has to the other elements in the list and/or to
the source word.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_r5JskJFCEeuCTslxszDstQ" general="_reZDMJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sL8FsJFCEeuCTslxszDstQ" name="PRINTER" visibility="private" isLeaf="true" isStatic="true" type="_oTM5kJFCEeuCTslxszDstQ" isReadOnly="true" association="_shllkZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sL_wEJFCEeuCTslxszDstQ" value="new NodePrinter&lt;PointerTargetNode>(System.out, 2) {&#xA;                public void print(PrintStream stream, PointerTargetNode node, int indent, int indentIncrement) {&#xA;                    printIndented(stream, node, indent);&#xA;                }&#xA;            }"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rcZfIJFCEeuCTslxszDstQ" client="_oUc2wJFCEeuCTslxszDstQ" supplier="_oxR8sJFCEeuCTslxszDstQ" contract="_oxR8sJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZXdsJFCEeuCTslxszDstQ" name="PointerTargetNodeList" specification="_oUf6EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZXdsZFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZYEwJFCEeuCTslxszDstQ" name="PointerTargetNodeList" specification="_r43YsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZYEwZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZYEwpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(c);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZYr0JFCEeuCTslxszDstQ" name="PointerTargetNodeList" specification="_r47DEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZYr0ZFCEeuCTslxszDstQ" name="targets" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZYr0pFCEeuCTslxszDstQ" name="pointerType" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZYr05FCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this();
     for (PointerTarget target : targets) {
         add(target, pointerType);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZYr1JFCEeuCTslxszDstQ" name="add" specification="_rcha8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZYr1ZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZYr1pFCEeuCTslxszDstQ" name="pointerType" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>add(new PointerTargetNode(target, pointerType));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZZS4JFCEeuCTslxszDstQ" name="printIndented" specification="_r5BJsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZZS4ZFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZZS4pFCEeuCTslxszDstQ" name="node" type="_oUAx4JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZZS45FCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>char[] c = new char[indent >= 0 ? indent : 0];
     Arrays.fill(c, ' ');
     stream.println(new String(c) + node);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZahAJFCEeuCTslxszDstQ" name="getNodePrinter" specification="_oUjkcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZahAZFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return PRINTER;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZahApFCEeuCTslxszDstQ" name="print" specification="_oUmnwJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>getNodePrinter().print(listIterator());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZbIEJFCEeuCTslxszDstQ" name="print" specification="_oUnO0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZbIEZFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>getNodePrinter().print(listIterator(), indent);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZbvIJFCEeuCTslxszDstQ" name="print" specification="_r5Dl8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZbvIZFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>getNodePrinter().print(listIterator(), stream);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZcWMJFCEeuCTslxszDstQ" name="print" specification="_r5E0EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZcWMZFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZcWMpFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>getNodePrinter().print(listIterator(), stream, indent);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZc9QJFCEeuCTslxszDstQ" name="print" specification="_r5HQUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZc9QZFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZc9QpFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sZc9Q5FCEeuCTslxszDstQ" name="indentIncrement">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>getNodePrinter().print(listIterator(), stream, indent, indentIncrement);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZdkUJFCEeuCTslxszDstQ" name="reverse" specification="_oUprEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZdkUZFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetNodeList clone = this.clone();
     Collections.reverse(clone);
     return clone;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZeLYJFCEeuCTslxszDstQ" name="clone" specification="_oUq5MJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZeLYZFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return (PointerTargetNodeList) super.clone();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZeycJFCEeuCTslxszDstQ" name="deepClone" specification="_oUujkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZeycZFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetNodeList list = new PointerTargetNodeList();
     for (PointerTargetNode o : this) {
         list.add(o.clone());
     }
     return list;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oUf6EJFCEeuCTslxszDstQ" name="PointerTargetNodeList" method="_sZXdsJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_oUghIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oUghIZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oUghIpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oUjkcJFCEeuCTslxszDstQ" name="getNodePrinter" visibility="protected" method="_sZahAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rclsYJFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oUmnwJFCEeuCTslxszDstQ" name="print" method="_sZahApFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_oUnO0JFCEeuCTslxszDstQ" name="print" method="_sZbIEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oUnO0ZFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUprEJFCEeuCTslxszDstQ" name="reverse" method="_sZdkUJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seEXgJFCEeuCTslxszDstQ">
                    <body>Reverses the contents of this list. This function creates a copy of
     * this list and reverses it, so there are no changes made to this list
     * itself.
     *
     * @return reversed list</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rcoIoJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oUq5MJFCEeuCTslxszDstQ" name="clone" method="_sZeLYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rcpWwJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oUujkJFCEeuCTslxszDstQ" name="deepClone" method="_sZeycJFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rcp90JFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rcha8JFCEeuCTslxszDstQ" name="add" method="_sZYr1JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rciCAJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rciCAZFCEeuCTslxszDstQ" name="pointerType" type="_oONE0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r43YsJFCEeuCTslxszDstQ" name="PointerTargetNodeList" method="_sZYEwJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r43_wJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r43_wZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r43YsZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r43_wpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r47DEJFCEeuCTslxszDstQ" name="PointerTargetNodeList" method="_sZYr0JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r48RMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r48RMZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r47qIJFCEeuCTslxszDstQ" name="targets" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r47qIZFCEeuCTslxszDstQ" name="pointerType" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r48RMpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r5BJsJFCEeuCTslxszDstQ" name="printIndented" visibility="protected" isStatic="true" method="_sZZS4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r5BJsZFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5BwwJFCEeuCTslxszDstQ" name="node" type="_oUAx4JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5BwwZFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5Dl8JFCEeuCTslxszDstQ" name="print" method="_sZbvIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r5Dl8ZFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r5E0EJFCEeuCTslxszDstQ" name="print" method="_sZcWMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r5E0EZFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5FbIJFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5HQUJFCEeuCTslxszDstQ" name="print" visibility="protected" method="_sZc9QJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r5HQUZFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5HQUpFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r5H3YJFCEeuCTslxszDstQ" name="indentIncrement">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oU-bMJFCEeuCTslxszDstQ" name="PointerTargetTree">
                <ownedComment xmi:id="_seE-kJFCEeuCTslxszDstQ">
                  <body>A container for the root node of a pointer target tree.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sMEokJFCEeuCTslxszDstQ" name="rootNode" isLeaf="true" type="_oVexgJFCEeuCTslxszDstQ" isReadOnly="true" association="_shnawZFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZgAkZFCEeuCTslxszDstQ" name="PointerTargetTree" specification="_rc3ZMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZgAkpFCEeuCTslxszDstQ" name="rootNode" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZgAk5FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.rootNode = rootNode;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZgnoJFCEeuCTslxszDstQ" name="PointerTargetTree" specification="_r5N-AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZgnoZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZgnopFCEeuCTslxszDstQ" name="list" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZgno5FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>rootNode = new PointerTargetTreeNode(synset);
     rootNode.setChildTreeList(list);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZhOsJFCEeuCTslxszDstQ" name="equals" specification="_r5RBUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZhOsZFCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZhOspFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (obj instanceof PointerTargetTree) &amp;&amp; rootNode.equals(((PointerTargetTree) obj).getRootNode());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZh1wJFCEeuCTslxszDstQ" name="hashCode" specification="_oVD6wJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZh1wZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return rootNode.hashCode();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZic0JFCEeuCTslxszDstQ" name="getFirstMatch" specification="_rc9f0ZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZic0ZFCEeuCTslxszDstQ" name="opr" type="_rc7DkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZic0pFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetTreeNode obj = opr.execute(getRootNode());
     if (obj == null &amp;&amp; getRootNode().hasValidChildTreeList()) {
         obj = getRootNode().getChildTreeList().getFirstMatch(opr);
     }
     return obj;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZjD4JFCEeuCTslxszDstQ" name="getAllMatches" specification="_rdAjIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZjD4ZFCEeuCTslxszDstQ" name="opr" type="_rc7DkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZjD4pFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sZjD45FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;PointerTargetTreeNode> list = new ArrayList&lt;>();
     if (opr.execute(getRootNode()) != null) {
         list.add(getRootNode());
     }
     if (getRootNode().hasValidChildTreeList()) {
         getRootNode().getChildTreeList().getAllMatches(opr, list);
     }
     return list;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZjD5JFCEeuCTslxszDstQ" name="findFirst" specification="_rdMJUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZjq8JFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZjq8ZFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return getFirstMatch(new PointerTargetTreeNodeList.FindNodeOperation(node));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZkSAJFCEeuCTslxszDstQ" name="findFirst" specification="_rdQawJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZkSAZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZkSApFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return getFirstMatch(new PointerTargetTreeNodeList.FindTargetOperation(target));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZk5EJFCEeuCTslxszDstQ" name="findAll" specification="_rdS3AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZk5EZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZk5EpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sZk5E5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getAllMatches(new PointerTargetTreeNodeList.FindNodeOperation(node));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZlgIJFCEeuCTslxszDstQ" name="findAll" specification="_rdWhYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZlgIZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZlgIpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sZlgI5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getAllMatches(new PointerTargetTreeNodeList.FindTargetOperation(target));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZmHMJFCEeuCTslxszDstQ" name="print" specification="_oVKocJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (getRootNode() != null) {
         System.out.println(getRootNode());
         getRootNode().getChildTreeList().print();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZmHMZFCEeuCTslxszDstQ" name="reverse" specification="_oVL2kJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZmuQJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sZmuQZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;PointerTargetNodeList> list = toList();
     if (list != null) {
         List&lt;PointerTargetNodeList> reversedLists = new ArrayList&lt;>(list.size());
         for (PointerTargetNodeList l : list) {
             reversedLists.add(l.reverse());
         }
         return reversedLists;
     }
     return null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZnVUJFCEeuCTslxszDstQ" name="toList" specification="_oVNrwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZnVUZFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sZnVUpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;PointerTargetNodeList> list = getRootNode().toList(new PointerTargetNodeList());
     // since the tree could have been made up of multiple types, we need to set the type of
     // the root node now that we're breaking the tree down into lists that can only be of
     // one type
     for (PointerTargetNodeList aList : list) {
         if (aList.size() >= 2) {
             PointerTargetNode root = aList.get(0);
             PointerTargetNode node = aList.get(1);
             root.setType(node.getType());
         }
     }
     return list;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oVD6wJFCEeuCTslxszDstQ" name="hashCode" method="_sZh1wJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oVEh0JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oVKocJFCEeuCTslxszDstQ" name="print" method="_sZmHMJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_oVL2kJFCEeuCTslxszDstQ" name="reverse" method="_sZmHMZFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seGMs5FCEeuCTslxszDstQ">
                    <body>Reverse this tree. A reversal is done by converting this tree to lists
     * and then reversing each of the lists. The structure of the tree is
     * unaffected by this operation.
     *
     * @return reversed lists</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_oVMdoJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVMdoZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oVNrwJFCEeuCTslxszDstQ" name="toList" method="_sZnVUJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seGMtJFCEeuCTslxszDstQ">
                    <body>Convert this tree to a list of PointerTargetNodeLists. This creates one list for each
     * unique path through the tree.
     *
     * @return list of PointerTargetNodeLists</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_oVOS0JFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVO54JFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rc3ZMJFCEeuCTslxszDstQ" name="PointerTargetTree" method="_sZgAkZFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rc4nUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rc4nUZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rc4AQJFCEeuCTslxszDstQ" name="rootNode" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rc4nUpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rc9f0ZFCEeuCTslxszDstQ" name="getFirstMatch" method="_sZic0JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seE-kZFCEeuCTslxszDstQ">
                    <body>Walks the tree and performs the operation &lt;var>opr&lt;/var> on
     * each node. Continues until either opr returns a non-null
     * value, or it reaches the last node in the tree.
     *
     * @param opr operation to execute
     * @return operation result</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rc-G4JFCEeuCTslxszDstQ" name="opr" type="_rc7DkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rc-G4ZFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rdAjIJFCEeuCTslxszDstQ" name="getAllMatches" method="_sZjD4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seE-kpFCEeuCTslxszDstQ">
                    <body>Walks the tree and performs the operation &lt;var>opr&lt;/var> on each node.
     * Searches the tree exhaustively and returns a List containing all nodes
     * that are returned by &lt;var>opr&lt;/var>.
     *
     * @param opr operation to execute
     * @return list of operation results</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rdBKMJFCEeuCTslxszDstQ" name="opr" type="_rc7DkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdBxQJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdBxQZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rdMJUJFCEeuCTslxszDstQ" name="findFirst" method="_sZjD5JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seFloJFCEeuCTslxszDstQ">
                    <body>Finds the first occurrence of &lt;var>node&lt;/var> in the tree.
     *
     * @param node node to search for
     * @return the first occurrence of &lt;var>node&lt;/var> in the tree</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rdMwYJFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdN-gJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rdQawJFCEeuCTslxszDstQ" name="findFirst" method="_sZkSAJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seGMsJFCEeuCTslxszDstQ">
                    <body>Finds the first node in the tree whose target is &lt;var>target&lt;/var>.
     *
     * @param target target to search for
     * @return the first node in the tree whose target is &lt;var>target&lt;/var></body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rdQawZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdRo4JFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rdS3AJFCEeuCTslxszDstQ" name="findAll" method="_sZk5EJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seGMsZFCEeuCTslxszDstQ">
                    <body>Finds all occurrences of &lt;var>node&lt;/var> in the tree.
     *
     * @param node node to search for
     * @return all occurrences of &lt;var>node&lt;/var> in the tree</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rdTeEJFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdUFIJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdUFIZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rdWhYJFCEeuCTslxszDstQ" name="findAll" method="_sZlgIJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seGMspFCEeuCTslxszDstQ">
                    <body>Finds all nodes in the tree whose target is &lt;var>target&lt;/var>.
     *
     * @param target target to search for
     * @return all nodes in the tree whose target is &lt;var>target&lt;/var></body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rdXIcJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdXvgJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdXvgZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5N-AJFCEeuCTslxszDstQ" name="PointerTargetTree" method="_sZgnoJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r5PMIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r5PMIZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r5OlEJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5OlEZFCEeuCTslxszDstQ" name="list" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5PMIpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r5RBUJFCEeuCTslxszDstQ" name="equals" method="_sZhOsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r5RoYJFCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5Y9IJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oVexgJFCEeuCTslxszDstQ" name="PointerTargetTreeNode">
                <ownedComment xmi:id="_seGzwJFCEeuCTslxszDstQ">
                  <body>A node in a &lt;code>PointerTargetTreeNodeList&lt;/code>. Each node can have a childTreeList, which is a list of nodes that
are children of this node, and a pointerTreeList, which is a tree of pointers related to this node's
target. Basically, this allows for a single tree supporting multiple relationships. For example, you
may have a ancestry tree, and each node, besides having links to its children, has links to the
synonyms of its target.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_reLn0JFCEeuCTslxszDstQ" general="_oUAx4JFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sMI6AJFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ" association="_seHa0JFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sMJhEJFCEeuCTslxszDstQ" name="pointerTreeList" type="_oWVGEJFCEeuCTslxszDstQ" association="_seIo8JFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sMKIIJFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ" association="_seJQAJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZojcJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" specification="_rdnAEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZojcZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZojcpFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZojc5FCEeuCTslxszDstQ" name="pointerTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZojdJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZojdZFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZojdpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(target, type);
     this.parent = parent;
     this.childTreeList = childTreeList;
     this.pointerTreeList = pointerTreeList;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZpKgJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" specification="_rdwKAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZpKgZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZpKgpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(target, null, null, null, null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZqYoJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" specification="_rdymQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZqYoZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZqYopFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZqYo5FCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(target, null, null, type, null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZq_sJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" specification="_rd1CgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZq_sZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZq_spFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZq_s5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZq_tJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(target, childTreeList, null, type, null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZrmwJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" specification="_rd5T8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZrmwZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZrmwpFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZrmw5FCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZrmxJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(target, null, null, type, parent);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZuqEJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" specification="_rd8XQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZuqEZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZuqEpFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZuqE5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZuqFJFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZuqFZFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(target, childTreeList, null, type, parent);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZv4MJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" specification="_reABoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZv4MZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZv4MpFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZv4M5FCEeuCTslxszDstQ" name="pointerTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZv4NJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZv4NZFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(target, childTreeList, pointerTreeList, type, null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZxGUJFCEeuCTslxszDstQ" name="equals" specification="_r5g48JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZxGUZFCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZxGUpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (obj instanceof PointerTargetTreeNode) &amp;&amp; super.equals(obj);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZxtYJFCEeuCTslxszDstQ" name="toString" specification="_oVweUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZxtYZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return ResourceBundleSet.insertParams(
             &quot;[PointerTargetTreeNode: {0} {1} [Has Parent? {2}] [Has Children? {3}] [Has Pointers? {4}]]&quot;,
             new Object[]{
                     getPointerTarget(),
                     getType(),
                     !hasParent(),
                     hasValidChildTreeList(),
                     hasValidPointerTreeList()
             });
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZyUcJFCEeuCTslxszDstQ" name="hasChildTreeList" specification="_oVxscJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZyUcZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (getChildTreeList() != null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZy7gJFCEeuCTslxszDstQ" name="hasValidChildTreeList" specification="_oVy6kJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZy7gZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return hasChildTreeList() &amp;&amp; !getChildTreeList().isEmpty();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZzikJFCEeuCTslxszDstQ" name="hasPointerTreeList" specification="_oV0IsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZzikZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (getPointerTreeList() != null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ0JoJFCEeuCTslxszDstQ" name="hasValidPointerTreeList" specification="_oV0vwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ0JoZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return hasPointerTreeList() &amp;&amp; !getPointerTreeList().isEmpty();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ0wsJFCEeuCTslxszDstQ" name="hasParent" specification="_oV194JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ0wsZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (getParent() != null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ0wspFCEeuCTslxszDstQ" name="toList" specification="_reETEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ0ws5FCEeuCTslxszDstQ" name="list" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ0wtJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sZ0wtZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>list.add(getPointerTarget(), getType());
     List&lt;PointerTargetNodeList> l = new ArrayList&lt;>();
     if (hasValidChildTreeList()) {
         final PointerTargetTreeNodeList childTreeList = getChildTreeList();
         for (final PointerTargetTreeNode pointerTargetTreeNode : childTreeList) {
             l.addAll(pointerTargetTreeNode.toList(list.clone()));
         }
     } else {
         l.add(list);
     }
     return l;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ1-0JFCEeuCTslxszDstQ" name="clone" specification="_oV2k8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ1-0ZFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return (PointerTargetTreeNode) super.clone();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ2l4JFCEeuCTslxszDstQ" name="deepClone" specification="_oV3zEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ2l4ZFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return new PointerTargetTreeNode(getPointerTarget(),
             getChildTreeList().deepClone(),
             getPointerTreeList().deepClone(),
             getType(), getParent().deepClone());

 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oVweUJFCEeuCTslxszDstQ" name="toString" method="_sZxtYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oVxFYJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oVxscJFCEeuCTslxszDstQ" name="hasChildTreeList" method="_sZyUcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oVyTgJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oVy6kJFCEeuCTslxszDstQ" name="hasValidChildTreeList" method="_sZy7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oVzhoJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oV0IsJFCEeuCTslxszDstQ" name="hasPointerTreeList" method="_sZzikJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oV0IsZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oV0vwJFCEeuCTslxszDstQ" name="hasValidPointerTreeList" method="_sZ0JoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oV0vwZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oV194JFCEeuCTslxszDstQ" name="hasParent" method="_sZ0wsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oV194ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oV2k8JFCEeuCTslxszDstQ" name="clone" method="_sZ1-0JFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_reJyoJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oV3zEJFCEeuCTslxszDstQ" name="deepClone" method="_sZ2l4JFCEeuCTslxszDstQ" raisedException="_r4wrAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_reLAwJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rdnAEJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" method="_sZojcJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rduU0JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rduU0ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rdnnIJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdo1QJFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdo1QZFCEeuCTslxszDstQ" name="pointerTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdpcUJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdqDYJFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdu74JFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rdwKAJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" method="_sZpKgJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rdxYIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rdxYIZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rdwxEJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdxYIpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rdymQJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" method="_sZqYoJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rdz0YJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rdz0YZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rdzNUJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdzNUZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rdz0YpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rd1CgJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" method="_sZq_sJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rd3ewJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rd3ewZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rd2QoJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd23sJFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd23sZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd3ewpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rd5T8JFCEeuCTslxszDstQ" name="PointerTargetTreeNode" method="_sZrmwJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rd6iEJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rd6iEZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rd5T8ZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd57AJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd57AZFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd6iEpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rd8XQJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" method="_sZuqEJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rd-McJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rd-McZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rd8-UJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd8-UZFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd9lYJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd9lYZFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rd-zgJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_reABoJFCEeuCTslxszDstQ" name="PointerTargetTreeNode" method="_sZv4MJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_reB20JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_reB20ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_reAosJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_reAosZFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_reBPwJFCEeuCTslxszDstQ" name="pointerTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_reBPwZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_reB20pFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_reETEJFCEeuCTslxszDstQ" name="toList" method="_sZ0wspFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_reETEZFCEeuCTslxszDstQ" name="list" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_reFhMJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_reGIQJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5g48JFCEeuCTslxszDstQ" name="equals" method="_sZxGUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r5g48ZFCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5hgAJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oWVGEJFCEeuCTslxszDstQ" name="PointerTargetTreeNodeList">
                <ownedComment xmi:id="_seLsQJFCEeuCTslxszDstQ">
                  <body>A list of &lt;code>PointerTargetTreeNode&lt;/code>s.
 *
@author John Didion (jdidion@didion.net)</body>
                </ownedComment>
                <generalization xmi:id="_r52QIJFCEeuCTslxszDstQ" general="_reZDMJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sMPAoJFCEeuCTslxszDstQ" name="PRINTER" visibility="private" isLeaf="true" isStatic="true" type="_oTM5kJFCEeuCTslxszDstQ" isReadOnly="true" association="_shp3AJFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sMQ10JFCEeuCTslxszDstQ" value="new NodePrinter&lt;PointerTargetTreeNode>(2) {&#xA;                public void print(PrintStream stream, PointerTargetTreeNode node, int indent, int indentIncrement) {&#xA;                    PointerTargetNodeList.printIndented(stream, node, indent);&#xA;                    if (node.hasValidChildTreeList()) {&#xA;                        node.getChildTreeList().print(stream, indent + indentIncrement, indentIncrement);&#xA;                    }&#xA;                }&#xA;            }"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_red7sJFCEeuCTslxszDstQ" client="_oWVGEJFCEeuCTslxszDstQ" supplier="_oxR8sJFCEeuCTslxszDstQ" contract="_oxR8sJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ5CIJFCEeuCTslxszDstQ" name="PointerTargetTreeNodeList" specification="_oWYwcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ5CIZFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ5pMJFCEeuCTslxszDstQ" name="PointerTargetTreeNodeList" specification="_r5oNsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ5pMZFCEeuCTslxszDstQ" name="list" type="_reZDMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ5pMpFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(list);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ6QQJFCEeuCTslxszDstQ" name="add" specification="_rejbQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ6QQZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>add(new PointerTargetTreeNode(target));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ63UJFCEeuCTslxszDstQ" name="add" specification="_rel3gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ63UZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ63UpFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>add(new PointerTargetTreeNode(target, type));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ7eYJFCEeuCTslxszDstQ" name="add" specification="_reph4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ7eYZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ7eYpFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ7eY5FCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>add(new PointerTargetTreeNode(target, type, parent));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ8FcJFCEeuCTslxszDstQ" name="add" specification="_reslMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ8FcZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ8FcpFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ8Fc5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>add(new PointerTargetTreeNode(target, childTreeList, type));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ8sgJFCEeuCTslxszDstQ" name="add" specification="_rexdsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ8sgZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ8sgpFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ8sg5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ8shJFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>add(new PointerTargetTreeNode(target, childTreeList, type, parent));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ9TkJFCEeuCTslxszDstQ" name="add" specification="_re2WMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ9TkZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ9TkpFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ9Tk5FCEeuCTslxszDstQ" name="pointerTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ9TlJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>add(new PointerTargetTreeNode(target, childTreeList, pointerTreeList, type));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ-hsJFCEeuCTslxszDstQ" name="add" specification="_re7OsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ-hsZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ-hspFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ-hs5FCEeuCTslxszDstQ" name="pointerTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ-htJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ-htZFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>add(new PointerTargetTreeNode(target, childTreeList, pointerTreeList, type, parent));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ_IwJFCEeuCTslxszDstQ" name="getNodePrinter" specification="_oWgsQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ_IwZFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return PRINTER;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZ_v0JFCEeuCTslxszDstQ" name="getFirstMatch" specification="_rfAHMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sZ_v0ZFCEeuCTslxszDstQ" name="opr" type="_oWrrYJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sZ_v0pFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>for (final PointerTargetTreeNode node : this) {
         final PointerTargetTreeNode obj = opr.execute(node);
         if (obj != null) {
             return obj;
         } else if (node.hasValidChildTreeList()) {
             return node.getChildTreeList().getFirstMatch(opr);
         }
     }
     return null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saAW4JFCEeuCTslxszDstQ" name="getAllMatches" specification="_rfEYoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saAW4ZFCEeuCTslxszDstQ" name="opr" type="_oWrrYJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saAW4pFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_saAW45FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;PointerTargetTreeNode> list = new ArrayList&lt;>();
     getAllMatches(opr, list);
     return list;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saA98JFCEeuCTslxszDstQ" name="getAllMatches" specification="_r5uUUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saA98ZFCEeuCTslxszDstQ" name="opr" type="_oWrrYJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saA98pFCEeuCTslxszDstQ" name="matches" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>for (final PointerTargetTreeNode node : this) {
         final PointerTargetTreeNode obj = opr.execute(node);
         if (obj != null) {
             matches.add(obj);
         }
         if (node.hasValidChildTreeList()) {
             node.getChildTreeList().getAllMatches(opr, matches);
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saBlAJFCEeuCTslxszDstQ" name="findFirst" specification="_rfJ4MJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saBlAZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saBlApFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetTreeNode obj = getFirstMatch(new FindNodeOperation(node));
     return obj;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saCMEJFCEeuCTslxszDstQ" name="findAll" specification="_rfM7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saCMEZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saCMEpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_saCME5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;PointerTargetTreeNode> v = getAllMatches(new FindNodeOperation(node));
     if (v == null) {
         return null;
     } else {
         return v;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saCzIJFCEeuCTslxszDstQ" name="clone" specification="_oWooEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saCzIZFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return (PointerTargetTreeNodeList) super.clone();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saDaMJFCEeuCTslxszDstQ" name="deepClone" specification="_oWp2MJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saDaMZFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetTreeNodeList list = new PointerTargetTreeNodeList();
     for (PointerTargetTreeNode o : this) {
         list.add(o.deepClone());
     }
     return list;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saGdg5FCEeuCTslxszDstQ" name="print" specification="_oW8KEJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>getNodePrinter().print(listIterator());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saHEkJFCEeuCTslxszDstQ" name="print" specification="_r50a8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saHEkZFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saHEkpFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_saHEk5FCEeuCTslxszDstQ" name="indentIncrement">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>getNodePrinter().print(listIterator(), stream, indent, indentIncrement);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oWYwcJFCEeuCTslxszDstQ" name="PointerTargetTreeNodeList" method="_sZ5CIJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_oWZXgJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oWZXgZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oWZXgpFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oWgsQJFCEeuCTslxszDstQ" name="getNodePrinter" visibility="protected" method="_sZ_IwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_re_gIJFCEeuCTslxszDstQ" type="_oTM5kJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oWooEJFCEeuCTslxszDstQ" name="clone" method="_saCzIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rfP-0JFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oWp2MJFCEeuCTslxszDstQ" name="deepClone" method="_saDaMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rfQl4JFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oW8KEJFCEeuCTslxszDstQ" name="print" visibility="protected" method="_saGdg5FCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_rejbQJFCEeuCTslxszDstQ" name="add" method="_sZ6QQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rekCUJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rel3gJFCEeuCTslxszDstQ" name="add" method="_sZ63UJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_remekJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_renFoJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_reph4JFCEeuCTslxszDstQ" name="add" method="_sZ7eYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_reqI8JFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_reqwAJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_reqwAZFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_reslMJFCEeuCTslxszDstQ" name="add" method="_sZ8FcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_retMQJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_retMQZFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_retMQpFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rexdsJFCEeuCTslxszDstQ" name="add" method="_sZ8sgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rexdsZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_reyEwJFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_reyr0JFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rezS4JFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_re2WMJFCEeuCTslxszDstQ" name="add" method="_sZ9TkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_re29QJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_re29QZFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_re3kUJFCEeuCTslxszDstQ" name="pointerTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_re4LYJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_re7OsJFCEeuCTslxszDstQ" name="add" method="_sZ-hsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_re7OsZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_re8c0JFCEeuCTslxszDstQ" name="childTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_re8c0ZFCEeuCTslxszDstQ" name="pointerTreeList" type="_oWVGEJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_re8c0pFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_re9D4JFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rfAHMJFCEeuCTslxszDstQ" name="getFirstMatch" method="_sZ_v0JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seMTUJFCEeuCTslxszDstQ">
                    <body>Walks the list and all the children of each node in the list and
     * performs the operation &lt;code>opr&lt;/code> on each node. Continues until
     * either opr returns a non-null value, or it reaches the last node in the list.
     *
     * @param opr operation to execute
     * @return operation result</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rfAHMZFCEeuCTslxszDstQ" name="opr" type="_oWrrYJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rfAuQJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rfEYoJFCEeuCTslxszDstQ" name="getAllMatches" method="_saAW4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seMTUZFCEeuCTslxszDstQ">
                    <body>Walks the list and performs the operation &lt;code>opr&lt;/code> on each node.
     * Searches the list exhaustively and return a List containing all nodes
     * that are returned by &lt;code>opr&lt;/code>.
     *
     * @param opr operation
     * @return list of operation results</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rfE_sJFCEeuCTslxszDstQ" name="opr" type="_oWrrYJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rfFmwJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rfFmwZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rfJ4MJFCEeuCTslxszDstQ" name="findFirst" method="_saBlAJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seMTU5FCEeuCTslxszDstQ">
                    <body>Finds the first node in the list that is equal to &lt;code>node&lt;/code>.
     * &lt;code>node&lt;/code> is considered to match a node in the list
     * if they contain equal pointer targets and are of the same type.
     *
     * @param node node to search for
     * @return the first node in the list that is equal to &lt;code>node&lt;/code></body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rfKfQJFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rfLGUJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rfM7gJFCEeuCTslxszDstQ" name="findAll" method="_saCMEJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seM6YJFCEeuCTslxszDstQ">
                    <body>Finds all occurrences of &lt;code>node&lt;/code> within the list.
     *
     * @param node node to search for
     * @return all occurrences of &lt;code>node&lt;/code> within the list</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rfM7gZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rfOJoJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rfOwsJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r5oNsJFCEeuCTslxszDstQ" name="PointerTargetTreeNodeList" method="_sZ5pMJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r5o0wJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r5o0wZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r5oNsZFCEeuCTslxszDstQ" name="list" type="_reZDMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5pb0JFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r5uUUJFCEeuCTslxszDstQ" name="getAllMatches" method="_saA98JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seMTUpFCEeuCTslxszDstQ">
                    <body>Returns all matches and adds them to &lt;var>matches&lt;/var>
     *
     * @param opr     operation
     * @param matches list of matches</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r5u7YJFCEeuCTslxszDstQ" name="opr" type="_oWrrYJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r5u7YZFCEeuCTslxszDstQ" name="matches" type="_rV_8MJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r50a8JFCEeuCTslxszDstQ" name="print" visibility="protected" method="_saHEkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r51CAJFCEeuCTslxszDstQ" name="stream" type="_rbybIJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r51CAZFCEeuCTslxszDstQ" name="indent">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r51CApFCEeuCTslxszDstQ" name="indentIncrement">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Interface" xmi:id="_oWrrYJFCEeuCTslxszDstQ" name="Operation">
                  <ownedComment xmi:id="_seM6YZFCEeuCTslxszDstQ">
                    <body>Operation that is performed on the nodes of a tree or list.</body>
                  </ownedComment>
                  <ownedOperation xmi:id="_rfR0AJFCEeuCTslxszDstQ" name="execute">
                    <ownedComment xmi:id="_seM6YpFCEeuCTslxszDstQ">
                      <body>Executes the operation on the given node.
         *
         * @param node operation target
         * @return operation result</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_rfR0AZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_rfSbEJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_oWvVwJFCEeuCTslxszDstQ" name="FindNodeOperation">
                  <eAnnotations xmi:id="_oWv80JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oWv80ZFCEeuCTslxszDstQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_seM6Y5FCEeuCTslxszDstQ">
                    <body>Operation that is used for finding the specified node in a tree.</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_sMSD8JFCEeuCTslxszDstQ" name="node" visibility="private" isLeaf="true" type="_oVexgJFCEeuCTslxszDstQ" isReadOnly="true" association="_shs6UJFCEeuCTslxszDstQ"/>
                  <interfaceRealization xmi:id="_rfTpMJFCEeuCTslxszDstQ" client="_oWvVwJFCEeuCTslxszDstQ" supplier="_oWrrYJFCEeuCTslxszDstQ" contract="_oWrrYJFCEeuCTslxszDstQ"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saEBQJFCEeuCTslxszDstQ" name="FindNodeOperation" specification="_rfWFcJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_saEBQZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_saEBQpFCEeuCTslxszDstQ" type="_oWvVwJFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>this.node = node;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saFPYJFCEeuCTslxszDstQ" name="execute" specification="_rfYhsJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_saFPYZFCEeuCTslxszDstQ" name="testNode" type="_oVexgJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_saFPYpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>if (node.equals(testNode)) {
             return testNode;
         }
         return null;
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_rfWFcJFCEeuCTslxszDstQ" name="FindNodeOperation" method="_saEBQJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_rfWsgJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_rfWsgZFCEeuCTslxszDstQ" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_rfWFcZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_rfXTkJFCEeuCTslxszDstQ" type="_oWvVwJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_rfYhsJFCEeuCTslxszDstQ" name="execute" method="_saFPYJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_rfYhsZFCEeuCTslxszDstQ" name="testNode" type="_oVexgJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_rfZIwJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_oW2DcJFCEeuCTslxszDstQ" name="FindTargetOperation">
                  <eAnnotations xmi:id="_oW2qgJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oW2qgZFCEeuCTslxszDstQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_seM6ZJFCEeuCTslxszDstQ">
                    <body>Operation that is used for finding the node(s) in a tree that have the specified &lt;code>PointerTarget&lt;/code>.</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_sMUgMJFCEeuCTslxszDstQ" name="target" visibility="private" isLeaf="true" type="_oNn2AJFCEeuCTslxszDstQ" isReadOnly="true" association="_shuIcJFCEeuCTslxszDstQ"/>
                  <interfaceRealization xmi:id="_rfblAJFCEeuCTslxszDstQ" client="_oW2DcJFCEeuCTslxszDstQ" supplier="_oWrrYJFCEeuCTslxszDstQ" contract="_oWrrYJFCEeuCTslxszDstQ"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saFPY5FCEeuCTslxszDstQ" name="FindTargetOperation" specification="_rfeBQJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_saF2cJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_saF2cZFCEeuCTslxszDstQ" type="_oW2DcJFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>this.target = target;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saGdgJFCEeuCTslxszDstQ" name="execute" specification="_rfgdgJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_saGdgZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_saGdgpFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>if (node.getPointerTarget().equals(target)) {
             return node;
         }
         return null;
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_rfeBQJFCEeuCTslxszDstQ" name="FindTargetOperation" method="_saFPY5FCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_rffPYJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_rffPYZFCEeuCTslxszDstQ" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_rfeoUJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_rffPYpFCEeuCTslxszDstQ" type="_oW2DcJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_rfgdgJFCEeuCTslxszDstQ" name="execute" method="_saGdgJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_rfgdgZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_rfhEkJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_r4eXJpFCEeuCTslxszDstQ" name="E"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_seBUMJFCEeuCTslxszDstQ" name="" memberEnd="_sL1_EZFCEeuCTslxszDstQ _seB7QJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_seB7QJFCEeuCTslxszDstQ" name="" type="_oUAx4JFCEeuCTslxszDstQ" association="_seBUMJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_seHa0JFCEeuCTslxszDstQ" name="" memberEnd="_sMI6AJFCEeuCTslxszDstQ _seHa0ZFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_seHa0ZFCEeuCTslxszDstQ" name="" type="_oVexgJFCEeuCTslxszDstQ" association="_seHa0JFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_seIo8JFCEeuCTslxszDstQ" name="" memberEnd="_sMJhEJFCEeuCTslxszDstQ _seIo8ZFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_seIo8ZFCEeuCTslxszDstQ" name="" type="_oVexgJFCEeuCTslxszDstQ" association="_seIo8JFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_seJQAJFCEeuCTslxszDstQ" name="" memberEnd="_sMKIIJFCEeuCTslxszDstQ _seJ3EJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_seJ3EJFCEeuCTslxszDstQ" name="" type="_oVexgJFCEeuCTslxszDstQ" association="_seJQAJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shh7MZFCEeuCTslxszDstQ" name="" memberEnd="_shh7MpFCEeuCTslxszDstQ _sLmugJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shh7MpFCEeuCTslxszDstQ" name="" type="_oTM5kJFCEeuCTslxszDstQ" association="_shh7MZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shjJUZFCEeuCTslxszDstQ" name="" memberEnd="_shjJUpFCEeuCTslxszDstQ _sLsOEJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shjJUpFCEeuCTslxszDstQ" name="" type="_oTdYQJFCEeuCTslxszDstQ" association="_shjJUZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shkXcZFCEeuCTslxszDstQ" name="" memberEnd="_shkXcpFCEeuCTslxszDstQ _sL0w8JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shkXcpFCEeuCTslxszDstQ" name="" type="_oUAx4JFCEeuCTslxszDstQ" association="_shkXcZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shllkZFCEeuCTslxszDstQ" name="" memberEnd="_shllkpFCEeuCTslxszDstQ _sL8FsJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shllkpFCEeuCTslxszDstQ" name="" type="_oUc2wJFCEeuCTslxszDstQ" association="_shllkZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shnawZFCEeuCTslxszDstQ" name="" memberEnd="_shnawpFCEeuCTslxszDstQ _sMEokJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shnawpFCEeuCTslxszDstQ" name="" type="_oU-bMJFCEeuCTslxszDstQ" association="_shnawZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shp3AJFCEeuCTslxszDstQ" name="" memberEnd="_shp3AZFCEeuCTslxszDstQ _sMPAoJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shp3AZFCEeuCTslxszDstQ" name="" type="_oWVGEJFCEeuCTslxszDstQ" association="_shp3AJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shs6UJFCEeuCTslxszDstQ" name="" memberEnd="_shs6UZFCEeuCTslxszDstQ _sMSD8JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shs6UZFCEeuCTslxszDstQ" name="" type="_oWvVwJFCEeuCTslxszDstQ" association="_shs6UJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shuIcJFCEeuCTslxszDstQ" name="" memberEnd="_shuIcZFCEeuCTslxszDstQ _sMUgMJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shuIcZFCEeuCTslxszDstQ" name="" type="_oW2DcJFCEeuCTslxszDstQ" association="_shuIcJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yV0OA5FCEeuCTslxszDstQ" name="TestPointerTargetNode">
                <eAnnotations xmi:id="_yV01EJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                  <contents xmi:type="ecore:EAnnotation" xmi:id="_yV01EZFCEeuCTslxszDstQ" source="codegen">
                    <details xmi:id="_yV01EpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                  </contents>
                </eAnnotations>
                <ownedComment xmi:id="_yzkhApFCEeuCTslxszDstQ">
                  <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyCP8JFCEeuCTslxszDstQ" name="testIsLexical" specification="_yV01E5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>Synset s1 = new Synset(null, POS.NOUN);
     PointerTargetNode p1 = new PointerTargetNode(s1, PointerType.ANTONYM);
     Synset s2 = new Synset(null, POS.NOUN);
     Word w2 = new Word(null, s2, &quot;test&quot;);
     PointerTargetNode p2 = new PointerTargetNode(w2, PointerType.ANTONYM);

     Assert.assertFalse(p1.isLexical());
     Assert.assertTrue(p2.isLexical());

     Assert.assertEquals(s1, p1.getSynset());
     Assert.assertEquals(s2, p2.getSynset());

     Assert.assertEquals(s1, p1.getPointerTarget());
     Assert.assertEquals(w2, p2.getPointerTarget());

     Assert.assertNull(p1.getWord());
     Assert.assertEquals(w2, p2.getWord());

     Assert.assertFalse(p1.equals(p2));
     Assert.assertFalse(p1.hashCode() == p2.hashCode());

     Assert.assertNotNull(p1.toString());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyCP8ZFCEeuCTslxszDstQ" name="testDeepClone" specification="_yV01F5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>Synset s1 = new Synset(null, POS.NOUN);
     PointerTargetNode p1 = new PointerTargetNode(s1);
     p1.deepClone();
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yV01E5FCEeuCTslxszDstQ" name="testIsLexical" method="_yyCP8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV01F5FCEeuCTslxszDstQ" name="testDeepClone" method="_yyCP8ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yV01HJFCEeuCTslxszDstQ" name="TestPointerTargetTree">
                <eAnnotations xmi:id="_yV1cIJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                  <contents xmi:type="ecore:EAnnotation" xmi:id="_yV1cIZFCEeuCTslxszDstQ" source="codegen">
                    <details xmi:id="_yV1cIpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                  </contents>
                </eAnnotations>
                <ownedComment xmi:id="_yzlIEZFCEeuCTslxszDstQ">
                  <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyCP8pFCEeuCTslxszDstQ" name="testEquals" specification="_yV1cI5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>Synset s1 = new Synset(null, POS.NOUN, 1);
     Synset s2 = new Synset(null, POS.NOUN, 2);
     PointerTargetTree p1 = new PointerTargetTree(new PointerTargetTreeNode(s1));
     PointerTargetTree p2 = new PointerTargetTree(new PointerTargetTreeNode(s2));
     PointerTargetTree p3 = new PointerTargetTree(new PointerTargetTreeNode(s1));
     Assert.assertFalse(p1.equals(p2));
     Assert.assertTrue(p1.equals(p3));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyC3AJFCEeuCTslxszDstQ" name="testFirstMatch" specification="_yV1cJ5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>Synset s1 = new Synset(null, POS.NOUN, 1);
     Synset s2 = new Synset(null, POS.NOUN, 2);
     PointerTargetTreeNode n1 = new PointerTargetTreeNode(s1);
     PointerTargetTree p1 = new PointerTargetTree(n1);
     PointerTargetTreeNode n2 = new PointerTargetTreeNode(s2);

     Assert.assertEquals(n1, p1.getFirstMatch(new PointerTargetTreeNodeList.FindNodeOperation(n1)));
     Assert.assertNull(p1.getFirstMatch(new PointerTargetTreeNodeList.FindNodeOperation(n2)));

     Assert.assertEquals(n1, p1.getFirstMatch(new PointerTargetTreeNodeList.FindTargetOperation(s1)));
     Assert.assertNull(p1.getFirstMatch(new PointerTargetTreeNodeList.FindTargetOperation(s2)));

     Assert.assertEquals(n1, p1.findFirst(s1));
     Assert.assertEquals(n1, p1.findFirst(n1));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyC3AZFCEeuCTslxszDstQ" name="testAllMatches" specification="_yV1cK5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>Synset s1 = new Synset(null, POS.NOUN, 1);
     Synset s2 = new Synset(null, POS.NOUN, 2);
     PointerTargetTreeNode n1 = new PointerTargetTreeNode(s1);
     PointerTargetTree p1 = new PointerTargetTree(n1);
     PointerTargetTreeNode n2 = new PointerTargetTreeNode(s2);

     Assert.assertEquals(n1, p1.getAllMatches(new PointerTargetTreeNodeList.FindNodeOperation(n1)).get(0));
     Assert.assertEquals(0, p1.getAllMatches(new PointerTargetTreeNodeList.FindNodeOperation(n2)).size());

     Assert.assertEquals(n1, p1.findAll(n1).get(0));
     Assert.assertEquals(0, p1.findAll(s2).size());
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yV1cI5FCEeuCTslxszDstQ" name="testEquals" method="_yyCP8pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV1cJ5FCEeuCTslxszDstQ" name="testFirstMatch" method="_yyC3AJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV1cK5FCEeuCTslxszDstQ" name="testAllMatches" method="_yyC3AZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_nC-n0JFCEeuCTslxszDstQ" name="relationship">
              <packagedElement xmi:type="uml:Class" xmi:id="_oXyeoJFCEeuCTslxszDstQ" name="AsymmetricRelationship">
                <ownedComment xmi:id="_seNhcJFCEeuCTslxszDstQ">
                  <body>An asymmetric relationship is one whose source and target synsets have lineages with a definite divergence point.
The commonParentIndex is the index of the node in the relationship that represents this divergence point.
&lt;p>
For example, in finding a hypernym  relationship between dog and cat, the relationship is dog -&amp;gt; canine -&amp;gt;
carnivore -&amp;gt; feline -&amp;gt; cat. The ancestry of &quot;dog&quot; and the ancestry of &quot;cat&quot; diverge at &quot;carnivore,&quot; so
the common parent index is thus 2.
&lt;/p>
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rfyxYJFCEeuCTslxszDstQ" general="_oYC9UJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sMdDEJFCEeuCTslxszDstQ" name="commonParentIndex" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sMgtcJFCEeuCTslxszDstQ" name="cachedRelativeTargetDepth" visibility="private">
                  <eAnnotations xmi:id="_sMgtcZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sMgtcpFCEeuCTslxszDstQ" key="transient"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sMhUgJFCEeuCTslxszDstQ" value="-1"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saI5wJFCEeuCTslxszDstQ" name="AsymmetricRelationship" specification="_r6ABIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saI5wZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saI5wpFCEeuCTslxszDstQ" name="nodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saI5w5FCEeuCTslxszDstQ" name="commonParentIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_saI5xJFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saI5xZFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saI5xpFCEeuCTslxszDstQ" type="_oXyeoJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(type, nodes, sourceSynset, targetSynset);
     // fail fast
     nodes.get(commonParentIndex);
     this.commonParentIndex = commonParentIndex;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saKH4JFCEeuCTslxszDstQ" name="getRelativeTargetDepth" specification="_oX5MUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saKH4ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (cachedRelativeTargetDepth == -1) {
         int distSourceToParent = commonParentIndex;
         int distParentToTarget = (getNodeList().size() - 1) - commonParentIndex;
         cachedRelativeTargetDepth = distParentToTarget - distSourceToParent;
     }
     return cachedRelativeTargetDepth;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saL9EJFCEeuCTslxszDstQ" name="reverse" specification="_oX6acJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saL9EZFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetNodeList list = getNodeList().deepClone().reverse();
     int commonParentIndex = (list.size() - 1) - getCommonParentIndex();
     for (int i = 0; i &lt; list.size(); i++) {
         if (i != commonParentIndex) {
             list.get(i).setType(getType().getSymmetricType());
         }
     }
     return new AsymmetricRelationship(getType(), list, commonParentIndex, getSourceSynset(), getTargetSynset());
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oX5MUJFCEeuCTslxszDstQ" name="getRelativeTargetDepth" method="_saKH4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seOIgJFCEeuCTslxszDstQ">
                    <body>Returns the depth of the target, from the commonParentIndex, relative to the depth of the source.
     * If both target and source are equidistant from the commonParentIndex, this method returns 0;
     *
     * @return the depth of the target, from the commonParentIndex, relative to the depth of the source</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_oX5zYJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oX6acJFCEeuCTslxszDstQ" name="reverse" method="_saL9EJFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rfyKUJFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6ABIJFCEeuCTslxszDstQ" name="AsymmetricRelationship" method="_saI5wJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r6BPQJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r6BPQZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r6ABIZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6ABIpFCEeuCTslxszDstQ" name="nodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6AoMJFCEeuCTslxszDstQ" name="commonParentIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r6AoMZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6AoMpFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6BPQpFCEeuCTslxszDstQ" type="_oXyeoJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oYC9UJFCEeuCTslxszDstQ" name="Relationship" isAbstract="true">
                <ownedComment xmi:id="_seOIgZFCEeuCTslxszDstQ">
                  <body>A &lt;code>Relationship&lt;/code> encapsulates the relationship between two synsets. Basically, it is a list of
synsets/words that one must traverse to get from the source synset to the target synset of the
relationship, for some relationship type.
&lt;p>
There are two types of relationships - {@link net.sf.extjwnl.data.relationship.SymmetricRelationship Symmetric}
and {@link net.sf.extjwnl.data.relationship.AsymmetricRelationship Asymmetric}.
&lt;/p>
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sMnbIJFCEeuCTslxszDstQ" name="nodes" visibility="private" isLeaf="true" type="_oUc2wJFCEeuCTslxszDstQ" isReadOnly="true" association="_shvWkJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sMpQUJFCEeuCTslxszDstQ" name="type" isLeaf="true" type="_oONE0JFCEeuCTslxszDstQ" isReadOnly="true"/>
                <ownedAttribute xmi:id="_sMsToJFCEeuCTslxszDstQ" name="sourceSynset" visibility="private" isLeaf="true" type="_rb_PcJFCEeuCTslxszDstQ" isReadOnly="true" association="_shxLwJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sMuI0JFCEeuCTslxszDstQ" name="targetSynset" isLeaf="true" type="_rb_PcJFCEeuCTslxszDstQ" isReadOnly="true" association="_shzA8JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saNyQJFCEeuCTslxszDstQ" name="Relationship" specification="_r6IkAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saOZUJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saOZUZFCEeuCTslxszDstQ" name="nodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saOZUpFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saOZU5FCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saOZVJFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (null == type) {
         throw new IllegalArgumentException(&quot;Type must be not null&quot;);
     }
     this.type = type;
     if (null == nodes) {
         throw new IllegalArgumentException(&quot;Nodes must be not null&quot;);
     }
     this.nodes = nodes;
     if (null == sourceSynset) {
         throw new IllegalArgumentException(&quot;Source synset must be not null&quot;);
     }
     this.sourceSynset = sourceSynset;
     if (null == targetSynset) {
         throw new IllegalArgumentException(&quot;Target synset must be not null&quot;);
     }
     this.targetSynset = targetSynset;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saPAYJFCEeuCTslxszDstQ" name="getNodeList" specification="_oYKSEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saPAYZFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return nodes;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saPAYpFCEeuCTslxszDstQ" name="getSourcePointerTarget" specification="_oYLgMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saPAY5FCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return nodes.get(0).getPointerTarget();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saPncJFCEeuCTslxszDstQ" name="getTargetPointerTarget" specification="_oYNVYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saPncZFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return nodes.get(nodes.size() - 1).getPointerTarget();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saQOgJFCEeuCTslxszDstQ" name="toString" specification="_oYPxoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saQOgZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBufferOutputStream stream = new StringBufferOutputStream();
     nodes.print(new PrintStream(stream));
     return stream.getStringBuffer().toString();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saQ1kJFCEeuCTslxszDstQ" name="equals" specification="_r6LAQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saRcoJFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saRcoZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (this == o) return true;
     if (!(o instanceof Relationship)) return false;

     Relationship that = (Relationship) o;

     if (type != that.type) return false;
     if (!sourceSynset.equals(that.sourceSynset)) return false;
     if (!targetSynset.equals(that.targetSynset)) return false;

     return true;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saRcopFCEeuCTslxszDstQ" name="hashCode" specification="_oYUDEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saRco5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = type.hashCode();
     result = 31 * result + sourceSynset.hashCode();
     result = 31 * result + targetSynset.hashCode();
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saSDsJFCEeuCTslxszDstQ" name="getSourceSynset" specification="_oYaJsZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saSDsZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return sourceSynset;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saSqwJFCEeuCTslxszDstQ" name="getSize" specification="_oYcl8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saSqwZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getNodeList().size();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saSqwpFCEeuCTslxszDstQ" name="getDepth" specification="_oYd0EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saSqw5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getSize() - 1;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oYIc4JFCEeuCTslxszDstQ" name="reverse" isAbstract="true" raisedException="_r4uOwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rgCpAJFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oYKSEJFCEeuCTslxszDstQ" name="getNodeList" method="_saPAYJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seOvkJFCEeuCTslxszDstQ">
                    <body>Returns the list that contains the nodes of this relationship.
     *
     * @return the list that contains the nodes of this relationship</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rgD3IJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oYLgMJFCEeuCTslxszDstQ" name="getSourcePointerTarget" method="_saPAYpFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seOvkZFCEeuCTslxszDstQ">
                    <body>Returns the pointer target of the source node.
     *
     * @return the pointer target of the source node</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rgEeMJFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oYNVYJFCEeuCTslxszDstQ" name="getTargetPointerTarget" method="_saPncJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seOvkpFCEeuCTslxszDstQ">
                    <body>Returns the pointer target of the target node.
     *
     * @return the pointer target of the target node</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rgFsUJFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oYPxoJFCEeuCTslxszDstQ" name="toString" method="_saQOgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oYQYsJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oYUDEJFCEeuCTslxszDstQ" name="hashCode" method="_saRcopFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oYV4QJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oYaJsZFCEeuCTslxszDstQ" name="getSourceSynset" method="_saSDsJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seOvk5FCEeuCTslxszDstQ">
                    <body>Returns the synset that is the source of this relationship.
     *
     * @return synset that is the source of this relationship</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r6NcgJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oYcl8JFCEeuCTslxszDstQ" name="getSize" method="_saSqwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oYdNAJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oYd0EJFCEeuCTslxszDstQ" name="getDepth" method="_saSqwpFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seOvlJFCEeuCTslxszDstQ">
                    <body>Returns the depth of this relationship. Depth is a concept that can be defined by each relationship type.
     * The default notion of depth is the number of pointers that need to be traversed to go from the source
     * to target synset. This is basically getSize() - 1.
     *
     * @return the depth of this relationship</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_oYebIJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r6IkAJFCEeuCTslxszDstQ" name="Relationship" visibility="protected" method="_saNyQJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r6JLE5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r6JyIJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r6IkAZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6JLEJFCEeuCTslxszDstQ" name="nodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6JLEZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6JLEpFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6JyIZFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6LAQJFCEeuCTslxszDstQ" name="equals" method="_saQ1kJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r6LAQZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6LnUJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_oYgQUJFCEeuCTslxszDstQ" name="StringBufferOutputStream" visibility="private">
                  <eAnnotations xmi:id="_oYgQUZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oYgQUpFCEeuCTslxszDstQ" key="static"/>
                  </eAnnotations>
                  <generalization xmi:id="_r6SVAJFCEeuCTslxszDstQ" general="_rf4Q8JFCEeuCTslxszDstQ"/>
                  <ownedAttribute xmi:id="_sMxzMJFCEeuCTslxszDstQ" name="writer" visibility="private" isLeaf="true" type="_rf77UJFCEeuCTslxszDstQ" isReadOnly="true" association="_sh02IZFCEeuCTslxszDstQ">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_sMxzMZFCEeuCTslxszDstQ" value="new StringWriter()"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saTR0JFCEeuCTslxszDstQ" name="write" specification="_oYiFgJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_saTR0ZFCEeuCTslxszDstQ" name="b">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>writer.write(b);
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saT44JFCEeuCTslxszDstQ" name="getStringBuffer" specification="_oYj6sJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_saT44ZFCEeuCTslxszDstQ" type="_r6P4wJFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>return writer.getBuffer();
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_oYiFgJFCEeuCTslxszDstQ" name="write" method="_saTR0JFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_oYiFgZFCEeuCTslxszDstQ" name="b">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_oYj6sJFCEeuCTslxszDstQ" name="getStringBuffer" method="_saT44JFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_r6Rt8ZFCEeuCTslxszDstQ" type="_r6P4wJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oYzLQJFCEeuCTslxszDstQ" name="RelationshipFinder" isAbstract="true">
                <ownedComment xmi:id="_sePWoJFCEeuCTslxszDstQ">
                  <body>Helper class to find relations.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sM4g4JFCEeuCTslxszDstQ" name="DEFAULT_ASYMMETRIC_SEARCH_DEPTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sM5H8JFCEeuCTslxszDstQ" value="Integer.MAX_VALUE"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sM5vAJFCEeuCTslxszDstQ" name="DEFAULT_SYMMETRIC_SEARCH_DEPTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sM5vAZFCEeuCTslxszDstQ" value="2"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saVHAJFCEeuCTslxszDstQ" name="getImmediateRelationship" specification="_rgXZIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saVHAZFCEeuCTslxszDstQ" name="sourceWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saVHApFCEeuCTslxszDstQ" name="targetWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saVHA5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;Synset> senses = sourceWord.getSenses();
     String lemma = targetWord.getLemma();
     for (int i = 0; i &lt; senses.size(); i++) {
         if (senses.get(i).containsWord(lemma)) {
             return i + 1;
         }
     }
     return -1;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saVuEJFCEeuCTslxszDstQ" name="findRelationships" specification="_r6X0kJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saVuEZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saVuEpFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saVuE5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saVuFJFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return (type.isSymmetric()) ?
             findSymmetricRelationships(sourceSynset, targetSynset, type) :
             findAsymmetricRelationships(sourceSynset, targetSynset, type);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saW8MJFCEeuCTslxszDstQ" name="findRelationships" specification="_r6a34JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saW8MZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saW8MpFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saW8M5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saW8NJFCEeuCTslxszDstQ" name="depth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_saW8NZFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return (type.isSymmetric()) ?
             findSymmetricRelationships(sourceSynset, targetSynset, type, depth) :
             findAsymmetricRelationships(sourceSynset, targetSynset, type, depth);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saXjQJFCEeuCTslxszDstQ" name="findAsymmetricRelationships" specification="_r6eiQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saXjQZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saXjQpFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saXjQ5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saXjRJFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return findAsymmetricRelationships(sourceSynset, targetSynset, type, DEFAULT_ASYMMETRIC_SEARCH_DEPTH);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saYKUJFCEeuCTslxszDstQ" name="findAsymmetricRelationships" specification="_r6hlkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saYKUZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saYKUpFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saYKU5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saYKVJFCEeuCTslxszDstQ" name="depth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_saYKVZFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>// We run the reversal function on the trees to get linear (non-branching)
     // paths from the source word to its deepest ancestor (i.e. if there are
     // multiple relations from a single word anywhere in the path, the reversal
     // function will break them down into multiple, linear paths).
     List&lt;PointerTargetNodeList> sourceRelations = new PointerTargetTree(
             sourceSynset, PointerUtils.makePointerTargetTreeList(sourceSynset, type, depth)).reverse();
     List&lt;PointerTargetNodeList> targetRelations = new PointerTargetTree(
             targetSynset, PointerUtils.makePointerTargetTreeList(targetSynset, type, depth)).reverse();

     RelationshipList relationships = new RelationshipList();
     // Do an exhaustive search for relationships
     for (PointerTargetNodeList sourceRelation : sourceRelations) {
         for (PointerTargetNodeList targetRelation : targetRelations) {
             Relationship relationship = findAsymmetricRelationship(
                     sourceRelation, targetRelation, type, sourceSynset, targetSynset);
             if (relationship != null) {
                 relationships.add(relationship);
             }
         }
     }
     return relationships;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saYxYJFCEeuCTslxszDstQ" name="findAsymmetricRelationship" specification="_r6lP8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saYxYZFCEeuCTslxszDstQ" name="sourceNodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saYxYpFCEeuCTslxszDstQ" name="targetNodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saYxY5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saZYcJFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saZYcZFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saZYcpFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetNode sourceRoot = sourceNodes.get(0);
     PointerTargetNode targetRoot = targetNodes.get(0);
     // If the deepest ancestors of the words are not the same,
     // then there is no relationship between the words.
     if (!sourceRoot.getSynset().equals(targetRoot.getSynset())) {
         return null;
     }

     PointerTargetNodeList relationship = new PointerTargetNodeList();
     int targetStart = 0;
     int commonParentIndex = 0;
     for (int i = sourceNodes.size() - 1; i >= 0; i--) {
         PointerTargetNode testNode = sourceNodes.get(i);
         int idx = targetNodes.indexOf(testNode);
         if (idx >= 0) {
             targetStart = idx;
             break;
         } else {
             relationship.add(testNode.clone());
             commonParentIndex++;
         }
     }
     for (int i = targetStart; i &lt; targetNodes.size(); i++) {
         PointerTargetNode node = targetNodes.get(i).clone();
         node.setType(type.getSymmetricType());
         relationship.add(node);
     }
     return new AsymmetricRelationship(type, relationship, commonParentIndex, sourceSynset, targetSynset);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saZ_gJFCEeuCTslxszDstQ" name="findSymmetricRelationships" specification="_r6qIcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saZ_gZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saZ_gpFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saZ_g5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_saZ_hJFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return findSymmetricRelationships(sourceSynset, targetSynset, type, DEFAULT_SYMMETRIC_SEARCH_DEPTH);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sabNoJFCEeuCTslxszDstQ" name="findSymmetricRelationships" specification="_r6tLwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sabNoZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sabNopFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sabNo5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sabNpJFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sabNpZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sabNppFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sabNp5FCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sabNqJFCEeuCTslxszDstQ" name="depth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sabNqZFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetTree tree = new PointerTargetTree(
             sourceSynset, PointerUtils.makePointerTargetTreeList(sourceSynset, type, null, depth, false));

     PointerTargetTreeNodeList.Operation opr = testNode -> {
         if (targetSynset.equals(testNode.getSynset())) {

             return testNode;
         }
         return null;
     };
     List l = tree.getAllMatches(opr);

     RelationshipList list = new RelationshipList();
     for (Object aL : l) {
         PointerTargetNodeList nodes = findSymmetricRelationship((PointerTargetTreeNode) aL, type);
         list.add(new SymmetricRelationship(type, nodes, sourceSynset, targetSynset));
     }
     return list;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sab0sJFCEeuCTslxszDstQ" name="findSymmetricRelationship" specification="_rgmpsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sab0sZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sab0spFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sab0s5FCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetNodeList list = new PointerTargetNodeList();
     buildSymmetricRelationshipList(list, node);
     list = list.reverse();
     // set the root's pointer type
     list.get(0).setType(type);
     return list;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sadC0JFCEeuCTslxszDstQ" name="buildSymmetricRelationshipList" specification="_rgoe4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sadC0ZFCEeuCTslxszDstQ" name="list" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sadC0pFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>list.add(node.getPointerTarget(), node.getType());
     if (node.getParent() != null) {
         buildSymmetricRelationshipList(list, node.getParent());
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_rgXZIJFCEeuCTslxszDstQ" name="getImmediateRelationship" isStatic="true" method="_saVHAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rgXZIZFCEeuCTslxszDstQ" name="sourceWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rgYAMJFCEeuCTslxszDstQ" name="targetWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rgYnQJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rgmpsJFCEeuCTslxszDstQ" name="findSymmetricRelationship" visibility="private" isStatic="true" method="_sab0sJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rgmpsZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rgnQwJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rgn30JFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rgoe4JFCEeuCTslxszDstQ" name="buildSymmetricRelationshipList" visibility="private" isStatic="true" method="_sadC0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rgpF8JFCEeuCTslxszDstQ" name="list" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rgpF8ZFCEeuCTslxszDstQ" name="node" type="_oVexgJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6X0kJFCEeuCTslxszDstQ" name="findRelationships" isStatic="true" method="_saVuEJFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r6X0kZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6YboJFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6YboZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6YbopFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6a34JFCEeuCTslxszDstQ" name="findRelationships" isStatic="true" method="_saW8MJFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r6a34ZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6be8JFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6be8ZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6be8pFCEeuCTslxszDstQ" name="depth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r6cGAJFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6eiQJFCEeuCTslxszDstQ" name="findAsymmetricRelationships" visibility="private" isStatic="true" method="_saXjQJFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r6eiQZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6fJUJFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6fJUZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6fwYJFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6hlkJFCEeuCTslxszDstQ" name="findAsymmetricRelationships" visibility="private" isStatic="true" method="_saYKUJFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r6hlkZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6hlkpFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6iMoJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6iMoZFCEeuCTslxszDstQ" name="depth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r6iMopFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6lP8JFCEeuCTslxszDstQ" name="findAsymmetricRelationship" visibility="private" isStatic="true" method="_saYxYJFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r6l3AJFCEeuCTslxszDstQ" name="sourceNodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6l3AZFCEeuCTslxszDstQ" name="targetNodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6meEJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6meEZFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6meEpFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6nFIJFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6qIcJFCEeuCTslxszDstQ" name="findSymmetricRelationships" visibility="private" isStatic="true" method="_saZ_gJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r6qvgJFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6qvgZFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6qvgpFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6rWkJFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r6tLwJFCEeuCTslxszDstQ" name="findSymmetricRelationships" visibility="private" isStatic="true" method="_sabNoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r6ty0JFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_r6w2IJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_r6xdMJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r6ty0ZFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_r6xdMZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_r6xdMpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r6uZ4JFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r6uZ4ZFCEeuCTslxszDstQ" name="depth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r6wPEJFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oZpf0JFCEeuCTslxszDstQ" name="RelationshipList">
                <ownedComment xmi:id="_seP9sJFCEeuCTslxszDstQ">
                  <body>A list of &lt;code>Relationship&lt;/code>s.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_r60ggJFCEeuCTslxszDstQ" general="_rX6nwJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sM-AcJFCEeuCTslxszDstQ" name="shallowestIndex" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sM-ngJFCEeuCTslxszDstQ" value="-1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sNAcsJFCEeuCTslxszDstQ" name="deepestIndex" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sNAcsZFCEeuCTslxszDstQ" value="-1"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saeQ8JFCEeuCTslxszDstQ" name="RelationshipList" specification="_oZtKMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saeQ8ZFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sae4AJFCEeuCTslxszDstQ" name="add" specification="_rg_rQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sae4AZFCEeuCTslxszDstQ" name="relationship" type="_oYC9UJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sae4ApFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int curSize = size();
     boolean success = super.add(relationship);
     if (1 == size()) {
         shallowestIndex = 0;
         deepestIndex = 0;
     } else {
         if (success) {
             Relationship shallowest = get(shallowestIndex);
             Relationship deepest = get(deepestIndex);
             if (relationship.getDepth() &lt; shallowest.getDepth()) {
                 shallowestIndex = curSize;
             }
             if (relationship.getDepth() > deepest.getDepth()) {
                 deepestIndex = curSize;
             }
         }
     }
     return success;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_saffEJFCEeuCTslxszDstQ" name="getShallowest" specification="_oZwNgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_saffEZFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (shallowestIndex >= 0) {
         return get(shallowestIndex);
     }
     return null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sagGIJFCEeuCTslxszDstQ" name="getDeepest" specification="_oZw0kJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sagGIZFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (deepestIndex >= 0) {
         return get(deepestIndex);
     }
     return null;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oZtKMJFCEeuCTslxszDstQ" name="RelationshipList" method="_saeQ8JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_oZtxQJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oZtxQZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oZuYUJFCEeuCTslxszDstQ" type="_oZpf0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oZwNgJFCEeuCTslxszDstQ" name="getShallowest" method="_saffEJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seP9sZFCEeuCTslxszDstQ">
                    <body>Returns the shallowest relationship in the list. N.B. There can be more than one shallowest.
     * The shallowest index is not updated on element removal.
     *
     * @return the shallowest Relationship in the list</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rhEjwJFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oZw0kJFCEeuCTslxszDstQ" name="getDeepest" method="_sagGIJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_seP9spFCEeuCTslxszDstQ">
                    <body>Returns the deepest Relationship in the list. N.B. There can be more than one deepest.
     * The shallowest index is not updated on element removal.
     *
     * @return the deepest Relationship in the list</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_rhFK0JFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rg_rQJFCEeuCTslxszDstQ" name="add" method="_sae4AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rhASUJFCEeuCTslxszDstQ" name="relationship" type="_oYC9UJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rhBgcJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oZ3iQJFCEeuCTslxszDstQ" name="SymmetricRelationship">
                <ownedComment xmi:id="_seP9s5FCEeuCTslxszDstQ">
                  <body>A symmetric relationship is one whose type is symmetric (its own inverse). An example of a symmetric
relationship is synonymy (since, if a is a synonym of b, then be is a synonym of a). Symmetric relationships
differ from asymmetric relationships in that there is no definite divergence point between the ancestry of
the source and target synsets. Another way of saying this is that the target synset will always be in
the source's ancestry, and vice versa. For this reason, symmetric relationships have no concept of a
common parent index.
 *
@author John Didion (jdidion@didion.net)</body>
                </ownedComment>
                <generalization xmi:id="_rhR_IJFCEeuCTslxszDstQ" general="_oYC9UJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sahUQJFCEeuCTslxszDstQ" name="SymmetricRelationship" specification="_r66nIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sahUQZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sahUQpFCEeuCTslxszDstQ" name="nodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sahUQ5FCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sahURJFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sahURZFCEeuCTslxszDstQ" type="_oZ3iQJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(type, nodes, sourceSynset, targetSynset);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sah7UJFCEeuCTslxszDstQ" name="reverse" specification="_oZ8awJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sah7UZFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>PointerTargetNodeList list = getNodeList().deepClone().reverse();
     for (Object aList : list) {
         ((PointerTargetNode) aList).setType(getType().getSymmetricType());
     }
     return new SymmetricRelationship(getType(), list, getSourceSynset(), getTargetSynset());
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oZ8awJFCEeuCTslxszDstQ" name="reverse" method="_sah7UJFCEeuCTslxszDstQ" raisedException="_r4uOwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rhPi4JFCEeuCTslxszDstQ" type="_oYC9UJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r66nIJFCEeuCTslxszDstQ" name="SymmetricRelationship" method="_sahUQJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_r67OMpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r67OM5FCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r66nIZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r66nIpFCEeuCTslxszDstQ" name="nodes" type="_oUc2wJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r67OMJFCEeuCTslxszDstQ" name="sourceSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r67OMZFCEeuCTslxszDstQ" name="targetSynset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r671QJFCEeuCTslxszDstQ" type="_oZ3iQJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shvWkJFCEeuCTslxszDstQ" name="" memberEnd="_shvWkZFCEeuCTslxszDstQ _sMnbIJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shvWkZFCEeuCTslxszDstQ" name="" type="_oYC9UJFCEeuCTslxszDstQ" association="_shvWkJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shxLwJFCEeuCTslxszDstQ" name="" memberEnd="_shxLwZFCEeuCTslxszDstQ _sMsToJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shxLwZFCEeuCTslxszDstQ" name="" type="_oYC9UJFCEeuCTslxszDstQ" association="_shxLwJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_shzA8JFCEeuCTslxszDstQ" name="" memberEnd="_shzA8ZFCEeuCTslxszDstQ _sMuI0JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_shzA8ZFCEeuCTslxszDstQ" name="" type="_oYC9UJFCEeuCTslxszDstQ" association="_shzA8JFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sh02IZFCEeuCTslxszDstQ" name="" memberEnd="_sh02IpFCEeuCTslxszDstQ _sMxzMJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sh02IpFCEeuCTslxszDstQ" name="" type="_oYgQUJFCEeuCTslxszDstQ" association="_sh02IZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yV2DMpFCEeuCTslxszDstQ" name="TestAsymmetricRelationship">
                <eAnnotations xmi:id="_yV2DM5FCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                  <contents xmi:type="ecore:EAnnotation" xmi:id="_yV2DNJFCEeuCTslxszDstQ" source="codegen">
                    <details xmi:id="_yV2DNZFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                  </contents>
                </eAnnotations>
                <ownedComment xmi:id="_yzlIEpFCEeuCTslxszDstQ">
                  <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_yV2qRpFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyC3ApFCEeuCTslxszDstQ" name="testConstructor" specification="_yV2DNpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();
     Synset s1 = dictionary.createSynset(POS.NOUN);
     Synset s2 = dictionary.createSynset(POS.NOUN);
     AsymmetricRelationship r =
             new AsymmetricRelationship(PointerType.HYPERNYM, new PointerTargetNodeList(
                     Arrays.asList(new PointerTargetNode(s2))
             ), 0, s1, s2);

     Assert.assertEquals(s1, r.getSourceSynset());
     Assert.assertEquals(s2, r.getTargetSynset());
     Assert.assertNotNull(r.toString());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyC3A5FCEeuCTslxszDstQ" name="testGetRelativeTargetDepth" specification="_yV2DOpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();
     Synset s1 = dictionary.createSynset(POS.NOUN);
     Synset s2 = dictionary.createSynset(POS.NOUN);
     Synset s3 = dictionary.createSynset(POS.NOUN);
     AsymmetricRelationship r =
             new AsymmetricRelationship(PointerType.HYPERNYM, new PointerTargetNodeList(
                     Arrays.asList(
                             new PointerTargetNode(s1),
                             new PointerTargetNode(s2),
                             new PointerTargetNode(s3)
                     )
             ), 1, s1, s3);

     Assert.assertEquals(0, r.getRelativeTargetDepth());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyDeEJFCEeuCTslxszDstQ" name="testReverse" specification="_yV2qQpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();
     Synset s1 = dictionary.createSynset(POS.NOUN);
     Synset s2 = dictionary.createSynset(POS.NOUN);
     Synset s3 = dictionary.createSynset(POS.NOUN);
     AsymmetricRelationship r =
             new AsymmetricRelationship(PointerType.HYPERNYM,
                     new PointerTargetNodeList(Arrays.asList(
                             new PointerTargetNode(s1, PointerType.HYPERNYM),
                             new PointerTargetNode(s2, PointerType.HYPERNYM),
                             new PointerTargetNode(s3, PointerType.HYPONYM)
                     )),
                     1,
                     s1, s2);
     Relationship rev = r.reverse();

     Assert.assertEquals(3, rev.getSize());
     Assert.assertEquals(3, rev.getNodeList().size());
     Assert.assertEquals(PointerType.HYPONYM, rev.getNodeList().get(0).getType());
     Assert.assertEquals(PointerType.HYPERNYM, rev.getNodeList().get(1).getType());
     Assert.assertEquals(PointerType.HYPONYM, rev.getNodeList().get(2).getType());
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yV2DNpFCEeuCTslxszDstQ" name="testConstructor" method="_yyC3ApFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV2DOpFCEeuCTslxszDstQ" name="testGetRelativeTargetDepth" method="_yyC3A5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV2qQpFCEeuCTslxszDstQ" name="testReverse" method="_yyDeEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yV2qR5FCEeuCTslxszDstQ" name="TestRelationshipFinder">
                <eAnnotations xmi:id="_yV2qSJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                  <contents xmi:type="ecore:EAnnotation" xmi:id="_yV2qSZFCEeuCTslxszDstQ" source="codegen">
                    <details xmi:id="_yV2qSpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                  </contents>
                </eAnnotations>
                <ownedComment xmi:id="_yzlvIJFCEeuCTslxszDstQ">
                  <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_yV34YpFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyDeEZFCEeuCTslxszDstQ" name="testImmediateRelationshipPositive" specification="_yV2qS5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();

     Synset s1 = dictionary.createSynset(POS.NOUN);
     Synset s2 = dictionary.createSynset(POS.NOUN);
     Synset s3 = dictionary.createSynset(POS.NOUN);

     IndexWord i1 = dictionary.createIndexWord(POS.NOUN, &quot;test&quot;, s1);
     IndexWord i2 = dictionary.createIndexWord(POS.NOUN, &quot;rest&quot;, s2);
     IndexWord i3 = dictionary.createIndexWord(POS.NOUN, &quot;best&quot;, s3);

     i1.getSenses().add(s2);

     Assert.assertEquals(2, RelationshipFinder.getImmediateRelationship(i1, i2));
     Assert.assertEquals(-1, RelationshipFinder.getImmediateRelationship(i1, i3));
     Assert.assertEquals(-1, RelationshipFinder.getImmediateRelationship(i2, i3));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyDeEpFCEeuCTslxszDstQ" name="testFindSymmetricRelationships" specification="_yV3RU5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();

     Synset s1 = dictionary.createSynset(POS.NOUN);
     Synset s2 = dictionary.createSynset(POS.NOUN);

     RelationshipList l = RelationshipFinder.findRelationships(s1, s2, PointerType.ANTONYM);
     Assert.assertNotNull(l);
     Assert.assertEquals(0, l.size());

     s1.getPointers().add(new Pointer(PointerType.ANTONYM, s1, s2));
     RelationshipList ll = RelationshipFinder.findRelationships(s1, s2, PointerType.ANTONYM);
     Assert.assertEquals(1, ll.size());
     Relationship r = ll.get(0);
     Assert.assertTrue(r instanceof SymmetricRelationship);
     Assert.assertEquals(1, r.getSize());
     Assert.assertEquals(PointerType.ANTONYM, r.getType());
     Assert.assertEquals(s1, r.getSourceSynset());
     Assert.assertEquals(s2, r.getTargetSynset());
     Assert.assertEquals(s2, r.getNodeList().get(0).getSynset());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyDeE5FCEeuCTslxszDstQ" name="testFindAsymmetricRelationships" specification="_yV3RV5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();

     Synset s1 = dictionary.createSynset(POS.VERB);
     Synset s2 = dictionary.createSynset(POS.VERB);

     RelationshipList l = RelationshipFinder.findRelationships(s1, s2, PointerType.CAUSE);
     Assert.assertNotNull(l);
     Assert.assertEquals(0, l.size());

     s1.getPointers().add(new Pointer(PointerType.CAUSE, s1, s2));
     RelationshipList ll = RelationshipFinder.findRelationships(s1, s2, PointerType.CAUSE);
     Assert.assertEquals(1, ll.size());
     Relationship r = ll.get(0);
     Assert.assertTrue(r instanceof AsymmetricRelationship);
     Assert.assertEquals(3, r.getSize());
     Assert.assertEquals(PointerType.CAUSE, r.getType());
     Assert.assertEquals(s1, r.getSourceSynset());
     Assert.assertEquals(s2, r.getTargetSynset());
     Assert.assertEquals(s1, r.getNodeList().get(0).getSynset());
     Assert.assertEquals(s2, r.getNodeList().get(1).getSynset());
     Assert.assertEquals(s2, r.getNodeList().get(2).getSynset());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyEFIJFCEeuCTslxszDstQ" name="testFindAsymmetricRelationshipsDepth" specification="_yV3RW5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();

     Synset s1 = dictionary.createSynset(POS.VERB);
     Synset s2 = dictionary.createSynset(POS.VERB);
     Synset s3 = dictionary.createSynset(POS.VERB);

     s1.getPointers().add(new Pointer(PointerType.CAUSE, s1, s2));
     s2.getPointers().add(new Pointer(PointerType.CAUSE, s2, s3));

     RelationshipList ll = RelationshipFinder.findRelationships(s1, s3, PointerType.CAUSE, 2);
     Assert.assertEquals(1, ll.size());
     Relationship r = ll.get(0);
     Assert.assertTrue(r instanceof AsymmetricRelationship);
     Assert.assertEquals(4, r.getSize());

     RelationshipList lll = RelationshipFinder.findRelationships(s1, s3, PointerType.CAUSE, 1);
     Assert.assertEquals(0, lll.size());
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yV2qS5FCEeuCTslxszDstQ" name="testImmediateRelationshipPositive" method="_yyDeEZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV3RU5FCEeuCTslxszDstQ" name="testFindSymmetricRelationships" method="_yyDeEpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV3RV5FCEeuCTslxszDstQ" name="testFindAsymmetricRelationships" method="_yyDeE5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV3RW5FCEeuCTslxszDstQ" name="testFindAsymmetricRelationshipsDepth" method="_yyEFIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yV34Y5FCEeuCTslxszDstQ" name="TestRelationshipList">
                <eAnnotations xmi:id="_yV34ZJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                  <contents xmi:type="ecore:EAnnotation" xmi:id="_yV34ZZFCEeuCTslxszDstQ" source="codegen">
                    <details xmi:id="_yV34ZpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                  </contents>
                </eAnnotations>
                <ownedComment xmi:id="_yzlvIZFCEeuCTslxszDstQ">
                  <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyEFIZFCEeuCTslxszDstQ" name="testAdd" specification="_yV34Z5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>RelationshipList l = new RelationshipList();
     Assert.assertNull(l.getShallowest());
     Assert.assertNull(l.getDeepest());

     Relationship r = new SymmetricRelationship(PointerType.ANTONYM,
             new PointerTargetNodeList(),
             new Synset(null, POS.NOUN), new Synset(null, POS.NOUN));

     l.add(r);
     Assert.assertEquals(r, l.getDeepest());
     Assert.assertEquals(r, l.getShallowest());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyEFIpFCEeuCTslxszDstQ" name="testGetShallowest" specification="_yV34a5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>RelationshipList l = new RelationshipList();
     Assert.assertNull(l.getShallowest());
     Assert.assertNull(l.getDeepest());

     Relationship r = new SymmetricRelationship(PointerType.ANTONYM,
             new PointerTargetNodeList(Arrays.asList(new PointerTargetNode(new Synset(null, POS.NOUN)))),
             new Synset(null, POS.NOUN), new Synset(null, POS.NOUN));

     l.add(r);
     Assert.assertEquals(r, l.getDeepest());
     Assert.assertEquals(r, l.getShallowest());

     Relationship rr = new SymmetricRelationship(PointerType.ANTONYM,
             new PointerTargetNodeList(),
             new Synset(null, POS.NOUN), new Synset(null, POS.NOUN));

     l.add(rr);
     Assert.assertEquals(r, l.getDeepest());
     Assert.assertEquals(rr, l.getShallowest());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyEFI5FCEeuCTslxszDstQ" name="testGetDeepest" specification="_yV4fc5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>RelationshipList l = new RelationshipList();
     Assert.assertNull(l.getShallowest());
     Assert.assertNull(l.getDeepest());


     Relationship r = new SymmetricRelationship(PointerType.ANTONYM,
             new PointerTargetNodeList(),
             new Synset(null, POS.NOUN), new Synset(null, POS.NOUN));

     l.add(r);
     Assert.assertEquals(r, l.getDeepest());
     Assert.assertEquals(r, l.getShallowest());

     Relationship rr = new SymmetricRelationship(PointerType.ANTONYM,
             new PointerTargetNodeList(Arrays.asList(new PointerTargetNode(new Synset(null, POS.NOUN)))),
             new Synset(null, POS.NOUN), new Synset(null, POS.NOUN));

     l.add(rr);
     Assert.assertEquals(rr, l.getDeepest());
     Assert.assertEquals(r, l.getShallowest());
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yV34Z5FCEeuCTslxszDstQ" name="testAdd" method="_yyEFIZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV34a5FCEeuCTslxszDstQ" name="testGetShallowest" method="_yyEFIpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV4fc5FCEeuCTslxszDstQ" name="testGetDeepest" method="_yyEFI5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yV4fd5FCEeuCTslxszDstQ" name="TestSymmetricRelationship">
                <eAnnotations xmi:id="_yV4feJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                  <contents xmi:type="ecore:EAnnotation" xmi:id="_yV4feZFCEeuCTslxszDstQ" source="codegen">
                    <details xmi:id="_yV4fepFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                  </contents>
                </eAnnotations>
                <ownedComment xmi:id="_yzlvIpFCEeuCTslxszDstQ">
                  <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_yV6UopFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyEsMJFCEeuCTslxszDstQ" name="testConstructorPointerType" specification="_yV5GgJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>new SymmetricRelationship(null, null, null, null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyEsMZFCEeuCTslxszDstQ" name="testConstructorNodes" specification="_yV5GhZFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>new SymmetricRelationship(PointerType.ANTONYM, null, null, null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyEsMpFCEeuCTslxszDstQ" name="testConstructorSourceSynset" specification="_yV5GipFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>new SymmetricRelationship(PointerType.ANTONYM, new PointerTargetNodeList(), null, null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyEsM5FCEeuCTslxszDstQ" name="testConstructorTargetSynset" specification="_yV5tk5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();
     new SymmetricRelationship(PointerType.ANTONYM, new PointerTargetNodeList(), dictionary.createSynset(POS.NOUN), null);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyEsNJFCEeuCTslxszDstQ" name="testConstructorAndGetters" specification="_yV5tmJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();
     Synset s1 = dictionary.createSynset(POS.NOUN);
     Synset s2 = dictionary.createSynset(POS.NOUN);
     SymmetricRelationship r =
             new SymmetricRelationship(PointerType.ANTONYM, new PointerTargetNodeList(
                     Arrays.asList(
                             new PointerTargetNode(s1, PointerType.ANTONYM),
                             new PointerTargetNode(s2, PointerType.ANTONYM)
                     )
             ), s1, s2);

     Assert.assertEquals(s1, r.getSourceSynset());
     Assert.assertEquals(s2, r.getTargetSynset());
     Assert.assertNotNull(r.toString());

     Assert.assertEquals(s1, r.getSourcePointerTarget());
     Assert.assertEquals(s2, r.getTargetSynset());

     SymmetricRelationship rr =
             new SymmetricRelationship(PointerType.ANTONYM, new PointerTargetNodeList(
                     Arrays.asList(
                             new PointerTargetNode(s2, PointerType.ANTONYM),
                             new PointerTargetNode(s1, PointerType.ANTONYM)
                     )
             ), s2, s1);

     Assert.assertTrue(rr.hashCode() != r.hashCode());
     Assert.assertTrue(!rr.equals(r));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyFTQJFCEeuCTslxszDstQ" name="testReverse" specification="_yV5tnJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>dictionary.edit();
     Synset s1 = dictionary.createSynset(POS.NOUN);
     Synset s2 = dictionary.createSynset(POS.NOUN);
     SymmetricRelationship r =
             new SymmetricRelationship(PointerType.HYPERNYM,
                     new PointerTargetNodeList(Arrays.asList(
                             new PointerTargetNode(s1),
                             new PointerTargetNode(s2)
                     )),
                     s1, s2);
     Relationship rev = r.reverse();

     Assert.assertEquals(2, rev.getSize());
     Assert.assertEquals(2, rev.getNodeList().size());
     Assert.assertEquals(PointerType.HYPONYM, rev.getNodeList().get(0).getType());
     Assert.assertEquals(PointerType.HYPONYM, rev.getNodeList().get(1).getType());
     Assert.assertEquals(s2, rev.getNodeList().get(0).getSynset());
     Assert.assertEquals(s1, rev.getNodeList().get(1).getSynset());
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yV5GgJFCEeuCTslxszDstQ" name="testConstructorPointerType" method="_yyEsMJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV5GhZFCEeuCTslxszDstQ" name="testConstructorNodes" method="_yyEsMZFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV5GipFCEeuCTslxszDstQ" name="testConstructorSourceSynset" method="_yyEsMpFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV5tk5FCEeuCTslxszDstQ" name="testConstructorTargetSynset" method="_yyEsM5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV5tmJFCEeuCTslxszDstQ" name="testConstructorAndGetters" method="_yyEsNJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yV5tnJFCEeuCTslxszDstQ" name="testReverse" method="_yyFTQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oDEy4JFCEeuCTslxszDstQ" name="Adjective">
              <ownedComment xmi:id="_sdXM4JFCEeuCTslxszDstQ">
                <body>An &lt;code>Adjective&lt;/code> is a &lt;code>Word&lt;/code> that can have an adjective position.
&lt;p>
Note: Adjective positions are only supported through WordNet v1.5.
&lt;/p>
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rVPHMJFCEeuCTslxszDstQ" general="_oTGy8JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sHRoIJFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sHTdUJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sHUrcJFCEeuCTslxszDstQ" name="adjectivePosition" isLeaf="true" type="_oDfCkJFCEeuCTslxszDstQ" isReadOnly="true"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVwJAJFCEeuCTslxszDstQ" name="Adjective" specification="_rxb7AJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sVwJAZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sVwJApFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sVwJA5FCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sVwJBJFCEeuCTslxszDstQ" name="adjectivePosition" type="_oDfCkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sVwJBZFCEeuCTslxszDstQ" type="_oDEy4JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary, synset, lemma);
		this.adjectivePosition = adjectivePosition;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rxb7AJFCEeuCTslxszDstQ" name="Adjective" method="_sVwJAJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rxdJIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rxdJIZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rxb7AZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rxciEJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rxciEZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rxciEpFCEeuCTslxszDstQ" name="adjectivePosition" type="_oDfCkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rxdJIpFCEeuCTslxszDstQ" type="_oDEy4JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_oDfCkJFCEeuCTslxszDstQ" name="AdjectivePosition">
              <ownedComment xmi:id="_sdXz8JFCEeuCTslxszDstQ">
                <body>Adjective positions denote a restriction on the on the syntactic position the
adjective may have in relation to noun that it modifies. Adjective positions are
only used through WordNet version 1.6.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sHfqkJFCEeuCTslxszDstQ" name="key" isLeaf="true" isReadOnly="true">
                <eAnnotations xmi:id="_sHhfwZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sHiG0JFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sHnmYJFCEeuCTslxszDstQ" name="label" isLeaf="true" isReadOnly="true">
                <eAnnotations xmi:id="_sHoNcZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sHo0gJFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedOperation xmi:id="_oDpaoJFCEeuCTslxszDstQ" name="getAdjectivePositionForKey" isStatic="true" method="_sVxXIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oDqBsJFCEeuCTslxszDstQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rVSKgJFCEeuCTslxszDstQ" type="_oDfCkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oD4rMJFCEeuCTslxszDstQ" name="AdjectivePosition" visibility="package" method="_sV0acJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oD6gYJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oD7HcJFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oD4rMZFCEeuCTslxszDstQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oD5SQJFCEeuCTslxszDstQ" name="label">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oD7HcZFCEeuCTslxszDstQ" type="_oDfCkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oD88oJFCEeuCTslxszDstQ" name="toString" method="_sV1okJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oD-KwJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedLiteral xmi:id="_oDjUAJFCEeuCTslxszDstQ" name="NONE">
                <specification xmi:type="uml:Expression" xmi:id="_oDj7EJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdYbAJFCEeuCTslxszDstQ" value="&quot;none&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdYbAZFCEeuCTslxszDstQ" value="&quot;none&quot;"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oDlJMJFCEeuCTslxszDstQ" name="PREDICATIVE">
                <specification xmi:type="uml:Expression" xmi:id="_oDlwQJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdYbApFCEeuCTslxszDstQ" value="&quot;p&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdZCEJFCEeuCTslxszDstQ" value="&quot;predicative&quot;"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oDmXUJFCEeuCTslxszDstQ" name="ATTRIBUTIVE">
                <specification xmi:type="uml:Expression" xmi:id="_oDmXUZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdZCEZFCEeuCTslxszDstQ" value="&quot;a&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdZCEpFCEeuCTslxszDstQ" value="&quot;attributive&quot;"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oDnlcJFCEeuCTslxszDstQ" name="IMMEDIATE_POSTNOMINAL">
                <specification xmi:type="uml:Expression" xmi:id="_oDnlcZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdZCE5FCEeuCTslxszDstQ" value="&quot;ip&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdZpIJFCEeuCTslxszDstQ" value="&quot;immediate postnominal&quot;"/>
                </specification>
              </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oEJJ4JFCEeuCTslxszDstQ" name="AdjectiveSynset">
              <ownedComment xmi:id="_sdZpIZFCEeuCTslxszDstQ">
                <body>A &lt;code>Synset&lt;/code> for adjectives.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rxtn0JFCEeuCTslxszDstQ" general="_rb_PcJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sHttAJFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sHu7IJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sHwwUJFCEeuCTslxszDstQ" name="isAdjectiveCluster" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sHxXYJFCEeuCTslxszDstQ" value="false"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sV5S8JFCEeuCTslxszDstQ" name="AdjectiveSynset" specification="_rxlE8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sV56AJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sV56AZFCEeuCTslxszDstQ" type="_oEJJ4JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary, POS.ADJECTIVE);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sV6hEJFCEeuCTslxszDstQ" name="AdjectiveSynset" specification="_rxovUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sV6hEZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sV6hEpFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sV6hE5FCEeuCTslxszDstQ" type="_oEJJ4JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary, POS.ADJECTIVE, offset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sV8WQJFCEeuCTslxszDstQ" name="isAdjectiveCluster" specification="_oETh8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sV8WQZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return isAdjectiveCluster;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sV9kYJFCEeuCTslxszDstQ" name="setIsAdjectiveCluster" specification="_oEXMUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sV9kYZFCEeuCTslxszDstQ" name="isAdjectiveCluster">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.isAdjectiveCluster = isAdjectiveCluster;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oETh8JFCEeuCTslxszDstQ" name="isAdjectiveCluster" method="_sV8WQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oEUwEJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oEXMUJFCEeuCTslxszDstQ" name="setIsAdjectiveCluster" method="_sV9kYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oEXzYJFCEeuCTslxszDstQ" name="isAdjectiveCluster">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rxlE8JFCEeuCTslxszDstQ" name="AdjectiveSynset" method="_sV5S8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rxmTEJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rxmTEZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rxlsAJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rxm6IJFCEeuCTslxszDstQ" type="_oEJJ4JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rxovUJFCEeuCTslxszDstQ" name="AdjectiveSynset" method="_sV6hEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rxryoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rxryoZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rxpWYJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rxqkgJFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rxryopFCEeuCTslxszDstQ" type="_oEJJ4JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oEoSEJFCEeuCTslxszDstQ" name="BaseDictionaryElement" isAbstract="true">
              <ownedComment xmi:id="_sdaQMJFCEeuCTslxszDstQ">
                <body>Base class for dictionary elements.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sH2P4JFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sH4FEJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sH5TMJFCEeuCTslxszDstQ" name="dictionary" visibility="protected" type="_rVLc0JFCEeuCTslxszDstQ" association="_sg-hkJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_sH56QJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sH56QZFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rVov0JFCEeuCTslxszDstQ" client="_oEoSEJFCEeuCTslxszDstQ" supplier="_oFhp8JFCEeuCTslxszDstQ" contract="_oFhp8JFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWAAoJFCEeuCTslxszDstQ" name="getDictionary" specification="_oEyDEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWAAoZFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return dictionary;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWAnsJFCEeuCTslxszDstQ" name="setDictionary" specification="_rxzHYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWAnsZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>if (dictionary != this.dictionary) {
         if (null != this.dictionary) {
             Dictionary old = this.dictionary;
             this.dictionary = dictionary;
             old.removeElement(this);
         }
         this.dictionary = dictionary;
         if (null != dictionary) {
             dictionary.addElement(this);
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWBOwJFCEeuCTslxszDstQ" name="readObject" specification="_rVtoUZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWBOwZFCEeuCTslxszDstQ" name="in" type="_rVrzIJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>in.defaultReadObject();
     dictionary = Dictionary.getRestoreDictionary();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oEtKkJFCEeuCTslxszDstQ" name="BaseDictionaryElement" visibility="protected">
                <eAnnotations xmi:id="_oEtxoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oEuYsJFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oExcAJFCEeuCTslxszDstQ" type="_oEoSEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oEyDEJFCEeuCTslxszDstQ" name="getDictionary" method="_sWAAoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rxxSMJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rVtoUZFCEeuCTslxszDstQ" name="readObject" visibility="private" method="_sWBOwJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _rx2xwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rVuPYJFCEeuCTslxszDstQ" name="in" type="_rVrzIJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rxzHYJFCEeuCTslxszDstQ" name="setDictionary" method="_sWAnsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rxzucJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oFFlEJFCEeuCTslxszDstQ" name="DatabaseDictionaryElementFactory">
              <ownedComment xmi:id="_sda3QJFCEeuCTslxszDstQ">
                <body>Factory interface for creating WordNet objects from a database.
 *
@author Brett Walenz (bwalenz@users.sourceforge.net)
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rV4AYJFCEeuCTslxszDstQ" general="_oFyIoJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_rx8RUJFCEeuCTslxszDstQ" name="createIndexWord" raisedException="_rV2LMZFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rx8RUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rx8RUpFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rx84YJFCEeuCTslxszDstQ" name="rs" type="_rVzu8JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rx84YZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ryBw4JFCEeuCTslxszDstQ" name="createSynset" raisedException="_rV2LMZFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ryCX8JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryCX8ZFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ryC_AJFCEeuCTslxszDstQ" name="synset" type="_rVzu8JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryC_AZFCEeuCTslxszDstQ" name="words" type="_rVzu8JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryDmEJFCEeuCTslxszDstQ" name="pointers" type="_rVzu8JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryDmEZFCEeuCTslxszDstQ" name="verbFrames" type="_rVzu8JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryENIJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ryGpYJFCEeuCTslxszDstQ" name="createExc" raisedException="_rV2LMZFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ryGpYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryHQcJFCEeuCTslxszDstQ" name="derivation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ryHQcZFCEeuCTslxszDstQ" name="rs" type="_rVzu8JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryH3gJFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oFhp8JFCEeuCTslxszDstQ" name="DictionaryElement">
              <ownedComment xmi:id="_sdbeUJFCEeuCTslxszDstQ">
                <body>Any class that represents an element contained in the dictionary (&lt;code>IndexWord&lt;/code>s,
&lt;code>Synset&lt;/code>s, and &lt;code>Exc&lt;/code>eptions) must implement this interface.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_ryLh4JFCEeuCTslxszDstQ" general="_rV-HAJFCEeuCTslxszDstQ"/>
              <generalization xmi:id="_rV_VIZFCEeuCTslxszDstQ" general="_o0LfsJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_oFl7YJFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ" isReadOnly="true" association="_sgzicJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_oFo-sJFCEeuCTslxszDstQ" name="type" type="_oGGRsJFCEeuCTslxszDstQ" isReadOnly="true"/>
              <ownedAttribute xmi:id="_oFra8JFCEeuCTslxszDstQ" name="pOS" type="_oLknkJFCEeuCTslxszDstQ" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oFyIoJFCEeuCTslxszDstQ" name="DictionaryElementFactory">
              <ownedComment xmi:id="_sdbeUZFCEeuCTslxszDstQ">
                <body>Factory class for creating &lt;code>DictionaryElement&lt;/code>s (&lt;code>Synset&lt;/code>s, &lt;code>Exception&lt;/code>s,
and &lt;code>IndexWord&lt;/code>s). Using a factory class rather than individual parsing methods in each class
facilitates using multiple versions of WordNet, or using a proprietary data format.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rWAjQJFCEeuCTslxszDstQ" general="_o0LfsJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_rWAjQZFCEeuCTslxszDstQ" name="createSynset" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rWAjQpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryXIEJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ryRBcJFCEeuCTslxszDstQ" name="createException" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ryRBcZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryRBcpFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ryRogJFCEeuCTslxszDstQ" name="exceptions" type="_rV_8MJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rySPkJFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ryYWMJFCEeuCTslxszDstQ" name="createIndexWord" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ryY9QJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryZkUJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ryZkUZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryaycJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_oGGRsJFCEeuCTslxszDstQ" name="DictionaryElementType">
              <ownedComment xmi:id="_sdcFYJFCEeuCTslxszDstQ">
                <body>Enumerates different dictionary file types present in WordNet: index, synset data, and exception files.
 *
@author Brett Walenz (bwalenz@users.sourceforge.net)
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sIAn8JFCEeuCTslxszDstQ" name="name" visibility="private" isLeaf="true" isReadOnly="true">
                <eAnnotations xmi:id="_sIBPAJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sIBPAZFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sIESUJFCEeuCTslxszDstQ" name="ALL_TYPES" visibility="private" isLeaf="true" isStatic="true" type="_oGGRsJFCEeuCTslxszDstQ" isOrdered="true" isReadOnly="true">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sIFgcJFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sIGHgJFCEeuCTslxszDstQ" value="Collections.unmodifiableList(&#xA;            Arrays.asList(INDEX_WORD, SYNSET, EXCEPTION))"/>
              </ownedAttribute>
              <ownedOperation xmi:id="_oGR34JFCEeuCTslxszDstQ" name="getAllDictionaryElementTypes" isStatic="true" method="_sWFgMJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdcscJFCEeuCTslxszDstQ">
                  <body>Returns all the dictionary types.
     *
     * @return all the dictionary types</body>
                </ownedComment>
                <ownedParameter xmi:id="_oGSe8JFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oGTGAJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oGWJUJFCEeuCTslxszDstQ" name="DictionaryElementType" visibility="package" method="_sWGuUpFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oGXXcJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oGXXcZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sdcscZFCEeuCTslxszDstQ">
                  <body>Creates a new DictionaryElementType.
     *
     * @param name name</body>
                </ownedComment>
                <ownedParameter xmi:id="_oGWwYJFCEeuCTslxszDstQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oGX-gJFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oGYlkJFCEeuCTslxszDstQ" name="toString" method="_sWH8cJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oGZMoJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oGZzsJFCEeuCTslxszDstQ" name="getName" method="_sWIjgJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdcscpFCEeuCTslxszDstQ">
                  <body>Returns the name of this DictionaryElementType.
     *
     * @return the name of this DictionaryElementType</body>
                </ownedComment>
                <ownedParameter xmi:id="_oGaawJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedLiteral xmi:id="_oGIt8JFCEeuCTslxszDstQ" name="INDEX_WORD">
                <specification xmi:type="uml:Expression" xmi:id="_oGIt8ZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdcFYZFCEeuCTslxszDstQ" value="&quot;IndexWord&quot;"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oGJVAJFCEeuCTslxszDstQ" name="SYNSET">
                <specification xmi:type="uml:Expression" xmi:id="_oGJ8EJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdcFYpFCEeuCTslxszDstQ" value="&quot;Synset&quot;"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oGJ8EZFCEeuCTslxszDstQ" name="EXCEPTION">
                <specification xmi:type="uml:Expression" xmi:id="_oGLKMJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdcFY5FCEeuCTslxszDstQ" value="&quot;Exception&quot;"/>
                </specification>
              </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oGjksJFCEeuCTslxszDstQ" name="Exc">
              <ownedComment xmi:id="_sdcsc5FCEeuCTslxszDstQ">
                <body>Represents an entry in an exception file. Contains all of the exceptions
for the given lemma.
&lt;p>
Exception lists are alphabetized lists of inflected forms of words and
their base forms. The first field of each line is an inflected form,
followed by a space separated list of one or more base forms of the word.
There is one exception list file for each syntactic category. From wndb.5WN
in WordNet base documentation.
&lt;/p>
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rWDmkpFCEeuCTslxszDstQ" general="_oEoSEJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sIJx4JFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sILAAJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sILnEJFCEeuCTslxszDstQ" name="pos" visibility="private" type="_oLknkJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sINcQJFCEeuCTslxszDstQ" name="lemma" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sIOqYJFCEeuCTslxszDstQ" name="exceptions" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sIPRcJFCEeuCTslxszDstQ" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWLm0JFCEeuCTslxszDstQ" name="Exc" specification="_ryjVUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWLm0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sWLm0pFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sWLm05FCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sWLm1JFCEeuCTslxszDstQ" name="exceptions" type="_rV_8MJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sWLm1ZFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.dictionary = dictionary;
		if (null == pos) {
			if (null != dictionary) {
				throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_041&quot;));
			}
			else {
				throw new IllegalArgumentException(&quot;Pos must be not null&quot;);
			}
		}
		this.pos = pos;
		if (null == lemma || &quot;&quot;.equals(lemma)) {
			if (null != dictionary) {
				throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_046&quot;));
			}
			else {
				throw new IllegalArgumentException(&quot;Lemma must be not null and not empty&quot;);
			}
		}
		this.lemma = lemma;
		if (null == exceptions || 0 == exceptions.size()) {
			if (null != dictionary) {
				throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_039&quot;));
			}
			else {
				throw new IllegalArgumentException(&quot;Exceptions must be not null and not empty&quot;);
			}
		}
		this.exceptions = exceptions;
		if (null != dictionary &amp;&amp; dictionary.isEditable()) {
			dictionary.addElement(this);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWM08JFCEeuCTslxszDstQ" name="getType" specification="_oGrggJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWM08ZFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return DictionaryElementType.EXCEPTION;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWNcAJFCEeuCTslxszDstQ" name="getPOS" specification="_oGtVsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWODEJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return pos;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWOqIJFCEeuCTslxszDstQ" name="getKey" specification="_oGuj0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWPRMJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getLemma();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWP4QJFCEeuCTslxszDstQ" name="equals" specification="_ryqqEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWP4QZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sWP4QpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this == o) {
			return true;
		}
		if (!(o instanceof Exc)) {
			return false;
		}

		Exc exc = (Exc) o;

		if (!exceptions.equals(exc.exceptions)) {
			return false;
		}
		if (!lemma.equals(exc.lemma)) {
			return false;
		}
		//noinspection RedundantIfStatement
		if (!pos.equals(exc.pos)) {
			return false;
		}

		return true;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWRGYJFCEeuCTslxszDstQ" name="hashCode" specification="_oGxnIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWRGYZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int result = pos.hashCode();
		result = 31 * result + lemma.hashCode();
		result = 31 * result + exceptions.hashCode();
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWSUgJFCEeuCTslxszDstQ" name="toString" specification="_oG6KAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sWSUgZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder str = new StringBuilder();
		for (int i = 0; i &lt; exceptions.size(); i++) {
			str.append(exceptions.get(i));
			if (i != exceptions.size() - 1) {
				str.append(&quot;, &quot;);
			}
		}

		return ResourceBundleSet.insertParams(&quot;Exc: [Lemma: {0}] Exceptions: {1}]&quot;, new Object[]{getLemma(), str.toString()});
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oGrggJFCEeuCTslxszDstQ" name="getType" method="_sWM08JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rWDmkJFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oGtVsJFCEeuCTslxszDstQ" name="getPOS" method="_sWNcAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rWDmkZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oGuj0JFCEeuCTslxszDstQ" name="getKey" method="_sWOqIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ryqDAJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oGxnIJFCEeuCTslxszDstQ" name="hashCode" method="_sWRGYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oGyOMJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oG6KAJFCEeuCTslxszDstQ" name="toString" method="_sWSUgJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oG7YIJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ryjVUJFCEeuCTslxszDstQ" name="Exc" method="_sWLm0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rykjcpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rylKgJFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sdcsdJFCEeuCTslxszDstQ">
                  <body>Creates a new exception entry.
	 *
	 * @param dictionary the owner of the exception
	 * @param pos        the exception part of speech
	 * @param lemma      the word's lemma form
	 * @param exceptions the given exceptions
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_ryj8YJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryj8YZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rykjcJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rykjcZFCEeuCTslxszDstQ" name="exceptions" type="_rV_8MJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rylKgZFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ryqqEJFCEeuCTslxszDstQ" name="equals" method="_sWP4QJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ryrRIJFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryr4MJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oHHlYJFCEeuCTslxszDstQ" name="FileDictionaryElementFactory">
              <ownedComment xmi:id="_sddTgJFCEeuCTslxszDstQ">
                <body>Factory class for creating &lt;code>DictionaryElement&lt;/code>s (&lt;code>Synset&lt;/code>s, &lt;code>Exception&lt;/code>s,
and &lt;code>IndexWord&lt;/code>s). Using a factory class rather than individual parsing methods in each class
facilitates using multiple versions of WordNet, or using a proprietary data format.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rWENoJFCEeuCTslxszDstQ" general="_oFyIoJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_rytGUZFCEeuCTslxszDstQ" name="createExc" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rytGUpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rytGU5FCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rytGVJFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ryttYJFCEeuCTslxszDstQ" name="createSynset" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ryttYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryttYpFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryttY5FCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ryuUcJFCEeuCTslxszDstQ" name="createIndexWord" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ryuUcZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryuUcpFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ryuUc5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oHXdAJFCEeuCTslxszDstQ" name="IndexWord">
              <ownedComment xmi:id="_sddTgZFCEeuCTslxszDstQ">
                <body>An &lt;code>IndexWord&lt;/code> represents a line of the &lt;b>pos&lt;/b>&lt;code>.index&lt;/code> file.
An &lt;code>IndexWord&lt;/code> is created or retrieved via {@link Dictionary#lookupIndexWord lookupIndexWord}.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rWKUQJFCEeuCTslxszDstQ" general="_oEoSEJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sIUxAJFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sIVYEJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sIV_IJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_shDaEJFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sIWmMJFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(IndexWord.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sIX0UJFCEeuCTslxszDstQ" name="pos" visibility="private" type="_oLknkJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sIaQkJFCEeuCTslxszDstQ" name="lemma" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sIcFwJFCEeuCTslxszDstQ" name="synsetOffsets" isReadOnly="true">
                <eAnnotations xmi:id="_sIeiAZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sIfJEJFCEeuCTslxszDstQ" key="volatile"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sIfJEZFCEeuCTslxszDstQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sIl2wJFCEeuCTslxszDstQ" name="synsets" visibility="private" type="_oHkRUJFCEeuCTslxszDstQ" association="_shHEcJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_sImd0JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sImd0ZFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sInE4JFCEeuCTslxszDstQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sI0gQJFCEeuCTslxszDstQ" name="synsetOffsetComparator" visibility="private" isLeaf="true" isStatic="true" type="_rzBPYJFCEeuCTslxszDstQ" isReadOnly="true" association="_shMkAJFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sI8cEJFCEeuCTslxszDstQ" value="(o1, o2) -> {&#xA;        long result = o1.getOffset() - o2.getOffset();&#xA;        if (0 != result) {&#xA;            // 2 huge offsets might lead to integer overflow&#xA;            return (int) (result / Math.abs(result));&#xA;        } else {&#xA;            if (POS.ADJECTIVE == o1.getPOS() &amp;&amp; POS.ADJECTIVE == o2.getPOS()) {&#xA;                if (o1.isAdjectiveCluster() &amp;&amp; !o2.isAdjectiveCluster()) {&#xA;                    return 1;&#xA;                } else if (o2.isAdjectiveCluster() &amp;&amp; !o1.isAdjectiveCluster()) {&#xA;                    return -1;&#xA;                } else {&#xA;                    return 0;&#xA;                }&#xA;            } else {&#xA;                return 0;&#xA;            }&#xA;        }&#xA;    }"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW3jUJFCEeuCTslxszDstQ" name="IndexWord" specification="_ry-zIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sW3jUZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sW3jUpFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sW3jU5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sW3jVJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.dictionary = dictionary;
     if (null == lemma) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_046&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Lemma must be not null and not empty&quot;);
         }
     }
     this.lemma = lemma.toLowerCase();
     if (null == pos) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_041&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Pos must be not null&quot;);
         }
     }
     this.pos = pos;
     if (null != dictionary &amp;&amp; dictionary.isEditable()) {
         dictionary.addElement(this);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW4xcJFCEeuCTslxszDstQ" name="IndexWord" specification="_ry_aNpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sW4xcZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sW4xcpFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sW4xc5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sW4xdJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sW4xdZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this(dictionary, lemma, pos);
     if (null == synset) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_042&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Synset must be not null&quot;);
         }
     }
     if (synset.getPOS() != pos) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_062&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Synset POS must be equal to index word POS&quot;);
         }
     }
     this.synsets = new SynsetList(1);
     this.synsets.add(synset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW5_kJFCEeuCTslxszDstQ" name="IndexWord" specification="_rzABQ5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sW5_kZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sW5_kpFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sW5_k5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sW5_lJFCEeuCTslxszDstQ" name="synsetOffsets">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sW5_lZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sW5_lpFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this(dictionary, lemma, pos);
     if (null == synsetOffsets || 0 == synsetOffsets.length) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_047&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Synset offsets must be be not null and not empty&quot;);
         }
     }
     this.synsetOffsets = synsetOffsets;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW7NsJFCEeuCTslxszDstQ" name="getType" specification="_oI4f8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sW7NsZFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return DictionaryElementType.INDEX_WORD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW8b0JFCEeuCTslxszDstQ" name="getKey" specification="_oI5uEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sW8b0ZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return lemma;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW9C4JFCEeuCTslxszDstQ" name="getPOS" specification="_oI68MJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sW9C4ZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return pos;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW-RAJFCEeuCTslxszDstQ" name="equals" specification="_rzAoUZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sW-RAZFCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sW-RApFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (object instanceof IndexWord)
             &amp;&amp; ((IndexWord) object).getLemma().equals(getLemma()) &amp;&amp; ((IndexWord) object).getPOS().equals(getPOS());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW-4EJFCEeuCTslxszDstQ" name="hashCode" specification="_oI9YcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sW-4EZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return getLemma().hashCode() ^ getPOS().hashCode();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW_fIJFCEeuCTslxszDstQ" name="toString" specification="_oI-mkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sW_fIZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return ResourceBundleSet.insertParams(&quot;[IndexWord: [Lemma: {0}] {1}]&quot;, new Object[]{getLemma(), getPOS()});
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXAGMJFCEeuCTslxszDstQ" name="getSenses" specification="_oI_0sJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXAGMZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sXAGMpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (null == synsets) {
         synsets = new SynsetList();
     }
     return synsets;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXAtQJFCEeuCTslxszDstQ" name="sortSenses" specification="_oJCQ8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXAtQZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int result = 0;

     if (1 &lt; getSenses().size()) {
         // sort senses and find out tagged sense count
         List&lt;Synset> ucSenses = new ArrayList&lt;>(getSenses().size());
         List&lt;Synset> nonUCSenses = new ArrayList&lt;>(getSenses().size());
         for (Synset synset : getSenses()) {
             if (0 &lt; getUseCount(synset, lemma)) {
                 ucSenses.add(synset);
             } else {
                 nonUCSenses.add(synset);
             }
         }
         ucSenses.sort(Collections.reverseOrder(Comparator.comparingInt(o -> getUseCount(o, lemma))));

         result = ucSenses.size();

         // other synsets seems to be sorted by decreasing offsets
         nonUCSenses.sort(Collections.reverseOrder(synsetOffsetComparator));

         // if ADJ, output cluster heads, then fans
         if (POS.ADJECTIVE == getPOS()) {
             int i = 0;
             while (i &lt; nonUCSenses.size()) {
                 if (!nonUCSenses.get(i).isAdjectiveCluster()) {
                     ucSenses.add(nonUCSenses.remove(i));
                 } else {
                     i++;
                 }
             }
         }
         ucSenses.addAll(nonUCSenses);
         synsets.replaceSenses(ucSenses);
     } else if (1 == getSenses().size()) {
         if (0 &lt; getUseCount(getSenses().get(0), lemma)) {
             result = 1;
         }
     }

     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXBUUJFCEeuCTslxszDstQ" name="getUseCount" specification="_rzB2cJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXBUUZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXBUUpFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sXBUU5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Word w : synset.getWords()) {
         if (w.getLemma().equalsIgnoreCase(lemma)) {
             if (0 &lt; w.getUseCount()) {
                 return w.getUseCount();
             }
         }
     }
     return 0;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXCicJFCEeuCTslxszDstQ" name="writeObject" specification="_rWJGIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXCicZFCEeuCTslxszDstQ" name="oos" type="_rWIfEJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>boolean synsetOffsetsNull = (null == synsetOffsets);
     synsetOffsets = getSynsetOffsets();
     oos.defaultWriteObject();
     if (synsetOffsetsNull) {
         synsetOffsets = null;
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oI4f8JFCEeuCTslxszDstQ" name="getType" method="_sW7NsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rWH4AJFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oI5uEJFCEeuCTslxszDstQ" name="getKey" method="_sW8b0JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdehoJFCEeuCTslxszDstQ">
                  <body>Returns the lemma of this word.
     *
     * @return lemma</body>
                </ownedComment>
                <ownedParameter xmi:id="_rzAoUJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oI68MJFCEeuCTslxszDstQ" name="getPOS" method="_sW9C4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdehoZFCEeuCTslxszDstQ">
                  <body>Returns the word's part-of-speech.
     *
     * @return the word's part-of-speech</body>
                </ownedComment>
                <ownedParameter xmi:id="_rWH4AZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oI9YcJFCEeuCTslxszDstQ" name="hashCode" method="_sW-4EJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oI9_gJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oI-mkJFCEeuCTslxszDstQ" name="toString" method="_sW_fIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oI_NoJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oI_0sJFCEeuCTslxszDstQ" name="getSenses" method="_sXAGMJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdfIsZFCEeuCTslxszDstQ">
                  <body>Returns the senses of this word.
     *
     * @return all the senses of this word</body>
                </ownedComment>
                <ownedParameter xmi:id="_oJAbwJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oJBC0JFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oJCQ8JFCEeuCTslxszDstQ" name="sortSenses" method="_sXAtQJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdfIspFCEeuCTslxszDstQ">
                  <body>Sorts senses according to their use count.
     *
     * @return number of tagged senses (senses with non-zero use count)</body>
                </ownedComment>
                <ownedParameter xmi:id="_oJC4AJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rWJGIJFCEeuCTslxszDstQ" name="writeObject" visibility="private" method="_sXCicJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rWJGIZFCEeuCTslxszDstQ" name="oos" type="_rWIfEJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ry-zIJFCEeuCTslxszDstQ" name="IndexWord" visibility="protected" method="_sW3jUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ry_aM5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ry_aNJFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ry_aMJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ry_aMZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ry_aMpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ry_aNZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ry_aNpFCEeuCTslxszDstQ" name="IndexWord" method="_sW4xcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rzABQJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rzABQZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ry_aN5FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ry_aOJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ry_aOZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ry_aOpFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzABQpFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rzABQ5FCEeuCTslxszDstQ" name="IndexWord" method="_sW5_kJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rzABSJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rzABSZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rzABRJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzABRZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rzABRpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzABR5FCEeuCTslxszDstQ" name="synsetOffsets">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rzABS5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rzABSpFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rzAoUZFCEeuCTslxszDstQ" name="equals" method="_sW-RAJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdfIsJFCEeuCTslxszDstQ">
                  <body>Returns true if the lemma and the part of speech both match.</body>
                </ownedComment>
                <ownedParameter xmi:id="_rzAoUpFCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzAoU5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rzB2cJFCEeuCTslxszDstQ" name="getUseCount" visibility="private" isStatic="true" method="_sXBUUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rzB2cZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzB2cpFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rzB2c5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oHkRUJFCEeuCTslxszDstQ" name="SynsetList" visibility="private">
                <generalization xmi:id="_ry-MEJFCEeuCTslxszDstQ" general="_rX6nwJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWYbIJFCEeuCTslxszDstQ" name="SynsetList" specification="_oHk4YJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWYbIZFCEeuCTslxszDstQ" type="_oHkRUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWZpQJFCEeuCTslxszDstQ" name="SynsetList" specification="_oHlfcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWZpQZFCEeuCTslxszDstQ" name="initialCapacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWZpQpFCEeuCTslxszDstQ" type="_oHkRUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(initialCapacity);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWaQUJFCEeuCTslxszDstQ" name="replaceSenses" specification="_ryu7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWaQUZFCEeuCTslxszDstQ" name="senses" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>super.clear();
         super.addAll(senses);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWa3YJFCEeuCTslxszDstQ" name="size" specification="_oHlfdZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWa3YZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != synsetOffsets) {
             return synsetOffsets.length;
         } else {
             return super.size();
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWbecJFCEeuCTslxszDstQ" name="isEmpty" specification="_oHnUoZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWbecZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != synsetOffsets) {
             return 0 == synsetOffsets.length;
         } else {
             return super.isEmpty();
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWcFgJFCEeuCTslxszDstQ" name="contains" specification="_rywJoZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWcFgZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWcFgpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.contains(o);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWcskJFCEeuCTslxszDstQ" name="indexOf" specification="_rywwspFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWcskZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWcskpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.indexOf(o);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWd6sJFCEeuCTslxszDstQ" name="lastIndexOf" specification="_ryxXwpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWd6sZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWd6spFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.lastIndexOf(o);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWehwJFCEeuCTslxszDstQ" name="clone" specification="_oHpJ0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWehwZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.clone();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWfI0JFCEeuCTslxszDstQ" name="toArray" specification="_oHqX8pFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWfv4JFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sWfv4ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.toArray();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWgW8JFCEeuCTslxszDstQ" name="toArray" specification="_ryyl4ZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWgW8ZFCEeuCTslxszDstQ" name="a" type="_ryx-05FCEeuCTslxszDstQ">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sWgW8pFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWgW85FCEeuCTslxszDstQ" type="_ryx-05FCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sWgW9JFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.toArray(a);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWg-AJFCEeuCTslxszDstQ" name="get" specification="_oHsNIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWg-AZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWg-ApFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.get(index);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWhlEJFCEeuCTslxszDstQ" name="set" specification="_ryz0AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWhlEZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWhlEpFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWhlE5FCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>checkSynsetIsNotNull(synset);
         checkDictionaryIsOurs(synset);
         loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             Synset result = super.set(index, synset);
             if (null != result) {
                 removeWordsFromSynset(result, lemma);
             }
             addWord(synset, lemma);
             return result;
         } else {
             return super.set(index, synset);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWizMJFCEeuCTslxszDstQ" name="add" specification="_ry0bEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWizMZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWizMpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkSynsetIsNotNull(synset);
         checkDictionaryIsOurs(synset);
         loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             boolean result = super.add(synset);
             addWord(synset, lemma);
             return result;
         } else {
             return super.add(synset);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWjaQJFCEeuCTslxszDstQ" name="add" specification="_ry1CIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWjaQZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWjaQpFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>checkSynsetIsNotNull(synset);
         checkDictionaryIsOurs(synset);
         loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             super.add(index, synset);
             addWord(synset, lemma);
         } else {
             super.add(index, synset);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWkBUJFCEeuCTslxszDstQ" name="remove" specification="_oHuCUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWkBUZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWkBUpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             Dictionary d = dictionary;
             Synset result = super.remove(index);
             if (null != result) {
                 removeWordsFromSynset(result, lemma);
                 checkIfWeReEmptyAndRemoveIndexWord(d);
             }
             return result;
         } else {
             return super.remove(index);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWkoYJFCEeuCTslxszDstQ" name="remove" specification="_ry1pMZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWkoYZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWkoYpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             Dictionary d = dictionary;
             boolean result = super.remove(o);
             if (result &amp;&amp; o instanceof Synset) {
                 removeWordsFromSynset((Synset) o, lemma);
                 checkIfWeReEmptyAndRemoveIndexWord(d);
             }
             return result;
         } else {
             return super.remove(o);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWlPcJFCEeuCTslxszDstQ" name="clear" specification="_oHvQcpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             Dictionary d = dictionary;
             List&lt;Synset> copy = new ArrayList&lt;>(this);
             super.clear();
             for (Synset synset : copy) {
                 removeWordsFromSynset(synset, lemma);
             }
             checkIfWeReEmptyAndRemoveIndexWord(d);
         } else {
             super.clear();
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWnEoJFCEeuCTslxszDstQ" name="addAll" specification="_ry2QQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWnEoZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWnEopFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             boolean result = false;
             for (Synset synset : c) {
                 if (add(synset)) {
                     result = true;
                 }
             }
             return result;
         } else {
             for (Synset synset : c) {
                 checkSynsetIsNotNull(synset);
             }
             return super.addAll(c);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWnrsJFCEeuCTslxszDstQ" name="addAll" specification="_ry23UpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWnrsZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWnrspFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWnrs5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             for (Synset synset : c) {
                 add(index, synset);
                 index++;
             }
             return true;
         } else {
             for (Synset synset : c) {
                 checkSynsetIsNotNull(synset);
             }
             return super.addAll(index, c);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWo50JFCEeuCTslxszDstQ" name="removeRange" specification="_oHwekJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWo50ZFCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWo50pFCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             List&lt;Synset> copy = new ArrayList&lt;>(subList(fromIndex, toIndex));
             super.removeRange(fromIndex, toIndex);
             for (Synset synset : copy) {
                 removeWordsFromSynset(synset, lemma);
             }
         } else {
             super.removeRange(fromIndex, toIndex);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWpg4JFCEeuCTslxszDstQ" name="iterator" specification="_oHxss5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWpg4ZFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.iterator();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWqH8JFCEeuCTslxszDstQ" name="listIterator" specification="_oH0I8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWqH8ZFCEeuCTslxszDstQ" type="_rbzCMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.listIterator();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWqvAJFCEeuCTslxszDstQ" name="listIterator" specification="_oH6PkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWqvAZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWqvApFCEeuCTslxszDstQ" type="_rbzCMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.listIterator(index);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWr9IJFCEeuCTslxszDstQ" name="subList" specification="_oIDZgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWr9IZFCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWr9IpFCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sWr9I5FCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sWr9JJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.subList(fromIndex, toIndex);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWskMJFCEeuCTslxszDstQ" name="containsAll" specification="_ry4sgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWskMZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWskMpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.containsAll(c);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWtyUJFCEeuCTslxszDstQ" name="removeAll" specification="_ry56oJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWtyUZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWtyUpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             Dictionary d = dictionary;
             List&lt;Synset> copy = new ArrayList&lt;>(this);
             boolean result = super.removeAll(c);
             if (result) {
                 for (Object object : c) {
                     if (object instanceof Synset) {
                         Synset synset = (Synset) object;
                         if (copy.contains(synset)) {
                             removeWordsFromSynset(synset, lemma);
                         }
                     }
                 }
                 checkIfWeReEmptyAndRemoveIndexWord(d);
             }
             return result;
         } else {
             return super.removeAll(c);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWuZYJFCEeuCTslxszDstQ" name="retainAll" specification="_ry7IwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWuZYZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWuZYpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>loadAllSynsets();
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             Dictionary d = dictionary;
             List&lt;Synset> copy = new ArrayList&lt;>(this);
             boolean result = super.retainAll(c);
             if (result) {
                 for (Synset synset : copy) {
                     if (!c.contains(synset)) {
                         removeWordsFromSynset(synset, lemma);
                     }
                 }
                 checkIfWeReEmptyAndRemoveIndexWord(d);
             }
             return result;
         } else {
             return super.retainAll(c);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWvAcJFCEeuCTslxszDstQ" name="spliterator" specification="_oIQ04JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWvAcZFCEeuCTslxszDstQ" type="_ry8W4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>loadAllSynsets();
         return super.spliterator();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWwOkJFCEeuCTslxszDstQ" name="checkIfWeReEmptyAndRemoveIndexWord" specification="_ry8W45FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWwOkZFCEeuCTslxszDstQ" name="d" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (0 == super.size()) {
             try {
                 d.removeIndexWord(IndexWord.this);
             } catch (JWNLException e) {
                 throw new JWNLRuntimeException(e);
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWwOkpFCEeuCTslxszDstQ" name="checkSynsetIsNotNull" specification="_ry898JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWwOk5FCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (null == synset) {
             if (null != dictionary) {
                 throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_042&quot;));
             } else {
                 throw new IllegalArgumentException(&quot;Synset must be not null&quot;);
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWyq0JFCEeuCTslxszDstQ" name="checkDictionaryIsOurs" specification="_ry898pFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWyq0ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (dictionary != synset.getDictionary()) {
             if (null != dictionary) {
                 throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_040&quot;));
             } else {
                 throw new IllegalArgumentException(&quot;Dictionary element must belong to this dictionary&quot;);
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWzR4JFCEeuCTslxszDstQ" name="addWord" specification="_ry9lAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWzR4ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWzR4pFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != synset.getDictionary() &amp;&amp; synset.getDictionary().isEditable()) {
             if (!synset.containsWord(lemma)) {
                 synset.getWords().add(new Word(synset.getDictionary(), synset, lemma));
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWz48JFCEeuCTslxszDstQ" name="removeWordsFromSynset" specification="_ry9lA5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sWz48ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sWz48pFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             for (Word word : synset.getWords()) {
                 if (word.getLemma().equalsIgnoreCase(lemma)) {
                     synset.getWords().remove(word);
                     break;
                 }
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW0gAJFCEeuCTslxszDstQ" name="loadAllSynsets" specification="_oIb0AJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (null != synsetOffsets) {
             synchronized (this) {
                 if (null != synsetOffsets) {
                     super.ensureCapacity(synsetOffsets.length);
                     for (long synsetOffset : synsetOffsets) {
                         Synset synset = loadSynset(synsetOffset);
                         if (null != synset) {
                             super.add(synset);
                         } else {
                             if (null != dictionary) {
                                 log.warn(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_WARN_004&quot;, new Object[]{synsetOffset, getLemma()}));
                             } else {
                                 log.warn(ResourceBundleSet.insertParams(&quot;Synset {0} not found while loading index word {1}&quot;, new Object[]{synsetOffset, getLemma()}));
                             }
                         }
                     }
                     synsetOffsets = null;
                 }
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sW1HEJFCEeuCTslxszDstQ" name="loadSynset" specification="_oIdCIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sW1HEZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sW1HEpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>try {
             return null == dictionary ? null : dictionary.getSynsetAt(pos, offset);
         } catch (JWNLException e) {
             throw new JWNLRuntimeException(e);
         }
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oHk4YJFCEeuCTslxszDstQ" name="SynsetList" visibility="private" method="_sWYbIJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_oHk4YZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oHk4YpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oHk4Y5FCEeuCTslxszDstQ" type="_oHkRUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oHlfcJFCEeuCTslxszDstQ" name="SynsetList" visibility="private" method="_sWZpQJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_oHlfcpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oHlfc5FCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oHlfcZFCEeuCTslxszDstQ" name="initialCapacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oHlfdJFCEeuCTslxszDstQ" type="_oHkRUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oHlfdZFCEeuCTslxszDstQ" name="size" method="_sWa3YJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oHmGgJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oHnUoZFCEeuCTslxszDstQ" name="isEmpty" method="_sWbecJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oHn7sJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oHpJ0JFCEeuCTslxszDstQ" name="clone" method="_sWehwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ryx-0pFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oHqX8pFCEeuCTslxszDstQ" name="toArray" method="_sWfI0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oHq_AJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oHq_AZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oHsNIJFCEeuCTslxszDstQ" name="get" method="_sWg-AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oHsNIZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ryzM9ZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oHuCUJFCEeuCTslxszDstQ" name="remove" method="_sWkBUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oHuCUZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ry1pMJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oHvQcpFCEeuCTslxszDstQ" name="clear" method="_sWlPcJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_oHwekJFCEeuCTslxszDstQ" name="removeRange" visibility="protected" method="_sWo50JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oHxFoJFCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oHxFoZFCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oHxss5FCEeuCTslxszDstQ" name="iterator" method="_sWpg4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry3eY5FCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oH0I8JFCEeuCTslxszDstQ" name="listIterator" method="_sWqH8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry4FcJFCEeuCTslxszDstQ" type="_rbzCMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oH6PkJFCEeuCTslxszDstQ" name="listIterator" method="_sWqvAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oH62oJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ry4FcZFCEeuCTslxszDstQ" type="_rbzCMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oIDZgJFCEeuCTslxszDstQ" name="subList" method="_sWr9IJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oIDZgZFCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oIEAkJFCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oIEnoJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIFOsJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oIQ04JFCEeuCTslxszDstQ" name="spliterator" method="_sWvAcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry8W4pFCEeuCTslxszDstQ" type="_ry8W4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oIb0AJFCEeuCTslxszDstQ" name="loadAllSynsets" visibility="private" method="_sW0gAJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_oIdCIJFCEeuCTslxszDstQ" name="loadSynset" visibility="private" method="_sW1HEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oIdpMJFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ry9lBpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ryu7gJFCEeuCTslxszDstQ" name="replaceSenses" visibility="private" method="_sWaQUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ryvikJFCEeuCTslxszDstQ" name="senses" type="_rWkj8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rywJoZFCEeuCTslxszDstQ" name="contains" method="_sWcFgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rywJopFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rywJo5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rywwspFCEeuCTslxszDstQ" name="indexOf" method="_sWcskJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rywws5FCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rywwtJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ryxXwpFCEeuCTslxszDstQ" name="lastIndexOf" method="_sWd6sJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ryxXw5FCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ryxXxJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ryyl4ZFCEeuCTslxszDstQ" name="toArray" method="_sWgW8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ryyl4pFCEeuCTslxszDstQ" name="a" type="_ryx-05FCEeuCTslxszDstQ">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ryzM8ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ryyl5JFCEeuCTslxszDstQ" type="_ryx-05FCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ryyl5ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ryz0AJFCEeuCTslxszDstQ" name="set" method="_sWhlEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ryz0AZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ryz0ApFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ryz0A5FCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ry0bEJFCEeuCTslxszDstQ" name="add" method="_sWizMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry0bEZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ry0bEpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ry1CIJFCEeuCTslxszDstQ" name="add" method="_sWjaQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry1CIZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ry1CIpFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ry1pMZFCEeuCTslxszDstQ" name="remove" method="_sWkoYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry1pMpFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ry1pM5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ry2QQJFCEeuCTslxszDstQ" name="addAll" method="_sWnEoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry2QQZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ry2QQpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ry23UpFCEeuCTslxszDstQ" name="addAll" method="_sWnrsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry23U5FCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ry23VJFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ry23VZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ry4sgJFCEeuCTslxszDstQ" name="containsAll" method="_sWskMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry4sgZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ry4sgpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ry56oJFCEeuCTslxszDstQ" name="removeAll" method="_sWtyUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry56oZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ry56opFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ry7IwJFCEeuCTslxszDstQ" name="retainAll" method="_sWuZYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry7IwZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ry7IwpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ry8W45FCEeuCTslxszDstQ" name="checkIfWeReEmptyAndRemoveIndexWord" visibility="private" method="_sWwOkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry8W5JFCEeuCTslxszDstQ" name="d" type="_rVLc0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ry898JFCEeuCTslxszDstQ" name="checkSynsetIsNotNull" visibility="private" method="_sWwOkpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry898ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ry898pFCEeuCTslxszDstQ" name="checkDictionaryIsOurs" visibility="private" method="_sWyq0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry8985FCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ry9lAJFCEeuCTslxszDstQ" name="addWord" visibility="private" method="_sWzR4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry9lAZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ry9lApFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ry9lA5FCEeuCTslxszDstQ" name="removeWordsFromSynset" visibility="private" method="_sWz48JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ry9lBJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ry9lBZFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oKC9kJFCEeuCTslxszDstQ" name="IndexWordSet">
              <ownedComment xmi:id="_sdfIs5FCEeuCTslxszDstQ">
                <body>A class to simplify the access to a set of &lt;code>IndexWord&lt;/code>s, each containing
one part of speech of the same word. IndexWordSets are usually created by a
call to {@link net.sf.extjwnl.dictionary.Dictionary#lookupAllIndexWords Dictionary.lookupAllIndexWords}.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sJVdoJFCEeuCTslxszDstQ" name="indexWords" visibility="private" isLeaf="true" type="_oHXdAJFCEeuCTslxszDstQ" isReadOnly="true" association="_shPnUZFCEeuCTslxszDstQ">
                <qualifier xmi:id="_sJZvEJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sJWEsJFCEeuCTslxszDstQ" value="new EnumMap&lt;>(POS.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sJa9MJFCEeuCTslxszDstQ" name="lemma" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXHa8JFCEeuCTslxszDstQ" name="IndexWordSet" specification="_oKJEMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXHa8ZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sXHa8pFCEeuCTslxszDstQ" type="_oKC9kJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.lemma = lemma;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXIpEJFCEeuCTslxszDstQ" name="add" specification="_rWsfwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXIpEZFCEeuCTslxszDstQ" name="word" type="_oHXdAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>indexWords.put(word.getPOS(), word);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXJQIJFCEeuCTslxszDstQ" name="remove" specification="_rWtt4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXJQIZFCEeuCTslxszDstQ" name="p" type="_oLknkJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>indexWords.remove(p);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXJ3MJFCEeuCTslxszDstQ" name="size" specification="_oKNVoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXJ3MZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return indexWords.size();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXLFUJFCEeuCTslxszDstQ" name="getIndexWord" specification="_rWu8AJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXLFUZFCEeuCTslxszDstQ" name="p" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXLFUpFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return indexWords.get(p);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXLsYJFCEeuCTslxszDstQ" name="getIndexWordArray" specification="_oKPK0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXLsYZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sXLsYpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>IndexWord[] words = new IndexWord[indexWords.size()];
     return indexWords.values().toArray(words);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXM6gJFCEeuCTslxszDstQ" name="getIndexWordCollection" specification="_oKS1MJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXM6gZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sXM6gpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return indexWords.values();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXNhkJFCEeuCTslxszDstQ" name="getValidPOSSet" specification="_oKV4gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXNhkZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sXNhkpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return indexWords.keySet();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXOIoJFCEeuCTslxszDstQ" name="isValidPOS" specification="_rWwKIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXOvsJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXOvsZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return indexWords.containsKey(pos);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXPWwJFCEeuCTslxszDstQ" name="getSenseCount" specification="_rWymYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXPWwZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXPWwpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int result = 0;
     IndexWord indexWord = getIndexWord(pos);
     if (null != indexWord) {
         result = indexWord.getSenses().size();
     }
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXP90JFCEeuCTslxszDstQ" name="toString" specification="_oKbYEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXP90ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String str;
     if (size() == 0) {
         str = &quot;&lt;empty>&quot;;
     } else {
         StringBuilder buf = new StringBuilder();
         for (POS o : getValidPOSSet()) {
             buf.append(getIndexWord(o).toString());
         }
         str = buf.toString();
     }
     return ResourceBundleSet.insertParams(&quot;[IndexWordSet: {0}]&quot;, new String[]{str});
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXQk4JFCEeuCTslxszDstQ" name="getLemma" specification="_oKdNQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXQk4ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return lemma;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXRL8JFCEeuCTslxszDstQ" name="equals" specification="_rzESsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXRL8ZFCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXRL8pFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (object instanceof IndexWordSet) &amp;&amp;
             getLemma().equals(((IndexWordSet) object).getLemma());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXRzAJFCEeuCTslxszDstQ" name="hashCode" specification="_oKfCcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXRzAZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return lemma.hashCode();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oKJEMJFCEeuCTslxszDstQ" name="IndexWordSet" method="_sXHa8JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oKKSUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oKKSUZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oKJrQJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oKKSUpFCEeuCTslxszDstQ" type="_oKC9kJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oKNVoJFCEeuCTslxszDstQ" name="size" method="_sXJ3MJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdfvwpFCEeuCTslxszDstQ">
                  <body>Returns the number of IndexWords in this set.
     *
     * @return the number of IndexWords in this set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oKN8sJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oKPK0JFCEeuCTslxszDstQ" name="getIndexWordArray" method="_sXLsYJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdgW0JFCEeuCTslxszDstQ">
                  <body>Returns an array of the IndexWords in this set.
     *
     * @return an array of the IndexWords in this set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oKPx4JFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKQY8JFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oKS1MJFCEeuCTslxszDstQ" name="getIndexWordCollection" method="_sXM6gJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oKUqYJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oKUqYZFCEeuCTslxszDstQ" key="generic_container"/>
                </eAnnotations>
                <ownedComment xmi:id="_sdgW0ZFCEeuCTslxszDstQ">
                  <body>Returns a collection of the IndexWords in this set.
     *
     * @return a collection of the IndexWords in this set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oKTcQJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKUDUJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oKV4gJFCEeuCTslxszDstQ" name="getValidPOSSet" method="_sXNhkJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdgW0pFCEeuCTslxszDstQ">
                  <body>Returns a set of all the parts-of-speech for which there is an
     * IndexWord in this set.
     *
     * @return a set of all the parts-of-speech for which there is an IndexWord in this set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oKWfkJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oKXGoJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oKbYEJFCEeuCTslxszDstQ" name="toString" method="_sXP90JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oKb_IJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oKdNQJFCEeuCTslxszDstQ" name="getLemma" method="_sXQk4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oKd0UJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oKfCcJFCEeuCTslxszDstQ" name="hashCode" method="_sXRzAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oKfpgJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rWsfwJFCEeuCTslxszDstQ" name="add" method="_sXIpEJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdfvwJFCEeuCTslxszDstQ">
                  <body>Adds an IndexWord to this set.
     *
     * @param word word to add</body>
                </ownedComment>
                <ownedParameter xmi:id="_rWsfwZFCEeuCTslxszDstQ" name="word" type="_oHXdAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rWtt4JFCEeuCTslxszDstQ" name="remove" method="_sXJQIJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdfvwZFCEeuCTslxszDstQ">
                  <body>Removes the IndexWords associated with POS &lt;var>p&lt;/var> from this set.
     *
     * @param p POS</body>
                </ownedComment>
                <ownedParameter xmi:id="_rWtt4ZFCEeuCTslxszDstQ" name="p" type="_oLknkJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rWu8AJFCEeuCTslxszDstQ" name="getIndexWord" method="_sXLFUJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdfvw5FCEeuCTslxszDstQ">
                  <body>Returns the IndexWord associated with POS &lt;var>p&lt;/var>.
     *
     * @param p POS
     * @return the IndexWord associated with POS &lt;var>p&lt;/var>.</body>
                </ownedComment>
                <ownedParameter xmi:id="_rWu8AZFCEeuCTslxszDstQ" name="p" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rWvjEJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rWwKIJFCEeuCTslxszDstQ" name="isValidPOS" method="_sXOIoJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdgW05FCEeuCTslxszDstQ">
                  <body>Return true if there is a word with part-of-speech &lt;var>pos&lt;/var> in
     * this set.
     *
     * @param pos POS
     * @return true if there is a word with part-of-speech &lt;var>pos&lt;/var> in this set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_rWwxMJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rWwxMZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rWymYJFCEeuCTslxszDstQ" name="getSenseCount" method="_sXPWwJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdg94JFCEeuCTslxszDstQ">
                  <body>Finds out how many senses the word with part-of-speech &lt;var>pos&lt;/var> has.
     *
     * @param pos POS
     * @return number of senses the word with part-of-speech &lt;var>pos&lt;/var> has</body>
                </ownedComment>
                <ownedParameter xmi:id="_rWzNcJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rWzNcZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rzESsJFCEeuCTslxszDstQ" name="equals" method="_sXRL8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rzESsZFCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzE5wJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oKwvQJFCEeuCTslxszDstQ" name="LexFileIdFileNameMap" isAbstract="true">
              <ownedComment xmi:id="_sdg94ZFCEeuCTslxszDstQ">
                <body>Maps the lexicographer files identifiers to names. See LEXNAMES(5WN).
 *
@author Brett Walenz (bwalenz@users.sourceforge.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sJgcwJFCEeuCTslxszDstQ" name="lexFileIdLexFileName" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <qualifier xmi:id="_sJhq4ZFCEeuCTslxszDstQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </qualifier>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXTBIJFCEeuCTslxszDstQ" name="_initializer1" specification="_oK2O0JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>String[] names = {
             &quot;adj.all&quot;,
             &quot;adj.pert&quot;,
             &quot;adv.all&quot;,
             &quot;noun.Tops&quot;,
             &quot;noun.act&quot;,
             &quot;noun.animal&quot;,
             &quot;noun.artifact&quot;,
             &quot;noun.attribute&quot;,
             &quot;noun.body&quot;,
             &quot;noun.cognition&quot;,
             &quot;noun.communication&quot;,
             &quot;noun.event&quot;,
             &quot;noun.feeling&quot;,
             &quot;noun.food&quot;,
             &quot;noun.group&quot;,
             &quot;noun.location&quot;,
             &quot;noun.motive&quot;,
             &quot;noun.object&quot;,
             &quot;noun.person&quot;,
             &quot;noun.phenomenon&quot;,
             &quot;noun.plant&quot;,
             &quot;noun.possession&quot;,
             &quot;noun.process&quot;,
             &quot;noun.quantity&quot;,
             &quot;noun.relation&quot;,
             &quot;noun.shape&quot;,
             &quot;noun.state&quot;,
             &quot;noun.substance&quot;,
             &quot;noun.time&quot;,
             &quot;verb.body&quot;,
             &quot;verb.change&quot;,
             &quot;verb.cognition&quot;,
             &quot;verb.communication&quot;,
             &quot;verb.competition&quot;,
             &quot;verb.consumption&quot;,
             &quot;verb.contact&quot;,
             &quot;verb.creation&quot;,
             &quot;verb.emotion&quot;,
             &quot;verb.motion&quot;,
             &quot;verb.perception&quot;,
             &quot;verb.possession&quot;,
             &quot;verb.social&quot;,
             &quot;verb.stative&quot;,
             &quot;verb.weather&quot;,
             &quot;adj.ppl&quot;
     };

     lexFileIdLexFileName = new HashMap&lt;>();
     for (int i = 0; i &lt; names.length; i++) {
         lexFileIdLexFileName.put((long) i, names[i]);
     }
     lexFileIdLexFileName = Collections.unmodifiableMap(lexFileIdLexFileName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXTBIZFCEeuCTslxszDstQ" name="getMap" specification="_oK4rEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXTBIpFCEeuCTslxszDstQ" type="_rWnAMZFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return lexFileIdLexFileName;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oK2O0JFCEeuCTslxszDstQ" name="_initializer1" isStatic="true" method="_sXTBIJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oK214JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oK214ZFCEeuCTslxszDstQ" key="init"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_oK4rEJFCEeuCTslxszDstQ" name="getMap" isStatic="true" method="_sXTBIZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rzGH4JFCEeuCTslxszDstQ" type="_rWnAMZFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oK__0JFCEeuCTslxszDstQ" name="LexFileNameFileIdMap" isAbstract="true">
              <ownedComment xmi:id="_sdhk8JFCEeuCTslxszDstQ">
                <body>Maps the lexicographer files names to identifiers. See LEXNAMES(5WN).
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sJi5AJFCEeuCTslxszDstQ" name="lexFileNameLexFileId" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <qualifier xmi:id="_sJkHIZFCEeuCTslxszDstQ">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </qualifier>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXUPQJFCEeuCTslxszDstQ" name="_initializer1" specification="_oLDDIJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>lexFileNameLexFileId = new HashMap&lt;>();
     for (Map.Entry&lt;Long, String> e : LexFileIdFileNameMap.getMap().entrySet()) {
         lexFileNameLexFileId.put(e.getValue(), e.getKey());
     }
     lexFileNameLexFileId = Collections.unmodifiableMap(lexFileNameLexFileId);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXUPQZFCEeuCTslxszDstQ" name="getMap" specification="_oLHUkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXUPQpFCEeuCTslxszDstQ" type="_rWnAMZFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return lexFileNameLexFileId;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oLDDIJFCEeuCTslxszDstQ" name="_initializer1" isStatic="true" method="_sXUPQJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oLDqMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oLDqMZFCEeuCTslxszDstQ" key="init"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_oLHUkJFCEeuCTslxszDstQ" name="getMap" isStatic="true" method="_sXUPQZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rzGH4ZFCEeuCTslxszDstQ" type="_rWnAMZFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oLS6wJFCEeuCTslxszDstQ" name="MapBackedDictionaryElementFactory">
              <ownedComment xmi:id="_sdhk8ZFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rXIkoJFCEeuCTslxszDstQ" general="_oLcEsJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXWEcJFCEeuCTslxszDstQ" name="MapBackedDictionaryElementFactory" specification="_rzGu8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXWEcZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXWEcpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXWEc5FCEeuCTslxszDstQ" type="_oLS6wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary, params);
     maxOffset.clear();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXWrgJFCEeuCTslxszDstQ" name="createSynset" specification="_rXE6QJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXWrgZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXWrgpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (!maxOffset.containsKey(pos)) {
         // first time - update max offset
         // iteration might take time
         long maxOff = 0L;
         Iterator&lt;Synset> si = dictionary.getSynsetIterator(pos);
         while (si.hasNext()) {
             Synset s = si.next();
             if (maxOff &lt; s.getOffset()) {
                 maxOff = s.getOffset();
             }
         }
         maxOffset.put(pos, maxOff);
     }

     return super.createSynset(pos);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rXE6QJFCEeuCTslxszDstQ" name="createSynset" method="_sXWrgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rXE6QZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzHWAJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rzGu8JFCEeuCTslxszDstQ" name="MapBackedDictionaryElementFactory" method="_sXWEcJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rzGu85FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rzGu9JFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rzGu8ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzGu8pFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzGu9ZFCEeuCTslxszDstQ" type="_oLS6wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oLcEsJFCEeuCTslxszDstQ" name="MapDictionaryElementFactory">
              <ownedComment xmi:id="_sdiMAJFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rXMPAJFCEeuCTslxszDstQ" general="_osVyUJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXYgsJFCEeuCTslxszDstQ" name="MapDictionaryElementFactory" specification="_rzHWAZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXYgsZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXYgspFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXYgs5FCEeuCTslxszDstQ" type="_oLcEsJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary, params);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rzHWAZFCEeuCTslxszDstQ" name="MapDictionaryElementFactory" method="_sXYgsJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rzHWBJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rzHWBZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rzHWApFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzHWA5FCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzHWBpFCEeuCTslxszDstQ" type="_oLcEsJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_oLknkJFCEeuCTslxszDstQ" name="POS">
              <ownedComment xmi:id="_sdiMAZFCEeuCTslxszDstQ">
                <body>Enumeration of major syntactic categories, or &lt;b>P&lt;/b>art's &lt;b>O&lt;/b>f &lt;b>S&lt;/b>peech.
Each &lt;code>POS&lt;/code> has a human-readable label that can be used to print it, and a key by which it can be looked up.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sJnxgJFCEeuCTslxszDstQ" name="ADJECTIVE_SATELLITE_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sJnxgZFCEeuCTslxszDstQ" value="&quot;s&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sJoYkJFCEeuCTslxszDstQ" name="ADJECTIVE_SATELLITE_ID" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sJoYkZFCEeuCTslxszDstQ" value="5"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sJoYkpFCEeuCTslxszDstQ" name="ALL_POS" visibility="private" isLeaf="true" isStatic="true" type="_oLknkJFCEeuCTslxszDstQ" isOrdered="true" isReadOnly="true">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sJo_oJFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sJo_oZFCEeuCTslxszDstQ" value="Collections.unmodifiableList(Arrays.asList(NOUN, VERB, ADJECTIVE, ADVERB))"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sJo_opFCEeuCTslxszDstQ" name="label" visibility="private" isLeaf="true" isReadOnly="true">
                <eAnnotations xmi:id="_sJo_o5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sJo_pJFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sJpmsJFCEeuCTslxszDstQ" name="id" visibility="private" isLeaf="true" isReadOnly="true">
                <eAnnotations xmi:id="_sJpmsZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sJpmspFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sJpmtJFCEeuCTslxszDstQ" name="key" visibility="private" isLeaf="true" isReadOnly="true">
                <eAnnotations xmi:id="_sJqNwJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sJqNwZFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedOperation xmi:id="_oLw00JFCEeuCTslxszDstQ" name="getAllPOS" isStatic="true" method="_sXZHwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oLyC8JFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oLyqAJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oL0fMJFCEeuCTslxszDstQ" name="getPOSForLabel" isStatic="true" method="_sXZu0pFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdjaJJFCEeuCTslxszDstQ">
                  <body>Return the &lt;code>POS&lt;/code> whose key matches &lt;var>label&lt;/var>,
     * or null if the label does not match any POS.
     *
     * @param label POS label
     * @return POS</body>
                </ownedComment>
                <ownedParameter xmi:id="_oL1GQJFCEeuCTslxszDstQ" name="label">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rXRukJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oL27cJFCEeuCTslxszDstQ" name="getPOSForKey" isStatic="true" method="_sXa88JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdjaJZFCEeuCTslxszDstQ">
                  <body>Return the &lt;code>POS&lt;/code> whose key matches &lt;var>key&lt;/var>,
     * or null if the key does not match any POS.
     *
     * @param key key for POS
     * @return POS</body>
                </ownedComment>
                <ownedParameter xmi:id="_oL27cZFCEeuCTslxszDstQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rXRukZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oL5XsJFCEeuCTslxszDstQ" name="getPOSForKey" isStatic="true" method="_sXbkAZFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdjaJpFCEeuCTslxszDstQ">
                  <body>Return the &lt;code>POS&lt;/code> whose key matches &lt;var>key&lt;/var>,
     * or null if the key does not match any POS.
     *
     * @param key POS key
     * @return POS</body>
                </ownedComment>
                <ownedParameter xmi:id="_oL5-wJFCEeuCTslxszDstQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rXSVoJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oL7z8JFCEeuCTslxszDstQ" name="getPOSForId" isStatic="true" method="_sXcLEpFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdkBMJFCEeuCTslxszDstQ">
                  <body>Return the &lt;code>POS&lt;/code> whose id matches &lt;var>id&lt;/var>,
     * or null if the id does not match any POS.
     *
     * @param id id for POS
     * @return POS</body>
                </ownedComment>
                <ownedParameter xmi:id="_oL8bAJFCEeuCTslxszDstQ" name="id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rXSVoZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oMHaIJFCEeuCTslxszDstQ" name="POS" visibility="package" method="_sXcyIpFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oMJPUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oMJPUZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oMHaIZFCEeuCTslxszDstQ" name="id">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oMIBMJFCEeuCTslxszDstQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oMIBMZFCEeuCTslxszDstQ" name="label">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oMJPUpFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oMLEgJFCEeuCTslxszDstQ" name="toString" method="_sXeAQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oMMSoJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oMOH0JFCEeuCTslxszDstQ" name="getLabel" method="_sXenUJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdkBMZFCEeuCTslxszDstQ">
                  <body>Return a label intended for textual presentation.
     *
     * @return a label intended for textual presentation</body>
                </ownedComment>
                <ownedParameter xmi:id="_oMOu4JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oMP9AJFCEeuCTslxszDstQ" name="getKey" method="_sXfOYZFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdkoQJFCEeuCTslxszDstQ">
                  <body>Returns the key for this POS.
     *
     * @return key for this POS</body>
                </ownedComment>
                <ownedParameter xmi:id="_oMQkEJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oMRyMJFCEeuCTslxszDstQ" name="getId" method="_sXf1cZFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdkoQZFCEeuCTslxszDstQ">
                  <body>Returns the id for this POS.
     *
     * @return id for this POS</body>
                </ownedComment>
                <ownedParameter xmi:id="_oMSZQJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedLiteral xmi:id="_oLoR8JFCEeuCTslxszDstQ" name="NOUN">
                <specification xmi:type="uml:Expression" xmi:id="_oLo5AJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdiMApFCEeuCTslxszDstQ" value="1"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdizEJFCEeuCTslxszDstQ" value="&quot;n&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdizEZFCEeuCTslxszDstQ" value="&quot;noun&quot;"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oLpgEJFCEeuCTslxszDstQ" name="VERB">
                <specification xmi:type="uml:Expression" xmi:id="_oLpgEZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdizEpFCEeuCTslxszDstQ" value="2"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdizE5FCEeuCTslxszDstQ" value="&quot;v&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdizFJFCEeuCTslxszDstQ" value="&quot;verb&quot;"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oLquMJFCEeuCTslxszDstQ" name="ADJECTIVE">
                <specification xmi:type="uml:Expression" xmi:id="_oLrVQJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdizFZFCEeuCTslxszDstQ" value="3"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdizFpFCEeuCTslxszDstQ" value="&quot;a&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdjaIJFCEeuCTslxszDstQ" value="&quot;adjective&quot;"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oLr8UJFCEeuCTslxszDstQ" name="ADVERB">
                <specification xmi:type="uml:Expression" xmi:id="_oLr8UZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdjaIZFCEeuCTslxszDstQ" value="4"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdjaIpFCEeuCTslxszDstQ" value="&quot;r&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdjaI5FCEeuCTslxszDstQ" value="&quot;adverb&quot;"/>
                </specification>
              </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oMi38JFCEeuCTslxszDstQ" name="Pointer">
              <ownedComment xmi:id="_sdkoQpFCEeuCTslxszDstQ">
                <body>A &lt;code>Pointer&lt;/code> encodes a lexical or semantic relationship between WordNet entities.  A lexical
relationship holds between Words; a semantic relationship holds between Synsets.  Relationships
are &lt;i>directional&lt;/i>:  the two roles of a relationship are the &lt;i>source&lt;/i> and &lt;i>target&lt;/i>.
Relationships are &lt;i>typed&lt;/i>: the type of a relationship is a {@link PointerType}, and can
be retrieved via {@link Pointer#getType getType}.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sJqNw5FCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sJqNxJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sJq00JFCEeuCTslxszDstQ" name="pointerType" visibility="private" isLeaf="true" type="_oONE0JFCEeuCTslxszDstQ" isReadOnly="true"/>
              <ownedAttribute xmi:id="_sJq00pFCEeuCTslxszDstQ" name="targetIndex" type="_oNM_QJFCEeuCTslxszDstQ" isReadOnly="true" association="_shSDkJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sJq01pFCEeuCTslxszDstQ" name="source" isLeaf="true" type="_oNn2AJFCEeuCTslxszDstQ" isReadOnly="true" association="_shUf0JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sJq02pFCEeuCTslxszDstQ" name="target" visibility="private" type="_oNn2AJFCEeuCTslxszDstQ" association="_shW8EJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_sJsC8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sJsC8ZFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rzIkIJFCEeuCTslxszDstQ" client="_oMi38JFCEeuCTslxszDstQ" supplier="_rV-HAJFCEeuCTslxszDstQ" contract="_rV-HAJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXiRsJFCEeuCTslxszDstQ" name="Pointer" specification="_rXfxAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXiRsZFCEeuCTslxszDstQ" name="source" type="_oNn2AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXiRspFCEeuCTslxszDstQ" name="pointerType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXiRs5FCEeuCTslxszDstQ" name="targetPOS" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXiRtJFCEeuCTslxszDstQ" name="targetOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sXiRtZFCEeuCTslxszDstQ" name="targetIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sXiRtpFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (null == source) {
         throw new IllegalArgumentException(&quot;Source must be not null&quot;);
     }
     this.source = source;
     if (null == pointerType) {
         throw new IllegalArgumentException(&quot;Pointer type must be not null&quot;);
     }
     this.pointerType = pointerType;
     if (null == targetPOS) {
         throw new IllegalArgumentException(&quot;Target POS must be not null&quot;);
     }
     this.targetIndex = new TargetIndex(targetPOS, targetOffset, targetIndex);
     this.target = null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXjf0JFCEeuCTslxszDstQ" name="Pointer" specification="_rXi0UJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXjf0ZFCEeuCTslxszDstQ" name="pointerType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXjf0pFCEeuCTslxszDstQ" name="source" type="_oNn2AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXjf05FCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXjf1JFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (null == pointerType) {
         throw new IllegalArgumentException(&quot;Pointer type must be not null&quot;);
     }
     this.pointerType = pointerType;
     if (null == source) {
         throw new IllegalArgumentException(&quot;Source must be not null&quot;);
     }
     this.source = source;
     if (null == target) {
         throw new IllegalArgumentException(&quot;Target must be not null&quot;);
     }
     this.target = target;
     if (source.getDictionary() != target.getDictionary()) {
         if (null != source.getDictionary()) {
             throw new IllegalArgumentException(source.getDictionary().getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_063&quot;));
         } else {
             if (null != target.getDictionary()) {
                 throw new IllegalArgumentException(target.getDictionary().getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_063&quot;));
             }
             //else {
                 // should never get there because of null == null above
                 //throw new IllegalArgumentException(&quot;Source and target must belong to the same dictionary&quot;);
             //}
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXkG4JFCEeuCTslxszDstQ" name="toString" specification="_oMvsQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXkG4ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String targetMsg = (target == null) ? targetIndex.toString() : target.toString();
     return ResourceBundleSet.insertParams(&quot;[PointerTarget: [Source Index: {0}] Source: {1} Target: {2}]&quot;,
             new Object[]{getSourceIndex(), getSource(), targetMsg});
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXkt8JFCEeuCTslxszDstQ" name="getSourceIndex" specification="_oMxhcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXkt8ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return source.getIndex();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXlVAJFCEeuCTslxszDstQ" name="getType" specification="_oMzWoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXlVAZFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return pointerType;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXl8EJFCEeuCTslxszDstQ" name="isLexical" specification="_oM1L0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXl8EZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (getSource() instanceof Word) &amp;&amp; (getTarget() instanceof Word);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXmjIJFCEeuCTslxszDstQ" name="isSemantic" specification="_oM3BAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXmjIZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (getSource() instanceof Synset) &amp;&amp; (getTarget() instanceof Synset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXnKMJFCEeuCTslxszDstQ" name="isSymmetricTo" specification="_rXl3oJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXnKMZFCEeuCTslxszDstQ" name="that" type="_oMi38JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXnKMpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return
             null != pointerType.getSymmetricType()
             &amp;&amp; that.getType().equals(pointerType.getSymmetricType())
             &amp;&amp; that.getTarget().equals(getSource())
             &amp;&amp; that.getSource().equals(getTarget());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXnxQJFCEeuCTslxszDstQ" name="getTarget" specification="_oM5dQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXnxQZFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (null == target &amp;&amp; null != source.getDictionary()) {
         Synset syn = source.getDictionary().getSynsetAt(targetIndex.pos, targetIndex.offset);
         target = (targetIndex.index == 0) ? syn : (null == syn ? null : syn.getWords().get(targetIndex.index - 1));
         if (null != target &amp;&amp; source.getDictionary().isEditable()) {
             targetIndex = null;
         }
     }
     return target;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXoYUJFCEeuCTslxszDstQ" name="setTarget" specification="_rXns0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXoYUZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>this.target = target;
     targetIndex = null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXo_YJFCEeuCTslxszDstQ" name="getTargetSynset" specification="_oM7ScJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXo_YZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (null == getTarget()) {
         return null;
     }
     return getTarget().getSynset();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXpmcJFCEeuCTslxszDstQ" name="getTargetOffset" specification="_oNAyAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXqNgJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <language>java</language>
                <body>if (null == target) {
         if (null != source.getDictionary() &amp;&amp; source.getDictionary().isEditable()) {
             return getTarget().getSynset().getOffset();
         } else {
             return targetIndex.offset;
         }
     } else {
         return target.getSynset().getOffset();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXqNgZFCEeuCTslxszDstQ" name="getTargetPOS" specification="_oND1UJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXqNgpFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (null == target) {
         if (null != source.getDictionary() &amp;&amp; source.getDictionary().isEditable()) {
             return getTarget().getSynset().getPOS();
         } else {
             return targetIndex.pos;
         }
     } else {
         return target.getSynset().getPOS();
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXq0kJFCEeuCTslxszDstQ" name="equals" specification="_rzJLMZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXq0kZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXq0kpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this == o) {
         return true;
     }
     if (!(o instanceof Pointer)) {
         return false;
     }

     Pointer pointer = (Pointer) o;

     if (!pointerType.equals(pointer.pointerType)) {
         return false;
     }
     if (!source.equals(pointer.source)) {
         return false;
     }
     if (null == target) {
         if (!Objects.equals(targetIndex, pointer.targetIndex)) {
             return false;
         }
     } else {
         try {
             if (!target.getPOS().equals(pointer.getTargetPOS())
                     || target.getIndex() != pointer.getTargetIndex()
                     || target.getSynset().getOffset() != pointer.getTargetOffset()) {
                 return false;
             }
         } catch (JWNLException e) {
             throw new JWNLRuntimeException(e);
         }
     }

     return true;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXrboJFCEeuCTslxszDstQ" name="hashCode" specification="_oNHfsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXrboZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int result = pointerType.hashCode();
     result = 31 * result + (targetIndex != null ? targetIndex.hashCode() : 0);
     result = 31 * result + source.hashCode();
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXt34JFCEeuCTslxszDstQ" name="writeObject" specification="_rXvooJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXue8JFCEeuCTslxszDstQ" name="oos" type="_rWIfEJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>boolean wasNull = null == targetIndex;
     try {
         this.targetIndex = new TargetIndex(getTargetPOS(), getTargetOffset(), getTargetIndex());
     } catch (JWNLException e) {
         throw new JWNLRuntimeException(e);
     }
     oos.defaultWriteObject();
     if (wasNull) {
         this.targetIndex = null;
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oMvsQJFCEeuCTslxszDstQ" name="toString" method="_sXkG4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oMw6YJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oMxhcJFCEeuCTslxszDstQ" name="getSourceIndex" method="_sXkt8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oMyvkJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oMzWoJFCEeuCTslxszDstQ" name="getType" method="_sXlVAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rXkpgJFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oM1L0JFCEeuCTslxszDstQ" name="isLexical" method="_sXl8EJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdlPUJFCEeuCTslxszDstQ">
                  <body>Returns whether this pointer is between two words.
     *
     * @return true if this pointer is between two words.
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oM1y4JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oM3BAJFCEeuCTslxszDstQ" name="isSemantic" method="_sXmjIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdlPUZFCEeuCTslxszDstQ">
                  <body>Returns whether this pointer is between two synsets.
     *
     * @return true if this pointer is between two synsets.
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oM3oEJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oM5dQJFCEeuCTslxszDstQ" name="getTarget" method="_sXnxQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdlPU5FCEeuCTslxszDstQ">
                  <body>Returns the actual target of this pointer.
     *
     * @return actual target of this pointer
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_rXnFwJFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oM7ScJFCEeuCTslxszDstQ" name="getTargetSynset" method="_sXo_YJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdl2YJFCEeuCTslxszDstQ">
                  <body>Returns the synset that is a) the target of this pointer, or b) the synset that contains the target of this pointer.
     *
     * @return the synset that is a) the target of this pointer, or b) the synset that contains the target of this pointer.
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_rzJLMJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oNAyAJFCEeuCTslxszDstQ" name="getTargetOffset" method="_sXpmcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdl2YZFCEeuCTslxszDstQ">
                  <body>Returns the offset of the target synset.
     *
     * @return offset of the target synset
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oNBZEJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oND1UJFCEeuCTslxszDstQ" name="getTargetPOS" method="_sXqNgZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rXpiAJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oNHfsJFCEeuCTslxszDstQ" name="hashCode" method="_sXrboJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oNIt0JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rXfxAJFCEeuCTslxszDstQ" name="Pointer" method="_sXiRsJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rXg_IpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rXhmMJFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rXfxAZFCEeuCTslxszDstQ" name="source" type="_oNn2AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rXgYEJFCEeuCTslxszDstQ" name="pointerType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rXgYEZFCEeuCTslxszDstQ" name="targetPOS" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rXg_IJFCEeuCTslxszDstQ" name="targetOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rXg_IZFCEeuCTslxszDstQ" name="targetIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rXhmMZFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rXi0UJFCEeuCTslxszDstQ" name="Pointer" method="_sXjf0JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rXjbYZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rXjbYpFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rXi0UZFCEeuCTslxszDstQ" name="pointerType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rXi0UpFCEeuCTslxszDstQ" name="source" type="_oNn2AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rXjbYJFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rXjbY5FCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rXl3oJFCEeuCTslxszDstQ" name="isSymmetricTo" method="_sXnKMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdlPUpFCEeuCTslxszDstQ">
                  <body>Returns whether &lt;var>that&lt;/var> is symmetric to this pointer.
     * @param that pointer
     * @return true, if &lt;var>that&lt;/var> is symmetric to this pointer.
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_rXl3oZFCEeuCTslxszDstQ" name="that" type="_oMi38JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rXmesJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rXns0JFCEeuCTslxszDstQ" name="setTarget" method="_sXoYUJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdlPVJFCEeuCTslxszDstQ">
                  <body>Sets the actual target of this pointer.
     *
     * @param target actual target of this pointer</body>
                </ownedComment>
                <ownedParameter xmi:id="_rXns0ZFCEeuCTslxszDstQ" name="target" type="_oNn2AJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rXvooJFCEeuCTslxszDstQ" name="writeObject" visibility="private" method="_sXt34JFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rXvooZFCEeuCTslxszDstQ" name="oos" type="_rWIfEJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rzJLMZFCEeuCTslxszDstQ" name="equals" method="_sXq0kJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rzJLMpFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzJLM5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oNM_QJFCEeuCTslxszDstQ" name="TargetIndex" visibility="private">
                <eAnnotations xmi:id="_oNNmUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oNNmUZFCEeuCTslxszDstQ" key="static"/>
                </eAnnotations>
                <ownedComment xmi:id="_sdl2YpFCEeuCTslxszDstQ">
                  <body>This class is used to avoid paging in the target before it is required, and to prevent
     * keeping a large portion of the database resident once the target has been queried.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_sJvGQJFCEeuCTslxszDstQ" name="pos" visibility="private" isLeaf="true" type="_oLknkJFCEeuCTslxszDstQ" isReadOnly="true"/>
                <ownedAttribute xmi:id="_sJw7cJFCEeuCTslxszDstQ" name="offset" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sJywoJFCEeuCTslxszDstQ" name="index" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rzJyQJFCEeuCTslxszDstQ" client="_oNM_QJFCEeuCTslxszDstQ" supplier="_rV-HAJFCEeuCTslxszDstQ" contract="_rV-HAJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXsCsJFCEeuCTslxszDstQ" name="TargetIndex" specification="_rXrXMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sXsCsZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sXsCspFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sXsCs5FCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sXsCtJFCEeuCTslxszDstQ" type="_oNM_QJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.pos = pos;
         this.offset = offset;
         this.index = index;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXspwJFCEeuCTslxszDstQ" name="equals" specification="_rzJyQZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sXspwZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sXspwpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (this == o) {
             return true;
         }
         if (!(o instanceof TargetIndex)) {
             return false;
         }

         TargetIndex that = (TargetIndex) o;

         if (index != that.index) {
             return false;
         }
         if (offset != that.offset) {
             return false;
         }
         //noinspection RedundantIfStatement
         if (!Objects.equals(pos, that.pos)) {
             return false;
         }

         return true;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXtQ0JFCEeuCTslxszDstQ" name="hashCode" specification="_oNSe0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sXtQ0ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = pos != null ? pos.hashCode() : 0;
         result = 31 * result + (int) (offset ^ (offset >>> 32));
         result = 31 * result + index;
         return result;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oNSe0JFCEeuCTslxszDstQ" name="hashCode" method="_sXtQ0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oNTF4JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_rXrXMJFCEeuCTslxszDstQ" name="TargetIndex" visibility="package" method="_sXsCsJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rXr-QZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rXr-QpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rXrXMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rXrXMpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rXr-QJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rXslUJFCEeuCTslxszDstQ" type="_oNM_QJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rzJyQZFCEeuCTslxszDstQ" name="equals" method="_sXspwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rzJyQpFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rzJyQ5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oNn2AJFCEeuCTslxszDstQ" name="PointerTarget" isAbstract="true">
              <ownedComment xmi:id="_sdmdcJFCEeuCTslxszDstQ">
                <body>A &lt;code>PointerTarget&lt;/code> is the source or target of a &lt;code>Pointer&lt;/code>.
The target of a semantic &lt;code>PointerTarget&lt;/code> is a &lt;code>Synset&lt;/code>;
the target of a lexical &lt;code>PointerTarget&lt;/code> is a &lt;code>Word&lt;/code>.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sJ5eUJFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sJ6scJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sJ7TgJFCEeuCTslxszDstQ" name="dictionary" visibility="protected" type="_rVLc0JFCEeuCTslxszDstQ" association="_shYxQJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_sJ7TgZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sJ7TgpFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rzV_gJFCEeuCTslxszDstQ" client="_oNn2AJFCEeuCTslxszDstQ" supplier="_rV-HAJFCEeuCTslxszDstQ" contract="_rV-HAJFCEeuCTslxszDstQ"/>
              <interfaceRealization xmi:id="_rX8c8JFCEeuCTslxszDstQ" client="_oNn2AJFCEeuCTslxszDstQ" supplier="_o0LfsJFCEeuCTslxszDstQ" contract="_o0LfsJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXvtEJFCEeuCTslxszDstQ" name="PointerTarget" specification="_rzZC0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXvtEZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXvtEpFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.dictionary = dictionary;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXw7MJFCEeuCTslxszDstQ" name="getPointers" specification="_rX-SIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXw7MZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXw7MpFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sXw7M5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;Pointer> result = new ArrayList&lt;>();
		for (Pointer pointer : getPointers()) {
			if (pointer.getType().equals(type)
					|| PointerType.HYPERNYM == type &amp;&amp; PointerType.INSTANCE_HYPERNYM == pointer.getType()
					|| PointerType.HYPONYM == type &amp;&amp; PointerType.INSTANCES_HYPONYM == pointer.getType()) {
				result.add(pointer);
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXxiQJFCEeuCTslxszDstQ" name="getTargets" specification="_oN0qUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXxiQZFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sXxiQpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return collectTargets(getPointers());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXyJUJFCEeuCTslxszDstQ" name="getTargets" specification="_rYAuYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXyJUZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXyJUpFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sXyJU5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return collectTargets(getPointers(type));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXzXcJFCEeuCTslxszDstQ" name="collectTargets" specification="_rzctMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXzXcZFCEeuCTslxszDstQ" name="pointers" type="_rV_8MJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sXzXcpFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sXzXc5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;PointerTarget> targets = new ArrayList&lt;>(pointers.size());
		for (Pointer pointer : pointers) {
			targets.add(pointer.getTarget());
		}
		return targets;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXz-gJFCEeuCTslxszDstQ" name="getDictionary" specification="_oN5i0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sXz-gZFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return dictionary;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sX0lkJFCEeuCTslxszDstQ" name="setDictionary" specification="_rziMwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sX0lkZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>this.dictionary = dictionary;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oNsHcJFCEeuCTslxszDstQ" name="getPOS" isAbstract="true">
                <ownedParameter xmi:id="_rX9EAJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oNt8oJFCEeuCTslxszDstQ" name="getSynset" isAbstract="true">
                <ownedParameter xmi:id="_rzbfEJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oNvKwJFCEeuCTslxszDstQ" name="getIndex" isAbstract="true">
                <ownedParameter xmi:id="_oNvx0JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oNwY4JFCEeuCTslxszDstQ" name="getPointers" isAbstract="true">
                <ownedComment xmi:id="_sdmdcZFCEeuCTslxszDstQ">
                  <body>Returns a list of Target's pointers.
	 *
	 * @return a list of Target's pointers</body>
                </ownedComment>
                <ownedParameter xmi:id="_oNw_8JFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oNw_8ZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oNyOEJFCEeuCTslxszDstQ" name="toString" isAbstract="true">
                <ownedParameter xmi:id="_oNy1IJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN0qUJFCEeuCTslxszDstQ" name="getTargets" method="_sXxiQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdmdc5FCEeuCTslxszDstQ">
                  <body>Returns all the pointer targets of this synset.
	 *
	 * @return all the pointer targets of this synset
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oN1RYJFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN1RYZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oN5i0JFCEeuCTslxszDstQ" name="getDictionary" method="_sXz-gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rzg-oJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rX-SIJFCEeuCTslxszDstQ" name="getPointers" method="_sXw7MJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdmdcpFCEeuCTslxszDstQ">
                  <body>Returns all pointers of type &lt;var>type&lt;/var>.
	 *
	 * @param type pointer type
	 * @return all pointers of type &lt;var>type&lt;/var></body>
                </ownedComment>
                <ownedParameter xmi:id="_rX-5MJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rX-5MZFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rX_gQJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rYAuYJFCEeuCTslxszDstQ" name="getTargets" method="_sXyJUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdmddJFCEeuCTslxszDstQ">
                  <body>Returns all the targets of the pointers of type &lt;var>type&lt;/var>.
	 *
	 * @param type pointer type
	 * @return all the targets of the pointers of type &lt;var>type&lt;/var>
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_rYAuYZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rYBVcJFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rYBVcZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rzZC0JFCEeuCTslxszDstQ" name="PointerTarget" visibility="protected" method="_sXvtEJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_rzZp4JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rzZp4ZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rzZC0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzZp4pFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rzctMJFCEeuCTslxszDstQ" name="collectTargets" visibility="private" method="_sXzXcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdnEgJFCEeuCTslxszDstQ">
                  <body>Returns of all the targets of &lt;var>pointers&lt;/var>.
	 *
	 * @param pointers pointer to return targets of
	 * @return all the targets of &lt;var>pointers&lt;/var>
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_rzctMZFCEeuCTslxszDstQ" name="pointers" type="_rV_8MJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzdUQJFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rzdUQZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rziMwJFCEeuCTslxszDstQ" name="setDictionary" method="_sX0lkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rziMwZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_oONE0JFCEeuCTslxszDstQ" name="PointerType">
              <ownedComment xmi:id="_sdnEgZFCEeuCTslxszDstQ">
                <body>Instances of this class enumerate the possible WordNet pointer types,
and are used to label &lt;code>PointerType&lt;/code>s. Each &lt;code>PointerType&lt;/code>
carries additional information: a human-readable label, an optional reflexive
type that labels links pointing the opposite direction, an encoding of
parts-of-speech that it applies to, and a short string that represents it in
the dictionary files.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sKEdcJFCEeuCTslxszDstQ" name="POS_TO_MASK_MAP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <qualifier xmi:id="_sKG5sJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sKFEgJFCEeuCTslxszDstQ" value="new EnumMap&lt;>(POS.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sKKkEJFCEeuCTslxszDstQ" name="ALL_TYPES" visibility="private" isLeaf="true" isStatic="true" type="_oONE0JFCEeuCTslxszDstQ" isOrdered="true" isReadOnly="true">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sKLLIJFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sKLyMJFCEeuCTslxszDstQ" value="Collections.unmodifiableList(Arrays.asList(&#xA;            ANTONYM, HYPERNYM, HYPONYM, ENTAILMENT, SIMILAR_TO, MEMBER_HOLONYM, SUBSTANCE_HOLONYM,&#xA;            PART_HOLONYM, MEMBER_MERONYM, SUBSTANCE_MERONYM, PART_MERONYM,&#xA;            CAUSE, PARTICIPLE_OF, SEE_ALSO, PERTAINYM, ATTRIBUTE, VERB_GROUP, DERIVATION,&#xA;            CATEGORY, USAGE, REGION, CATEGORY_MEMBER, USAGE_MEMBER, REGION_MEMBER,&#xA;            INSTANCE_HYPERNYM, INSTANCES_HYPONYM&#xA;    ))"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sKO1gJFCEeuCTslxszDstQ" name="label" visibility="private" isLeaf="true" isReadOnly="true">
                <eAnnotations xmi:id="_sKPckJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sKPckZFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sKTG8JFCEeuCTslxszDstQ" name="flags" visibility="private" isLeaf="true" isReadOnly="true">
                <eAnnotations xmi:id="_sKTG8ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sKTuAJFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sKWKQJFCEeuCTslxszDstQ" name="key" visibility="private" isLeaf="true" isReadOnly="true">
                <eAnnotations xmi:id="_sKWKQZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sKWxUJFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sKZNkJFCEeuCTslxszDstQ" name="symmetricType" type="_oONE0JFCEeuCTslxszDstQ" isReadOnly="true">
                <eAnnotations xmi:id="_sKZNkZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sKZNkpFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sKc38JFCEeuCTslxszDstQ" name="flagStringCache" visibility="private">
                <eAnnotations xmi:id="_sKdfAJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sKdfAZFCEeuCTslxszDstQ" key="transient"/>
                </eAnnotations>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sKeGEJFCEeuCTslxszDstQ" value="null"/>
              </ownedAttribute>
              <ownedOperation xmi:id="_oOmGYJFCEeuCTslxszDstQ" name="_initializer1" isStatic="true" method="_sX1MoJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oOmtcJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oOmtcZFCEeuCTslxszDstQ" key="init"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_oOrl8JFCEeuCTslxszDstQ" name="_initializer2" isStatic="true" method="_sX1zsJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oOsNAJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oOsNAZFCEeuCTslxszDstQ" key="init"/>
                </eAnnotations>
              </ownedOperation>
              <ownedOperation xmi:id="_oOuCMJFCEeuCTslxszDstQ" name="getPointerTypeForKey" isStatic="true" method="_sX2awZFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd0f4JFCEeuCTslxszDstQ">
                  <body>Return the &lt;code>PointerType&lt;/code> whose key matches &lt;var>key&lt;/var> and applies to &lt;var>pos&lt;/var>.
     *
     * @param key pointer type key
     * @return the &lt;code>PointerType&lt;/code> whose key matches &lt;var>key&lt;/var></body>
                </ownedComment>
                <ownedParameter xmi:id="_oOupQJFCEeuCTslxszDstQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rYP-8JFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOwecJFCEeuCTslxszDstQ" name="getAllPointerTypes" isStatic="true" method="_sX3B0pFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oOxFgJFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOxskJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oO7dkJFCEeuCTslxszDstQ" name="PointerType" visibility="package" method="_sX43AJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oO8rsJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oO8rsZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oO7dkZFCEeuCTslxszDstQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oO8EoJFCEeuCTslxszDstQ" name="label">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oO8EoZFCEeuCTslxszDstQ" name="flags">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oO8rspFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oO950JFCEeuCTslxszDstQ" name="toString" method="_sX5eEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oO-g4JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oO_H8JFCEeuCTslxszDstQ" name="getKey" method="_sX6FIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oO_vAJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oO_vAZFCEeuCTslxszDstQ" name="getLabel" method="_sX6FIpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oPAWEJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPBkMJFCEeuCTslxszDstQ" name="isSymmetric" method="_sX7TQpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oPCLQJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPDZYJFCEeuCTslxszDstQ" name="getFlags" method="_sX8hYZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oPEAcJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPI48JFCEeuCTslxszDstQ" name="getFlagsAsString" visibility="private" method="_sX-WkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oPJgAJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rYOJwJFCEeuCTslxszDstQ" name="isSymmetric" isStatic="true" method="_sX1zsZFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sdz405FCEeuCTslxszDstQ">
                  <body>Returns true if &lt;var>type&lt;/var> is a symmetric pointer type (it is its own symmetric type).
     *
     * @param type pointer type
     * @return if &lt;var>type&lt;/var> is a symmetric pointer type</body>
                </ownedComment>
                <ownedParameter xmi:id="_rYOJwZFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rYOw0JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rYQmAJFCEeuCTslxszDstQ" name="getAllPointerTypesForPOS" isStatic="true" method="_sX3o4pFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rYQmAZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rYQmApFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rYRNEJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rYUQYJFCEeuCTslxszDstQ" name="appliesTo" method="_sX6sMZFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd1G8JFCEeuCTslxszDstQ">
                  <body>Returns whether or not this PointerType can be associated with &lt;var>pos&lt;/var>.
     *
     * @param pos part of speech
     * @return true if this PointerType can be associated with &lt;var>pos&lt;/var></body>
                </ownedComment>
                <ownedParameter xmi:id="_rYUQYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rYU3cJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rYVegJFCEeuCTslxszDstQ" name="symmetricTo" method="_sX76UZFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd1G8ZFCEeuCTslxszDstQ">
                  <body>Returns true if &lt;var>type&lt;/var> is symmetric to this pointer type.
     *
     * @param type pointer type
     * @return true if &lt;var>type&lt;/var> is symmetric to this pointer type</body>
                </ownedComment>
                <ownedParameter xmi:id="_rYWFkJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rYWsoJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rYX6wJFCEeuCTslxszDstQ" name="setSymmetric" visibility="private" isStatic="true" method="_sX8hY5FCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd1G8pFCEeuCTslxszDstQ">
                  <body>Sets &lt;var>a&lt;/var> as &lt;var>b&lt;/var>'s symmetric type, and vice versa.
     *
     * @param a pointer type
     * @param b pointer type</body>
                </ownedComment>
                <ownedParameter xmi:id="_rYX6wZFCEeuCTslxszDstQ" name="a" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rYX6wpFCEeuCTslxszDstQ" name="b" type="_oONE0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rYZI4JFCEeuCTslxszDstQ" name="getPOSMask" visibility="private" isStatic="true" method="_sX9IcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rYZI4ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rYZv8JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rzrWsJFCEeuCTslxszDstQ" name="getPointerTypeForKey" isStatic="true" method="_sX2axJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd0f4ZFCEeuCTslxszDstQ">
                  <body>Return the &lt;code>PointerType&lt;/code> whose key matches &lt;var>key&lt;/var> and applies to &lt;var>pos&lt;/var>.
     *
     * @param key pointer type key
     * @return the &lt;code>PointerType&lt;/code> whose key matches &lt;var>key&lt;/var></body>
                </ownedComment>
                <ownedParameter xmi:id="_rzrWsZFCEeuCTslxszDstQ" name="key" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rzr9wJFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedLiteral xmi:id="_oOPhEJFCEeuCTslxszDstQ" name="ANTONYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOQIIJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdnrkJFCEeuCTslxszDstQ" value="&quot;!&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdnrkZFCEeuCTslxszDstQ" value="&quot;antonym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdnrkpFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V | PointerTypeFlags.ADJ | PointerTypeFlags.ADV"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOQIIZFCEeuCTslxszDstQ" name="HYPERNYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOQvMJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdnrk5FCEeuCTslxszDstQ" value="&quot;@&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdoSoJFCEeuCTslxszDstQ" value="&quot;hypernym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdoSoZFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOQvMZFCEeuCTslxszDstQ" name="HYPONYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOQvMpFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdoSopFCEeuCTslxszDstQ" value="&quot;~&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdoSo5FCEeuCTslxszDstQ" value="&quot;hyponym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdoSpJFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oORWQJFCEeuCTslxszDstQ" name="ENTAILMENT">
                <specification xmi:type="uml:Expression" xmi:id="_oORWQZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdo5sJFCEeuCTslxszDstQ" value="&quot;*&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdo5sZFCEeuCTslxszDstQ" value="&quot;entailment&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdo5spFCEeuCTslxszDstQ" value="PointerTypeFlags.V"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOR9UJFCEeuCTslxszDstQ" name="SIMILAR_TO">
                <specification xmi:type="uml:Expression" xmi:id="_oOR9UZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdo5s5FCEeuCTslxszDstQ" value="&quot;&amp;&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdo5tJFCEeuCTslxszDstQ" value="&quot;similar&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdpgwJFCEeuCTslxszDstQ" value="PointerTypeFlags.ADJ"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOR9UpFCEeuCTslxszDstQ" name="MEMBER_HOLONYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOSkYJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdpgwZFCEeuCTslxszDstQ" value="&quot;#m&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdpgwpFCEeuCTslxszDstQ" value="&quot;member holonym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqH0JFCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOSkYZFCEeuCTslxszDstQ" name="SUBSTANCE_HOLONYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOTLcJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqH0ZFCEeuCTslxszDstQ" value="&quot;#s&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqH0pFCEeuCTslxszDstQ" value="&quot;substance holonym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqH05FCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOTLcZFCEeuCTslxszDstQ" name="PART_HOLONYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOTygJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqH1JFCEeuCTslxszDstQ" value="&quot;#p&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqu4JFCEeuCTslxszDstQ" value="&quot;part holonym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqu4ZFCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOUZkJFCEeuCTslxszDstQ" name="MEMBER_MERONYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOUZkZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqu4pFCEeuCTslxszDstQ" value="&quot;%m&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqu45FCEeuCTslxszDstQ" value="&quot;member meronym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqu5JFCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOVAoJFCEeuCTslxszDstQ" name="SUBSTANCE_MERONYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOVAoZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdqu5ZFCEeuCTslxszDstQ" value="&quot;%s&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdrV8JFCEeuCTslxszDstQ" value="&quot;substance meronym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdrV8ZFCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOVnsJFCEeuCTslxszDstQ" name="PART_MERONYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOVnsZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdrV8pFCEeuCTslxszDstQ" value="&quot;%p&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdrV85FCEeuCTslxszDstQ" value="&quot;part meronym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdrV9JFCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOWOwJFCEeuCTslxszDstQ" name="CAUSE">
                <specification xmi:type="uml:Expression" xmi:id="_oOWOwZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdrV9ZFCEeuCTslxszDstQ" value="&quot;>&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdrV9pFCEeuCTslxszDstQ" value="&quot;cause&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdr9AJFCEeuCTslxszDstQ" value="PointerTypeFlags.V"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOW10JFCEeuCTslxszDstQ" name="PARTICIPLE_OF">
                <specification xmi:type="uml:Expression" xmi:id="_oOW10ZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdr9AZFCEeuCTslxszDstQ" value="&quot;&lt;&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdr9ApFCEeuCTslxszDstQ" value="&quot;participle of&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdr9A5FCEeuCTslxszDstQ" value="PointerTypeFlags.ADJ"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOXc4JFCEeuCTslxszDstQ" name="SEE_ALSO">
                <specification xmi:type="uml:Expression" xmi:id="_oOXc4ZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdr9BJFCEeuCTslxszDstQ" value="&quot;^&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdskEJFCEeuCTslxszDstQ" value="&quot;also see&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdskEZFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V | PointerTypeFlags.ADJ"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOYD8JFCEeuCTslxszDstQ" name="PERTAINYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOYrAJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdtLIJFCEeuCTslxszDstQ" value="&quot;\\&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdtLIZFCEeuCTslxszDstQ" value="&quot;pertainym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdtyMJFCEeuCTslxszDstQ" value="PointerTypeFlags.ADJ | PointerTypeFlags.ADV"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOYrAZFCEeuCTslxszDstQ" name="ATTRIBUTE">
                <specification xmi:type="uml:Expression" xmi:id="_oOZSEJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdtyMZFCEeuCTslxszDstQ" value="&quot;=&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdtyMpFCEeuCTslxszDstQ" value="&quot;attribute&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdtyM5FCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.ADJ"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOZ5IJFCEeuCTslxszDstQ" name="VERB_GROUP">
                <specification xmi:type="uml:Expression" xmi:id="_oOZ5IZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdtyNJFCEeuCTslxszDstQ" value="&quot;$&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sduZQJFCEeuCTslxszDstQ" value="&quot;verb group&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sduZQZFCEeuCTslxszDstQ" value="PointerTypeFlags.V"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOagMJFCEeuCTslxszDstQ" name="DERIVATION">
                <specification xmi:type="uml:Expression" xmi:id="_oOagMZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sduZQpFCEeuCTslxszDstQ" value="&quot;+&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sduZQ5FCEeuCTslxszDstQ" value="&quot;derivation&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdvAUJFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V | PointerTypeFlags.ADJ | PointerTypeFlags.ADV"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oObHQJFCEeuCTslxszDstQ" name="DOMAIN_ALL">
                <specification xmi:type="uml:Expression" xmi:id="_oObuUJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdvAUZFCEeuCTslxszDstQ" value="&quot;;&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdvAUpFCEeuCTslxszDstQ" value="&quot;domain&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdvAU5FCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V | PointerTypeFlags.ADJ | PointerTypeFlags.ADV"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOcVYJFCEeuCTslxszDstQ" name="MEMBER_ALL">
                <specification xmi:type="uml:Expression" xmi:id="_oOcVYZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdvnYJFCEeuCTslxszDstQ" value="&quot;-&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdvnYZFCEeuCTslxszDstQ" value="&quot;member&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdvnYpFCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOc8cJFCEeuCTslxszDstQ" name="CATEGORY">
                <specification xmi:type="uml:Expression" xmi:id="_oOc8cZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdvnY5FCEeuCTslxszDstQ" value="&quot;;c&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdwOcJFCEeuCTslxszDstQ" value="&quot;category domain&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdwOcZFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V | PointerTypeFlags.ADJ | PointerTypeFlags.ADV"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOdjgJFCEeuCTslxszDstQ" name="USAGE">
                <specification xmi:type="uml:Expression" xmi:id="_oOdjgZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdwOcpFCEeuCTslxszDstQ" value="&quot;;u&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdw1gJFCEeuCTslxszDstQ" value="&quot;usage domain&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdw1gZFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V | PointerTypeFlags.ADJ | PointerTypeFlags.ADV"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOeKkJFCEeuCTslxszDstQ" name="REGION">
                <specification xmi:type="uml:Expression" xmi:id="_oOexoJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdw1gpFCEeuCTslxszDstQ" value="&quot;;r&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdxckJFCEeuCTslxszDstQ" value="&quot;region domain&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdxckZFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V | PointerTypeFlags.ADJ | PointerTypeFlags.ADV"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOexoZFCEeuCTslxszDstQ" name="CATEGORY_MEMBER">
                <specification xmi:type="uml:Expression" xmi:id="_oOfYsJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdxckpFCEeuCTslxszDstQ" value="&quot;-c&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdyDoJFCEeuCTslxszDstQ" value="&quot;member of category domain&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdyDoZFCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOf_wJFCEeuCTslxszDstQ" name="USAGE_MEMBER">
                <specification xmi:type="uml:Expression" xmi:id="_oOgm0JFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdyDopFCEeuCTslxszDstQ" value="&quot;-u&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdyqsJFCEeuCTslxszDstQ" value="&quot;member of usage domain&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdyqsZFCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOhN4JFCEeuCTslxszDstQ" name="REGION_MEMBER">
                <specification xmi:type="uml:Expression" xmi:id="_oOhN4ZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdzRwJFCEeuCTslxszDstQ" value="&quot;-r&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdzRwZFCEeuCTslxszDstQ" value="&quot;member of region domain&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdzRwpFCEeuCTslxszDstQ" value="PointerTypeFlags.N"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOh08JFCEeuCTslxszDstQ" name="INSTANCE_HYPERNYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOh08ZFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdzRw5FCEeuCTslxszDstQ" value="&quot;@i&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdzRxJFCEeuCTslxszDstQ" value="&quot;instance hypernym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdzRxZFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V"/>
                </specification>
              </ownedLiteral>
              <ownedLiteral xmi:id="_oOicAJFCEeuCTslxszDstQ" name="INSTANCES_HYPONYM">
                <specification xmi:type="uml:Expression" xmi:id="_oOjDEJFCEeuCTslxszDstQ">
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdz40JFCEeuCTslxszDstQ" value="&quot;~i&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdz40ZFCEeuCTslxszDstQ" value="&quot;instances hyponym&quot;"/>
                  <operand xmi:type="uml:LiteralString" xmi:id="_sdz40pFCEeuCTslxszDstQ" value="PointerTypeFlags.N | PointerTypeFlags.V"/>
                </specification>
              </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oPdCAJFCEeuCTslxszDstQ" name="PointerTypeFlags">
              <ownedComment xmi:id="_sd1G85FCEeuCTslxszDstQ">
                <body>Flags for tagging a pointer type with the POS types it apples to.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_oPeQIJFCEeuCTslxszDstQ" name="N">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oPe3MJFCEeuCTslxszDstQ" value="1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oPgsYJFCEeuCTslxszDstQ" name="V">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oPhTcJFCEeuCTslxszDstQ" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oPjIoJFCEeuCTslxszDstQ" name="ADJ">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oPjvsJFCEeuCTslxszDstQ" value="4"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oPk90JFCEeuCTslxszDstQ" name="ADV">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oPlk4JFCEeuCTslxszDstQ" value="8"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oPoBIJFCEeuCTslxszDstQ" name="PointerUtils" isAbstract="true">
              <ownedComment xmi:id="_sd1uAJFCEeuCTslxszDstQ">
                <body>This class contains static methods for performing various pointer operations. A pointer from one synset/word to
another connotes a relationship between those words. The type of the relationship is specified by the type
of pointer. See the WordNet documentation for information on pointer types. To avoid confusion with
the &lt;code>Relationship&lt;/code> class, these relationships will be referred to as links.
 *
@author John Didion (jdidion@didion.net)</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sKqTUJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_shamcJFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sKrhcJFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(PointerUtils.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sKsvkJFCEeuCTslxszDstQ" name="INFINITY" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sKtWoJFCEeuCTslxszDstQ" value="Integer.MAX_VALUE"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYALwJFCEeuCTslxszDstQ" name="getDirectHypernyms" specification="_r0GNcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYALwZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYALwpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.HYPERNYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYAy0JFCEeuCTslxszDstQ" name="getHypernymTree" specification="_r0LtAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYAy0ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYAy0pFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getHypernymTree(synset, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYBZ4JFCEeuCTslxszDstQ" name="getHypernymTree" specification="_r0RzoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYBZ4ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYBZ4pFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYBZ45FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new PointerTargetTree(synset, makePointerTargetTreeList(synset, PointerType.HYPERNYM, depth));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYCA8JFCEeuCTslxszDstQ" name="getDirectHyponyms" specification="_r0WsIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYCA8ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYCA8pFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.HYPONYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYCoAJFCEeuCTslxszDstQ" name="getHyponymTree" specification="_r0a9kJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYCoAZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYCoApFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getHyponymTree(synset, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYDPEJFCEeuCTslxszDstQ" name="getHyponymTree" specification="_r0eA4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYDPEZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYDPEpFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYDPE5FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new PointerTargetTree(synset, makePointerTargetTreeList(synset, PointerType.HYPONYM, depth));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYD2IJFCEeuCTslxszDstQ" name="getCoordinateTerms" specification="_r0hrQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYD2IZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYD2IpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerTargetNodeList list = new PointerTargetNodeList();
		for (PointerTargetNode o : getDirectHypernyms(synset)) {
			list.addAll(getPointerTargets(o.getSynset(), PointerType.HYPONYM));
		}
		return list;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYFEQJFCEeuCTslxszDstQ" name="getAntonyms" specification="_r0kukJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYFEQZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYFEQpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.ANTONYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYGSYJFCEeuCTslxszDstQ" name="getExtendedAntonyms" specification="_r0oY8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYGSYZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYGSYpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getExtendedAntonyms(synset, 1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYGSY5FCEeuCTslxszDstQ" name="getExtendedAntonyms" specification="_r0tRcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYG5cJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYG5cZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYG5cpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerTargetTreeNodeList list = new PointerTargetTreeNodeList();
		if (synset.getPOS() == POS.ADJECTIVE) {
			PointerTargetNodeList antonyms = getAntonyms(synset);
			list = makePointerTargetTreeList(antonyms, PointerType.SIMILAR_TO, PointerType.ANTONYM, depth, false);
		}
		return new PointerTargetTree(new PointerTargetTreeNode(synset, list, null));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYHggJFCEeuCTslxszDstQ" name="getIndirectAntonyms" specification="_r0w70JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYHggZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYHggpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getIndirectAntonyms(synset, 1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYIHkJFCEeuCTslxszDstQ" name="getIndirectAntonyms" specification="_r010UJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYIHkZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYIHkpFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYIHk5FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerTargetTreeNodeList list = new PointerTargetTreeNodeList();
		if (synset.getPOS() == POS.ADJECTIVE) {
			PointerTargetNodeList synonyms = getSynonyms(synset);
			list = makePointerTargetTreeList(synonyms, PointerType.ANTONYM, PointerType.ANTONYM, depth, false);
		}
		return new PointerTargetTree(new PointerTargetTreeNode(synset, list, null));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYIuoJFCEeuCTslxszDstQ" name="getAttributes" specification="_r06FwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYIuoZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYIuopFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.ATTRIBUTE);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYJVsJFCEeuCTslxszDstQ" name="getAlsoSees" specification="_r08iAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYJVsZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYJVspFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.SEE_ALSO);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYJVs5FCEeuCTslxszDstQ" name="getAlsoSeeTree" specification="_r1AzcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYJVtJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYJVtZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYJVtpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new PointerTargetTree(synset, makePointerTargetTreeList(synset, PointerType.SEE_ALSO, depth));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYJ8wJFCEeuCTslxszDstQ" name="getMeronyms" specification="_r1DPsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYJ8wZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYJ8wpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerTargetNodeList list = new PointerTargetNodeList();
		list.addAll(getPartMeronyms(synset));
		list.addAll(getMemberMeronyms(synset));
		list.addAll(getSubstanceMeronyms(synset));
		return list;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYKj0JFCEeuCTslxszDstQ" name="getPartMeronyms" specification="_r1Fr8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYKj0ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYKj0pFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.PART_MERONYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYLK4JFCEeuCTslxszDstQ" name="getMemberMeronyms" specification="_r1HhIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYLK4ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYLK4pFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.MEMBER_MERONYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYLx8JFCEeuCTslxszDstQ" name="getSubstanceMeronyms" specification="_r1J9YJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYLx8ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYLx8pFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.SUBSTANCE_MERONYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYLx85FCEeuCTslxszDstQ" name="getInheritedMeronyms" specification="_r1MZoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYLx9JFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYLx9ZFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getInheritedMeronyms(synset, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYMZAJFCEeuCTslxszDstQ" name="getInheritedMeronyms" specification="_r1OO0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYMZAZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYMZApFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYMZA5FCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYMZBJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerType[] types = new PointerType[3];
		types[0] = PointerType.PART_MERONYM;
		types[1] = PointerType.MEMBER_MERONYM;
		types[2] = PointerType.SUBSTANCE_MERONYM;
		return makeInheritedTree(synset, types, null, pointerDepth, ancestorDepth, false);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYNAEJFCEeuCTslxszDstQ" name="getInheritedPartMeronyms" specification="_r1RSIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYNAEZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYNAEpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getInheritedPartMeronyms(synset, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYNnIJFCEeuCTslxszDstQ" name="getInheritedPartMeronyms" specification="_r1U8gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYNnIZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYNnIpFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYNnI5FCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYNnJJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, PointerType.PART_MERONYM, null, pointerDepth, ancestorDepth);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYNnJZFCEeuCTslxszDstQ" name="getInheritedMemberMeronyms" specification="_r1Ym4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYOOMJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYOOMZFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getInheritedMemberMeronyms(synset, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYO1QJFCEeuCTslxszDstQ" name="getInheritedMemberMeronyms" specification="_r1eGcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYO1QZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYO1QpFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYO1Q5FCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYO1RJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, PointerType.MEMBER_MERONYM, null, pointerDepth, ancestorDepth);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYPcUJFCEeuCTslxszDstQ" name="getInheritedSubstanceMeronyms" specification="_r1hJwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYPcUZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYPcUpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getInheritedSubstanceMeronyms(synset, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYQqcJFCEeuCTslxszDstQ" name="getInheritedSubstanceMeronyms" specification="_r1jmAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYQqcZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYQqcpFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYQqc5FCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYQqdJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, PointerType.SUBSTANCE_MERONYM, null, pointerDepth, ancestorDepth);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYRRgJFCEeuCTslxszDstQ" name="getHolonyms" specification="_r1oegJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYRRgZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYRRgpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerTargetNodeList list = new PointerTargetNodeList();
		list.addAll(getPartHolonyms(synset));
		list.addAll(getMemberHolonyms(synset));
		list.addAll(getSubstanceHolonyms(synset));
		return list;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYR4kJFCEeuCTslxszDstQ" name="getPartHolonyms" specification="_r1sI4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYR4kZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYR4kpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.PART_HOLONYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYSfoJFCEeuCTslxszDstQ" name="getMemberHolonyms" specification="_r1ulIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYSfoZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYSfopFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.MEMBER_HOLONYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYTGsJFCEeuCTslxszDstQ" name="getSubstanceHolonyms" specification="_r1waUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYTGsZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYTGspFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.SUBSTANCE_HOLONYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYTtwJFCEeuCTslxszDstQ" name="getInheritedHolonyms" specification="_r10rwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYTtwZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYTtwpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getInheritedHolonyms(synset, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYUU0JFCEeuCTslxszDstQ" name="getInheritedHolonyms" specification="_r149MJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYUU0ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYUU0pFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYUU05FCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYUU1JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerType[] types = new PointerType[3];
		types[0] = PointerType.PART_HOLONYM;
		types[1] = PointerType.MEMBER_HOLONYM;
		types[2] = PointerType.SUBSTANCE_HOLONYM;
		return makeInheritedTree(synset, types, null, pointerDepth, ancestorDepth, false);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYU74JFCEeuCTslxszDstQ" name="getInheritedPartHolonyms" specification="_r1-cwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYU74ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYU74pFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getInheritedPartHolonyms(synset, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYVi8JFCEeuCTslxszDstQ" name="getInheritedPartHolonyms" specification="_r2DVQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYVi8ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYVi8pFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYVi85FCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYVi9JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, PointerType.PART_HOLONYM, null, pointerDepth, ancestorDepth);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYVi9ZFCEeuCTslxszDstQ" name="getInheritedMemberHolonyms" specification="_r2INwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYVi9pFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYVi95FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getInheritedMemberHolonyms(synset, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYWKAJFCEeuCTslxszDstQ" name="getInheritedMemberHolonyms" specification="_r2NtUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYWKAZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYWKApFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYWKA5FCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYWKBJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, PointerType.MEMBER_HOLONYM, null, pointerDepth, ancestorDepth);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYWxEJFCEeuCTslxszDstQ" name="getInheritedSubstanceHolonyms" specification="_r2Sl0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYWxEZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYWxEpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getInheritedSubstanceHolonyms(synset, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYXYIJFCEeuCTslxszDstQ" name="getInheritedSubstanceHolonyms" specification="_r2WQMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYXYIZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYXYIpFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYXYI5FCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYXYJJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, PointerType.SUBSTANCE_HOLONYM, null, pointerDepth, ancestorDepth);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYX_MJFCEeuCTslxszDstQ" name="getEntailments" specification="_r2ZTgJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYX_MZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYX_MpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.ENTAILMENT);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYYmQJFCEeuCTslxszDstQ" name="getEntailmentTree" specification="_r2cW0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYYmQZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYYmQpFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getEntailmentTree(synset, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYZNUJFCEeuCTslxszDstQ" name="getEntailmentTree" specification="_r2h2YJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYZNUZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYZNUpFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYZNU5FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new PointerTargetTree(synset, makePointerTargetTreeList(synset, PointerType.ENTAILMENT, depth));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYabcJFCEeuCTslxszDstQ" name="getCauses" specification="_r2n9AJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYabcZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYabcpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.CAUSE);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYabc5FCEeuCTslxszDstQ" name="getCauseTree" specification="_r2pLIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYabdJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYabdZFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getCauseTree(synset, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYbCgJFCEeuCTslxszDstQ" name="getCauseTree" specification="_r2tckJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYbCgZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYbCgpFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYbCg5FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new PointerTargetTree(synset, makePointerTargetTreeList(synset, PointerType.CAUSE, depth));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYbpkJFCEeuCTslxszDstQ" name="getVerbGroup" specification="_r2yVEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYbpkZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYbpkpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>// We need to go through all this hassle because
		// 1. a verb does not always have links to all the verbs in its group
		// 2. two verbs in the same group sometimes have reciprocal links, and we want
		//    to make sure that each verb synset appears in the final list only once

		PointerTargetNodeList nodes = new PointerTargetNodeList();
		nodes.add(new PointerTargetNode(synset, PointerType.VERB_GROUP));
		int maxIndex = 0;
		int index = -1;
		do {
			index++;
			PointerTargetNode node = nodes.get(index);
			for (PointerTargetNode o : getPointerTargets(node.getSynset(), PointerType.VERB_GROUP)) {
				if (!nodes.contains(o)) {
					nodes.add(o);
					maxIndex++;
				}
			}
		}
		while (index &lt; maxIndex);

		return nodes;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYcQoJFCEeuCTslxszDstQ" name="getParticipleOf" specification="_r21_cJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYcQoZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYcQopFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.PARTICIPLE_OF);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYc3sJFCEeuCTslxszDstQ" name="getSynonyms" specification="_r25p0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYc3sZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYc3spFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.SIMILAR_TO);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYdewJFCEeuCTslxszDstQ" name="getSynonymTree" specification="_r297QJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYdewZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYdewpFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYdew5FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new PointerTargetTree(synset, makePointerTargetTreeList(synset, PointerType.SIMILAR_TO, null, depth, false));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYdexJFCEeuCTslxszDstQ" name="getPertainyms" specification="_r3BloJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYdexZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYdexpFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getPointerTargets(synset, PointerType.PERTAINYM);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYeF0JFCEeuCTslxszDstQ" name="getPointerTargets" specification="_r3FQAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYeF0ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYeF0pFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYeF05FCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new PointerTargetNodeList(synset.getTargets(type), type);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYes4JFCEeuCTslxszDstQ" name="makePointerTargetTreeList" specification="_r3I6YJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYes4ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYes4pFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYes45FCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makePointerTargetTreeList(synset, searchType, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYfT8JFCEeuCTslxszDstQ" name="makePointerTargetTreeList" specification="_r3MkwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYfT8ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYfT8pFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYfT85FCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYfT9JFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makePointerTargetTreeList(synset, searchType, null, depth, true);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYgiEJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" specification="_r3Q2MJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYgiEZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYgiEpFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYgiE5FCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYgiFJFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYgiFZFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYgiFpFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerType[] searchTypes = new PointerType[1];
		searchTypes[0] = searchType;
		return makePointerTargetTreeList(synset, searchTypes, labelType, depth, allowRedundancies);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYhwMJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" specification="_r3UgkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYhwMZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYhwMpFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYhwM5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYhwNJFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makePointerTargetTreeList(synset, searchTypes, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYi-UJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" specification="_r3anMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYi-UZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYi-UpFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYi-U5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYi-VJFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYi-VZFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makePointerTargetTreeList(synset, searchTypes, null, depth, true);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYjlYJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" specification="_r3eRkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYjlYZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYjlYpFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYjlY5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYjlZJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYjlZZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYjlZpFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYjlZ5FCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makePointerTargetTreeList(synset, searchTypes, labelType, depth, allowRedundancies, null);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYkMcJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" specification="_rZIIsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYkMcZFCEeuCTslxszDstQ" name="list" type="_oUc2wJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYkMcpFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYkMc5FCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYkMdJFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYkMdZFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYkMdpFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerType[] searchTypes = new PointerType[1];
		searchTypes[0] = searchType;
		return makePointerTargetTreeList(list, searchTypes, labelType, depth, allowRedundancies);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYlakJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" specification="_rZKk8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYlakZFCEeuCTslxszDstQ" name="list" type="_oUc2wJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYlakpFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYlak5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYlalJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYlalZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYlalpFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYlal5FCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerTargetTreeNodeList treeList = new PointerTargetTreeNodeList();
		for (PointerTargetNode node : list) {
			treeList.add(node.getPointerTarget(),
						 makePointerTargetTreeList(node.getSynset(), searchTypes, labelType, depth, allowRedundancies),
						 labelType);
		}
		return treeList;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYmosJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" specification="_r3k_QJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYmosZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYmospFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYmos5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYmotJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYmotZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYmotpFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYmot5FCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYmouJFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>depth--;
		PointerTargetTreeNodeList list = new PointerTargetTreeNodeList();
		for (PointerType type : searchTypes) {
			PointerTargetNodeList targets = new PointerTargetNodeList(synset.getTargets(type), type);
			if (targets.size() > 0) {
				for (PointerTargetNode ptr : targets) {
					ptr.getSynset();
					PointerTargetTreeNode node =
							new PointerTargetTreeNode(ptr.getPointerTarget(),
													  labelType == null ? type : labelType, parent);
					if (allowRedundancies || !list.contains(node)) {
						if (depth != 0) {
							// check cycles through parent
							Set&lt;PointerTargetTreeNode> parents = new HashSet&lt;>();
							PointerTargetTreeNode currentParent = parent;
							while (null != currentParent) {
								if (!parents.contains(currentParent)) {
									parents.add(currentParent);
									currentParent = currentParent.getParent();
								}
								else {
									// cycle
									if (log.isWarnEnabled()) {
										if (null != synset.getDictionary()) {
											log.warn(synset.getDictionary().getMessages().resolveMessage(&quot;DICTIONARY_WARN_001&quot;, currentParent));
										}
										else {
											log.warn(ResourceBundleSet.insertParams(&quot;Cycle detected: {0}&quot;, new Object[]{currentParent}));
										}
									}

									break;
								}
							}
							if (null == currentParent) {
								node.setChildTreeList(makePointerTargetTreeList(node.getSynset(), searchTypes, labelType,
																				depth, allowRedundancies, node));
							}
						}
						list.add(node);
					}
				}
			}
		}
		return list;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYnPwJFCEeuCTslxszDstQ" name="makeInheritedTree" specification="_r3qe0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYnPwZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYn20JFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYn20ZFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, searchType, null, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYod4JFCEeuCTslxszDstQ" name="makeInheritedTree" specification="_r3tiIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYod4ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYod4pFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYod45FCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYod5JFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYod5ZFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYod5pFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, searchType, labelType, pointerDepth, ancestorDepth, true);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYpsAJFCEeuCTslxszDstQ" name="makeInheritedTree" specification="_r3wlcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYpsAZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYpsApFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYpsA5FCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYpsBJFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYpsBZFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYpsBpFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYpsB5FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerType[] searchTypes = new PointerType[1];
		searchTypes[0] = searchType;
		return makeInheritedTree(synset, searchTypes, labelType, pointerDepth, ancestorDepth, allowRedundancies);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYqTEJFCEeuCTslxszDstQ" name="makeInheritedTree" specification="_r3024JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYqTEZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYqTEpFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYqTE5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYqTFJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, searchTypes, null, INFINITY, INFINITY);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYsIQJFCEeuCTslxszDstQ" name="makeInheritedTree" specification="_r336MJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYsIQZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYsIQpFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYsIQ5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYsIRJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYsIRZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYsIRpFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYsIR5FCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return makeInheritedTree(synset, searchTypes, labelType, pointerDepth, ancestorDepth, true);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYt9cJFCEeuCTslxszDstQ" name="makeInheritedTree" specification="_r38ysJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYt9cZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYt9cpFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYt9c5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYt9dJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYt9dZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYt9dpFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYt9d5FCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYt9eJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerTargetTree hypernyms = getHypernymTree(synset, INFINITY);
		return makeInheritedTree(hypernyms, searchTypes, labelType, pointerDepth, ancestorDepth, allowRedundancies);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYvyoJFCEeuCTslxszDstQ" name="makeInheritedTree" specification="_rZTH0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYvyoZFCEeuCTslxszDstQ" name="tree" type="_oU-bMJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYvyopFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYvyo5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYvypJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYvypZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYvyppFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYvyp5FCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYvyqJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>PointerTargetTreeNode root = tree.getRootNode();
		root.setPointerTreeList(makePointerTargetTreeList(root.getSynset(), searchTypes, labelType, pointerDepth, allowRedundancies));
		root.setChildTreeList(makeInheritedTreeList(root.getChildTreeList(), searchTypes, labelType, pointerDepth,
													ancestorDepth, allowRedundancies));
		return new PointerTargetTree(root);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYwZsJFCEeuCTslxszDstQ" name="makeInheritedTreeList" specification="_rZZOcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYwZsZFCEeuCTslxszDstQ" name="list" type="_oWVGEJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYwZspFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sYwZs5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYwZtJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYwZtZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYwZtpFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYwZt5FCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYwZuJFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>ancestorDepth--;
		PointerTargetTreeNodeList inherited = new PointerTargetTreeNodeList();
		// AA: cycle with &quot;period&quot;...
		if (null != list) {
			for (PointerTargetTreeNode node : list) {
				if (allowRedundancies || !inherited.contains(node)) {
					if (ancestorDepth == 0) {
						inherited.add(node.getPointerTarget(),
									  null,
									  makePointerTargetTreeList(node.getSynset(), searchTypes, labelType, pointerDepth, allowRedundancies),
									  PointerType.HYPERNYM);
					}
					else {
						inherited.add(node.getPointerTarget(),
									  makeInheritedTreeList(node.getChildTreeList(), searchTypes, labelType,
															pointerDepth, ancestorDepth, allowRedundancies),
									  makePointerTargetTreeList(node.getSynset(), searchTypes, labelType, pointerDepth, allowRedundancies),
									  PointerType.HYPERNYM);
					}
				}
			}
		}
		return inherited;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rZIIsJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" isStatic="true" method="_sYkMcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rZIIsZFCEeuCTslxszDstQ" name="list" type="_oUc2wJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rZIIspFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rZIvwJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rZIvwZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZIvwpFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZJW0JFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rZKk8JFCEeuCTslxszDstQ" name="makePointerTargetTreeList" isStatic="true" method="_sYlakJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rZKk8ZFCEeuCTslxszDstQ" name="list" type="_oUc2wJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rZKk8pFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rZLzEZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZKk85FCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rZLMAJFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZLMAZFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZLzEJFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rZTH0JFCEeuCTslxszDstQ" name="makeInheritedTree" isStatic="true" method="_sYvyoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rZTu4JFCEeuCTslxszDstQ" name="tree" type="_oU-bMJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rZUV8JFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rZXZQJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZU9AJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rZU9AZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZU9ApFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZVkEJFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZWLIJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rZZOcJFCEeuCTslxszDstQ" name="makeInheritedTreeList" isStatic="true" method="_sYwZsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rZZOcZFCEeuCTslxszDstQ" name="list" type="_oWVGEJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rZZ1gJFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rZbqsJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZZ1gZFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_rZZ1gpFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZackJFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZbDoJFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rZbDoZFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0GNcJFCEeuCTslxszDstQ" name="getDirectHypernyms" isStatic="true" method="_sYALwJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0G0gJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0ICoJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0LtAJFCEeuCTslxszDstQ" name="getHypernymTree" isStatic="true" method="_sYAy0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0LtAZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0PXYJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0RzoJFCEeuCTslxszDstQ" name="getHypernymTree" isStatic="true" method="_sYBZ4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0SasJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0SasZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r0To0JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0WsIJFCEeuCTslxszDstQ" name="getDirectHyponyms" isStatic="true" method="_sYCA8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0XTMJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0YhUJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0a9kJFCEeuCTslxszDstQ" name="getHyponymTree" isStatic="true" method="_sYCoAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0a9kZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0bkoJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0eA4JFCEeuCTslxszDstQ" name="getHyponymTree" isStatic="true" method="_sYDPEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0eA4ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0en8JFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r0fPAJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0hrQJFCEeuCTslxszDstQ" name="getCoordinateTerms" isStatic="true" method="_sYD2IJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0iSUJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0i5YJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0kukJFCEeuCTslxszDstQ" name="getAntonyms" isStatic="true" method="_sYFEQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0lVoJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0l8sJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0oY8JFCEeuCTslxszDstQ" name="getExtendedAntonyms" isStatic="true" method="_sYGSYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0pAAJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0pnEJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0tRcJFCEeuCTslxszDstQ" name="getExtendedAntonyms" isStatic="true" method="_sYGSY5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0tRcZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0t4gJFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r0ufkJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r0w70JFCEeuCTslxszDstQ" name="getIndirectAntonyms" isStatic="true" method="_sYHggJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r0xi4JFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r0yJ8JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r010UJFCEeuCTslxszDstQ" name="getIndirectAntonyms" isStatic="true" method="_sYIHkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r02bYJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r02bYZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r03pgJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r06FwJFCEeuCTslxszDstQ" name="getAttributes" isStatic="true" method="_sYIuoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r06s0JFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r07T4JFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r08iAJFCEeuCTslxszDstQ" name="getAlsoSees" isStatic="true" method="_sYJVsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r08iAZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r09JEJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1AzcJFCEeuCTslxszDstQ" name="getAlsoSeeTree" isStatic="true" method="_sYJVs5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1AzcZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1BagJFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1BagZFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1DPsJFCEeuCTslxszDstQ" name="getMeronyms" isStatic="true" method="_sYJ8wJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1D2wJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1D2wZFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1Fr8JFCEeuCTslxszDstQ" name="getPartMeronyms" isStatic="true" method="_sYKj0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1GTAJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1GTAZFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1HhIJFCEeuCTslxszDstQ" name="getMemberMeronyms" isStatic="true" method="_sYLK4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1IIMJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1IvQJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1J9YJFCEeuCTslxszDstQ" name="getSubstanceMeronyms" isStatic="true" method="_sYLx8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1J9YZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1LLgJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1MZoJFCEeuCTslxszDstQ" name="getInheritedMeronyms" isStatic="true" method="_sYLx85FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1MZoZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1NAsJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1OO0JFCEeuCTslxszDstQ" name="getInheritedMeronyms" isStatic="true" method="_sYMZAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1OO0ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1OO0pFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1O14JFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1O14ZFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1RSIJFCEeuCTslxszDstQ" name="getInheritedPartMeronyms" isStatic="true" method="_sYNAEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1R5MJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1SgQJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1U8gJFCEeuCTslxszDstQ" name="getInheritedPartMeronyms" isStatic="true" method="_sYNnIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1U8gZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1VjkJFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1VjkZFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1WKoJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1Ym4JFCEeuCTslxszDstQ" name="getInheritedMemberMeronyms" isStatic="true" method="_sYNnJZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1Ym4ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1Z1AJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1eGcJFCEeuCTslxszDstQ" name="getInheritedMemberMeronyms" isStatic="true" method="_sYO1QJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1eGcZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1etgJFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1etgZFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1fUkJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1hJwJFCEeuCTslxszDstQ" name="getInheritedSubstanceMeronyms" isStatic="true" method="_sYPcUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1hJwZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1hw0JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1jmAJFCEeuCTslxszDstQ" name="getInheritedSubstanceMeronyms" isStatic="true" method="_sYQqcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1kNEJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1kNEZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1kNEpFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1k0IJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1oegJFCEeuCTslxszDstQ" name="getHolonyms" isStatic="true" method="_sYRRgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1pFkJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1qTsJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1sI4JFCEeuCTslxszDstQ" name="getPartHolonyms" isStatic="true" method="_sYR4kJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1sv8JFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1tXAJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1ulIJFCEeuCTslxszDstQ" name="getMemberHolonyms" isStatic="true" method="_sYSfoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1ulIZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1vMMJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1waUJFCEeuCTslxszDstQ" name="getSubstanceHolonyms" isStatic="true" method="_sYTGsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1xBYJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1xocJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r10rwJFCEeuCTslxszDstQ" name="getInheritedHolonyms" isStatic="true" method="_sYTtwJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r10rwZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r11S0JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r149MJFCEeuCTslxszDstQ" name="getInheritedHolonyms" isStatic="true" method="_sYUU0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r15kQJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r15kQZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r16LUJFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r16yYJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1-cwJFCEeuCTslxszDstQ" name="getInheritedPartHolonyms" isStatic="true" method="_sYU74JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r1-cwZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r1_q4JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2DVQJFCEeuCTslxszDstQ" name="getInheritedPartHolonyms" isStatic="true" method="_sYVi8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2DVQZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2D8UJFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2D8UZFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2FKcJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2INwJFCEeuCTslxszDstQ" name="getInheritedMemberHolonyms" isStatic="true" method="_sYVi9ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2INwZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2Jb4JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2NtUJFCEeuCTslxszDstQ" name="getInheritedMemberHolonyms" isStatic="true" method="_sYWKAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2OUYJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2OUYZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2O7cJFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2PigJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2Sl0JFCEeuCTslxszDstQ" name="getInheritedSubstanceHolonyms" isStatic="true" method="_sYWxEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2Sl0ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2Tz8JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2WQMJFCEeuCTslxszDstQ" name="getInheritedSubstanceHolonyms" isStatic="true" method="_sYXYIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2WQMZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2W3QJFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2W3QZFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2XeUJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2ZTgJFCEeuCTslxszDstQ" name="getEntailments" isStatic="true" method="_sYX_MJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2Z6kJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2Z6kZFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2cW0JFCEeuCTslxszDstQ" name="getEntailmentTree" isStatic="true" method="_sYYmQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2c94JFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2dk8JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2h2YJFCEeuCTslxszDstQ" name="getEntailmentTree" isStatic="true" method="_sYZNUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2h2YZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2h2YpFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2idcJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2n9AJFCEeuCTslxszDstQ" name="getCauses" isStatic="true" method="_sYabcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2n9AZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2n9ApFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2pLIJFCEeuCTslxszDstQ" name="getCauseTree" isStatic="true" method="_sYabc5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2pyMJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2qZQJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2tckJFCEeuCTslxszDstQ" name="getCauseTree" isStatic="true" method="_sYbCgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2tckZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r2uDoJFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2uqsJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2yVEJFCEeuCTslxszDstQ" name="getVerbGroup" isStatic="true" method="_sYbpkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r2y8IJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r20KQJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r21_cJFCEeuCTslxszDstQ" name="getParticipleOf" isStatic="true" method="_sYcQoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r22mgJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r23NkJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r25p0JFCEeuCTslxszDstQ" name="getSynonyms" isStatic="true" method="_sYc3sJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r26Q4JFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r27fAJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r297QJFCEeuCTslxszDstQ" name="getSynonymTree" isStatic="true" method="_sYdewJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r297QZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r297QpFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2_JYJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3BloJFCEeuCTslxszDstQ" name="getPertainyms" isStatic="true" method="_sYdexJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3BloZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3CzwJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3FQAJFCEeuCTslxszDstQ" name="getPointerTargets" visibility="private" isStatic="true" method="_sYeF0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3F3EJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3GeIJFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3HFMJFCEeuCTslxszDstQ" type="_oUc2wJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3I6YJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" isStatic="true" method="_sYes4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3JhcJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3JhcZFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3KIgJFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3MkwJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" isStatic="true" method="_sYfT8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3NL0JFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3Ny4JFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3Ny4ZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3OZ8JFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3Q2MJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" isStatic="true" method="_sYgiEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3RdQJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3RdQZFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3RdQpFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3SEUJFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3SEUZFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3SrYJFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3UgkJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" isStatic="true" method="_sYhwMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3VusJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3WVwJFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r3YyAJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3W80JFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3anMJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" isStatic="true" method="_sYi-UJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3anMZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3bOQJFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r3dDcJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3bOQZFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3b1UJFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3eRkJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" isStatic="true" method="_sYjlYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3e4oJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3gGwJFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r3h78JFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3gGwZFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3gGwpFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3gt0JFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3hU4JFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3k_QJFCEeuCTslxszDstQ" name="makePointerTargetTreeList" visibility="private" isStatic="true" method="_sYmosJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3k_QZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3lmUJFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r3oCkJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3lmUZFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3mNYJFCEeuCTslxszDstQ" name="depth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3mNYZFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3m0cJFCEeuCTslxszDstQ" name="parent" type="_oVexgJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3nbgJFCEeuCTslxszDstQ" type="_oWVGEJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3qe0JFCEeuCTslxszDstQ" name="makeInheritedTree" isStatic="true" method="_sYnPwJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3rF4JFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3rF4ZFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3rs8JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3tiIJFCEeuCTslxszDstQ" name="makeInheritedTree" isStatic="true" method="_sYod4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3tiIZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3uJMJFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3uJMZFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3uJMpFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3uJM5FCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3uwQJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3wlcJFCEeuCTslxszDstQ" name="makeInheritedTree" isStatic="true" method="_sYpsAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3xMgJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3xMgZFCEeuCTslxszDstQ" name="searchType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3xzkJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3xzkZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3xzkpFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3yaoJFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3zBsJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3024JFCEeuCTslxszDstQ" name="makeInheritedTree" isStatic="true" method="_sYqTEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r3024ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r31d8JFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r32sEJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r32FAJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r336MJFCEeuCTslxszDstQ" name="makeInheritedTree" isStatic="true" method="_sYsIQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r336MZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r336MpFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r35vYJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r34hQJFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r34hQZFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r34hQpFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r35IUJFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r38ysJFCEeuCTslxszDstQ" name="makeInheritedTree" isStatic="true" method="_sYt9cJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r38ysZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r39ZwJFCEeuCTslxszDstQ" name="searchTypes" type="_oONE0JFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r3_O8JFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r39ZwZFCEeuCTslxszDstQ" name="labelType" type="_oONE0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r3-A0JFCEeuCTslxszDstQ" name="pointerDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3-A0ZFCEeuCTslxszDstQ" name="ancestorDepth">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3-A0pFCEeuCTslxszDstQ" name="allowRedundancies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3-n4JFCEeuCTslxszDstQ" type="_oU-bMJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oS7z0JFCEeuCTslxszDstQ" name="Verb">
              <ownedComment xmi:id="_sd5_cJFCEeuCTslxszDstQ">
                <body>A &lt;code>Verb&lt;/code> is a subclass of &lt;code>Word&lt;/code> that can have 1 or more verb frames (use cases of the verb).
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rbbOwJFCEeuCTslxszDstQ" general="_oTGy8JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sLNF4JFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sLOUAJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sLO7EJFCEeuCTslxszDstQ" name="frames" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sLO7EZFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sLQwQJFCEeuCTslxszDstQ" value="{&#xA;            &quot;Something ----s&quot;,&#xA;            &quot;Somebody ----s&quot;,&#xA;            &quot;It is ----ing&quot;,&#xA;            &quot;Something is ----ing PP&quot;,&#xA;            &quot;Something ----s something Adjective/Noun&quot;,&#xA;            &quot;Something ----s Adjective/Noun&quot;,&#xA;            &quot;Somebody ----s Adjective&quot;,&#xA;            &quot;Somebody ----s something&quot;,&#xA;            &quot;Somebody ----s somebody&quot;,&#xA;            &quot;Something ----s somebody&quot;,&#xA;            &quot;Something ----s something&quot;,&#xA;            &quot;Something ----s to somebody&quot;,&#xA;            &quot;Somebody ----s on something&quot;,&#xA;            &quot;Somebody ----s somebody something&quot;,&#xA;            &quot;Somebody ----s something to somebody&quot;,&#xA;            &quot;Somebody ----s something from somebody&quot;,&#xA;            &quot;Somebody ----s somebody with something&quot;,&#xA;            &quot;Somebody ----s somebody of something&quot;,&#xA;            &quot;Somebody ----s something on somebody&quot;,&#xA;            &quot;Somebody ----s somebody PP&quot;,&#xA;            &quot;Somebody ----s something PP&quot;,&#xA;            &quot;Somebody ----s PP&quot;,&#xA;            &quot;Somebody's (body part) ----s&quot;,&#xA;            &quot;Somebody ----s somebody to INFINITIVE&quot;,&#xA;            &quot;Somebody ----s somebody INFINITIVE&quot;,&#xA;            &quot;Somebody ----s that CLAUSE&quot;,&#xA;            &quot;Somebody ----s to somebody&quot;,&#xA;            &quot;Somebody ----s to INFINITIVE&quot;,&#xA;            &quot;Somebody ----s whether INFINITIVE&quot;,&#xA;            &quot;Somebody ----s somebody into V-ing something&quot;,&#xA;            &quot;Somebody ----s something with something&quot;,&#xA;            &quot;Somebody ----s INFINITIVE&quot;,&#xA;            &quot;Somebody ----s VERB-ing&quot;,&#xA;            &quot;It ----s that CLAUSE&quot;,&#xA;            &quot;Something ----s INFINITIVE&quot;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sLSlcJFCEeuCTslxszDstQ" name="verbFrameFlags" visibility="private" isLeaf="true" type="_rbT6AJFCEeuCTslxszDstQ" isReadOnly="true" association="_shcboJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYzdAJFCEeuCTslxszDstQ" name="Verb" specification="_r4MDQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sYzdAZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYzdApFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYzdA5FCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sYzdBJFCEeuCTslxszDstQ" name="verbFrameFlags" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sYzdBZFCEeuCTslxszDstQ" type="_oS7z0JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary, synset, lemma);
     this.verbFrameFlags = verbFrameFlags;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY0EEJFCEeuCTslxszDstQ" name="getVerbFrameFlags" specification="_oTAFQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY0EEZFCEeuCTslxszDstQ" type="_rbT6AJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return verbFrameFlags;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY0rIJFCEeuCTslxszDstQ" name="getVerbFrameIndices" specification="_oTBTYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY0rIZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sY0rIpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return Dictionary.getVerbFrameIndices(verbFrameFlags);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY15QJFCEeuCTslxszDstQ" name="getVerbFrames" specification="_oTB6cpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY15QZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sY15QpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (null == dictionary) {
         return Dictionary.getFrames(getVerbFrameFlags(), frames);
     }
     return dictionary.getFrames(getVerbFrameFlags());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY2gUJFCEeuCTslxszDstQ" name="getVerbFramesAsString" specification="_oTChg5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY2gUZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String[] frames = getVerbFrames();
     StringBuilder buf = new StringBuilder();
     for (int i = 0; i &lt; frames.length; i++) {
         buf.append(frames[i]);
         if (i != frames.length - 1) {
             buf.append(&quot;, &quot;);
         }
     }
     return buf.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY3HYJFCEeuCTslxszDstQ" name="toString" specification="_oTChhZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY3HYZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return ResourceBundleSet.insertParams(&quot;[Word: {0} [Lemma: {1}] {2} [Index: {3}] VerbFrames: {4}]&quot;,
             new Object[]{getPOS(), getLemma(), getSynset(),
             getIndex(),
             getVerbFramesAsString()});
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oTAFQJFCEeuCTslxszDstQ" name="getVerbFrameFlags" method="_sY0EEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r4OfgJFCEeuCTslxszDstQ" type="_rbT6AJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTBTYJFCEeuCTslxszDstQ" name="getVerbFrameIndices" method="_sY0rIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTBTYZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTB6cJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTB6cpFCEeuCTslxszDstQ" name="getVerbFrames" method="_sY15QJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTChgJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTChgZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTChg5FCEeuCTslxszDstQ" name="getVerbFramesAsString" visibility="private" method="_sY2gUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTChhJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTChhZFCEeuCTslxszDstQ" name="toString" method="_sY3HYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTDIkJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4MDQJFCEeuCTslxszDstQ" name="Verb" method="_sYzdAJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r4NRYZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4NRYpFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4MqUJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r4MqUZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r4MqUpFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4NRYJFCEeuCTslxszDstQ" name="verbFrameFlags" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r4NRY5FCEeuCTslxszDstQ" type="_oS7z0JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oTDvoJFCEeuCTslxszDstQ" name="VerbSynset">
              <ownedComment xmi:id="_sd6mgJFCEeuCTslxszDstQ">
                <body>A &lt;code>Synset&lt;/code> for verbs.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_r4Y3kJFCEeuCTslxszDstQ" general="_rb_PcJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sLXd8JFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sLYFAJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sLYsEJFCEeuCTslxszDstQ" name="verbFrameFlags" type="_rbT6AJFCEeuCTslxszDstQ" isReadOnly="true" association="_sheQ0ZFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY4VgJFCEeuCTslxszDstQ" name="VerbSynset" specification="_r4TYAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY4VgZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sY4VgpFCEeuCTslxszDstQ" type="_oTDvoJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary, POS.VERB);
     verbFrameFlags = new BitSet();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY48kJFCEeuCTslxszDstQ" name="VerbSynset" specification="_r4VNMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY48kZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sY48kpFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sY48k5FCEeuCTslxszDstQ" type="_oTDvoJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary, POS.VERB, offset);
     verbFrameFlags = new BitSet();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY5joJFCEeuCTslxszDstQ" name="getVerbFrames" specification="_oTE9wJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY5joZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sY5jopFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (null == dictionary) {
         return Dictionary.getFrames(verbFrameFlags, Verb.frames);
     }
     return dictionary.getFrames(verbFrameFlags);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY6KsJFCEeuCTslxszDstQ" name="setVerbFrameFlags" specification="_r4XpcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY6KsZFCEeuCTslxszDstQ" name="verbFrameFlags" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>if (null == verbFrameFlags) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_050&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Verb frame flags must be not null&quot;);
         }
     }
     this.verbFrameFlags = verbFrameFlags;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY6xwJFCEeuCTslxszDstQ" name="getVerbFrameIndices" specification="_oTE9xJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY6xwZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sY6xwpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return Dictionary.getVerbFrameIndices(verbFrameFlags);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oTE9wJFCEeuCTslxszDstQ" name="getVerbFrames" method="_sY5joJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd6mgZFCEeuCTslxszDstQ">
                  <body>Returns all Verb Frames that are valid for all the words in this synset.
     *
     * @return all Verb Frames that are valid for all the words in this synset</body>
                </ownedComment>
                <ownedParameter xmi:id="_oTE9wZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTE9wpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTE9xJFCEeuCTslxszDstQ" name="getVerbFrameIndices" method="_sY6xwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTFk0JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTFk0ZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4TYAJFCEeuCTslxszDstQ" name="VerbSynset" method="_sY4VgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r4T_EJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4T_EZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4TYAZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r4T_EpFCEeuCTslxszDstQ" type="_oTDvoJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4VNMJFCEeuCTslxszDstQ" name="VerbSynset" method="_sY48kJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r4WbUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4WbUZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4V0QJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r4V0QZFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4WbUpFCEeuCTslxszDstQ" type="_oTDvoJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4XpcJFCEeuCTslxszDstQ" name="setVerbFrameFlags" method="_sY6KsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_r4YQgJFCEeuCTslxszDstQ" name="verbFrameFlags" type="_rbT6AJFCEeuCTslxszDstQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oTGy8JFCEeuCTslxszDstQ" name="Word">
              <ownedComment xmi:id="_sd6mgpFCEeuCTslxszDstQ">
                <body>A &lt;code>Word&lt;/code> represents the lexical information related to a specific sense of an &lt;code>IndexWord&lt;/code>.
&lt;code>Word&lt;/code>'s are linked by {@link Pointer}s into a network of lexically related words.
{@link #getTargets getTargets} retrieves the targets of these links, and
{@link Word#getPointers getPointers} retrieves the pointers themselves.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rbvX0pFCEeuCTslxszDstQ" general="_oNn2AJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sLbIUJFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sLbvYJFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sLcWcJFCEeuCTslxszDstQ" name="synset" visibility="private" type="_rb_PcJFCEeuCTslxszDstQ" association="_shgGAZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sLeLoJFCEeuCTslxszDstQ" name="lemma" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sLfZwJFCEeuCTslxszDstQ" name="lexId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sLfZwZFCEeuCTslxszDstQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sLgn4JFCEeuCTslxszDstQ" name="useCount">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY7_4JFCEeuCTslxszDstQ" name="Word" specification="_r4aswJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY7_4ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sY7_4pFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sY7_45FCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sY7_5JFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary);
     if (null == synset) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_042&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Synset must be not null&quot;);
         }
     }
     if (synset.getDictionary() != dictionary) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_040&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Dictionary element must belong to this dictionary&quot;);
         }
     }
     this.synset = synset;
     if (null == lemma || &quot;&quot;.equals(lemma)) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_046&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Lemma must be not null and not empty&quot;);
         }
     }
     if (' ' == lemma.charAt(0) || ' ' == lemma.charAt(lemma.length() - 1)) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_055&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Lemma should not be surrounded by spaces&quot;);
         }
     }
     this.lemma = lemma;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY7_5ZFCEeuCTslxszDstQ" name="equals" specification="_r4bT1ZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY7_5pFCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sY7_55FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (object instanceof Word)
             &amp;&amp; ((Word) object).getSynset().equals(getSynset())
             &amp;&amp; ((Word) object).getLemma().equals(getLemma());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY8m8JFCEeuCTslxszDstQ" name="hashCode" specification="_oTIBEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY8m8ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return getSynset().hashCode() ^ getLemma().hashCode();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY9OAJFCEeuCTslxszDstQ" name="toString" specification="_oTIBEpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY9OAZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return ResourceBundleSet.insertParams(&quot;[Word: {0} [Lemma: {1}] {2} [Index: {3}]]&quot;, new Object[]{getPOS(), getLemma(), getSynset(), getIndex()});
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY91EJFCEeuCTslxszDstQ" name="getSynset" specification="_oTIBFJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY91EZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return synset;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY_DMJFCEeuCTslxszDstQ" name="getPOS" specification="_oTIoIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY_DMZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return synset.getPOS();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY_qQJFCEeuCTslxszDstQ" name="getIndex" specification="_oTIoIZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sY_qQZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int result = 0;
     if (null != synset) {
         result = synset.getWords().indexOf(this) + 1;
     }
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZARUJFCEeuCTslxszDstQ" name="getPointers" specification="_oTJPMpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sZARUZFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sZARUpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;Pointer> result = new ArrayList&lt;>(0);
     for (Pointer pointer : getSynset().getPointers()) {
         if (this.equals(pointer.getSource())) {
             result.add(pointer);
         }
     }
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZA4YJFCEeuCTslxszDstQ" name="getSenseKey" specification="_oTJPNZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sZA4YZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>int ss_type = getSynsetType();

     final StringBuilder senseKey = startBuildingSenseKey(ss_type);

     if (POS.ADJECTIVE_SATELLITE_ID == ss_type) {
         List&lt;Pointer> p = synset.getPointers(PointerType.SIMILAR_TO);
         if (0 &lt; p.size()) {
             Pointer headWord = p.get(0);
             List&lt;Word> words = headWord.getTargetSynset().getWords();
             if (0 &lt; words.size()) {
                 Word word = words.get(0);
                 senseKey.append(word.getLemma().toLowerCase().replace(' ', '_')).append(&quot;:&quot;);
                 if (word.getLexId() &lt; 10) {
                     senseKey.append(&quot;0&quot;);
                 }
                 senseKey.append(word.getLexId());
             }
         }
     } else {
         senseKey.append(&quot;:&quot;);
     }

     return senseKey.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZBfcJFCEeuCTslxszDstQ" name="getSenseKeyWithAdjClass" specification="_oTJ2QZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sZBfcZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>int ss_type = getSynsetType();

     final StringBuilder senseKey = startBuildingSenseKey(ss_type);

     if (POS.ADJECTIVE_SATELLITE_ID == ss_type) {
         List&lt;Pointer> p = synset.getPointers(PointerType.SIMILAR_TO);
         if (0 &lt; p.size()) {
             Pointer headWord = p.get(0);
             List&lt;Word> words = headWord.getTargetSynset().getWords();
             if (0 &lt; words.size()) {
                 Word word = words.get(0);
                 String lemma = word.getLemma().toLowerCase().replace(' ', '_');
                 if (word instanceof Adjective) {
                     Adjective a = (Adjective) word;
                     if (AdjectivePosition.NONE != a.getAdjectivePosition()) {
                         lemma = lemma + &quot;(&quot; + a.getAdjectivePosition().getKey() + &quot;)&quot;;
                     }
                 }
                 senseKey.append(lemma).append(&quot;:&quot;);
                 if (word.getLexId() &lt; 10) {
                     senseKey.append(&quot;0&quot;);
                 }
                 senseKey.append(word.getLexId());
             }
         }
     } else {
         senseKey.append(&quot;:&quot;);
     }

     return senseKey.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZCGgJFCEeuCTslxszDstQ" name="getSenseNumber" specification="_oTJ2Q5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sZCGgZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int result = 0;
     if (null != dictionary) {
         IndexWord indexWord = dictionary.getIndexWord(getPOS(), lemma);
         if (null != indexWord) {
             result = indexWord.getSenses().indexOf(synset) + 1;
         }
     }
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZCtkJFCEeuCTslxszDstQ" name="getSynsetType" specification="_oTKdUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sZCtkZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int ss_type = getPOS().getId();
     if (POS.ADJECTIVE == getSynset().getPOS() &amp;&amp; getSynset().isAdjectiveCluster()) {
         ss_type = POS.ADJECTIVE_SATELLITE_ID;
     }
     return ss_type;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZD7sJFCEeuCTslxszDstQ" name="startBuildingSenseKey" specification="_oTKdUpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sZD7sZFCEeuCTslxszDstQ" name="ss_type">
                  <eAnnotations xmi:id="_sZD7spFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sZD7s5FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sZD7tJFCEeuCTslxszDstQ" type="_r4ch8JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>StringBuilder senseKey = new StringBuilder(lemma.toLowerCase().replace(' ', '_'));
     senseKey.append(&quot;%&quot;).append(ss_type).append(&quot;:&quot;);
     if (synset.getLexFileNum() &lt; 10) {
         senseKey.append(&quot;0&quot;);
     }
     senseKey.append(synset.getLexFileNum()).append(&quot;:&quot;);
     if (lexId &lt; 10) {
         senseKey.append(&quot;0&quot;);
     }
     senseKey.append(lexId).append(&quot;:&quot;);
     return senseKey;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sZFJ0JFCEeuCTslxszDstQ" name="readObject" specification="_rbvX0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sZFJ0ZFCEeuCTslxszDstQ" name="in" type="_rVrzIJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>in.defaultReadObject();
     dictionary = Dictionary.getRestoreDictionary();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oTIBEJFCEeuCTslxszDstQ" name="hashCode" method="_sY8m8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTIBEZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTIBEpFCEeuCTslxszDstQ" name="toString" method="_sY9OAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTIBE5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTIBFJFCEeuCTslxszDstQ" name="getSynset" method="_sY91EJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd7NkpFCEeuCTslxszDstQ">
                  <body>Returns the synset associated with this word.
     *
     * @return the synset associated with this word</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4b64ZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTIoIJFCEeuCTslxszDstQ" name="getPOS" method="_sY_DMJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd7Nk5FCEeuCTslxszDstQ">
                  <body>Returns the part of speech of this word.
     *
     * @return the part of speech</body>
                </ownedComment>
                <ownedParameter xmi:id="_rbuwwJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTIoIZFCEeuCTslxszDstQ" name="getIndex" method="_sY_qQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTIoIpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTJPMpFCEeuCTslxszDstQ" name="getPointers" method="_sZARUJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd7NlJFCEeuCTslxszDstQ">
                  <body>Returns all the pointers of the synset that contains this word whose source is this word.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oTJPM5FCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTJPNJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTJPNZFCEeuCTslxszDstQ" name="getSenseKey" method="_sZA4YJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd7NlZFCEeuCTslxszDstQ">
                  <body>Returns the sense key of a lemma.
     *
     * @return sense key
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oTJ2QJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTJ2QZFCEeuCTslxszDstQ" name="getSenseKeyWithAdjClass" method="_sZBfcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd70oJFCEeuCTslxszDstQ">
                  <body>Returns the sense key of a lemma, taking into account adjective class (position).
     *
     * @return sense key
	 * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oTJ2QpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTJ2Q5FCEeuCTslxszDstQ" name="getSenseNumber" method="_sZCGgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd70oZFCEeuCTslxszDstQ">
                  <body>Returns sense number of this word (1-based) or 0 if not found.
     * sense_number is a decimal integer indicating the sense number of the word,
     * within the part of speech encoded in sense_key, in the WordNet database.
     *
     * @return sense number or 0 if not found
     * @throws JWNLException JWNLException</body>
                </ownedComment>
                <ownedParameter xmi:id="_oTJ2RJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTKdUJFCEeuCTslxszDstQ" name="getSynsetType" visibility="protected" method="_sZCtkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTKdUZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTKdUpFCEeuCTslxszDstQ" name="startBuildingSenseKey" visibility="protected" method="_sZD7sJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oTKdU5FCEeuCTslxszDstQ" name="ss_type">
                  <eAnnotations xmi:id="_oTKdVJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oTKdVZFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4ch8pFCEeuCTslxszDstQ" type="_r4ch8JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rbvX0JFCEeuCTslxszDstQ" name="readObject" visibility="private" method="_sZFJ0JFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _rx2xwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_rbvX0ZFCEeuCTslxszDstQ" name="in" type="_rVrzIJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4aswJFCEeuCTslxszDstQ" name="Word" method="_sY7_4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_r4bT0pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4bT05FCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sd7NkJFCEeuCTslxszDstQ">
                  <body>Constructs a word tied to a synset, it's position within the synset, and the lemma.
     *
     * @param dictionary owner
     * @param synset     the synset this word is contained in
     * @param lemma      the lemma of this word</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4aswZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r4bT0JFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r4bT0ZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4bT1JFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4bT1ZFCEeuCTslxszDstQ" name="equals" method="_sY7_5ZFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sd7NkZFCEeuCTslxszDstQ">
                  <body>Two words are equal if their parent Synsets are equal and they have the same lemma</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4bT1pFCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_r4b64JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ozVLIJFCEeuCTslxszDstQ" name="TestDictionaryElementType">
              <eAnnotations xmi:id="_ozWZQJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_ozWZQZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_ozXAUJFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_sfIugpFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc9kQ5FCEeuCTslxszDstQ" name="testToString" specification="_ozXnYJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNotNull(DictionaryElementType.INDEX_WORD.toString());
     Assert.assertEquals(&quot;IndexWord&quot;, DictionaryElementType.INDEX_WORD.getName());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ozXnYJFCEeuCTslxszDstQ" name="testToString" method="_sc9kQ5FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ozaDoJFCEeuCTslxszDstQ" name="TestAdjSynset">
              <eAnnotations xmi:id="_ozaqsJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_ozaqsZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_ozaqspFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_sfIug5FCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rtUQAJFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc-LUJFCEeuCTslxszDstQ" name="setIsAdjectiveCluster" specification="_ozb40JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>AdjectiveSynset synset = new AdjectiveSynset(dictionary);
     synset.setIsAdjectiveCluster(true);
     Assert.assertTrue(synset.isAdjectiveCluster());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ozb40JFCEeuCTslxszDstQ" name="setIsAdjectiveCluster" method="_sc-LUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ozhYYJFCEeuCTslxszDstQ" name="BaseData" isAbstract="true">
              <eAnnotations xmi:id="_ozimgJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_ozimgZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_ozimgpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_sfJVkJFCEeuCTslxszDstQ">
                <body>Base class for tests.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sUp80JFCEeuCTslxszDstQ" name="dictionary" visibility="protected" type="_rVLc0JFCEeuCTslxszDstQ" association="_sj7u8ZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sUsZEJFCEeuCTslxszDstQ" name="mapDictionary" visibility="protected" type="_rVLc0JFCEeuCTslxszDstQ" association="_sj-LMZFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc-yYJFCEeuCTslxszDstQ" name="getProperties" specification="_ozj0oJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc-yYZFCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return Dictionary.class.getResourceAsStream(&quot;/net/sf/extjwnl/dictionary/mem_properties.xml&quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc_ZcJFCEeuCTslxszDstQ" name="setUp" specification="_ozlp0JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary = Dictionary.getInstance(getProperties());
     mapDictionary = Dictionary.getInstance(getProperties());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ozj0oJFCEeuCTslxszDstQ" name="getProperties" visibility="protected" method="_sc-yYJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sFYxwJFCEeuCTslxszDstQ" type="_rtYhcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ozlp0JFCEeuCTslxszDstQ" name="setUp" method="_sc_ZcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_rb_PcJFCEeuCTslxszDstQ" name="Synset">
              <ownedComment xmi:id="_yzIcIZFCEeuCTslxszDstQ">
                <body>A &lt;code>Synset&lt;/code>, or &lt;b>syn&lt;/b>onym &lt;b>set&lt;/b>, represents a
line of a WordNet &lt;b>pos&lt;/b>&lt;code>.data&lt;/code> file. A &lt;code>Synset&lt;/code>
represents a concept, and contains a set of &lt;code>Word&lt;/code>s, each of
which has a sense that names that concept (and each of which is therefore
synonymous with the other words in the &lt;code>Synset&lt;/code>).
&lt;p>
&lt;code>Synset&lt;/code>'s are linked by {@link Pointer}s into a network of related
concepts; this is the &lt;i>Net&lt;/i> in WordNet. {@link #getTargets getTargets}
retrieves the targets of these links, and {@link #getPointers getPointers}
retrieves the pointers themselves.
&lt;/p>
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yBPsMJFCEeuCTslxszDstQ" general="_oNn2AJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_ytRrwJFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytRrwZFCEeuCTslxszDstQ" value="5L"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytSS0JFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0K98ZFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytS54JFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(Synset.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytS54ZFCEeuCTslxszDstQ" name="pos" visibility="protected" isLeaf="true" type="_oLknkJFCEeuCTslxszDstQ" isReadOnly="true"/>
              <ownedAttribute xmi:id="_ytUvEJFCEeuCTslxszDstQ" name="pointers" visibility="protected" isLeaf="true" type="_yPotgJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0K99JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_ytVWIZFCEeuCTslxszDstQ" name="offset" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytV9MJFCEeuCTslxszDstQ" name="words" isLeaf="true" type="_yP2I4JFCEeuCTslxszDstQ" isReadOnly="true" association="_y0K995FCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_ytXLUJFCEeuCTslxszDstQ" name="gloss">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ytaOoJFCEeuCTslxszDstQ" name="lexFileNum">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_yKKXoJFCEeuCTslxszDstQ" client="_rb_PcJFCEeuCTslxszDstQ" supplier="_oFhp8JFCEeuCTslxszDstQ" contract="_oFhp8JFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywuBUJFCEeuCTslxszDstQ" name="Synset" specification="_yBAboJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywuBUZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ywuBUpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ywuBU5FCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary);
     checkPOSIsNotNull(dictionary, pos);
     this.pos = pos;
     pointers = new PointerList();
     words = new WordList();

     if (null != dictionary &amp;&amp; dictionary.isEditable()) {
         dictionary.addSynset(this);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywuoYJFCEeuCTslxszDstQ" name="Synset" specification="_yQEyYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywuoYZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ywuoYpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ywuoY5FCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ywuoZJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(dictionary);
     checkPOSIsNotNull(dictionary, pos);
     this.pos = pos;
     pointers = new PointerList();
     words = new WordList();

     this.offset = offset;
     if (null != dictionary &amp;&amp; dictionary.isEditable()) {
         dictionary.addSynset(this);
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywuoZZFCEeuCTslxszDstQ" name="getType" specification="_yBCQ0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywuoZpFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return DictionaryElementType.SYNSET;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywvPcJFCEeuCTslxszDstQ" name="getKey" specification="_yBCQ0pFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywvPcZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return getOffset();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywvPcpFCEeuCTslxszDstQ" name="getPOS" specification="_yBC34ZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywvPc5FCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return pos;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywv2gJFCEeuCTslxszDstQ" name="equals" specification="_yBC345FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywv2gZFCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_ywv2gpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return (object instanceof Synset) &amp;&amp; ((Synset) object).getPOS().equals(getPOS()) &amp;&amp; ((Synset) object).getOffset() == getOffset();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywwdkJFCEeuCTslxszDstQ" name="hashCode" specification="_yBDe8ZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywwdkZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return getPOS().hashCode() ^ (int) getOffset();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywwdkpFCEeuCTslxszDstQ" name="toString" specification="_yBDe8pFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywwdk5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder words = new StringBuilder();
     for (int i = 0; i &lt; this.words.size(); ++i) {
         if (i > 0) {
             words.append(&quot;, &quot;);
         }
         words.append(this.words.get(i).getLemma());
     }

     if (getGloss() != null) {
         words.append(&quot; -- (&quot;).append(getGloss()).append(&quot;)&quot;);
     }

     return ResourceBundleSet.insertParams(&quot;[Synset: [Offset: {0}] {1} Words: {2}]&quot;,
             new Object[]{getOffset(), getPOS(), words.toString()});
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywwdlJFCEeuCTslxszDstQ" name="getSynset" specification="_yBEGAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywwdlZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return this;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywxEoJFCEeuCTslxszDstQ" name="getIndex" specification="_yBFUIZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywxEoZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return 0;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywxEopFCEeuCTslxszDstQ" name="getPointers" specification="_yBGiQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywxEo5FCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywxEpJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return pointers;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywxrsJFCEeuCTslxszDstQ" name="setOffset" specification="_yQH1sZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywxrsZFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <language>java</language>
                <body>if (this.offset != offset) {
         if (dictionary instanceof AbstractCachingDictionary) {
             AbstractCachingDictionary acd = (AbstractCachingDictionary) dictionary;
             Synset oldSynset = acd.getSynsetAt(pos, offset);
             if (null != oldSynset) {
                 if (log.isWarnEnabled()) {
                     log.warn(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_WARN_003&quot;, oldSynset));
                 }
             }
             acd.clearSynset(pos, this.offset);
             this.offset = offset;
             acd.cacheSynset(this);
         } else {
             this.offset = offset;
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywxrspFCEeuCTslxszDstQ" name="isAdjectiveCluster" specification="_yBHJUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywxrs5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>throw new UnsupportedOperationException();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywySwJFCEeuCTslxszDstQ" name="setIsAdjectiveCluster" specification="_yQJq4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywySwZFCEeuCTslxszDstQ" name="isAdjectiveCluster">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>throw new UnsupportedOperationException();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywySwpFCEeuCTslxszDstQ" name="getVerbFrames" specification="_yBHwYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywySw5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywySxJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>throw new UnsupportedOperationException();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywy50JFCEeuCTslxszDstQ" name="getVerbFrameFlags" specification="_yBI-gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywy50ZFCEeuCTslxszDstQ" type="_rbT6AJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>throw new UnsupportedOperationException();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywy50pFCEeuCTslxszDstQ" name="setVerbFrameFlags" specification="_yBJlkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywy505FCEeuCTslxszDstQ" name="verbFrameFlags" type="_rbT6AJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>throw new UnsupportedOperationException();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywzg4JFCEeuCTslxszDstQ" name="getVerbFrameIndices" specification="_yBKMoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ywzg4ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywzg4pFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>throw new UnsupportedOperationException();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw0H8JFCEeuCTslxszDstQ" name="containsWord" specification="_yQK5AJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw0H8ZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yw0H8pFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>checkLemmaIsNotNull(lemma);
     for (Word word : words) {
         if (word.getLemma().equalsIgnoreCase(lemma)) {
             return true;
         }
     }
     return false;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw0H85FCEeuCTslxszDstQ" name="indexOfWord" specification="_yQMuMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw0H9JFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yw0H9ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>checkLemmaIsNotNull(lemma);
     for (int i = 0; i &lt; words.size(); i++) {
         if (words.get(i).getLemma().equalsIgnoreCase(lemma)) {
             return i;
         }
     }
     return -1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw0vAJFCEeuCTslxszDstQ" name="getLexFileName" specification="_yBLawJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw0vAZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return LexFileIdFileNameMap.getMap().get(lexFileNum);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw1WEJFCEeuCTslxszDstQ" name="setDictionary" specification="_yBMB0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw1WEZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>if (dictionary != this.dictionary) {
         if (null != this.dictionary) {
             Dictionary old = this.dictionary;
             this.dictionary = dictionary;
             old.removeElement(this);
         }
         super.setDictionary(dictionary);
         if (null != dictionary) {
             dictionary.addElement(this);
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw1WEpFCEeuCTslxszDstQ" name="checkPOSIsNotNull" specification="_yBNP8pFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw1WE5FCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yw1WFJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>if (null == pos) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_041&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Pos must be not null&quot;);
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw19IJFCEeuCTslxszDstQ" name="checkLemmaIsNotNull" specification="_yQOjYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw19IZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (null == lemma) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_046&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Lemma must be not null and not empty&quot;);
         }
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yw2kMJFCEeuCTslxszDstQ" name="readObject" specification="_yBOeEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yw2kMZFCEeuCTslxszDstQ" name="in" type="_rVrzIJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>in.defaultReadObject();
     dictionary = Dictionary.getRestoreDictionary();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yBAboJFCEeuCTslxszDstQ" name="Synset" method="_ywuBUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yBBpwJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yBBpwZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yBBCsJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yBBCsZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yBBCspFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBCQ0JFCEeuCTslxszDstQ" name="getType" method="_ywuoZZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBCQ0ZFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBCQ0pFCEeuCTslxszDstQ" name="getKey" method="_ywvPcJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBC34JFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBC34ZFCEeuCTslxszDstQ" name="getPOS" method="_ywvPcpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBC34pFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBC345FCEeuCTslxszDstQ" name="equals" method="_ywv2gJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzJqQJFCEeuCTslxszDstQ">
                  <body>Two Synsets are equal if their POS's and offsets are equal.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBDe8JFCEeuCTslxszDstQ" name="object" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQGnkJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBDe8ZFCEeuCTslxszDstQ" name="hashCode" method="_ywwdkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yQHOoJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBDe8pFCEeuCTslxszDstQ" name="toString" method="_ywwdkpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yQHOoZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBEGAJFCEeuCTslxszDstQ" name="getSynset" method="_ywwdlJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBEGAZFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBFUIZFCEeuCTslxszDstQ" name="getIndex" method="_ywxEoJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yQH1sJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBGiQJFCEeuCTslxszDstQ" name="getPointers" method="_ywxEopFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBGiQZFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yBGiQpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBHJUJFCEeuCTslxszDstQ" name="isAdjectiveCluster" method="_ywxrspFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yQJD0JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBHwYJFCEeuCTslxszDstQ" name="getVerbFrames" method="_ywySwpFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzKRUJFCEeuCTslxszDstQ">
                  <body>Returns all Verb Frames that are valid for all the words in this synset.
     *
     * @return all Verb Frames that are valid for all the words in this synset</body>
                </ownedComment>
                <ownedParameter xmi:id="_yBHwYZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yBIXcJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBI-gJFCEeuCTslxszDstQ" name="getVerbFrameFlags" method="_ywy50JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBI-gZFCEeuCTslxszDstQ" type="_rbT6AJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBJlkJFCEeuCTslxszDstQ" name="setVerbFrameFlags" method="_ywy50pFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBJlkZFCEeuCTslxszDstQ" name="verbFrameFlags" type="_rbT6AJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBKMoJFCEeuCTslxszDstQ" name="getVerbFrameIndices" method="_ywzg4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBKMoZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yBKMopFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBLawJFCEeuCTslxszDstQ" name="getLexFileName" method="_yw0vAJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzK4YJFCEeuCTslxszDstQ">
                  <body>Returns the lexicographer file name.
     *
     * @return lexicographer file name</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQNVQZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yBMB0JFCEeuCTslxszDstQ" name="setDictionary" method="_yw1WEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBMB0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBNP8pFCEeuCTslxszDstQ" name="checkPOSIsNotNull" visibility="private" method="_yw1WEpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBN3AJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yBN3AZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yBOeEJFCEeuCTslxszDstQ" name="readObject" visibility="private" method="_yw2kMJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ _rx2xwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yBPFIJFCEeuCTslxszDstQ" name="in" type="_rVrzIJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQEyYJFCEeuCTslxszDstQ" name="Synset" method="_ywuoYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_yQGAgZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yQGAgpFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yQFZcJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQFZcZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_yQFZcpFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQGAgJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yQH1sZFCEeuCTslxszDstQ" name="setOffset" method="_ywxrsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yQIcwJFCEeuCTslxszDstQ" name="offset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQJq4JFCEeuCTslxszDstQ" name="setIsAdjectiveCluster" method="_ywySwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yQJq4ZFCEeuCTslxszDstQ" name="isAdjectiveCluster">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQK5AJFCEeuCTslxszDstQ" name="containsWord" method="_yw0H8JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzKRUZFCEeuCTslxszDstQ">
                  <body>Returns true if &lt;var>lemma&lt;/var> is one of the words contained in this synset.
     *
     * @param lemma lemma to check
     * @return true if &lt;var>lemma&lt;/var> is one of the words contained in this synset</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQLgEJFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQLgEZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQMuMJFCEeuCTslxszDstQ" name="indexOfWord" method="_yw0H85FCEeuCTslxszDstQ">
                <ownedComment xmi:id="_yzKRUpFCEeuCTslxszDstQ">
                  <body>Returns the index of the word which has the &lt;var>lemma&lt;/var> or -1 if not found.
     *
     * @param lemma lemma to check
     * @return true if &lt;var>lemma&lt;/var> is one of the words contained in this synset</body>
                </ownedComment>
                <ownedParameter xmi:id="_yQMuMZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yQNVQJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yQOjYJFCEeuCTslxszDstQ" name="checkLemmaIsNotNull" visibility="private" method="_yw19IJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yQOjYZFCEeuCTslxszDstQ" name="lemma">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yPotgJFCEeuCTslxszDstQ" name="PointerList" visibility="private">
                <generalization xmi:id="_yP1h0ZFCEeuCTslxszDstQ" general="_rX6nwJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yta1sJFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytbcwJFCEeuCTslxszDstQ" value="5L"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ytbcwZFCEeuCTslxszDstQ" name="checkingPointers" visibility="private">
                  <eAnnotations xmi:id="_ytcD0JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ytcD0ZFCEeuCTslxszDstQ" key="volatile"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytcD0pFCEeuCTslxszDstQ" value="false"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywgl9JFCEeuCTslxszDstQ" name="size" specification="_yPpUkpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywgl9ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointers();
         return super.size();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywhNAJFCEeuCTslxszDstQ" name="isEmpty" specification="_yPpUl5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywhNAZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointers();
         return super.isEmpty();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywhNApFCEeuCTslxszDstQ" name="contains" specification="_yPp7oJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywhNA5FCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywhNBJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointers();
         return super.contains(o);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywh0EJFCEeuCTslxszDstQ" name="indexOf" specification="_yPp7ppFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywh0EZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywh0EpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointers();
         return super.indexOf(o);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywh0E5FCEeuCTslxszDstQ" name="lastIndexOf" specification="_yPqisJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywh0FJFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywh0FZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointers();
         return super.lastIndexOf(o);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywh0FpFCEeuCTslxszDstQ" name="clone" specification="_yPqitpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywh0F5FCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>checkPointers();
         return super.clone();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywibIJFCEeuCTslxszDstQ" name="toArray" specification="_yPqiu5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywibIZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywibIpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointers();
         return super.toArray();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywibI5FCEeuCTslxszDstQ" name="toArray" specification="_yPrJxJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywibJJFCEeuCTslxszDstQ" name="a" type="_ryx-05FCEeuCTslxszDstQ">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywibJZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywibJpFCEeuCTslxszDstQ" type="_ryx-05FCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywibJ5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointers();
         return super.toArray(a);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywjCMJFCEeuCTslxszDstQ" name="get" specification="_yPrw05FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywjCMZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywjCMpFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>checkPointers();
         return super.get(index);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywjCM5FCEeuCTslxszDstQ" name="set" specification="_yPrw2ZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywjCNJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywjCNZFCEeuCTslxszDstQ" name="pointer" type="_oMi38JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywjCNpFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>checkPointerIsNotNull(pointer);
         Pointer old = get(index);

         Pointer result = super.set(index, pointer);

         // check symmetries and update if necessary
         if (null != dictionary &amp;&amp; dictionary.isEditable() &amp;&amp; dictionary.getManageSymmetricPointers()) {
             deleteSymmetricPointerFromTarget(old);
             addSymmetricPointerToTarget(pointer);
         }

         checkPointers();
         return result;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywjpQJFCEeuCTslxszDstQ" name="add" specification="_yPsX5ZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywjpQZFCEeuCTslxszDstQ" name="pointer" type="_oMi38JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywjpQpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointerIsNotNull(pointer);
         boolean result = super.add(pointer);

         if (null != dictionary &amp;&amp; dictionary.isEditable() &amp;&amp; dictionary.getManageSymmetricPointers()) {
             addSymmetricPointerToTarget(pointer);
         }

         return result;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywjpQ5FCEeuCTslxszDstQ" name="add" specification="_yPs-8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywjpRJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywjpRZFCEeuCTslxszDstQ" name="pointer" type="_oMi38JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>checkPointerIsNotNull(pointer);
         super.add(index, pointer);

         if (null != dictionary &amp;&amp; dictionary.isEditable() &amp;&amp; dictionary.getManageSymmetricPointers()) {
             addSymmetricPointerToTarget(pointer);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywkQUJFCEeuCTslxszDstQ" name="addAll" specification="_yPs-9pFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywkQUZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywkQUpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>boolean result = false;
         ensureCapacity(size() + c.size());
         for (Pointer p : c) {
             if (add(p)) {
                 result = true;
             }
         }
         return result;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywkQU5FCEeuCTslxszDstQ" name="addAll" specification="_yPtmBJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywkQVJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywkQVZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywkQVpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>ensureCapacity(size() + c.size());
         for (Pointer pointer : c) {
             add(index, pointer);
             index++;
         }
         return !c.isEmpty();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywkQV5FCEeuCTslxszDstQ" name="remove" specification="_yPu0IJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywkQWJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywkQWZFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>Pointer result = super.remove(index);
         if (null != dictionary &amp;&amp; dictionary.isEditable() &amp;&amp; dictionary.getManageSymmetricPointers()) {
             deleteSymmetricPointerFromTarget(result);
         }
         return result;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywk3YJFCEeuCTslxszDstQ" name="remove" specification="_yPu0JpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywk3YZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywk3YpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>boolean result = super.remove(o);
         if (result &amp;&amp; null != dictionary &amp;&amp; dictionary.isEditable() &amp;&amp; dictionary.getManageSymmetricPointers() &amp;&amp; o instanceof Pointer) {
             Pointer pointer = (Pointer) o;
             deleteSymmetricPointerFromTarget(pointer);
         }
         return result;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywk3Y5FCEeuCTslxszDstQ" name="clear" specification="_yPvbMpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             List&lt;Pointer> copy = new ArrayList&lt;>(this);
             super.clear();
             if (dictionary.getManageSymmetricPointers()) {
                 for (Pointer pointer : copy) {
                     deleteSymmetricPointerFromTarget(pointer);
                 }
             }
         } else {
             super.clear();
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywlecJFCEeuCTslxszDstQ" name="removeRange" specification="_yPvbNpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywlecZFCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywlecpFCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             List&lt;Pointer> copy = new ArrayList&lt;>(super.subList(fromIndex, toIndex));
             super.removeRange(fromIndex, toIndex);
             for (Pointer pointer : copy) {
                 deleteSymmetricPointerFromTarget(pointer);
             }
         } else {
             super.removeRange(fromIndex, toIndex);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywlec5FCEeuCTslxszDstQ" name="iterator" specification="_yPwCQ5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywledJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>checkPointers();
         return super.iterator();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywledZFCEeuCTslxszDstQ" name="listIterator" specification="_yPwpU5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywledpFCEeuCTslxszDstQ" type="_rbzCMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>checkPointers();
         return super.listIterator();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywmFgJFCEeuCTslxszDstQ" name="listIterator" specification="_yPxQY5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywmFgZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywmFgpFCEeuCTslxszDstQ" type="_rbzCMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>checkPointers();
         return super.listIterator(index);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywmFg5FCEeuCTslxszDstQ" name="subList" specification="_yPx3dJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywmFhJFCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywmFhZFCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywmFhpFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywmFh5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointers();
         return super.subList(fromIndex, toIndex);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywmskJFCEeuCTslxszDstQ" name="containsAll" specification="_yPyehZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywmskZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywmskpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>checkPointers();
         return super.containsAll(c);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywmsk5FCEeuCTslxszDstQ" name="removeAll" specification="_yPzFlZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywmslJFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywmslZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             List&lt;Pointer> copy = new ArrayList&lt;>(this);
             boolean result = super.removeAll(c);
             if (dictionary.getManageSymmetricPointers()) {
                 for (Object object : c) {
                     if (object instanceof Pointer) {
                         Pointer pointer = (Pointer) object;
                         if (copy.contains(pointer)) {
                             deleteSymmetricPointerFromTarget(pointer);
                         }
                     }
                 }
             }
             return result;
         } else {
             return super.removeAll(c);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywmslpFCEeuCTslxszDstQ" name="retainAll" specification="_yP0TsZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywmsl5FCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywnToJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             List&lt;Pointer> copy = new ArrayList&lt;>(this);
             boolean result = super.retainAll(c);
             if (dictionary.getManageSymmetricPointers()) {
                 for (Pointer pointer : copy) {
                     if (!c.contains(pointer)) {
                         deleteSymmetricPointerFromTarget(pointer);
                     }
                 }
             }
             return result;
         } else {
             return super.retainAll(c);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywnToZFCEeuCTslxszDstQ" name="checkPointerIsNotNull" specification="_yP06wpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywnTopFCEeuCTslxszDstQ" name="pointer" type="_oMi38JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (null == pointer) {
             if (null != dictionary) {
                 throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_043&quot;));
             } else {
                 throw new IllegalArgumentException(&quot;Pointer must be not null&quot;);
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywnTo5FCEeuCTslxszDstQ" name="addSymmetricPointerToTarget" specification="_yP06xJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywnTpJFCEeuCTslxszDstQ" name="original" type="_oMi38JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (null != original.getType().getSymmetricType()) {
             try {
                 boolean found = false;
                 for (Pointer p : original.getTargetSynset().getPointers()) {
                     if (p.isSymmetricTo(original)) {
                         found = true;
                         break;
                     }
                 }
                 if (!found) {
                     Pointer symmetric = new Pointer(original.getType().getSymmetricType(), original.getTarget(), original.getSource());
                     original.getTargetSynset().getPointers().add(symmetric);
                 }
             } catch (JWNLException e) {
                 throw new JWNLRuntimeException(e);
             }
         }

     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywnTpZFCEeuCTslxszDstQ" name="deleteSymmetricPointerFromTarget" specification="_yP06xpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywnTppFCEeuCTslxszDstQ" name="original" type="_oMi38JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (null != original.getType().getSymmetricType()) {
             try {
                 for (Pointer p : original.getTargetSynset().getPointers()) {
                     if (p.isSymmetricTo(original)) {
                         original.getTargetSynset().getPointers().remove(p);
                         break;
                     }
                 }
             } catch (JWNLException e) {
                 throw new JWNLRuntimeException(e);
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywn6sJFCEeuCTslxszDstQ" name="checkPointers" specification="_yP1h0JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable() &amp;&amp; dictionary.getCheckAlienPointers() &amp;&amp; !checkingPointers) {
             synchronized (this) {
                 if (!checkingPointers) {
                     checkingPointers = true;
                     List&lt;Pointer> toDelete = null;
                     for (int i = 0; i &lt; super.size(); i++) {
                         Pointer pointer = super.get(i);
                         try {
                             if (dictionary != pointer.getSource().getDictionary() || null == pointer.getTarget() || dictionary != pointer.getTarget().getDictionary()) {
                                 if (null == toDelete) {
                                     toDelete = new ArrayList&lt;>();
                                 }
                                 toDelete.add(pointer);
                             }
                         } catch (JWNLException e) {
                             throw new JWNLRuntimeException(e);
                         }
                     }
                     if (null != toDelete) {
                         if (log.isWarnEnabled() &amp;&amp; 0 &lt; toDelete.size()) {
                             log.warn(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_WARN_002&quot;, Synset.this.getOffset()));
                         }
                         for (Pointer pointer : toDelete) {
                             remove(pointer);
                         }
                     }
                     checkingPointers = false;
                 }
             }
         }
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yPotgZFCEeuCTslxszDstQ" name="PointerList" visibility="private">
                  <eAnnotations xmi:id="_yPotgpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yPotg5FCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yPpUkZFCEeuCTslxszDstQ" type="_yPotgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPpUkpFCEeuCTslxszDstQ" name="size" method="_ywgl9JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPpUk5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPpUl5FCEeuCTslxszDstQ" name="isEmpty" method="_ywhNAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPpUmJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPp7oJFCEeuCTslxszDstQ" name="contains" method="_ywhNApFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPp7oZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPp7opFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPp7ppFCEeuCTslxszDstQ" name="indexOf" method="_ywh0EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPp7p5FCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPp7qJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPqisJFCEeuCTslxszDstQ" name="lastIndexOf" method="_ywh0E5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPqisZFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPqispFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPqitpFCEeuCTslxszDstQ" name="clone" method="_ywh0FpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPqit5FCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPqiu5FCEeuCTslxszDstQ" name="toArray" method="_ywibIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPqivJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yPqivZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPrJxJFCEeuCTslxszDstQ" name="toArray" method="_ywibI5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPrJxZFCEeuCTslxszDstQ" name="a" type="_ryx-05FCEeuCTslxszDstQ">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yPrJy5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPrJx5FCEeuCTslxszDstQ" type="_ryx-05FCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yPrJyJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPrw05FCEeuCTslxszDstQ" name="get" method="_ywjCMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPrw1JFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPrw1ZFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPrw2ZFCEeuCTslxszDstQ" name="set" method="_ywjCM5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPrw2pFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPsX4JFCEeuCTslxszDstQ" name="pointer" type="_oMi38JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPsX4ZFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPsX5ZFCEeuCTslxszDstQ" name="add" method="_ywjpQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPsX5pFCEeuCTslxszDstQ" name="pointer" type="_oMi38JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPsX55FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPs-8JFCEeuCTslxszDstQ" name="add" method="_ywjpQ5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPs-8ZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPs-8pFCEeuCTslxszDstQ" name="pointer" type="_oMi38JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPs-9pFCEeuCTslxszDstQ" name="addAll" method="_ywkQUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPs-95FCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPs--JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPtmBJFCEeuCTslxszDstQ" name="addAll" method="_ywkQU5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPtmBZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPtmBpFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPuNEJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPu0IJFCEeuCTslxszDstQ" name="remove" method="_ywkQV5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPu0IZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPu0IpFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPu0JpFCEeuCTslxszDstQ" name="remove" method="_ywk3YJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPu0J5FCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPu0KJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPvbMpFCEeuCTslxszDstQ" name="clear" method="_ywk3Y5FCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yPvbNpFCEeuCTslxszDstQ" name="removeRange" visibility="protected" method="_ywlecJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPvbN5FCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPvbOJFCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPwCQ5FCEeuCTslxszDstQ" name="iterator" method="_ywlec5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPwCRJFCEeuCTslxszDstQ" type="_rXB28JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPwpU5FCEeuCTslxszDstQ" name="listIterator" method="_ywledZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPwpVJFCEeuCTslxszDstQ" type="_rbzCMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPxQY5FCEeuCTslxszDstQ" name="listIterator" method="_ywmFgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPxQZJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPxQZZFCEeuCTslxszDstQ" type="_rbzCMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPx3dJFCEeuCTslxszDstQ" name="subList" method="_ywmFg5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPx3dZFCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPx3dpFCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPyegJFCEeuCTslxszDstQ" type="_oMi38JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yPyegZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPyehZFCEeuCTslxszDstQ" name="containsAll" method="_ywmskJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPyehpFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPzFkJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPzFlZFCEeuCTslxszDstQ" name="removeAll" method="_ywmsk5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPzFlpFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPzsoJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yP0TsZFCEeuCTslxszDstQ" name="retainAll" method="_ywmslpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP0TspFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yP0Ts5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yP06wpFCEeuCTslxszDstQ" name="checkPointerIsNotNull" visibility="private" method="_ywnToZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP06w5FCEeuCTslxszDstQ" name="pointer" type="_oMi38JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yP06xJFCEeuCTslxszDstQ" name="addSymmetricPointerToTarget" visibility="private" method="_ywnTo5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP06xZFCEeuCTslxszDstQ" name="original" type="_oMi38JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yP06xpFCEeuCTslxszDstQ" name="deleteSymmetricPointerFromTarget" visibility="private" method="_ywnTpZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP06x5FCEeuCTslxszDstQ" name="original" type="_oMi38JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yP1h0JFCEeuCTslxszDstQ" name="checkPointers" visibility="private" method="_ywn6sJFCEeuCTslxszDstQ"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yP2I4JFCEeuCTslxszDstQ" name="WordList" visibility="private">
                <generalization xmi:id="_yQBvEJFCEeuCTslxszDstQ" general="_rX6nwJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_ytfHIJFCEeuCTslxszDstQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ytfuMJFCEeuCTslxszDstQ" value="5L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywohwJFCEeuCTslxszDstQ" name="set" specification="_yP2v8pFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywohwZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywohwpFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywohw5FCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>checkWordIsNotNull(word);
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             checkDictionaryIsOurs(word);
             Word result = super.set(index, word);
             if (null != result) {
                 removeThisSynsetFromIndexWords(result);
             }
             addToIndexWords(word);
             return result;
         } else {
             return super.set(index, word);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywpI0JFCEeuCTslxszDstQ" name="add" specification="_yP3XA5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywpI0ZFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywpI0pFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             add(size(), word);
             return true;
         } else {
             checkWordIsNotNull(word);
             return super.add(word);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywpv4JFCEeuCTslxszDstQ" name="add" specification="_yP3-EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywpv4ZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywpv4pFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>checkWordIsNotNull(word);
         if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             checkDictionaryIsOurs(word);
             super.add(index, word);
             addToIndexWords(word);
         } else {
             super.add(index, word);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywpv45FCEeuCTslxszDstQ" name="addAll" specification="_yP3-FpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywpv5JFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywpv5ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             boolean result = false;
             ensureCapacity(size() + c.size());
             for (Word word : c) {
                 if (add(word)) {
                     result = true;
                 }
             }
             return result;
         } else {
             for (Word word : c) {
                 checkWordIsNotNull(word);
             }
             return super.addAll(c);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywqW8JFCEeuCTslxszDstQ" name="addAll" specification="_yP4lI5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywqW8ZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywqW8pFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywqW85FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             ensureCapacity(size() + c.size());
             for (Word word : c) {
                 add(index, word);
                 index++;
             }
             return true;
         } else {
             for (Word word : c) {
                 checkWordIsNotNull(word);
             }
             return super.addAll(index, c);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywq-AJFCEeuCTslxszDstQ" name="remove" specification="_yP5MM5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywq-AZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywq-ApFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             Word result = super.remove(index);
             removeThisSynsetFromIndexWords(result);
             return result;
         } else {
             return super.remove(index);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywq-A5FCEeuCTslxszDstQ" name="remove" specification="_yP5zQpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywq-BJFCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywq-BZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             boolean result = super.remove(o);
             if (result &amp;&amp; o instanceof Word) {
                 removeThisSynsetFromIndexWords((Word) o);
             }
             return result;
         } else {
             return super.remove(o);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywrlEJFCEeuCTslxszDstQ" name="clear" specification="_yP7BYJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             List&lt;Word> copy = new ArrayList&lt;>(this);
             super.clear();
             for (Word word : copy) {
                 removeThisSynsetFromIndexWords(word);
             }
         } else {
             super.clear();
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywrlEZFCEeuCTslxszDstQ" name="removeRange" specification="_yP8PgpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywrlEpFCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywrlE5FCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             List&lt;Word> copy = new ArrayList&lt;>(subList(fromIndex, toIndex));
             super.removeRange(fromIndex, toIndex);
             for (Word word : copy) {
                 removeThisSynsetFromIndexWords(word);
             }
         } else {
             super.removeRange(fromIndex, toIndex);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywsMIJFCEeuCTslxszDstQ" name="checkWordIsNotNull" specification="_yP-EspFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywsMIZFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (null == word) {
             if (null != dictionary) {
                 throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_044&quot;));
             } else {
                 throw new IllegalArgumentException(&quot;Word must be not null&quot;);
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywszMJFCEeuCTslxszDstQ" name="checkDictionaryIsOurs" specification="_yP_S0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywszMZFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (dictionary != word.getDictionary()) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_040&quot;));
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywszMpFCEeuCTslxszDstQ" name="removeThisSynsetFromIndexWords" specification="_yP_54JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywszM5FCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             try {
                 IndexWord indexWord = dictionary.getIndexWord(getPOS(), word.getLemma());
                 if (null != indexWord) {
                     indexWord.getSenses().remove(Synset.this);
                 }
             } catch (JWNLException e) {
                 throw new JWNLRuntimeException(e);
             }
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywtaQJFCEeuCTslxszDstQ" name="addToIndexWords" specification="_yQBIAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywtaQZFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (null != dictionary &amp;&amp; dictionary.isEditable()) {
             try {
                 IndexWord iw = dictionary.getIndexWord(word.getPOS(), word.getLemma());
                 if (null == iw) {
                     dictionary.createIndexWord(word.getPOS(), word.getLemma(), Synset.this);
                 } else {
                     if (!iw.getSenses().contains(Synset.this)) {
                         iw.getSenses().add(Synset.this);
                     }
                 }
             } catch (JWNLException e) {
                 throw new JWNLRuntimeException(e);
             }
         }
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yP2I4ZFCEeuCTslxszDstQ" name="WordList" visibility="private">
                  <eAnnotations xmi:id="_yP2I4pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yP2I45FCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yP2v8ZFCEeuCTslxszDstQ" type="_yP2I4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yP2v8pFCEeuCTslxszDstQ" name="set" method="_ywohwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP2v85FCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yP2v9JFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yP2v9ZFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yP3XA5FCEeuCTslxszDstQ" name="add" method="_ywpI0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP3XBJFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yP3XBZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yP3-EJFCEeuCTslxszDstQ" name="add" method="_ywpv4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP3-EZFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yP3-EpFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yP3-FpFCEeuCTslxszDstQ" name="addAll" method="_ywpv45FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP3-F5FCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yP3-GJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yP4lI5FCEeuCTslxszDstQ" name="addAll" method="_ywqW8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP4lJJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yP4lJZFCEeuCTslxszDstQ" name="c" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yP4lJpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yP5MM5FCEeuCTslxszDstQ" name="remove" method="_ywq-AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP5MNJFCEeuCTslxszDstQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yP5MNZFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yP5zQpFCEeuCTslxszDstQ" name="remove" method="_ywq-A5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP5zQ5FCEeuCTslxszDstQ" name="o" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yP5zRJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yP7BYJFCEeuCTslxszDstQ" name="clear" method="_ywrlEJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yP8PgpFCEeuCTslxszDstQ" name="removeRange" visibility="protected" method="_ywrlEZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP82kJFCEeuCTslxszDstQ" name="fromIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yP82kZFCEeuCTslxszDstQ" name="toIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yP-EspFCEeuCTslxszDstQ" name="checkWordIsNotNull" visibility="private" method="_ywsMIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP-Es5FCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yP_S0JFCEeuCTslxszDstQ" name="checkDictionaryIsOurs" visibility="private" method="_ywszMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP_S0ZFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yP_54JFCEeuCTslxszDstQ" name="removeThisSynsetFromIndexWords" visibility="private" method="_ywszMpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yP_54ZFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yQBIAJFCEeuCTslxszDstQ" name="addToIndexWords" visibility="private" method="_ywtaQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yQBIAZFCEeuCTslxszDstQ" name="word" type="_oTGy8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ryx-05FCEeuCTslxszDstQ" name="T"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_sgzicJFCEeuCTslxszDstQ" name="" memberEnd="_sgzicZFCEeuCTslxszDstQ _oFl7YJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sgzicZFCEeuCTslxszDstQ" name="" type="_oFhp8JFCEeuCTslxszDstQ" association="_sgzicJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sg-hkJFCEeuCTslxszDstQ" name="" memberEnd="_sg-hkZFCEeuCTslxszDstQ _sH5TMJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sg-hkZFCEeuCTslxszDstQ" name="" type="_oEoSEJFCEeuCTslxszDstQ" association="_sg-hkJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shDaEJFCEeuCTslxszDstQ" name="" memberEnd="_shDaEZFCEeuCTslxszDstQ _sIV_IJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shDaEZFCEeuCTslxszDstQ" name="" type="_oHXdAJFCEeuCTslxszDstQ" association="_shDaEJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shHEcJFCEeuCTslxszDstQ" name="" memberEnd="_shHEcZFCEeuCTslxszDstQ _sIl2wJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shHEcZFCEeuCTslxszDstQ" name="" type="_oHXdAJFCEeuCTslxszDstQ" association="_shHEcJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shMkAJFCEeuCTslxszDstQ" name="" memberEnd="_shMkAZFCEeuCTslxszDstQ _sI0gQJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shMkAZFCEeuCTslxszDstQ" name="" type="_oHXdAJFCEeuCTslxszDstQ" association="_shMkAJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shPnUZFCEeuCTslxszDstQ" name="" memberEnd="_shPnUpFCEeuCTslxszDstQ _sJVdoJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shPnUpFCEeuCTslxszDstQ" name="" type="_oKC9kJFCEeuCTslxszDstQ" association="_shPnUZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shSDkJFCEeuCTslxszDstQ" name="" memberEnd="_shSDkZFCEeuCTslxszDstQ _sJq00pFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shSDkZFCEeuCTslxszDstQ" name="" type="_oMi38JFCEeuCTslxszDstQ" association="_shSDkJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shUf0JFCEeuCTslxszDstQ" name="" memberEnd="_shUf0ZFCEeuCTslxszDstQ _sJq01pFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shUf0ZFCEeuCTslxszDstQ" name="" type="_oMi38JFCEeuCTslxszDstQ" association="_shUf0JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shW8EJFCEeuCTslxszDstQ" name="" memberEnd="_shW8EZFCEeuCTslxszDstQ _sJq02pFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shW8EZFCEeuCTslxszDstQ" name="" type="_oMi38JFCEeuCTslxszDstQ" association="_shW8EJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shYxQJFCEeuCTslxszDstQ" name="" memberEnd="_shYxQZFCEeuCTslxszDstQ _sJ7TgJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shYxQZFCEeuCTslxszDstQ" name="" type="_oNn2AJFCEeuCTslxszDstQ" association="_shYxQJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shamcJFCEeuCTslxszDstQ" name="" memberEnd="_shamcZFCEeuCTslxszDstQ _sKqTUJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shamcZFCEeuCTslxszDstQ" name="" type="_oPoBIJFCEeuCTslxszDstQ" association="_shamcJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shcboJFCEeuCTslxszDstQ" name="" memberEnd="_shcboZFCEeuCTslxszDstQ _sLSlcJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shcboZFCEeuCTslxszDstQ" name="" type="_oS7z0JFCEeuCTslxszDstQ" association="_shcboJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sheQ0ZFCEeuCTslxszDstQ" name="" memberEnd="_sheQ0pFCEeuCTslxszDstQ _sLYsEJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sheQ0pFCEeuCTslxszDstQ" name="" type="_oTDvoJFCEeuCTslxszDstQ" association="_sheQ0ZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_shgGAZFCEeuCTslxszDstQ" name="" memberEnd="_shgGApFCEeuCTslxszDstQ _sLcWcJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_shgGApFCEeuCTslxszDstQ" name="" type="_oTGy8JFCEeuCTslxszDstQ" association="_shgGAZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sj7u8ZFCEeuCTslxszDstQ" name="" memberEnd="_sj8WAJFCEeuCTslxszDstQ _sUp80JFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sj8WAJFCEeuCTslxszDstQ" name="" type="_ozhYYJFCEeuCTslxszDstQ" association="_sj7u8ZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sj-LMZFCEeuCTslxszDstQ" name="" memberEnd="_sj-LMpFCEeuCTslxszDstQ _sUsZEJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sj-LMpFCEeuCTslxszDstQ" name="" type="_ozhYYJFCEeuCTslxszDstQ" association="_sj-LMZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ySracJFCEeuCTslxszDstQ" name="TestAdjectivePosition">
              <eAnnotations xmi:id="_ySsBgJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_ySsBgZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_ySsBgpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzUCUJFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxYIoJFCEeuCTslxszDstQ" name="testGetAdjectivePositionForKey" specification="_ySsBg5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(AdjectivePosition.NONE, AdjectivePosition.getAdjectivePositionForKey(&quot;none&quot;));
     Assert.assertEquals(AdjectivePosition.PREDICATIVE, AdjectivePosition.getAdjectivePositionForKey(&quot;p&quot;));
     Assert.assertEquals(AdjectivePosition.ATTRIBUTIVE, AdjectivePosition.getAdjectivePositionForKey(&quot;a&quot;));
     Assert.assertEquals(AdjectivePosition.IMMEDIATE_POSTNOMINAL, AdjectivePosition.getAdjectivePositionForKey(&quot;ip&quot;));
     Assert.assertNull(AdjectivePosition.getAdjectivePositionForKey(&quot;h&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxYvsJFCEeuCTslxszDstQ" name="testGetToString" specification="_yStPopFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNotNull(AdjectivePosition.NONE.toString());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxYvsZFCEeuCTslxszDstQ" name="testGetLabel" specification="_ySudwpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(&quot;none&quot;, AdjectivePosition.NONE.getLabel());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ySsBg5FCEeuCTslxszDstQ" name="testGetAdjectivePositionForKey" method="_yxYIoJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yStPopFCEeuCTslxszDstQ" name="testGetToString" method="_yxYvsJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_ySudwpFCEeuCTslxszDstQ" name="testGetLabel" method="_yxYvsZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTVhwJFCEeuCTslxszDstQ" name="TestExc">
              <eAnnotations xmi:id="_yTWI0JFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yTWI0ZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yTWI0pFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzVQcJFCEeuCTslxszDstQ">
                <body>Tests Exc class.
 *
@author Brett Walenz (bwalenz@users.sourceforge.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yTpq0JFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yut2MJFCEeuCTslxszDstQ" name="testObj" visibility="private" type="_oGjksJFCEeuCTslxszDstQ" association="_y0PPZ5FCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yuudQZFCEeuCTslxszDstQ" name="pos" visibility="private" isLeaf="true" isStatic="true" type="_oLknkJFCEeuCTslxszDstQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuvEUJFCEeuCTslxszDstQ" value="POS.NOUN"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yuvrYJFCEeuCTslxszDstQ" name="lemma" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuvrYZFCEeuCTslxszDstQ" value="&quot;alam&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yuwScJFCEeuCTslxszDstQ" name="exc1" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuwScZFCEeuCTslxszDstQ" value="&quot;exc1&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yuw5gJFCEeuCTslxszDstQ" name="exc2" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuw5gZFCEeuCTslxszDstQ" value="&quot;exc2&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxdoMJFCEeuCTslxszDstQ" name="setUp" specification="_yTXW8JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>super.setUp();
     testObj = new Exc(dictionary, pos, lemma, Arrays.asList(exc1, exc2));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxdoMZFCEeuCTslxszDstQ" name="testGetPOS" specification="_yTYlEpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(pos, testObj.getPOS());
     Assert.assertNotNull(testObj.toString());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxdoMpFCEeuCTslxszDstQ" name="testGetLemma" specification="_yTZzMZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(lemma, testObj.getLemma());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxePQJFCEeuCTslxszDstQ" name="testGetExceptions" specification="_yTbBUJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(2, testObj.getExceptions().size());
     Assert.assertEquals(DictionaryElementType.EXCEPTION, testObj.getType());
     Assert.assertEquals(exc1, testObj.getExceptions().get(0));
     Assert.assertEquals(exc2, testObj.getExceptions().get(1));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxePQZFCEeuCTslxszDstQ" name="testConstructorNullPOS" specification="_yTcPcpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Exc(dictionary, null, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxePQpFCEeuCTslxszDstQ" name="testConstructorNullLemma" specification="_yTeEoJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Exc(dictionary, POS.NOUN, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxePQ5FCEeuCTslxszDstQ" name="testConstructorNullExceptions" specification="_yTfSw5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Exc(dictionary, POS.NOUN, lemma, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxePRJFCEeuCTslxszDstQ" name="testConstructor2NullPOS" specification="_yThH8ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Exc(null, null, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxe2UJFCEeuCTslxszDstQ" name="testConstructor2NullLemma" specification="_yTi9IpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Exc(null, POS.NOUN, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxe2UZFCEeuCTslxszDstQ" name="testConstructor2NullExceptions" specification="_yTkyUZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Exc(null, POS.NOUN, lemma, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxe2UpFCEeuCTslxszDstQ" name="testEquals" specification="_yTmAcZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertFalse(testObj.equals(dictionary));

     Exc neq = new Exc(dictionary, pos, &quot;al&quot;, Arrays.asList(exc1, exc2));
     Assert.assertFalse(testObj.equals(neq));

     Exc neq2 = new Exc(dictionary, POS.ADJECTIVE, lemma, Arrays.asList(exc1, exc2));
     Assert.assertFalse(testObj.equals(neq2));

     Exc eq = new Exc(dictionary, pos, lemma, Arrays.asList(exc1, exc2));
     Assert.assertTrue(testObj.equals(eq));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxe2U5FCEeuCTslxszDstQ" name="testHashCode" specification="_yTnOkJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Exc neq = new Exc(dictionary, pos, &quot;al&quot;, Arrays.asList(exc1, exc2));
     Assert.assertTrue(neq.hashCode() != testObj.hashCode());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxfdYJFCEeuCTslxszDstQ" name="testSetDictionary" specification="_yTocspFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     mapDictionary.edit();
     testObj = dictionary.createException(pos, lemma, Arrays.asList(exc1, exc2));
     testObj.setDictionary(mapDictionary);
     Assert.assertEquals(mapDictionary, testObj.getDictionary());
     Assert.assertNull(dictionary.getException(pos, lemma));
     Assert.assertEquals(testObj, mapDictionary.getException(pos, lemma));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTXW8JFCEeuCTslxszDstQ" name="setUp" method="_yxdoMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTYlEpFCEeuCTslxszDstQ" name="testGetPOS" method="_yxdoMZFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTZzMZFCEeuCTslxszDstQ" name="testGetLemma" method="_yxdoMpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTbBUJFCEeuCTslxszDstQ" name="testGetExceptions" method="_yxePQJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTcPcpFCEeuCTslxszDstQ" name="testConstructorNullPOS" method="_yxePQZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTeEoJFCEeuCTslxszDstQ" name="testConstructorNullLemma" method="_yxePQpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTfSw5FCEeuCTslxszDstQ" name="testConstructorNullExceptions" method="_yxePQ5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yThH8ZFCEeuCTslxszDstQ" name="testConstructor2NullPOS" method="_yxePRJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTi9IpFCEeuCTslxszDstQ" name="testConstructor2NullLemma" method="_yxe2UJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTkyUZFCEeuCTslxszDstQ" name="testConstructor2NullExceptions" method="_yxe2UZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTmAcZFCEeuCTslxszDstQ" name="testEquals" method="_yxe2UpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTnOkJFCEeuCTslxszDstQ" name="testHashCode" method="_yxe2U5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTocspFCEeuCTslxszDstQ" name="testSetDictionary" method="_yxfdYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yTtVMJFCEeuCTslxszDstQ" name="TestIndexWord">
              <eAnnotations xmi:id="_yTt8QJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yTt8QZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yTt8QpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzV3g5FCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yUweEpFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxgEcJFCEeuCTslxszDstQ" name="testConstructorNullLemma" specification="_yTvKYJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(dictionary, null, POS.NOUN);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxgEcZFCEeuCTslxszDstQ" name="testConstructorNullPOS" specification="_yTwYgpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(dictionary, &quot;test&quot;, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxgrgJFCEeuCTslxszDstQ" name="testConstructor2NullLemma" specification="_yTxmo5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(null, null, POS.NOUN);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxgrgZFCEeuCTslxszDstQ" name="testConstructor2NullPOS" specification="_yTy0w5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(null, &quot;test&quot;, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxgrgpFCEeuCTslxszDstQ" name="testConstructor" specification="_yT0p8JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN);

     List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>(1);
     Iterator&lt;IndexWord> i = dictionary.getIndexWordIterator(POS.NOUN);
     while (i.hasNext()) {
         indexWords.add(i.next());
     }
     Assert.assertEquals(1, indexWords.size());
     Assert.assertEquals(iw, indexWords.get(0));
     Assert.assertNotNull(iw.toString());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxgrg5FCEeuCTslxszDstQ" name="testConstructorNullSynset" specification="_yT14EJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, (Synset) null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxhSkJFCEeuCTslxszDstQ" name="testConstructor2NullSynset" specification="_yT3GMJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(null, &quot;test&quot;, POS.NOUN, (Synset) null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxhSkZFCEeuCTslxszDstQ" name="testConstructorSynsetPOS" specification="_yT4UUJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     new IndexWord(dictionary, &quot;test&quot;, POS.VERB, s);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxhSkpFCEeuCTslxszDstQ" name="testConstructor2SynsetPOS" specification="_yT47Y5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN);
     new IndexWord(null, &quot;test&quot;, POS.VERB, s);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxhSk5FCEeuCTslxszDstQ" name="testConstructorSynset" specification="_yT6JgpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     Assert.assertEquals(1, iw.getSenses().size());
     Assert.assertEquals(s, iw.getSenses().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxh5oJFCEeuCTslxszDstQ" name="testConstructorSynsetNullOffset" specification="_yT7XopFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(dictionary, &quot;test&quot;, POS.VERB, (long[]) null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxh5oZFCEeuCTslxszDstQ" name="testConstructor2SynsetNullOffset" specification="_yT8lw5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(null, &quot;test&quot;, POS.VERB, (long[]) null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxh5opFCEeuCTslxszDstQ" name="testConstructorSynsetOffset0" specification="_yT-a8JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(dictionary, &quot;test&quot;, POS.VERB, new long[]{});
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxh5o5FCEeuCTslxszDstQ" name="testConstructor2SynsetOffset0" specification="_yT_pE5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>new IndexWord(null, &quot;test&quot;, POS.VERB, new long[]{});
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxh5pJFCEeuCTslxszDstQ" name="testType" specification="_yUCsYJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, new long[]{1});
     Assert.assertEquals(DictionaryElementType.INDEX_WORD, iw.getType());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxigsJFCEeuCTslxszDstQ" name="testSynsetSetNull" specification="_yUD6gpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().set(0, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxigsZFCEeuCTslxszDstQ" name="testSynsetSetAlien" specification="_yUFIo5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(mapDictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, new Synset(dictionary, POS.NOUN));
     iw.getSenses().set(0, s);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxigspFCEeuCTslxszDstQ" name="testSynsetSet" specification="_yUGWw5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 1);
     s.setGloss(&quot;test gloss&quot;);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     t.setGloss(&quot;car gloss&quot;);
     IndexWord iwt = new IndexWord(dictionary, &quot;car&quot;, POS.NOUN, t);

     iwt.getSenses().set(0, s);
     Assert.assertEquals(1, iwt.getSenses().size());
     Assert.assertEquals(s, iwt.getSenses().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxigs5FCEeuCTslxszDstQ" name="testSynsetSetNullD" specification="_yUHk4ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN);
     s.setGloss(&quot;test gloss&quot;);
     Synset t = new Synset(null, POS.NOUN);
     t.setGloss(&quot;car gloss&quot;);
     IndexWord iwt = new IndexWord(null, &quot;car&quot;, POS.NOUN, t);

     iwt.getSenses().set(0, s);
     Assert.assertEquals(1, iwt.getSenses().size());
     Assert.assertEquals(s, iwt.getSenses().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxigtJFCEeuCTslxszDstQ" name="testSynsetAddIndexedNull" specification="_yUIzAJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     s.setGloss(&quot;test gloss&quot;);
     IndexWord iws = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);

     iws.getSenses().add(0, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxjHwJFCEeuCTslxszDstQ" name="testSynsetAddIndexedAlien" specification="_yUKBI5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     s.setGloss(&quot;test gloss&quot;);
     IndexWord iws = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);

     iws.getSenses().add(0, new Synset(mapDictionary, POS.NOUN));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxjHwZFCEeuCTslxszDstQ" name="testSynsetAdd" specification="_yUL2UZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 1);
     s.setGloss(&quot;test gloss&quot;);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     t.setGloss(&quot;car gloss&quot;);
     IndexWord iws = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);

     iws.getSenses().add(0, t);
     Assert.assertEquals(2, iws.getSenses().size());
     Assert.assertEquals(1, s.getWords().size());
     Assert.assertEquals(1, t.getWords().size());
     Assert.assertTrue(s.containsWord(&quot;test&quot;));
     Assert.assertTrue(t.containsWord(&quot;test&quot;));
     Assert.assertEquals(1, iws.getSenses().lastIndexOf(s));

     iws.getSenses().remove(t);
     iws.setDictionary(null);
     t.setDictionary(null);
     iws.getSenses().add(0, t);
     Assert.assertEquals(2, iws.getSenses().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxjHwpFCEeuCTslxszDstQ" name="testSynsetAddAllIndexed" specification="_yUNrgJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN);
     s.setGloss(&quot;test gloss&quot;);
     Synset t = new Synset(dictionary, POS.NOUN);
     t.setGloss(&quot;car gloss&quot;);
     Synset tt = new Synset(dictionary, POS.NOUN);
     tt.setGloss(&quot;another car gloss&quot;);
     IndexWord iws = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);

     iws.getSenses().addAll(0, Arrays.asList(t, tt));
     Assert.assertEquals(3, iws.getSenses().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxjHw5FCEeuCTslxszDstQ" name="testSynsetAddAll" specification="_yUO5opFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN);
     s.setGloss(&quot;test gloss&quot;);
     Synset t = new Synset(dictionary, POS.NOUN);
     t.setGloss(&quot;car gloss&quot;);
     Synset tt = new Synset(dictionary, POS.NOUN);
     tt.setGloss(&quot;another car gloss&quot;);
     IndexWord iws = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);

     iws.getSenses().addAll(Arrays.asList(t, tt));
     Assert.assertEquals(3, iws.getSenses().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxju0JFCEeuCTslxszDstQ" name="testSynsetAddAllNull" specification="_yUQHwpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN, 1);
     s.setGloss(&quot;test gloss&quot;);
     Synset t = new Synset(null, POS.NOUN, 2);
     t.setGloss(&quot;car gloss&quot;);
     Synset tt = new Synset(null, POS.NOUN, 3);
     tt.setGloss(&quot;another car gloss&quot;);
     IndexWord iws = new IndexWord(null, &quot;test&quot;, POS.NOUN, s);

     iws.getSenses().addAll(Arrays.asList(t, tt));
     Assert.assertEquals(3, iws.getSenses().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxju0ZFCEeuCTslxszDstQ" name="testSynsetAddAllIndexedNull" specification="_yUR88ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN, 1);
     s.setGloss(&quot;test gloss&quot;);
     Synset t = new Synset(null, POS.NOUN, 2);
     t.setGloss(&quot;car gloss&quot;);
     Synset tt = new Synset(null, POS.NOUN, 3);
     tt.setGloss(&quot;another car gloss&quot;);
     IndexWord iws = new IndexWord(null, &quot;test&quot;, POS.NOUN, s);

     iws.getSenses().addAll(0, Arrays.asList(t, tt));
     Assert.assertEquals(3, iws.getSenses().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxju0pFCEeuCTslxszDstQ" name="testSynsetAddAlien" specification="_yUTLEpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(mapDictionary, POS.NOUN);
     new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxju05FCEeuCTslxszDstQ" name="testSynsetAddNull" specification="_yUVAQZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().add(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxju1JFCEeuCTslxszDstQ" name="testSynsetListIterator" specification="_yUWOY5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     Assert.assertNotNull(iw.getSenses().listIterator());
     Assert.assertTrue(iw.getSenses().listIterator().hasNext());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxkV4JFCEeuCTslxszDstQ" name="testSynsetListIteratorIndexed" specification="_yUYDkZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     Assert.assertNotNull(iw.getSenses().listIterator(0));
     Assert.assertTrue(iw.getSenses().listIterator(0).hasNext());
     Assert.assertEquals(s, iw.getSenses().listIterator(0).next());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxkV4ZFCEeuCTslxszDstQ" name="testSynsetSubList" specification="_yUZRspFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().add(new Synset(dictionary, POS.NOUN));
     Assert.assertNotNull(iw.getSenses().subList(0, 1));
     Assert.assertEquals(s, iw.getSenses().subList(0, 1).get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxkV4pFCEeuCTslxszDstQ" name="testSynsetRemove" specification="_yUaf0pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().remove(0);
     Assert.assertEquals(0, iw.getSenses().size());

     List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>(1);
     Iterator&lt;IndexWord> i = dictionary.getIndexWordIterator(POS.NOUN);
     while (i.hasNext()) {
         indexWords.add(i.next());
     }
     Assert.assertEquals(0, indexWords.size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxkV45FCEeuCTslxszDstQ" name="testSynsetRemoveNull" specification="_yUbt8pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN);
     IndexWord iw = new IndexWord(null, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().remove(0);
     Assert.assertEquals(0, iw.getSenses().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxk88JFCEeuCTslxszDstQ" name="testSynsetRemoveObjectNull" specification="_yUdjIpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN);
     IndexWord iw = new IndexWord(null, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().remove(s);
     Assert.assertEquals(0, iw.getSenses().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxk88ZFCEeuCTslxszDstQ" name="testSynsetRemoveAll" specification="_yUfYUZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().add(new Synset(dictionary, POS.NOUN));
     Assert.assertNotNull(iw.getSenses().removeAll(Arrays.asList(s)));
     Assert.assertFalse(iw.getSenses().contains(s));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxk88pFCEeuCTslxszDstQ" name="testSynsetRemoveAllNull" specification="_yUgmcpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN, 1);
     IndexWord iw = new IndexWord(null, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().add(new Synset(null, POS.NOUN, 2));
     Assert.assertNotNull(iw.getSenses().removeAll(Arrays.asList(s)));
     Assert.assertFalse(iw.getSenses().contains(s));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxk885FCEeuCTslxszDstQ" name="testSynsetContainsAll" specification="_yUiboJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     Synset ss = new Synset(dictionary, POS.NOUN);
     iw.getSenses().add(ss);
     Assert.assertTrue(iw.getSenses().containsAll(Arrays.asList(s, ss)));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxlkAJFCEeuCTslxszDstQ" name="testSynsetContainsAllNull" specification="_yUjpwpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN, 1);
     IndexWord iw = new IndexWord(null, &quot;test&quot;, POS.NOUN, s);
     Synset ss = new Synset(null, POS.NOUN, 1);
     iw.getSenses().add(ss);
     Assert.assertTrue(iw.getSenses().containsAll(Arrays.asList(s, ss)));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxlkAZFCEeuCTslxszDstQ" name="testSynsetRemoveAllEditable" specification="_yUk34pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().add(new Synset(dictionary, POS.NOUN));
     Assert.assertTrue(iw.getSenses().removeAll(Arrays.asList(s)));
     Assert.assertFalse(iw.getSenses().contains(s));
     Assert.assertNull(dictionary.getIndexWord(POS.NOUN, &quot;test&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxlkApFCEeuCTslxszDstQ" name="testSynsetRetainAll" specification="_yUmGAJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 1);
     s.setGloss(&quot;synset 1&quot;);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     Synset ss = new Synset(dictionary, POS.NOUN, 2);
     ss.setGloss(&quot;synset 2&quot;);
     iw.getSenses().add(ss);
     Assert.assertTrue(iw.getSenses().retainAll(Arrays.asList(s)));
     Assert.assertTrue(iw.getSenses().contains(s));
     Assert.assertEquals(1, iw.getSenses().size());

     Assert.assertTrue(iw.getSenses().retainAll(Arrays.asList()));
     Assert.assertNull(dictionary.getIndexWord(POS.NOUN, &quot;test&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxmLEJFCEeuCTslxszDstQ" name="testSynsetRetainAllNull" specification="_yUmtE5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN, 1);
     s.setGloss(&quot;synset 1&quot;);
     IndexWord iw = new IndexWord(null, &quot;test&quot;, POS.NOUN, s);
     Synset ss = new Synset(null, POS.NOUN, 2);
     ss.setGloss(&quot;synset 2&quot;);
     iw.getSenses().add(ss);
     Assert.assertTrue(iw.getSenses().retainAll(Arrays.asList(s)));
     Assert.assertTrue(iw.getSenses().contains(s));
     Assert.assertEquals(1, iw.getSenses().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxmLEZFCEeuCTslxszDstQ" name="testSynsetRetainAllRemove" specification="_yUn7MpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     Assert.assertNotNull(iw.getSenses().retainAll(Arrays.asList()));
     Assert.assertNull(dictionary.getIndexWord(POS.NOUN, &quot;test&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxmLEpFCEeuCTslxszDstQ" name="testSynsetClear" specification="_yUpJUpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN);
     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().clear();
     Assert.assertEquals(0, iw.getSenses().size());

     Assert.assertFalse(dictionary.getIndexWordIterator(POS.NOUN).hasNext());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxmyIJFCEeuCTslxszDstQ" name="testSynsetClearNull" specification="_yUq-gJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN, 1);
     IndexWord iw = new IndexWord(null, &quot;test&quot;, POS.NOUN, s);
     iw.getSenses().clear();
     Assert.assertEquals(0, iw.getSenses().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxmyIZFCEeuCTslxszDstQ" name="testSynsetSortSenses" specification="_yUsMopFCEeuCTslxszDstQ">
                <language>java</language>
                <body>AdjectiveSynset s = new AdjectiveSynset(dictionary);
     Adjective w = new Adjective(dictionary, s, &quot;test&quot;, AdjectivePosition.NONE);
     w.setUseCount(1);
     s.getWords().add(w);

     AdjectiveSynset ss = new AdjectiveSynset(dictionary);
     Adjective ww = new Adjective(dictionary, ss, &quot;test&quot;, AdjectivePosition.ATTRIBUTIVE);
     ww.setUseCount(10);
     ss.getWords().add(ww);

     AdjectiveSynset sss = new AdjectiveSynset(dictionary);
     Adjective www = new Adjective(dictionary, sss, &quot;test&quot;, AdjectivePosition.NONE);
     www.setUseCount(0);
     sss.getWords().add(www);

     AdjectiveSynset ssss = new AdjectiveSynset(dictionary);
     Adjective wwww = new Adjective(dictionary, ssss, &quot;test&quot;, AdjectivePosition.NONE);
     wwww.setUseCount(0);
     ssss.getWords().add(wwww);

     IndexWord iw = new IndexWord(dictionary, &quot;test&quot;, POS.ADJECTIVE, s);
     iw.getSenses().add(ss);
     iw.getSenses().add(sss);
     iw.getSenses().add(ssss);
     Assert.assertEquals(2, iw.sortSenses());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxmyIpFCEeuCTslxszDstQ" name="testSynsetListStream" specification="_yUuB0JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 123);
     dictionary.addSynset(s);
     s.setGloss(&quot;test gloss&quot;);
     IndexWord iws = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN, new long[]{123});

     Assert.assertEquals(s, iws.getSenses().stream().findFirst().orElse(null));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxnZMJFCEeuCTslxszDstQ" name="testHashCode" specification="_yUvP8pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWord i = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN);
     IndexWord ii = new IndexWord(dictionary, &quot;rest&quot;, POS.NOUN);

     Assert.assertNotEquals(i.hashCode(), ii.hashCode());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yTvKYJFCEeuCTslxszDstQ" name="testConstructorNullLemma" method="_yxgEcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTwYgpFCEeuCTslxszDstQ" name="testConstructorNullPOS" method="_yxgEcZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTxmo5FCEeuCTslxszDstQ" name="testConstructor2NullLemma" method="_yxgrgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yTy0w5FCEeuCTslxszDstQ" name="testConstructor2NullPOS" method="_yxgrgZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT0p8JFCEeuCTslxszDstQ" name="testConstructor" method="_yxgrgpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT14EJFCEeuCTslxszDstQ" name="testConstructorNullSynset" method="_yxgrg5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT3GMJFCEeuCTslxszDstQ" name="testConstructor2NullSynset" method="_yxhSkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT4UUJFCEeuCTslxszDstQ" name="testConstructorSynsetPOS" method="_yxhSkZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT47Y5FCEeuCTslxszDstQ" name="testConstructor2SynsetPOS" method="_yxhSkpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT6JgpFCEeuCTslxszDstQ" name="testConstructorSynset" method="_yxhSk5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT7XopFCEeuCTslxszDstQ" name="testConstructorSynsetNullOffset" method="_yxh5oJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT8lw5FCEeuCTslxszDstQ" name="testConstructor2SynsetNullOffset" method="_yxh5oZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT-a8JFCEeuCTslxszDstQ" name="testConstructorSynsetOffset0" method="_yxh5opFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yT_pE5FCEeuCTslxszDstQ" name="testConstructor2SynsetOffset0" method="_yxh5o5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUCsYJFCEeuCTslxszDstQ" name="testType" method="_yxh5pJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUD6gpFCEeuCTslxszDstQ" name="testSynsetSetNull" method="_yxigsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUFIo5FCEeuCTslxszDstQ" name="testSynsetSetAlien" method="_yxigsZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUGWw5FCEeuCTslxszDstQ" name="testSynsetSet" method="_yxigspFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUHk4ZFCEeuCTslxszDstQ" name="testSynsetSetNullD" method="_yxigs5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUIzAJFCEeuCTslxszDstQ" name="testSynsetAddIndexedNull" method="_yxigtJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUKBI5FCEeuCTslxszDstQ" name="testSynsetAddIndexedAlien" method="_yxjHwJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUL2UZFCEeuCTslxszDstQ" name="testSynsetAdd" method="_yxjHwZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUNrgJFCEeuCTslxszDstQ" name="testSynsetAddAllIndexed" method="_yxjHwpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUO5opFCEeuCTslxszDstQ" name="testSynsetAddAll" method="_yxjHw5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUQHwpFCEeuCTslxszDstQ" name="testSynsetAddAllNull" method="_yxju0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUR88ZFCEeuCTslxszDstQ" name="testSynsetAddAllIndexedNull" method="_yxju0ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUTLEpFCEeuCTslxszDstQ" name="testSynsetAddAlien" method="_yxju0pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUVAQZFCEeuCTslxszDstQ" name="testSynsetAddNull" method="_yxju05FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUWOY5FCEeuCTslxszDstQ" name="testSynsetListIterator" method="_yxju1JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUYDkZFCEeuCTslxszDstQ" name="testSynsetListIteratorIndexed" method="_yxkV4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUZRspFCEeuCTslxszDstQ" name="testSynsetSubList" method="_yxkV4ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUaf0pFCEeuCTslxszDstQ" name="testSynsetRemove" method="_yxkV4pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUbt8pFCEeuCTslxszDstQ" name="testSynsetRemoveNull" method="_yxkV45FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUdjIpFCEeuCTslxszDstQ" name="testSynsetRemoveObjectNull" method="_yxk88JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUfYUZFCEeuCTslxszDstQ" name="testSynsetRemoveAll" method="_yxk88ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUgmcpFCEeuCTslxszDstQ" name="testSynsetRemoveAllNull" method="_yxk88pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUiboJFCEeuCTslxszDstQ" name="testSynsetContainsAll" method="_yxk885FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUjpwpFCEeuCTslxszDstQ" name="testSynsetContainsAllNull" method="_yxlkAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUk34pFCEeuCTslxszDstQ" name="testSynsetRemoveAllEditable" method="_yxlkAZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUmGAJFCEeuCTslxszDstQ" name="testSynsetRetainAll" method="_yxlkApFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUmtE5FCEeuCTslxszDstQ" name="testSynsetRetainAllNull" method="_yxmLEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUn7MpFCEeuCTslxszDstQ" name="testSynsetRetainAllRemove" method="_yxmLEZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUpJUpFCEeuCTslxszDstQ" name="testSynsetClear" method="_yxmLEpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUq-gJFCEeuCTslxszDstQ" name="testSynsetClearNull" method="_yxmyIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUsMopFCEeuCTslxszDstQ" name="testSynsetSortSenses" method="_yxmyIZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUuB0JFCEeuCTslxszDstQ" name="testSynsetListStream" method="_yxmyIpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yUvP8pFCEeuCTslxszDstQ" name="testHashCode" method="_yxnZMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yU19oJFCEeuCTslxszDstQ" name="TestIndexWordSet">
              <eAnnotations xmi:id="_yU2ksJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yU2ksZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yU2kspFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzY60JFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yU95cJFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxonUJFCEeuCTslxszDstQ" name="testConstructor" specification="_yU3LwJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWordSet iws = new IndexWordSet(&quot;test&quot;);
     Assert.assertEquals(&quot;test&quot;, iws.getLemma());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxonUZFCEeuCTslxszDstQ" name="testAdd" specification="_yU3y05FCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWordSet iws = new IndexWordSet(&quot;test&quot;);
     final IndexWord test = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN);
     iws.add(test);
     Assert.assertEquals(1, iws.size());
     Assert.assertEquals(test, iws.getIndexWord(POS.NOUN));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxonUpFCEeuCTslxszDstQ" name="testRemove" specification="_yU5A8pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWordSet iws = new IndexWordSet(&quot;test&quot;);
     final IndexWord test = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN);
     iws.add(test);
     Assert.assertEquals(1, iws.size());
     Assert.assertEquals(test, iws.getIndexWord(POS.NOUN));
     iws.remove(POS.NOUN);
     Assert.assertEquals(0, iws.size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxpOYJFCEeuCTslxszDstQ" name="testGets" specification="_yU62IJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWordSet iws = new IndexWordSet(&quot;test&quot;);
     Assert.assertNotNull(iws.toString());

     final IndexWord test = new IndexWord(dictionary, &quot;test&quot;, POS.NOUN);
     iws.add(test);
     Assert.assertEquals(1, iws.getIndexWordArray().length);
     Assert.assertEquals(1, iws.getIndexWordCollection().size());
     Assert.assertEquals(1, iws.getValidPOSSet().size());
     Assert.assertTrue(iws.isValidPOS(POS.NOUN));
     Assert.assertFalse(iws.isValidPOS(POS.VERB));
     Assert.assertNotNull(iws.toString());

     Synset sense = new Synset(dictionary, POS.NOUN);
     test.getSenses().add(sense);
     Assert.assertEquals(0, iws.getSenseCount(POS.VERB));
     Assert.assertEquals(1, iws.getSenseCount(POS.NOUN));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxpOYZFCEeuCTslxszDstQ" name="testEquals" specification="_yU8EQJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>IndexWordSet iws = new IndexWordSet(&quot;test&quot;);
     IndexWordSet iws2 = new IndexWordSet(&quot;test&quot;);
     IndexWordSet iws3 = new IndexWordSet(&quot;test2&quot;);

     Assert.assertTrue(iws.equals(iws2));
     Assert.assertFalse(iws.equals(iws3));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yU3LwJFCEeuCTslxszDstQ" name="testConstructor" method="_yxonUJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yU3y05FCEeuCTslxszDstQ" name="testAdd" method="_yxonUZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yU5A8pFCEeuCTslxszDstQ" name="testRemove" method="_yxonUpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yU62IJFCEeuCTslxszDstQ" name="testGets" method="_yxpOYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yU8EQJFCEeuCTslxszDstQ" name="testEquals" method="_yxpOYZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yU-ggJFCEeuCTslxszDstQ" name="TestLexIds">
              <eAnnotations xmi:id="_yU_HkJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yU_HkZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yU_HkpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzY60ZFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxpOYpFCEeuCTslxszDstQ" name="testLexIds" specification="_yU_uoJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(3L, (long) LexFileNameFileIdMap.getMap().get(&quot;noun.Tops&quot;));
     Assert.assertEquals(&quot;noun.Tops&quot;, LexFileIdFileNameMap.getMap().get(3L));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yU_uoJFCEeuCTslxszDstQ" name="testLexIds" method="_yxpOYpFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yVA8wJFCEeuCTslxszDstQ" name="TestPOS">
              <eAnnotations xmi:id="_yVA8wZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yVA8wpFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yVA8w5FCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzY60pFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxpOY5FCEeuCTslxszDstQ" name="testGetPOSForLabel" specification="_yVBj0JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(POS.NOUN, POS.getPOSForLabel(&quot;noun&quot;));
     Assert.assertEquals(POS.ADJECTIVE, POS.getPOSForLabel(&quot;adjective&quot;));
     Assert.assertEquals(POS.VERB, POS.getPOSForLabel(&quot;verb&quot;));
     Assert.assertEquals(POS.ADVERB, POS.getPOSForLabel(&quot;adverb&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxp1cJFCEeuCTslxszDstQ" name="testGetPOSForId" specification="_yVCK4pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(POS.NOUN, POS.getPOSForId(1));
     Assert.assertEquals(POS.VERB, POS.getPOSForId(2));
     Assert.assertEquals(POS.ADJECTIVE, POS.getPOSForId(3));
     Assert.assertEquals(POS.ADVERB, POS.getPOSForId(4));
     Assert.assertEquals(POS.ADJECTIVE, POS.getPOSForId(5));
     Assert.assertNull(POS.getPOSForId(6));
     Assert.assertNull(POS.getPOSForId(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxp1cZFCEeuCTslxszDstQ" name="testGetPOSForKey" specification="_yVEAEJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(POS.NOUN, POS.getPOSForKey(&quot;n&quot;));
     Assert.assertEquals(POS.ADJECTIVE, POS.getPOSForKey(&quot;a&quot;));
     Assert.assertEquals(POS.VERB, POS.getPOSForKey(&quot;v&quot;));
     Assert.assertEquals(POS.ADVERB, POS.getPOSForKey(&quot;r&quot;));
     Assert.assertEquals(POS.ADJECTIVE, POS.getPOSForKey(&quot;s&quot;));
     Assert.assertNull(POS.getPOSForKey(&quot;b&quot;));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yVBj0JFCEeuCTslxszDstQ" name="testGetPOSForLabel" method="_yxpOY5FCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVCK4pFCEeuCTslxszDstQ" name="testGetPOSForId" method="_yxp1cJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVEAEJFCEeuCTslxszDstQ" name="testGetPOSForKey" method="_yxp1cZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yVFOMJFCEeuCTslxszDstQ" name="TestPointer">
              <eAnnotations xmi:id="_yVFOMZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yVFOMpFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yVF1QJFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzZh4JFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yVZ-XpFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxp1cpFCEeuCTslxszDstQ" name="testConstructor1NullSource" specification="_yVF1QZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Pointer(null, PointerType.ANTONYM, POS.NOUN, 1, 0);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxp1c5FCEeuCTslxszDstQ" name="testConstructor1NullPointerType" specification="_yVHDY5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     new Pointer(s, null, POS.NOUN, 1, 0);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxqcgJFCEeuCTslxszDstQ" name="testConstructor1NullPOS" specification="_yVIRg5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     new Pointer(s, PointerType.ANTONYM, null, 1, 0);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxqcgZFCEeuCTslxszDstQ" name="testConstructor1" specification="_yVKGs5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 1, 0);
     Assert.assertNotNull(p);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxqcgpFCEeuCTslxszDstQ" name="testConstructor2NullPointerType" specification="_yVL74JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Pointer(null, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrDkJFCEeuCTslxszDstQ" name="testConstructor2NullSource" specification="_yVNKAZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Pointer(PointerType.ANTONYM, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrDkZFCEeuCTslxszDstQ" name="testConstructor2NullTarget" specification="_yVOYIJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     new Pointer(PointerType.ANTONYM, s, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrDkpFCEeuCTslxszDstQ" name="testConstructor2Alien" specification="_yVO_M5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     Synset t = new Synset(mapDictionary, POS.NOUN);
     new Pointer(PointerType.ANTONYM, s, t);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrDk5FCEeuCTslxszDstQ" name="testConstructor2Alien2" specification="_yVQNVJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN);
     Synset t = new Synset(mapDictionary, POS.NOUN);
     new Pointer(PointerType.ANTONYM, s, t);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrDlJFCEeuCTslxszDstQ" name="testConstructor2Semantic" specification="_yVRbcZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.ADJECTIVE, 2);
     Pointer p = new Pointer(PointerType.ANTONYM, s, t);
     Assert.assertNotNull(p);
     Assert.assertEquals(s, p.getSource());
     Assert.assertEquals(t, p.getTarget());
     Assert.assertEquals(t, p.getTargetSynset());
     Assert.assertEquals(POS.ADJECTIVE, p.getTargetPOS());
     Assert.assertEquals(2, p.getTargetOffset());
     Assert.assertEquals(PointerType.ANTONYM, p.getType());
     Assert.assertFalse(p.isLexical());
     Assert.assertTrue(p.isSemantic());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrqoJFCEeuCTslxszDstQ" name="testConstructor2Lexical" specification="_yVSCg5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 1);
     Word sw = new Word(dictionary, s, &quot;test&quot;);
     s.getWords().add(sw);

     Synset t = new Synset(dictionary, POS.ADJECTIVE, 2);
     Word tw = new Word(dictionary, t, &quot;rest&quot;);
     t.getWords().add(tw);

     Pointer p = new Pointer(PointerType.ANTONYM, sw, tw);
     Assert.assertNotNull(p);
     Assert.assertEquals(sw, p.getSource());
     Assert.assertEquals(tw, p.getTarget());
     Assert.assertEquals(t, p.getTargetSynset());
     Assert.assertEquals(POS.ADJECTIVE, p.getTargetPOS());
     Assert.assertEquals(2, p.getTargetOffset());
     Assert.assertEquals(PointerType.ANTONYM, p.getType());
     Assert.assertTrue(p.isLexical());
     Assert.assertFalse(p.isSemantic());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrqoZFCEeuCTslxszDstQ" name="testToString" specification="_yVTQopFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.ADJECTIVE, 2);
     Pointer p = new Pointer(PointerType.ANTONYM, s, t);
     Assert.assertNotNull(p.toString());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrqopFCEeuCTslxszDstQ" name="testSetTarget" specification="_yVT3s5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 1);
     Word sw = new Word(dictionary, s, &quot;test&quot;);
     s.getWords().add(sw);

     Synset t = new Synset(dictionary, POS.ADJECTIVE, 2);
     Word tw = new Word(dictionary, t, &quot;rest&quot;);
     t.getWords().add(tw);

     Pointer p = new Pointer(PointerType.ANTONYM, sw, tw);
     p.setTarget(t);

     Assert.assertEquals(t, p.getTarget());
     Assert.assertEquals(t, p.getTargetSynset());
     Assert.assertFalse(p.isLexical());
     Assert.assertFalse(p.isSemantic());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrqo5FCEeuCTslxszDstQ" name="testGetTargetNull" specification="_yVVF0pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 3, 0);

     Assert.assertNull(p.getTarget());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxrqpJFCEeuCTslxszDstQ" name="testGetTargetSynsetNull" specification="_yVVs45FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 3, 0);

     Assert.assertNull(p.getTargetSynset());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxsRsJFCEeuCTslxszDstQ" name="testGetTarget" specification="_yVWT85FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = dictionary.createSynset(POS.NOUN);
     Synset t = dictionary.createSynset(POS.NOUN);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, t.getOffset(), 0);

     Assert.assertEquals(t, p.getTarget());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxsRsZFCEeuCTslxszDstQ" name="testGetTargetWord" specification="_yVWT95FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = dictionary.createSynset(POS.NOUN);
     Synset t = dictionary.createSynset(POS.NOUN);
     Word tw = new Word(dictionary, t, &quot;test&quot;);
     t.getWords().add(tw);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, t.getOffset(), 1);

     Assert.assertEquals(tw, p.getTarget());
     Assert.assertEquals(t, p.getTargetSynset());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxsRspFCEeuCTslxszDstQ" name="testGetTargetOffset" specification="_yVWT-5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN, 1);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 2, 0);

     Assert.assertEquals(2, p.getTargetOffset());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxsRs5FCEeuCTslxszDstQ" name="testGetTargetOffsetEditable" specification="_yVW7A5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 2, 0);

     Assert.assertEquals(2, p.getTargetOffset());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxsRtJFCEeuCTslxszDstQ" name="testGetTargetIndexWord" specification="_yVW7B5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Word tw = new Word(dictionary, t, &quot;test&quot;);
     t.getWords().add(tw);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 2, 1);

     Assert.assertEquals(1, p.getTargetIndex());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxs4wJFCEeuCTslxszDstQ" name="testGetTargetIndex" specification="_yVW7C5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN, 1);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 2, 0);

     Assert.assertEquals(0, p.getTargetIndex());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxs4wZFCEeuCTslxszDstQ" name="testGetTargetIndexEdit" specification="_yVXiE5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 2, 0);

     Assert.assertEquals(0, p.getTargetIndex());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxs4wpFCEeuCTslxszDstQ" name="testGetTargetPOS" specification="_yVXiF5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN, 1);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 2, 0);

     Assert.assertEquals(POS.NOUN, p.getTargetPOS());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxs4w5FCEeuCTslxszDstQ" name="testGetTargetPOSEdit" specification="_yVXiG5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 2, 0);

     Assert.assertEquals(POS.NOUN, p.getTargetPOS());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxs4xJFCEeuCTslxszDstQ" name="testHashCode" specification="_yVYJIpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 0);
     Pointer pp = new Pointer(t, PointerType.ANTONYM, POS.NOUN, 20, 0);

     Assert.assertNotEquals(p.hashCode(), pp.hashCode());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxtf0JFCEeuCTslxszDstQ" name="testEqualsType" specification="_yVYJJpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 0);

     Assert.assertFalse(p.equals(t));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxtf0ZFCEeuCTslxszDstQ" name="testEqualsSource" specification="_yVYJKpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 0);
     Pointer pp = new Pointer(t, PointerType.ANTONYM, POS.NOUN, 20, 0);

     Assert.assertFalse(p.equals(pp));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxtf0pFCEeuCTslxszDstQ" name="testEqualsTargetIdx" specification="_yVYJLpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 0);
     Pointer pp = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 0);

     Assert.assertTrue(p.equals(pp));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxtf05FCEeuCTslxszDstQ" name="testEqualsTargetIdxFalse" specification="_yVYwM5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 0);
     Pointer pp = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 20, 0);

     Assert.assertFalse(p.equals(pp));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxtf1JFCEeuCTslxszDstQ" name="testEqualsTargetIdxIdxFalse" specification="_yVYwN5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 0);
     Pointer pp = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 1);

     Assert.assertFalse(p.equals(pp));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxuG4JFCEeuCTslxszDstQ" name="testEqualsTargetIdxPOSFalse" specification="_yVZXQpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 0);
     Pointer pp = new Pointer(s, PointerType.ANTONYM, POS.ADJECTIVE, 10, 0);

     Assert.assertFalse(p.equals(pp));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxuG4ZFCEeuCTslxszDstQ" name="testEqualsTargetIdxSelf" specification="_yVZXRpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Pointer p = new Pointer(s, PointerType.ANTONYM, POS.NOUN, 10, 0);

     Assert.assertTrue(p.equals(p));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxuG4pFCEeuCTslxszDstQ" name="testEqualsTargetFalse" specification="_yVZXSpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Synset tt = new Synset(dictionary, POS.NOUN, 3);
     Pointer p = new Pointer(PointerType.ANTONYM, s, t);
     Pointer pp = new Pointer(PointerType.ANTONYM, s, tt);

     Assert.assertFalse(p.equals(pp));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxuG45FCEeuCTslxszDstQ" name="testEqualsTargetTrue" specification="_yVZ-UpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(PointerType.ANTONYM, s, t);
     Pointer pp = new Pointer(PointerType.ANTONYM, s, t);

     Assert.assertTrue(p.equals(pp));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxuG5JFCEeuCTslxszDstQ" name="testIsSymmetricTrue" specification="_yVZ-VpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(PointerType.ANTONYM, s, t);
     Pointer pp = new Pointer(PointerType.ANTONYM, t, s);

     Assert.assertTrue(p.isSymmetricTo(pp));
     Assert.assertTrue(pp.isSymmetricTo(p));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxut8JFCEeuCTslxszDstQ" name="testIsSymmetricFalse" specification="_yVZ-WpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN, 1);
     Synset t = new Synset(dictionary, POS.NOUN, 2);
     Pointer p = new Pointer(PointerType.ANTONYM, s, t);
     Pointer pp = new Pointer(PointerType.ANTONYM, s, t);

     Assert.assertFalse(p.isSymmetricTo(pp));
     Assert.assertFalse(pp.isSymmetricTo(p));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yVF1QZFCEeuCTslxszDstQ" name="testConstructor1NullSource" method="_yxp1cpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVHDY5FCEeuCTslxszDstQ" name="testConstructor1NullPointerType" method="_yxp1c5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVIRg5FCEeuCTslxszDstQ" name="testConstructor1NullPOS" method="_yxqcgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVKGs5FCEeuCTslxszDstQ" name="testConstructor1" method="_yxqcgZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVL74JFCEeuCTslxszDstQ" name="testConstructor2NullPointerType" method="_yxqcgpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVNKAZFCEeuCTslxszDstQ" name="testConstructor2NullSource" method="_yxrDkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVOYIJFCEeuCTslxszDstQ" name="testConstructor2NullTarget" method="_yxrDkZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVO_M5FCEeuCTslxszDstQ" name="testConstructor2Alien" method="_yxrDkpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVQNVJFCEeuCTslxszDstQ" name="testConstructor2Alien2" method="_yxrDk5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVRbcZFCEeuCTslxszDstQ" name="testConstructor2Semantic" method="_yxrDlJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVSCg5FCEeuCTslxszDstQ" name="testConstructor2Lexical" method="_yxrqoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVTQopFCEeuCTslxszDstQ" name="testToString" method="_yxrqoZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVT3s5FCEeuCTslxszDstQ" name="testSetTarget" method="_yxrqopFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVVF0pFCEeuCTslxszDstQ" name="testGetTargetNull" method="_yxrqo5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVVs45FCEeuCTslxszDstQ" name="testGetTargetSynsetNull" method="_yxrqpJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVWT85FCEeuCTslxszDstQ" name="testGetTarget" method="_yxsRsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVWT95FCEeuCTslxszDstQ" name="testGetTargetWord" method="_yxsRsZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVWT-5FCEeuCTslxszDstQ" name="testGetTargetOffset" method="_yxsRspFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVW7A5FCEeuCTslxszDstQ" name="testGetTargetOffsetEditable" method="_yxsRs5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVW7B5FCEeuCTslxszDstQ" name="testGetTargetIndexWord" method="_yxsRtJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVW7C5FCEeuCTslxszDstQ" name="testGetTargetIndex" method="_yxs4wJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVXiE5FCEeuCTslxszDstQ" name="testGetTargetIndexEdit" method="_yxs4wZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVXiF5FCEeuCTslxszDstQ" name="testGetTargetPOS" method="_yxs4wpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVXiG5FCEeuCTslxszDstQ" name="testGetTargetPOSEdit" method="_yxs4w5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVYJIpFCEeuCTslxszDstQ" name="testHashCode" method="_yxs4xJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVYJJpFCEeuCTslxszDstQ" name="testEqualsType" method="_yxtf0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVYJKpFCEeuCTslxszDstQ" name="testEqualsSource" method="_yxtf0ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVYJLpFCEeuCTslxszDstQ" name="testEqualsTargetIdx" method="_yxtf0pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVYwM5FCEeuCTslxszDstQ" name="testEqualsTargetIdxFalse" method="_yxtf05FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVYwN5FCEeuCTslxszDstQ" name="testEqualsTargetIdxIdxFalse" method="_yxtf1JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVZXQpFCEeuCTslxszDstQ" name="testEqualsTargetIdxPOSFalse" method="_yxuG4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVZXRpFCEeuCTslxszDstQ" name="testEqualsTargetIdxSelf" method="_yxuG4ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVZXSpFCEeuCTslxszDstQ" name="testEqualsTargetFalse" method="_yxuG4pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVZ-UpFCEeuCTslxszDstQ" name="testEqualsTargetTrue" method="_yxuG45FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVZ-VpFCEeuCTslxszDstQ" name="testIsSymmetricTrue" method="_yxuG5JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVZ-WpFCEeuCTslxszDstQ" name="testIsSymmetricFalse" method="_yxut8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yValYJFCEeuCTslxszDstQ" name="TestPointerType">
              <eAnnotations xmi:id="_yVbMcJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yVbMcZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yVbMcpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzbXEJFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxvVAJFCEeuCTslxszDstQ" name="testIsSymmetric" specification="_yVbMc5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertTrue(PointerType.ANTONYM.isSymmetric());
     Assert.assertFalse(PointerType.CAUSE.isSymmetric());

     Assert.assertTrue(PointerType.isSymmetric(PointerType.ANTONYM));

     Assert.assertTrue(PointerType.ANTONYM.symmetricTo(PointerType.ANTONYM));
     Assert.assertFalse(PointerType.ANTONYM.symmetricTo(PointerType.CATEGORY));
     Assert.assertTrue(PointerType.HYPERNYM.symmetricTo(PointerType.HYPONYM));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxvVAZFCEeuCTslxszDstQ" name="testGetPointerTypeForKey" specification="_yVbzgJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(PointerType.ANTONYM, PointerType.getPointerTypeForKey(&quot;!&quot;));
     Assert.assertEquals(PointerType.HYPERNYM, PointerType.getPointerTypeForKey(&quot;@&quot;));
     Assert.assertEquals(PointerType.HYPONYM, PointerType.getPointerTypeForKey(&quot;~&quot;));
     Assert.assertEquals(PointerType.ENTAILMENT, PointerType.getPointerTypeForKey(&quot;*&quot;));
     Assert.assertEquals(PointerType.SIMILAR_TO, PointerType.getPointerTypeForKey(&quot;&amp;&quot;));
     Assert.assertEquals(PointerType.MEMBER_HOLONYM, PointerType.getPointerTypeForKey(&quot;#m&quot;));
     Assert.assertEquals(PointerType.SUBSTANCE_HOLONYM, PointerType.getPointerTypeForKey(&quot;#s&quot;));
     Assert.assertEquals(PointerType.PART_HOLONYM, PointerType.getPointerTypeForKey(&quot;#p&quot;));
     Assert.assertEquals(PointerType.MEMBER_MERONYM, PointerType.getPointerTypeForKey(&quot;%m&quot;));
     Assert.assertEquals(PointerType.SUBSTANCE_MERONYM, PointerType.getPointerTypeForKey(&quot;%s&quot;));
     Assert.assertEquals(PointerType.PART_MERONYM, PointerType.getPointerTypeForKey(&quot;%p&quot;));
     Assert.assertEquals(PointerType.CAUSE, PointerType.getPointerTypeForKey(&quot;>&quot;));
     Assert.assertEquals(PointerType.PARTICIPLE_OF, PointerType.getPointerTypeForKey(&quot;&lt;&quot;));
     Assert.assertEquals(PointerType.SEE_ALSO, PointerType.getPointerTypeForKey(&quot;^&quot;));
     Assert.assertEquals(PointerType.PERTAINYM, PointerType.getPointerTypeForKey(&quot;\\&quot;));
     Assert.assertEquals(PointerType.ATTRIBUTE, PointerType.getPointerTypeForKey(&quot;=&quot;));
     Assert.assertEquals(PointerType.VERB_GROUP, PointerType.getPointerTypeForKey(&quot;$&quot;));
     Assert.assertEquals(PointerType.DERIVATION, PointerType.getPointerTypeForKey(&quot;+&quot;));
     Assert.assertEquals(PointerType.DOMAIN_ALL, PointerType.getPointerTypeForKey(&quot;;&quot;));
     Assert.assertEquals(PointerType.MEMBER_ALL, PointerType.getPointerTypeForKey(&quot;-&quot;));
     Assert.assertEquals(PointerType.CATEGORY, PointerType.getPointerTypeForKey(&quot;;c&quot;));
     Assert.assertEquals(PointerType.USAGE, PointerType.getPointerTypeForKey(&quot;;u&quot;));
     Assert.assertEquals(PointerType.REGION, PointerType.getPointerTypeForKey(&quot;;r&quot;));
     Assert.assertEquals(PointerType.CATEGORY_MEMBER, PointerType.getPointerTypeForKey(&quot;-c&quot;));
     Assert.assertEquals(PointerType.USAGE_MEMBER, PointerType.getPointerTypeForKey(&quot;-u&quot;));
     Assert.assertEquals(PointerType.REGION_MEMBER, PointerType.getPointerTypeForKey(&quot;-r&quot;));
     Assert.assertEquals(PointerType.INSTANCE_HYPERNYM, PointerType.getPointerTypeForKey(&quot;@i&quot;));
     Assert.assertEquals(PointerType.INSTANCES_HYPONYM, PointerType.getPointerTypeForKey(&quot;~i&quot;));
     Assert.assertNull(PointerType.getPointerTypeForKey(&quot;!!&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxvVApFCEeuCTslxszDstQ" name="testGetAllPointerTypesForPOS" specification="_yVbzhJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>List&lt;PointerType> ptrs = PointerType.getAllPointerTypesForPOS(POS.NOUN);
     Assert.assertTrue(0 &lt; ptrs.size());
     Assert.assertTrue(ptrs.contains(PointerType.ANTONYM));
     Assert.assertFalse(ptrs.contains(PointerType.SIMILAR_TO));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxvVA5FCEeuCTslxszDstQ" name="testToString" specification="_yVbziJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNotNull(PointerType.ANTONYM.toString());
     // on purpose to test cache
     Assert.assertNotNull(PointerType.ANTONYM.toString());

     Assert.assertNotNull(PointerType.PARTICIPLE_OF.toString());
     Assert.assertNotNull(PointerType.PART_MERONYM.toString());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxv8EJFCEeuCTslxszDstQ" name="testAppliesTo" specification="_yVcakJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertTrue(PointerType.ANTONYM.appliesTo(POS.NOUN));
     Assert.assertTrue(PointerType.ANTONYM.appliesTo(POS.ADJECTIVE));
     Assert.assertTrue(PointerType.ANTONYM.appliesTo(POS.VERB));
     Assert.assertTrue(PointerType.ANTONYM.appliesTo(POS.ADVERB));
     Assert.assertFalse(PointerType.CAUSE.appliesTo(POS.NOUN));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxv8EZFCEeuCTslxszDstQ" name="testGetFlags" specification="_yVcalJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(PointerTypeFlags.N | PointerTypeFlags.V, PointerType.HYPERNYM.getFlags());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxv8EpFCEeuCTslxszDstQ" name="testGetAllPointerTypes" specification="_yVcamJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertNotNull(PointerType.getAllPointerTypes());
     Assert.assertEquals(26, PointerType.getAllPointerTypes().size());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yVbMc5FCEeuCTslxszDstQ" name="testIsSymmetric" method="_yxvVAJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVbzgJFCEeuCTslxszDstQ" name="testGetPointerTypeForKey" method="_yxvVAZFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVbzhJFCEeuCTslxszDstQ" name="testGetAllPointerTypesForPOS" method="_yxvVApFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVbziJFCEeuCTslxszDstQ" name="testToString" method="_yxvVA5FCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVcakJFCEeuCTslxszDstQ" name="testAppliesTo" method="_yxv8EJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVcalJFCEeuCTslxszDstQ" name="testGetFlags" method="_yxv8EZFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVcamJFCEeuCTslxszDstQ" name="testGetAllPointerTypes" method="_yxv8EpFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yVdBoJFCEeuCTslxszDstQ" name="TestRelationshipList">
              <eAnnotations xmi:id="_yVdBoZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yVdBopFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yVdBo5FCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzbXEZFCEeuCTslxszDstQ">
                <body>Tests RelationshipList.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_yuz80JFCEeuCTslxszDstQ" name="dic" visibility="private" isStatic="true" type="_rVLc0JFCEeuCTslxszDstQ" association="_y0PPapFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxv8E5FCEeuCTslxszDstQ" name="runOnceBeforeAllTests" specification="_yVdBpJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dic = Dictionary.getInstance(TestRelationshipList.class.getResourceAsStream(&quot;/test_file_properties.xml&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxwjIJFCEeuCTslxszDstQ" name="testGetShallowest" specification="_yVdosJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Word sW = dic.getWordBySenseKey(&quot;dog%1:05:00::&quot;);
     Word tW = dic.getWordBySenseKey(&quot;man%1:05:00::&quot;);
     Assert.assertNotNull(&quot;source is not found&quot;, sW);
     Assert.assertNotNull(&quot;target is not found&quot;, tW);
     RelationshipList result = RelationshipFinder.findRelationships(sW.getSynset(), tW.getSynset(), PointerType.HYPERNYM);
     Assert.assertNotNull(&quot;relationships are not found&quot;, result);
     Assert.assertEquals(&quot;getDepth is wrong&quot;, 16, result.get(1).getDepth());
     Assert.assertEquals(&quot;getDeepest is wrong&quot;, 16, result.getDeepest().getDepth());
     Assert.assertEquals(&quot;getDepth is wrong&quot;, 7, result.get(0).getDepth());
     Assert.assertEquals(&quot;getDepth is wrong&quot;, 7, result.getShallowest().getDepth());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yVdBpJFCEeuCTslxszDstQ" name="runOnceBeforeAllTests" isStatic="true" method="_yxv8E5FCEeuCTslxszDstQ" raisedException="_yowYIpFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVdosJFCEeuCTslxszDstQ" name="testGetShallowest" method="_yxwjIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _r4uOwJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yVdotJFCEeuCTslxszDstQ" name="TestSynset">
              <eAnnotations xmi:id="_yVePwJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yVePwZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yVePwpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzbXEpFCEeuCTslxszDstQ">
                <body>Tests Synset functionality by creating a mock synset.
 *
@author Brett Walenz (bwalenz@users.sourceforge.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yVsSPZFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yu1yAJFCEeuCTslxszDstQ" name="testObj" visibility="private" type="_rb_PcJFCEeuCTslxszDstQ" association="_y0P2cZFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yu3AIJFCEeuCTslxszDstQ" name="gloss" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yu3AIZFCEeuCTslxszDstQ" value="&quot;testGloss&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_yu4OQJFCEeuCTslxszDstQ" name="offset" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yu4OQZFCEeuCTslxszDstQ" value="4125"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxwjIZFCEeuCTslxszDstQ" name="setUp" specification="_yVePw5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>super.setUp();
     testObj = new Synset(dictionary, POS.NOUN, offset);
     testObj.setGloss(gloss);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxwjIpFCEeuCTslxszDstQ" name="testConstructor" specification="_yVe20pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj = new Synset(dictionary, POS.NOUN, offset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxwjI5FCEeuCTslxszDstQ" name="testConstructorNullDictionary" specification="_yVe21pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj = new Synset(null, POS.NOUN, offset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxxKMJFCEeuCTslxszDstQ" name="testConstructorNullPOS" specification="_yVe22pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj = new Synset(dictionary, null, offset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxxKMZFCEeuCTslxszDstQ" name="testConstructorNullPOSNullD" specification="_yVfd45FCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj = new Synset(null, null, offset);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxxKMpFCEeuCTslxszDstQ" name="testGetPOS" specification="_yVfd6JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(POS.NOUN, testObj.getPOS());
     Assert.assertNotNull(testObj.toString());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxxKM5FCEeuCTslxszDstQ" name="testGetGloss" specification="_yVfd7JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(gloss, testObj.getGloss());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxxKNJFCEeuCTslxszDstQ" name="testGetVerbFrameFlags" specification="_yVgE8pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertTrue(testObj.getVerbFrameFlags().isEmpty());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxxxQJFCEeuCTslxszDstQ" name="testGetOffset" specification="_yVgE95FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(offset, testObj.getOffset());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxxxQZFCEeuCTslxszDstQ" name="testGetWordsSize" specification="_yVgE-5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(0, testObj.getWords().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxxxQpFCEeuCTslxszDstQ" name="testGetPointersSize" specification="_yVgE_5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(0, testObj.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxxxQ5FCEeuCTslxszDstQ" name="testGetPointersEmpty" specification="_yVgsA5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertTrue(testObj.getPointers().isEmpty());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxyYUJFCEeuCTslxszDstQ" name="testAddNullPointer" specification="_yVgsB5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.getPointers().add(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxyYUZFCEeuCTslxszDstQ" name="testAddNullPointer2" specification="_yVgsDJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     testObj.getPointers().add(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxyYUpFCEeuCTslxszDstQ" name="testAddNullPointerIndexed" specification="_yVhTFJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.getPointers().add(0, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxy_YJFCEeuCTslxszDstQ" name="testSetNullPointer" specification="_yVhTGZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.getPointers().set(0, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxy_YZFCEeuCTslxszDstQ" name="testAddPointer" specification="_yVhTHpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     dictionary.edit();
     testObj.getPointers().add(new Pointer(PointerType.HYPONYM, testObj, hyponym));
     Assert.assertEquals(1, testObj.getPointers().size());
     Assert.assertEquals(1, hyponym.getPointers().size());
     Assert.assertEquals(PointerType.HYPERNYM, hyponym.getPointers().get(0).getType());
     Assert.assertEquals(testObj, hyponym.getPointers().get(0).getTarget());

     Assert.assertEquals(1, testObj.getTargets().size());
     Assert.assertEquals(hyponym, testObj.getTargets().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxy_YpFCEeuCTslxszDstQ" name="testPointersLastIndexOf" specification="_yVh6I5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     testObj.getPointers().add(hyponymPtr);
     Assert.assertEquals(0, testObj.getPointers().lastIndexOf(hyponymPtr));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxy_Y5FCEeuCTslxszDstQ" name="testSetPointer" specification="_yVh6J5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset hyponym = new Synset(dictionary, POS.NOUN, 1);
     hyponym.setGloss(&quot;hyponym&quot;);
     Synset hypernym = new Synset(dictionary, POS.NOUN, 2);
     hypernym.setGloss(&quot;hypernym&quot;);
     dictionary.edit();
     testObj.getPointers().add(new Pointer(PointerType.HYPERNYM, testObj, hypernym));
     testObj.getPointers().set(0, new Pointer(PointerType.HYPONYM, testObj, hyponym));
     Assert.assertEquals(1, testObj.getPointers().size());
     Assert.assertEquals(1, hyponym.getPointers().size());
     Assert.assertEquals(0, hypernym.getPointers().size());
     Assert.assertEquals(PointerType.HYPERNYM, hyponym.getPointers().get(0).getType());
     Assert.assertEquals(testObj, hyponym.getPointers().get(0).getTarget());

     Assert.assertEquals(1, testObj.getTargets().size());
     Assert.assertEquals(hyponym, testObj.getTargets().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxzmcJFCEeuCTslxszDstQ" name="testAddPointer2" specification="_yVh6K5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     dictionary.edit();
     testObj.getPointers().add(0, new Pointer(PointerType.HYPONYM, testObj, hyponym));
     Assert.assertEquals(1, testObj.getPointers().size());
     Assert.assertEquals(1, hyponym.getPointers().size());
     Assert.assertEquals(PointerType.HYPERNYM, hyponym.getPointers().get(0).getType());
     Assert.assertEquals(testObj, hyponym.getPointers().get(0).getTarget());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxzmcZFCEeuCTslxszDstQ" name="testAddPointer3" specification="_yVihM5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     testObj.getPointers().add(0, new Pointer(PointerType.HYPONYM, testObj, hyponym));
     Assert.assertEquals(1, testObj.getPointers().size());
     Assert.assertEquals(1, hyponym.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxzmcpFCEeuCTslxszDstQ" name="testPointerListIterator" specification="_yVihN5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     testObj.getPointers().add(0, hyponymPtr);
     ListIterator&lt;Pointer> i = testObj.getPointers().listIterator();
     Assert.assertTrue(i.hasNext());
     Assert.assertEquals(hyponymPtr, i.next());
     Assert.assertFalse(i.hasNext());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx0NgJFCEeuCTslxszDstQ" name="testAddPointerAddAll" specification="_yVihO5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     Synset hypernym = new Synset(dictionary, POS.NOUN, 200);

     Assert.assertTrue(
             testObj.getPointers().addAll(Arrays.asList(
                     new Pointer(PointerType.HYPONYM, testObj, hyponym),
                     new Pointer(PointerType.HYPERNYM, testObj, hypernym)))
     );

     Assert.assertEquals(2, testObj.getPointers().size());
     Assert.assertEquals(1, hyponym.getPointers().size());
     Assert.assertEquals(1, hypernym.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx0NgZFCEeuCTslxszDstQ" name="testAddPointerAddAllNull" specification="_yVjIQpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     Synset hyponym = new Synset(null, POS.NOUN, 100);
     Synset hypernym = new Synset(null, POS.NOUN, 200);

     Assert.assertTrue(
             testObj.getPointers().addAll(Arrays.asList(
                     new Pointer(PointerType.HYPONYM, testObj, hyponym),
                     new Pointer(PointerType.HYPERNYM, testObj, hypernym)))
     );

     Assert.assertEquals(2, testObj.getPointers().size());
     Assert.assertEquals(0, hyponym.getPointers().size());
     Assert.assertEquals(0, hypernym.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx0NgpFCEeuCTslxszDstQ" name="testPointerSubList" specification="_yVjIRpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     Synset hypernym = new Synset(dictionary, POS.NOUN, 200);

     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     Pointer hypernymPtr = new Pointer(PointerType.HYPERNYM, testObj, hypernym);
     testObj.getPointers().addAll(Arrays.asList(hyponymPtr, hypernymPtr));

     List&lt;Pointer> subList = testObj.getPointers().subList(0, 1);
     Assert.assertEquals(1, subList.size());
     Assert.assertEquals(hyponymPtr, subList.get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx0Ng5FCEeuCTslxszDstQ" name="testPointerContainsAll" specification="_yVjISpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     Synset hypernym = new Synset(dictionary, POS.NOUN, 200);

     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     Pointer hypernymPtr = new Pointer(PointerType.HYPERNYM, testObj, hypernym);
     testObj.getPointers().addAll(Arrays.asList(hyponymPtr, hypernymPtr));

     Assert.assertTrue(testObj.getPointers().containsAll(Arrays.asList(hyponymPtr, hypernymPtr)));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx00kJFCEeuCTslxszDstQ" name="testPointerRemoveAllEdit" specification="_yVjITpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     Synset hypernym = new Synset(dictionary, POS.NOUN, 200);

     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     Pointer hypernymPtr = new Pointer(PointerType.HYPERNYM, testObj, hypernym);
     testObj.getPointers().addAll(Arrays.asList(hyponymPtr, hypernymPtr));

     Assert.assertTrue(testObj.getPointers().removeAll(Arrays.asList(hyponymPtr, hypernymPtr)));
     Assert.assertTrue(testObj.getPointers().isEmpty());
     Assert.assertTrue(hyponym.getPointers().isEmpty());
     Assert.assertTrue(hypernym.getPointers().isEmpty());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx00kZFCEeuCTslxszDstQ" name="testPointerRemoveAll" specification="_yVjvU5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     Synset hypernym = new Synset(dictionary, POS.NOUN, 200);

     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     Pointer hypernymPtr = new Pointer(PointerType.HYPERNYM, testObj, hypernym);
     testObj.getPointers().addAll(Arrays.asList(hyponymPtr, hypernymPtr));

     Assert.assertEquals(1, hyponym.getPointers().size());
     Assert.assertEquals(1, hypernym.getPointers().size());

     Assert.assertTrue(testObj.getPointers().removeAll(Arrays.asList(hyponymPtr, hypernymPtr)));
     Assert.assertTrue(testObj.getPointers().isEmpty());
     Assert.assertTrue(hyponym.getPointers().isEmpty());
     Assert.assertTrue(hypernym.getPointers().isEmpty());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx00kpFCEeuCTslxszDstQ" name="testPointerRemoveAllNull" specification="_yVjvV5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     Synset hyponym = new Synset(null, POS.NOUN, 100);
     Synset hypernym = new Synset(null, POS.NOUN, 200);

     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     Pointer hypernymPtr = new Pointer(PointerType.HYPERNYM, testObj, hypernym);
     testObj.getPointers().addAll(Arrays.asList(hyponymPtr, hypernymPtr));

     Assert.assertTrue(hyponym.getPointers().isEmpty());
     Assert.assertTrue(hypernym.getPointers().isEmpty());

     Assert.assertTrue(testObj.getPointers().removeAll(Arrays.asList(hyponymPtr, hypernymPtr)));
     Assert.assertTrue(testObj.getPointers().isEmpty());
     Assert.assertTrue(hyponym.getPointers().isEmpty());
     Assert.assertTrue(hypernym.getPointers().isEmpty());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx00k5FCEeuCTslxszDstQ" name="testPointerRetainAllEdit" specification="_yVjvW5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = dictionary.createSynset(POS.NOUN);
     Synset hypernym = dictionary.createSynset(POS.NOUN);

     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     Pointer hypernymPtr = new Pointer(PointerType.HYPERNYM, testObj, hypernym);
     Assert.assertEquals(0, testObj.getPointers().size());
     testObj.getPointers().addAll(Arrays.asList(hyponymPtr, hypernymPtr));
     Assert.assertEquals(2, testObj.getPointers().size());

     Assert.assertTrue(testObj.getPointers().retainAll(Arrays.asList(hyponymPtr)));
     Assert.assertEquals(1, testObj.getPointers().size());
     Assert.assertEquals(1, hyponym.getPointers().size());
     Assert.assertEquals(hyponymPtr, testObj.getPointers().get(0));
     Assert.assertTrue(hypernym.getPointers().isEmpty());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx00lJFCEeuCTslxszDstQ" name="testPointerRetainAllNull" specification="_yVkWY5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     Synset hyponym = new Synset(null, POS.NOUN, 100);
     Synset hypernym = new Synset(null, POS.NOUN, 200);

     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     Pointer hypernymPtr = new Pointer(PointerType.HYPERNYM, testObj, hypernym);
     testObj.getPointers().addAll(Arrays.asList(hyponymPtr, hypernymPtr));

     Assert.assertTrue(testObj.getPointers().retainAll(Arrays.asList(hyponymPtr)));
     Assert.assertEquals(1, testObj.getPointers().size());
     Assert.assertEquals(hyponymPtr, testObj.getPointers().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx1boJFCEeuCTslxszDstQ" name="testAddPointerAddAllEdit" specification="_yVkWZ5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     Synset hypernym = new Synset(dictionary, POS.NOUN, 200);

     Assert.assertTrue(
             testObj.getPointers().addAll(Arrays.asList(
                     new Pointer(PointerType.HYPONYM, testObj, hyponym),
                     new Pointer(PointerType.HYPERNYM, testObj, hypernym)))
     );

     Assert.assertEquals(2, testObj.getPointers().size());
     Assert.assertEquals(1, hyponym.getPointers().size());
     Assert.assertEquals(1, hypernym.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx1boZFCEeuCTslxszDstQ" name="testAddPointerAddAllIndexedEdit" specification="_yVkWa5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     Synset hypernym = new Synset(dictionary, POS.NOUN, 200);

     Pointer hyponymPtr = new Pointer(PointerType.HYPONYM, testObj, hyponym);
     testObj.getPointers().add(hyponymPtr);

     Pointer hypernymPtr = new Pointer(PointerType.HYPERNYM, testObj, hypernym);
     Assert.assertTrue(
             testObj.getPointers().addAll(0, Arrays.asList(
                     hypernymPtr))
     );

     Assert.assertEquals(2, testObj.getPointers().size());
     Assert.assertEquals(hypernymPtr, testObj.getPointers().get(0));
     Assert.assertEquals(1, hyponym.getPointers().size());
     Assert.assertEquals(1, hypernym.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx1bopFCEeuCTslxszDstQ" name="testRemovePointer" specification="_yVk9cpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     testObj.getPointers().add(new Pointer(PointerType.HYPONYM, testObj, hyponym));
     hyponym.getPointers().remove(0);

     Assert.assertEquals(0, testObj.getPointers().size());
     Assert.assertEquals(0, hyponym.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx1bo5FCEeuCTslxszDstQ" name="testRemovePointer2" specification="_yVk9dpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Synset hyponym = new Synset(dictionary, POS.NOUN, 100);
     testObj.getPointers().add(new Pointer(PointerType.HYPONYM, testObj, hyponym));
     hyponym.getPointers().remove(hyponym.getPointers().get(0));

     Assert.assertEquals(0, testObj.getPointers().size());
     Assert.assertEquals(0, hyponym.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx2CsJFCEeuCTslxszDstQ" name="testSetWord" specification="_yVlkgpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.getWords().set(0, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx2CsZFCEeuCTslxszDstQ" name="testSetWord3" specification="_yVlkh5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.getWords().add(new Word(dictionary, testObj, &quot;test2&quot;));
     testObj.getWords().set(0, new Word(dictionary, testObj, &quot;test&quot;));

     Assert.assertEquals(1, testObj.getWords().size());
     Assert.assertEquals(&quot;test&quot;, testObj.getWords().get(0).getLemma());

     List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>(1);
     Iterator&lt;IndexWord> i = dictionary.getIndexWordIterator(POS.NOUN);
     while (i.hasNext()) {
         indexWords.add(i.next());
     }
     Assert.assertEquals(1, indexWords.size());
     Assert.assertEquals(&quot;test&quot;, indexWords.get(0).getLemma());
     Assert.assertEquals(1, indexWords.get(0).getSenses().size());
     Assert.assertEquals(testObj, indexWords.get(0).getSenses().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx2pwJFCEeuCTslxszDstQ" name="testAddWord" specification="_yVmLkpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.getWords().add(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx2pwZFCEeuCTslxszDstQ" name="testAddWordNull" specification="_yVmLl5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     testObj.getWords().add(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx3Q0JFCEeuCTslxszDstQ" name="testAddWord2" specification="_yVmLnJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.getWords().add(new Word(null, new Synset(dictionary, POS.NOUN), &quot;test&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx3Q0ZFCEeuCTslxszDstQ" name="testAddWord3" specification="_yVmyo5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.getWords().add(new Word(dictionary, testObj, &quot;test&quot;));
     Assert.assertEquals(1, testObj.getWords().size());
     Assert.assertEquals(&quot;test&quot;, testObj.getWords().get(0).getLemma());

     List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>(1);
     Iterator&lt;IndexWord> i = dictionary.getIndexWordIterator(POS.NOUN);
     while (i.hasNext()) {
         indexWords.add(i.next());
     }
     Assert.assertEquals(1, indexWords.size());
     Assert.assertEquals(&quot;test&quot;, indexWords.get(0).getLemma());
     Assert.assertEquals(1, indexWords.get(0).getSenses().size());
     Assert.assertEquals(testObj, indexWords.get(0).getSenses().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx334JFCEeuCTslxszDstQ" name="testAddWordNullD" specification="_yVmyp5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     testObj.getWords().add(new Word(null, testObj, &quot;test&quot;));
     Assert.assertEquals(1, testObj.getWords().size());
     Assert.assertEquals(&quot;test&quot;, testObj.getWords().get(0).getLemma());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx334ZFCEeuCTslxszDstQ" name="testAddWordIndexedNullD" specification="_yVmyq5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     testObj.getWords().add(0, new Word(null, testObj, &quot;test&quot;));
     Assert.assertEquals(1, testObj.getWords().size());
     Assert.assertEquals(&quot;test&quot;, testObj.getWords().get(0).getLemma());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx334pFCEeuCTslxszDstQ" name="testAddWord4" specification="_yVnZs5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.getWords().add(new Word(dictionary, testObj, &quot;test&quot;));
     IndexWord iw = dictionary.getIndexWord(testObj.getPOS(), &quot;test&quot;);
     Assert.assertNotNull(iw);
     iw.getSenses().add(new Synset(dictionary, testObj.getPOS()));
     iw.getSenses().remove(testObj);
     testObj.getWords().add(new Word(dictionary, testObj, &quot;test&quot;));
     Assert.assertEquals(1, testObj.getWords().size());
     Assert.assertEquals(&quot;test&quot;, testObj.getWords().get(0).getLemma());

     List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>(1);
     Iterator&lt;IndexWord> i = dictionary.getIndexWordIterator(POS.NOUN);
     while (i.hasNext()) {
         indexWords.add(i.next());
     }
     Assert.assertEquals(1, indexWords.size());
     Assert.assertEquals(&quot;test&quot;, indexWords.get(0).getLemma());
     Assert.assertEquals(2, indexWords.get(0).getSenses().size());
     Assert.assertEquals(testObj, indexWords.get(0).getSenses().get(1));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx3345FCEeuCTslxszDstQ" name="testRemoveWord" specification="_yVnZt5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.getWords().add(new Word(dictionary, testObj, &quot;test&quot;));
     testObj.getWords().remove(0);

     Assert.assertEquals(0, testObj.getWords().size());

     List&lt;IndexWord> indexWords = new ArrayList&lt;IndexWord>(1);
     Iterator&lt;IndexWord> i = dictionary.getIndexWordIterator(POS.NOUN);
     while (i.hasNext()) {
         indexWords.add(i.next());
     }
     Assert.assertEquals(0, indexWords.size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx335JFCEeuCTslxszDstQ" name="testRemoveWordNull" specification="_yVnZu5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     testObj.getWords().add(new Word(null, testObj, &quot;test&quot;));
     testObj.getWords().remove(0);

     Assert.assertEquals(0, testObj.getWords().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx4e8JFCEeuCTslxszDstQ" name="testCreateSynset" specification="_yVoAw5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>new Synset(dictionary, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx4e8ZFCEeuCTslxszDstQ" name="testElementType" specification="_yVoAyJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(DictionaryElementType.SYNSET, testObj.getType());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx4e8pFCEeuCTslxszDstQ" name="testSetGloss" specification="_yVoAzJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.setGloss(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx4e85FCEeuCTslxszDstQ" name="testSetGlossNullD" specification="_yVon1JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     testObj.setGloss(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx5GAJFCEeuCTslxszDstQ" name="testAdjectiveCluster" specification="_yVon2ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.isAdjectiveCluster();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx5GAZFCEeuCTslxszDstQ" name="testVerbFrames" specification="_yVpO4ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.getVerbFrames();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx5GApFCEeuCTslxszDstQ" name="testVerbFrameIndices" specification="_yVpO5pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.getVerbFrameIndices();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx5GA5FCEeuCTslxszDstQ" name="testSetAdjectiveCluster" specification="_yVpO65FCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.setIsAdjectiveCluster(true);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx5tEJFCEeuCTslxszDstQ" name="testSetVerbFramesFlags" specification="_yVp185FCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.setVerbFrameFlags(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx5tEZFCEeuCTslxszDstQ" name="testContainsWord" specification="_yVp1-JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.containsWord(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx5tEpFCEeuCTslxszDstQ" name="testContainsWord2" specification="_yVp1_ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Assert.assertFalse(testObj.containsWord(&quot;test&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx5tE5FCEeuCTslxszDstQ" name="testContainsWord2NullD" specification="_yVqdA5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     Assert.assertFalse(testObj.containsWord(&quot;test&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx5tFJFCEeuCTslxszDstQ" name="testIndexOfWordNull" specification="_yVqdB5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.indexOfWord(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx6UIJFCEeuCTslxszDstQ" name="testIndexOfWordPositive" specification="_yVqdDJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>testObj.getWords().add(new Word(dictionary, testObj, &quot;lemma&quot;));
     Assert.assertEquals(0, testObj.indexOfWord(&quot;lemma&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx6UIZFCEeuCTslxszDstQ" name="testIndexOfWordNegative" specification="_yVrEEpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(-1, testObj.indexOfWord(&quot;lemma&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx6UIpFCEeuCTslxszDstQ" name="testSetDictionary" specification="_yVrEFpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     mapDictionary.edit();
     testObj.setDictionary(mapDictionary);

     List&lt;Synset> synsets = new ArrayList&lt;Synset>(0);
     Iterator&lt;Synset> i = dictionary.getSynsetIterator(POS.NOUN);
     while (i.hasNext()) {
         synsets.add(i.next());
     }
     Assert.assertEquals(0, synsets.size());

     synsets = new ArrayList&lt;Synset>(0);
     i = mapDictionary.getSynsetIterator(POS.NOUN);
     while (i.hasNext()) {
         synsets.add(i.next());
     }
     Assert.assertEquals(1, synsets.size());
     Assert.assertEquals(testObj, synsets.get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx6UI5FCEeuCTslxszDstQ" name="testWordListAddAlien" specification="_yVrEGpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.getWords().add(new Word(mapDictionary, new Synset(mapDictionary, POS.NOUN), &quot;test&quot;));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx6UJJFCEeuCTslxszDstQ" name="testWordListAddAll" specification="_yVrrIpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Word w = new Word(dictionary, testObj, &quot;test&quot;);
     Word ww = new Word(dictionary, testObj, &quot;rest&quot;);

     Assert.assertTrue(testObj.getWords().addAll(Arrays.asList(w, ww)));
     Assert.assertEquals(2, testObj.getWords().size());
     Assert.assertTrue(testObj.getWords().contains(w));
     Assert.assertTrue(testObj.getWords().contains(ww));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx67MJFCEeuCTslxszDstQ" name="testWordListAddAllNull" specification="_yVrrJpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     Word w = new Word(null, testObj, &quot;test&quot;);
     Word ww = new Word(null, testObj, &quot;rest&quot;);

     Assert.assertTrue(testObj.getWords().addAll(Arrays.asList(w, ww)));
     Assert.assertEquals(2, testObj.getWords().size());
     Assert.assertTrue(testObj.getWords().contains(w));
     Assert.assertTrue(testObj.getWords().contains(ww));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx67MZFCEeuCTslxszDstQ" name="testWordListAddAllIndex" specification="_yVrrKpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Word w = new Word(dictionary, testObj, &quot;test&quot;);
     Word ww = new Word(dictionary, testObj, &quot;rest&quot;);
     testObj.getWords().add(w);

     Assert.assertTrue(testObj.getWords().addAll(0, Arrays.asList(ww)));
     Assert.assertEquals(2, testObj.getWords().size());
     Assert.assertEquals(ww, testObj.getWords().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx67MpFCEeuCTslxszDstQ" name="testWordListAddAllIndexNull" specification="_yVsSMZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     Word w = new Word(null, testObj, &quot;test&quot;);
     Word ww = new Word(null, testObj, &quot;rest&quot;);
     testObj.getWords().add(w);

     Assert.assertTrue(testObj.getWords().addAll(0, Arrays.asList(ww)));
     Assert.assertEquals(2, testObj.getWords().size());
     Assert.assertEquals(ww, testObj.getWords().get(0));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx67M5FCEeuCTslxszDstQ" name="testWordListClear" specification="_yVsSNZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     Word w = new Word(dictionary, testObj, &quot;test&quot;);
     testObj.getWords().add(w);
     testObj.getWords().clear();

     Assert.assertTrue(testObj.getWords().isEmpty());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx67NJFCEeuCTslxszDstQ" name="testWordListClearNull" specification="_yVsSOZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>dictionary.edit();
     testObj.setDictionary(null);
     Word w = new Word(null, testObj, &quot;test&quot;);
     testObj.getWords().add(w);
     testObj.getWords().clear();

     Assert.assertTrue(testObj.getWords().isEmpty());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yVePw5FCEeuCTslxszDstQ" name="setUp" method="_yxwjIZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVe20pFCEeuCTslxszDstQ" name="testConstructor" method="_yxwjIpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVe21pFCEeuCTslxszDstQ" name="testConstructorNullDictionary" method="_yxwjI5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVe22pFCEeuCTslxszDstQ" name="testConstructorNullPOS" method="_yxxKMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVfd45FCEeuCTslxszDstQ" name="testConstructorNullPOSNullD" method="_yxxKMZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVfd6JFCEeuCTslxszDstQ" name="testGetPOS" method="_yxxKMpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVfd7JFCEeuCTslxszDstQ" name="testGetGloss" method="_yxxKM5FCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVgE8pFCEeuCTslxszDstQ" name="testGetVerbFrameFlags" method="_yxxKNJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVgE95FCEeuCTslxszDstQ" name="testGetOffset" method="_yxxxQJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVgE-5FCEeuCTslxszDstQ" name="testGetWordsSize" method="_yxxxQZFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVgE_5FCEeuCTslxszDstQ" name="testGetPointersSize" method="_yxxxQpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVgsA5FCEeuCTslxszDstQ" name="testGetPointersEmpty" method="_yxxxQ5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVgsB5FCEeuCTslxszDstQ" name="testAddNullPointer" method="_yxyYUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVgsDJFCEeuCTslxszDstQ" name="testAddNullPointer2" method="_yxyYUZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVhTFJFCEeuCTslxszDstQ" name="testAddNullPointerIndexed" method="_yxyYUpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVhTGZFCEeuCTslxszDstQ" name="testSetNullPointer" method="_yxy_YJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVhTHpFCEeuCTslxszDstQ" name="testAddPointer" method="_yxy_YZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVh6I5FCEeuCTslxszDstQ" name="testPointersLastIndexOf" method="_yxy_YpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVh6J5FCEeuCTslxszDstQ" name="testSetPointer" method="_yxy_Y5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVh6K5FCEeuCTslxszDstQ" name="testAddPointer2" method="_yxzmcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVihM5FCEeuCTslxszDstQ" name="testAddPointer3" method="_yxzmcZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVihN5FCEeuCTslxszDstQ" name="testPointerListIterator" method="_yxzmcpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVihO5FCEeuCTslxszDstQ" name="testAddPointerAddAll" method="_yx0NgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVjIQpFCEeuCTslxszDstQ" name="testAddPointerAddAllNull" method="_yx0NgZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVjIRpFCEeuCTslxszDstQ" name="testPointerSubList" method="_yx0NgpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVjISpFCEeuCTslxszDstQ" name="testPointerContainsAll" method="_yx0Ng5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVjITpFCEeuCTslxszDstQ" name="testPointerRemoveAllEdit" method="_yx00kJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVjvU5FCEeuCTslxszDstQ" name="testPointerRemoveAll" method="_yx00kZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVjvV5FCEeuCTslxszDstQ" name="testPointerRemoveAllNull" method="_yx00kpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVjvW5FCEeuCTslxszDstQ" name="testPointerRetainAllEdit" method="_yx00k5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVkWY5FCEeuCTslxszDstQ" name="testPointerRetainAllNull" method="_yx00lJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVkWZ5FCEeuCTslxszDstQ" name="testAddPointerAddAllEdit" method="_yx1boJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVkWa5FCEeuCTslxszDstQ" name="testAddPointerAddAllIndexedEdit" method="_yx1boZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVk9cpFCEeuCTslxszDstQ" name="testRemovePointer" method="_yx1bopFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVk9dpFCEeuCTslxszDstQ" name="testRemovePointer2" method="_yx1bo5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVlkgpFCEeuCTslxszDstQ" name="testSetWord" method="_yx2CsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVlkh5FCEeuCTslxszDstQ" name="testSetWord3" method="_yx2CsZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVmLkpFCEeuCTslxszDstQ" name="testAddWord" method="_yx2pwJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVmLl5FCEeuCTslxszDstQ" name="testAddWordNull" method="_yx2pwZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVmLnJFCEeuCTslxszDstQ" name="testAddWord2" method="_yx3Q0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVmyo5FCEeuCTslxszDstQ" name="testAddWord3" method="_yx3Q0ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVmyp5FCEeuCTslxszDstQ" name="testAddWordNullD" method="_yx334JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVmyq5FCEeuCTslxszDstQ" name="testAddWordIndexedNullD" method="_yx334ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVnZs5FCEeuCTslxszDstQ" name="testAddWord4" method="_yx334pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVnZt5FCEeuCTslxszDstQ" name="testRemoveWord" method="_yx3345FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVnZu5FCEeuCTslxszDstQ" name="testRemoveWordNull" method="_yx335JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVoAw5FCEeuCTslxszDstQ" name="testCreateSynset" method="_yx4e8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVoAyJFCEeuCTslxszDstQ" name="testElementType" method="_yx4e8ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVoAzJFCEeuCTslxszDstQ" name="testSetGloss" method="_yx4e8pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVon1JFCEeuCTslxszDstQ" name="testSetGlossNullD" method="_yx4e85FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVon2ZFCEeuCTslxszDstQ" name="testAdjectiveCluster" method="_yx5GAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVpO4ZFCEeuCTslxszDstQ" name="testVerbFrames" method="_yx5GAZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVpO5pFCEeuCTslxszDstQ" name="testVerbFrameIndices" method="_yx5GApFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVpO65FCEeuCTslxszDstQ" name="testSetAdjectiveCluster" method="_yx5GA5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVp185FCEeuCTslxszDstQ" name="testSetVerbFramesFlags" method="_yx5tEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVp1-JFCEeuCTslxszDstQ" name="testContainsWord" method="_yx5tEZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVp1_ZFCEeuCTslxszDstQ" name="testContainsWord2" method="_yx5tEpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVqdA5FCEeuCTslxszDstQ" name="testContainsWord2NullD" method="_yx5tE5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVqdB5FCEeuCTslxszDstQ" name="testIndexOfWordNull" method="_yx5tFJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVqdDJFCEeuCTslxszDstQ" name="testIndexOfWordPositive" method="_yx6UIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVrEEpFCEeuCTslxszDstQ" name="testIndexOfWordNegative" method="_yx6UIZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVrEFpFCEeuCTslxszDstQ" name="testSetDictionary" method="_yx6UIpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVrEGpFCEeuCTslxszDstQ" name="testWordListAddAlien" method="_yx6UI5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVrrIpFCEeuCTslxszDstQ" name="testWordListAddAll" method="_yx6UJJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVrrJpFCEeuCTslxszDstQ" name="testWordListAddAllNull" method="_yx67MJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVrrKpFCEeuCTslxszDstQ" name="testWordListAddAllIndex" method="_yx67MZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVsSMZFCEeuCTslxszDstQ" name="testWordListAddAllIndexNull" method="_yx67MpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVsSNZFCEeuCTslxszDstQ" name="testWordListClear" method="_yx67M5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVsSOZFCEeuCTslxszDstQ" name="testWordListClearNull" method="_yx67NJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yVuHYJFCEeuCTslxszDstQ" name="TestVerb">
              <eAnnotations xmi:id="_yVuHYZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yVuHYpFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yVuHY5FCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yzhdsZFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yVuucJFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx8wYJFCEeuCTslxszDstQ" name="testGetVerbFrames" specification="_yVuHZJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(null, POS.NOUN);
     BitSet verbFrameFlags = new BitSet(1);
     verbFrameFlags.set(1);
     Verb v = new Verb(null, s, &quot;go&quot;, verbFrameFlags);
     String[] frames = v.getVerbFrames();
     Assert.assertNotNull(frames);
     Assert.assertEquals(1, frames.length);
     Assert.assertEquals(Verb.frames[0], frames[0]);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yVuHZJFCEeuCTslxszDstQ" name="testGetVerbFrames" method="_yx8wYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yVuucZFCEeuCTslxszDstQ" name="TestVerbSynset">
              <eAnnotations xmi:id="_yVuucpFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yVuuc5FCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yVuudJFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yziEwJFCEeuCTslxszDstQ">
                <body>@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yVv8lJFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx9XcJFCEeuCTslxszDstQ" name="testConstructor" specification="_yVuudZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>VerbSynset verbSynset = new VerbSynset(dictionary);
     Assert.assertNotNull(verbSynset.getVerbFrameFlags());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx9XcZFCEeuCTslxszDstQ" name="testGetVerbFrames" specification="_yVuueZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>VerbSynset verbSynset = new VerbSynset(dictionary, 0);
     Assert.assertNotNull(verbSynset.getVerbFrameFlags());
     Assert.assertNotNull(verbSynset.getVerbFrames());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx9-gJFCEeuCTslxszDstQ" name="testGetVerbFrames2" specification="_yVvVg5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>BitSet verbFrameFlags = new BitSet(1);
     verbFrameFlags.set(1);
     Synset s = new VerbSynset(null);
     s.setVerbFrameFlags(verbFrameFlags);
     String[] frames = s.getVerbFrames();
     Assert.assertNotNull(frames);
     Assert.assertEquals(1, frames.length);
     Assert.assertEquals(Verb.frames[0], frames[0]);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx9-gZFCEeuCTslxszDstQ" name="testSetVerbFrames" specification="_yVvVh5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>VerbSynset verbSynset = new VerbSynset(dictionary, 0);
     verbSynset.setVerbFrameFlags(null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx9-gpFCEeuCTslxszDstQ" name="testSetVerbFrames2" specification="_yVvVjJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>VerbSynset verbSynset = new VerbSynset(null);
     verbSynset.setVerbFrameFlags(null);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yVuudZFCEeuCTslxszDstQ" name="testConstructor" method="_yx9XcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVuueZFCEeuCTslxszDstQ" name="testGetVerbFrames" method="_yx9XcZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVvVg5FCEeuCTslxszDstQ" name="testGetVerbFrames2" method="_yx9-gJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVvVh5FCEeuCTslxszDstQ" name="testSetVerbFrames" method="_yx9-gZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVvVjJFCEeuCTslxszDstQ" name="testSetVerbFrames2" method="_yx9-gpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yVv8lZFCEeuCTslxszDstQ" name="TestWord">
              <eAnnotations xmi:id="_yVv8lpFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yVv8l5FCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yVv8mJFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedComment xmi:id="_yziEw5FCEeuCTslxszDstQ">
                <body>Tests the word functionality.
 *
@author Brett Walenz (bwalenz@users.sourceforge.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_yV0OApFCEeuCTslxszDstQ" general="_ozhYYJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yu9GwJFCEeuCTslxszDstQ" name="word" visibility="private" type="_oTGy8JFCEeuCTslxszDstQ" association="_y0P2dJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_yu9t0ZFCEeuCTslxszDstQ" name="lemma" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_yu-U4JFCEeuCTslxszDstQ" value="&quot;testLemma&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx-lkJFCEeuCTslxszDstQ" name="setUp" specification="_yVv8mZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>super.setUp();
     word = new Word(dictionary, new Synset(dictionary, POS.NOUN), lemma);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx-lkZFCEeuCTslxszDstQ" name="testCreateNullSynset" specification="_yVwjo5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(dictionary, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx-lkpFCEeuCTslxszDstQ" name="testCreateIndex" specification="_yVwjqJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(dictionary, new Synset(dictionary, POS.NOUN), null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx_MoJFCEeuCTslxszDstQ" name="testCreateNullLemma" specification="_yVwjrZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(dictionary, new Synset(dictionary, POS.NOUN), null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx_MoZFCEeuCTslxszDstQ" name="testCreateEmptyLemma" specification="_yVxKtJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(dictionary, new Synset(dictionary, POS.NOUN), &quot;&quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx_MopFCEeuCTslxszDstQ" name="testCreateLemmaPrefix" specification="_yVxKuZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(dictionary, new Synset(null, POS.NOUN), &quot; a&quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx_Mo5FCEeuCTslxszDstQ" name="testCreateLemmaSuffix" specification="_yVxxwZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(dictionary, new Synset(dictionary, POS.NOUN), &quot;a &quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx_MpJFCEeuCTslxszDstQ" name="testCreateAlienSynset" specification="_yVxxxpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(dictionary, new Synset(mapDictionary, POS.NOUN), &quot;a &quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx_zsJFCEeuCTslxszDstQ" name="testCreate2NullSynset" specification="_yVxxy5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(null, null, null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx_zsZFCEeuCTslxszDstQ" name="testCreate2Index" specification="_yVyY0JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(null, new Synset(null, POS.NOUN), null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yx_zspFCEeuCTslxszDstQ" name="testCreate2NullLemma" specification="_yVyY1ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(null, new Synset(null, POS.NOUN), null);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyAawJFCEeuCTslxszDstQ" name="testCreate2EmptyLemma" specification="_yVyY2pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(null, new Synset(null, POS.NOUN), &quot;&quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyAawZFCEeuCTslxszDstQ" name="testCreate2LemmaPrefix" specification="_yVy_4ZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(null, new Synset(null, POS.NOUN), &quot; a&quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyAawpFCEeuCTslxszDstQ" name="testCreate2LemmaSuffix" specification="_yVy_5pFCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(null, new Synset(null, POS.NOUN), &quot;a &quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyBB0JFCEeuCTslxszDstQ" name="testCreate2AlienSynset" specification="_yVy_65FCEeuCTslxszDstQ">
                <language>java</language>
                <body>word = new Word(null, new Synset(mapDictionary, POS.NOUN), &quot;a &quot;);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyBB0ZFCEeuCTslxszDstQ" name="testGetIndex" specification="_yVzm8JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(0, word.getIndex());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyBo4JFCEeuCTslxszDstQ" name="testGetLemma" specification="_yVzm9JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(lemma, word.getLemma());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyBo4ZFCEeuCTslxszDstQ" name="testGetPointers" specification="_yVzm-JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Assert.assertEquals(0, word.getPointers().size());

     Synset synset = word.getSynset();
     synset.getPointers().add(new Pointer(PointerType.ANTONYM, synset, synset));
     Assert.assertEquals(0, word.getPointers().size());
     synset.getPointers().add(new Pointer(PointerType.ANTONYM, word, synset));
     Assert.assertEquals(1, word.getPointers().size());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyBo4pFCEeuCTslxszDstQ" name="testHashCode" specification="_yVzm_JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>Synset s = new Synset(dictionary, POS.NOUN);
     Word w = new Word(dictionary, s, &quot;lemma&quot;);
     Word ww = new Word(dictionary, s, &quot;gemma&quot;);

     Assert.assertNotEquals(w.hashCode(), ww.hashCode());
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yVv8mZFCEeuCTslxszDstQ" name="setUp" method="_yx-lkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVwjo5FCEeuCTslxszDstQ" name="testCreateNullSynset" method="_yx-lkZFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVwjqJFCEeuCTslxszDstQ" name="testCreateIndex" method="_yx-lkpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVwjrZFCEeuCTslxszDstQ" name="testCreateNullLemma" method="_yx_MoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVxKtJFCEeuCTslxszDstQ" name="testCreateEmptyLemma" method="_yx_MoZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVxKuZFCEeuCTslxszDstQ" name="testCreateLemmaPrefix" method="_yx_MopFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVxxwZFCEeuCTslxszDstQ" name="testCreateLemmaSuffix" method="_yx_Mo5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVxxxpFCEeuCTslxszDstQ" name="testCreateAlienSynset" method="_yx_MpJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVxxy5FCEeuCTslxszDstQ" name="testCreate2NullSynset" method="_yx_zsJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVyY0JFCEeuCTslxszDstQ" name="testCreate2Index" method="_yx_zsZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVyY1ZFCEeuCTslxszDstQ" name="testCreate2NullLemma" method="_yx_zspFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVyY2pFCEeuCTslxszDstQ" name="testCreate2EmptyLemma" method="_yyAawJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVy_4ZFCEeuCTslxszDstQ" name="testCreate2LemmaPrefix" method="_yyAawZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVy_5pFCEeuCTslxszDstQ" name="testCreate2LemmaSuffix" method="_yyAawpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVy_65FCEeuCTslxszDstQ" name="testCreate2AlienSynset" method="_yyBB0JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVzm8JFCEeuCTslxszDstQ" name="testGetIndex" method="_yyBB0ZFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVzm9JFCEeuCTslxszDstQ" name="testGetLemma" method="_yyBo4JFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVzm-JFCEeuCTslxszDstQ" name="testGetPointers" method="_yyBo4ZFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yVzm_JFCEeuCTslxszDstQ" name="testHashCode" method="_yyBo4pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0K98ZFCEeuCTslxszDstQ" name="" memberEnd="_y0K98pFCEeuCTslxszDstQ _ytSS0JFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0K98pFCEeuCTslxszDstQ" name="" type="_rb_PcJFCEeuCTslxszDstQ" association="_y0K98ZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0K99JFCEeuCTslxszDstQ" name="" memberEnd="_y0K99ZFCEeuCTslxszDstQ _ytUvEJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0K99ZFCEeuCTslxszDstQ" name="" type="_rb_PcJFCEeuCTslxszDstQ" association="_y0K99JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0K995FCEeuCTslxszDstQ" name="" memberEnd="_y0K9-JFCEeuCTslxszDstQ _ytV9MJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0K9-JFCEeuCTslxszDstQ" name="" type="_rb_PcJFCEeuCTslxszDstQ" association="_y0K995FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0PPZ5FCEeuCTslxszDstQ" name="" memberEnd="_y0PPaJFCEeuCTslxszDstQ _yut2MJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0PPaJFCEeuCTslxszDstQ" name="" type="_yTVhwJFCEeuCTslxszDstQ" association="_y0PPZ5FCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0PPapFCEeuCTslxszDstQ" name="" memberEnd="_y0PPa5FCEeuCTslxszDstQ _yuz80JFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0PPa5FCEeuCTslxszDstQ" name="" type="_yVdBoJFCEeuCTslxszDstQ" association="_y0PPapFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0P2cZFCEeuCTslxszDstQ" name="" memberEnd="_y0P2cpFCEeuCTslxszDstQ _yu1yAJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0P2cpFCEeuCTslxszDstQ" name="" type="_yVdotJFCEeuCTslxszDstQ" association="_y0P2cZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0P2dJFCEeuCTslxszDstQ" name="" memberEnd="_y0P2dZFCEeuCTslxszDstQ _yu9GwJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0P2dZFCEeuCTslxszDstQ" name="" type="_yVv8lZFCEeuCTslxszDstQ" association="_y0P2dJFCEeuCTslxszDstQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_mprXAJFCEeuCTslxszDstQ" name="util">
            <packagedElement xmi:type="uml:Package" xmi:id="_mq438JFCEeuCTslxszDstQ" name="factory">
              <packagedElement xmi:type="uml:Interface" xmi:id="_oyrD0JFCEeuCTslxszDstQ" name="Param">
                <ownedComment xmi:id="_sfG5UZFCEeuCTslxszDstQ">
                  <body>Represents a parameter in a properties file. Parameters can be nested.
 *
@author John Didion (jdidion@didion.net)</body>
                </ownedComment>
                <ownedAttribute xmi:id="_oys5AJFCEeuCTslxszDstQ" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_oytgEJFCEeuCTslxszDstQ" name="value" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedOperation xmi:id="_oyuuMJFCEeuCTslxszDstQ" name="create" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sFKIQJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rtKfAJFCEeuCTslxszDstQ" name="addParam">
                  <ownedParameter xmi:id="_rtKfAZFCEeuCTslxszDstQ" name="param" type="_oyrD0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_ozx3EJFCEeuCTslxszDstQ" name="AbstractValueParam" isAbstract="true">
                <ownedComment xmi:id="_sfJVkZFCEeuCTslxszDstQ">
                  <body>Base class for configuration parameters.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sUvcYJFCEeuCTslxszDstQ" name="dictionary" visibility="protected" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_sj_ZUZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sUx4oJFCEeuCTslxszDstQ" name="paramMap" visibility="private" isLeaf="true" type="_oyrD0JFCEeuCTslxszDstQ" isReadOnly="true" association="_skBOgZFCEeuCTslxszDstQ">
                  <qualifier xmi:id="_sUzt0JFCEeuCTslxszDstQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </qualifier>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sUx4oZFCEeuCTslxszDstQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rti5gJFCEeuCTslxszDstQ" client="_ozx3EJFCEeuCTslxszDstQ" supplier="_oyrD0JFCEeuCTslxszDstQ" contract="_oyrD0JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sdAAgJFCEeuCTslxszDstQ" name="AbstractValueParam" specification="_sFccIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sdAAgZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sdAAgpFCEeuCTslxszDstQ" type="_ozx3EJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sdAAg5FCEeuCTslxszDstQ" name="AbstractValueParam" specification="_sFe4YJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sdAAhJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sdAAhZFCEeuCTslxszDstQ" name="params" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sdAAhpFCEeuCTslxszDstQ" type="_ozx3EJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(dictionary);
     for (Param param : params) {
         addParam(param);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sdAnkJFCEeuCTslxszDstQ" name="addParam" specification="_rtl80JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sdAnkZFCEeuCTslxszDstQ" name="param" type="_oyrD0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>paramMap.put(param.getName(), param);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sdBOoJFCEeuCTslxszDstQ" name="create" specification="_oz2IgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sdBOoZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>try {
         Class clazz = Class.forName(getValue());
         Constructor c = clazz.getConstructor(Dictionary.class, Map.class);
         return c.newInstance(dictionary, paramMap);
     } catch (ClassNotFoundException | InvocationTargetException | IllegalAccessException | InstantiationException | NoSuchMethodException e) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_UNABLE_TO_CREATE_INSTANCE&quot;, new Object[]{getValue(), Util.getRootCause(e)}), e);
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oz2IgJFCEeuCTslxszDstQ" name="create" method="_sdBOoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sFk_AJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rtl80JFCEeuCTslxszDstQ" name="addParam" method="_sdAnkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rtmj4JFCEeuCTslxszDstQ" name="param" type="_oyrD0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sFccIJFCEeuCTslxszDstQ" name="AbstractValueParam" visibility="protected" method="_sdAAgJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sFdDMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sFdDMZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sFccIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sFdDMpFCEeuCTslxszDstQ" type="_ozx3EJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sFe4YJFCEeuCTslxszDstQ" name="AbstractValueParam" visibility="protected" method="_sdAAg5FCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sFgGgJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sFgGgZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sFe4YZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sFffcJFCEeuCTslxszDstQ" name="params" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sFgtkJFCEeuCTslxszDstQ" type="_ozx3EJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_o0CVwJFCEeuCTslxszDstQ" name="NameValueParam">
                <ownedComment xmi:id="_sfJ8oJFCEeuCTslxszDstQ">
                  <body>Param with name and value.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rtt4oJFCEeuCTslxszDstQ" general="_ozx3EJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sU2xIJFCEeuCTslxszDstQ" name="name" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sU4mUZFCEeuCTslxszDstQ" name="value" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sdDD0JFCEeuCTslxszDstQ" name="NameValueParam" specification="_sFpQcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sdDD0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sdDD0pFCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sdDD05FCEeuCTslxszDstQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sdDD1JFCEeuCTslxszDstQ" type="_o0CVwJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary);
     this.name = name;
     this.value = value;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sdDq4JFCEeuCTslxszDstQ" name="NameValueParam" specification="_sFrssJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sdDq4ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sdDq4pFCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sdDq45FCEeuCTslxszDstQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sdDq5JFCEeuCTslxszDstQ" name="params" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sdDq5ZFCEeuCTslxszDstQ" type="_o0CVwJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
     this.name = name;
     this.value = value;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sdE5AJFCEeuCTslxszDstQ" name="getName" specification="_o0GnMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sdE5AZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return name;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_o0GnMJFCEeuCTslxszDstQ" name="getName" method="_sdE5AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_o0GnMZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sFpQcJFCEeuCTslxszDstQ" name="NameValueParam" method="_sdDD0JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sFp3gZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sFp3gpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sFpQcZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sFpQcpFCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sFp3gJFCEeuCTslxszDstQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sFp3g5FCEeuCTslxszDstQ" type="_o0CVwJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sFrssJFCEeuCTslxszDstQ" name="NameValueParam" method="_sdDq4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sFsTw5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sFs60JFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sFrssZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sFsTwJFCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sFsTwZFCEeuCTslxszDstQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sFsTwpFCEeuCTslxszDstQ" name="params" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sFs60ZFCEeuCTslxszDstQ" type="_o0CVwJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_o0LfsJFCEeuCTslxszDstQ" name="Owned">
                <ownedComment xmi:id="_sfJ8oZFCEeuCTslxszDstQ">
                  <body>Supports ownership information.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedOperation xmi:id="_o0Mt0JFCEeuCTslxszDstQ" name="getDictionary">
                  <ownedComment xmi:id="_sfJ8opFCEeuCTslxszDstQ">
                    <body>Returns the dictionary this object belongs to.
     *
     * @return the dictionary this object belongs to</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_sFxzUJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sFyaYJFCEeuCTslxszDstQ" name="setDictionary" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_sfJ8o5FCEeuCTslxszDstQ">
                    <body>Sets the dictionary this object belongs to.
     *
     * @param dictionary the dictionary this object belongs to
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_sFzBcJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_rqBEYJFCEeuCTslxszDstQ" name="ParamList">
                <ownedComment xmi:id="_yzH1EJFCEeuCTslxszDstQ">
                  <body>List of parameters.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_x_YrAJFCEeuCTslxszDstQ" general="_rX6nwJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_ytK-EJFCEeuCTslxszDstQ" name="name" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_yJ548JFCEeuCTslxszDstQ" client="_rqBEYJFCEeuCTslxszDstQ" supplier="_oyrD0JFCEeuCTslxszDstQ" contract="_oyrD0JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywZ4QpFCEeuCTslxszDstQ" name="ParamList" specification="_yO8xAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywZ4Q5FCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywZ4RJFCEeuCTslxszDstQ" type="_rqBEYJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.name = name;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywafUJFCEeuCTslxszDstQ" name="ParamList" specification="_yO9_IJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywafUZFCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywafUpFCEeuCTslxszDstQ" name="params" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywafU5FCEeuCTslxszDstQ" type="_rqBEYJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.name = name;
     addAll(params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywafVJFCEeuCTslxszDstQ" name="ParamList" specification="_yPBCcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywafVZFCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywafVpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywafV5FCEeuCTslxszDstQ" type="_rqBEYJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.name = name;
     addAll(params.values());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywbGYJFCEeuCTslxszDstQ" name="getValue" specification="_x_VAoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywbGYZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywbGYpFCEeuCTslxszDstQ" name="addParam" specification="_x_WOwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywbGY5FCEeuCTslxszDstQ" name="param" type="_oyrD0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>add(param);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywbtcJFCEeuCTslxszDstQ" name="getParams" specification="_x_W10JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywbtcZFCEeuCTslxszDstQ" type="_oyrD0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywbtcpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return this;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywbtc5FCEeuCTslxszDstQ" name="create" specification="_x_YD8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywbtdJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>List&lt;Param> params = getParams();
     List&lt;Object> results = new ArrayList&lt;>(params.size());
     for (Param param : params) {
         results.add(param.create());
     }
     return results;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_x_VAoJFCEeuCTslxszDstQ" name="getValue" method="_ywbGYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPEs0JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_x_WOwJFCEeuCTslxszDstQ" name="addParam" method="_ywbGYpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_x_WOwZFCEeuCTslxszDstQ" name="param" type="_oyrD0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_x_W10JFCEeuCTslxszDstQ" name="getParams" method="_ywbtcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_x_Xc4JFCEeuCTslxszDstQ" type="_oyrD0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_x_Xc4ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_x_YD8JFCEeuCTslxszDstQ" name="create" method="_ywbtc5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_x_YD8ZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yO8xAJFCEeuCTslxszDstQ" name="ParamList" method="_ywZ4QpFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yO9YEpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yO9YE5FCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yO9YEJFCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yO9YEZFCEeuCTslxszDstQ" type="_rqBEYJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yO9_IJFCEeuCTslxszDstQ" name="ParamList" method="_ywafUJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yO-mMZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yO-mMpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yO9_IZFCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yO9_IpFCEeuCTslxszDstQ" name="params" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yO-mMJFCEeuCTslxszDstQ" type="_rqBEYJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPBCcJFCEeuCTslxszDstQ" name="ParamList" method="_ywafVJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yPCQkJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yPCQkZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yPBCcZFCEeuCTslxszDstQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPBpgJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPBpgZFCEeuCTslxszDstQ" type="_rqBEYJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sj_ZUZFCEeuCTslxszDstQ" name="" memberEnd="_sj_ZUpFCEeuCTslxszDstQ _sUvcYJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sj_ZUpFCEeuCTslxszDstQ" name="" type="_ozx3EJFCEeuCTslxszDstQ" association="_sj_ZUZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_skBOgZFCEeuCTslxszDstQ" name="" memberEnd="_skBOgpFCEeuCTslxszDstQ _sUx4oJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_skBOgpFCEeuCTslxszDstQ" name="" type="_ozx3EJFCEeuCTslxszDstQ" association="_skBOgZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yOzAAJFCEeuCTslxszDstQ" name="ValueParam">
                <ownedComment xmi:id="_yzHOAJFCEeuCTslxszDstQ">
                  <body>Param with only value.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_yO670ZFCEeuCTslxszDstQ" general="_ozx3EJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_ytJv8JFCEeuCTslxszDstQ" name="value" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywYqIJFCEeuCTslxszDstQ" name="ValueParam" specification="_yO01MJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywYqIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywYqIpFCEeuCTslxszDstQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywYqI5FCEeuCTslxszDstQ" type="_yOzAAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary);
     this.value = value;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywZRMJFCEeuCTslxszDstQ" name="ValueParam" specification="_yO3RcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywZRMZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywZRMpFCEeuCTslxszDstQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywZRM5FCEeuCTslxszDstQ" name="params" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywZRNJFCEeuCTslxszDstQ" type="_yOzAAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
     this.value = value;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywZRNZFCEeuCTslxszDstQ" name="getName" specification="_yO5tsZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywZRNpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywZRN5FCEeuCTslxszDstQ" name="getValue" specification="_yO6UwZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywZROJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return value;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yO01MJFCEeuCTslxszDstQ" name="ValueParam" method="_ywYqIJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yO2DUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yO2DUZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yO1cQJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yO1cQZFCEeuCTslxszDstQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yO2DUpFCEeuCTslxszDstQ" type="_yOzAAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yO3RcJFCEeuCTslxszDstQ" name="ValueParam" method="_ywZRMJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yO34gZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yO34gpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yO3RcZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yO3RcpFCEeuCTslxszDstQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yO34gJFCEeuCTslxszDstQ" name="params" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yO34g5FCEeuCTslxszDstQ" type="_yOzAAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yO5tsZFCEeuCTslxszDstQ" name="getName" method="_ywZRNZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yO6UwJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yO6UwZFCEeuCTslxszDstQ" name="getValue" method="_ywZRN5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yO670JFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_nF-RcJFCEeuCTslxszDstQ" name="cache">
              <packagedElement xmi:type="uml:Class" xmi:id="_od5tsJFCEeuCTslxszDstQ" name="ZeroPool">
                <ownedComment xmi:id="_seYgkJFCEeuCTslxszDstQ">
                  <body>Pool which does nothing. Hopefully nothing harmful too.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <interfaceRealization xmi:id="_rkXIUJFCEeuCTslxszDstQ" client="_od5tsJFCEeuCTslxszDstQ" supplier="_ovB58JFCEeuCTslxszDstQ" contract="_ovB58JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sa4grJFCEeuCTslxszDstQ" name="replace" specification="_r8JWMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sa4grZFCEeuCTslxszDstQ" name="object" type="_r8G58JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sa4grpFCEeuCTslxszDstQ" type="_r8G58JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return object;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r8JWMJFCEeuCTslxszDstQ" name="replace" method="_sa4grJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_r8JWMZFCEeuCTslxszDstQ" name="object" type="_r8G58JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_r8JWMpFCEeuCTslxszDstQ" type="_r8G58JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_ovB58JFCEeuCTslxszDstQ" name="Pool">
                <ownedComment xmi:id="_sfBZwJFCEeuCTslxszDstQ">
                  <body>Pool interface for caching.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedOperation xmi:id="_sDyPQJFCEeuCTslxszDstQ" name="replace">
                  <ownedParameter xmi:id="_sDy2UJFCEeuCTslxszDstQ" name="object" type="_r8G58JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sDy2UZFCEeuCTslxszDstQ" type="_r8G58JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_ovHZgJFCEeuCTslxszDstQ" name="POSCache">
                <ownedComment xmi:id="_sfBZwZFCEeuCTslxszDstQ">
                  <body>A set of Caches split by POS.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedOperation xmi:id="_rs-40JFCEeuCTslxszDstQ" name="getCache">
                  <ownedParameter xmi:id="_rs-40ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rs-405FCEeuCTslxszDstQ" type="_oxf_IJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oxEhUJFCEeuCTslxszDstQ" name="LRUCacheSet">
                <ownedComment xmi:id="_sfEdEJFCEeuCTslxszDstQ">
                  <body>LeastRecentlyUsed cache set.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rtFmgJFCEeuCTslxszDstQ" general="_ox9SIJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scsegJFCEeuCTslxszDstQ" name="LRUCacheSet" specification="_sD_DkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scsegZFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scsegpFCEeuCTslxszDstQ" type="_oxEhUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(keys);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sctFkJFCEeuCTslxszDstQ" name="LRUCacheSet" specification="_sD_qoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sctFkZFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sctFkpFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sctFk5FCEeuCTslxszDstQ" type="_oxEhUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(keys, size);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sctFlJFCEeuCTslxszDstQ" name="LRUCacheSet" specification="_sEARsZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sctFlZFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sctFlpFCEeuCTslxszDstQ" name="sizes" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sctFl5FCEeuCTslxszDstQ" type="_oxEhUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(keys, sizes);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sctsoJFCEeuCTslxszDstQ" name="createCache" specification="_oxKA4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sctsoZFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sctsopFCEeuCTslxszDstQ" type="_ovHZgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return new LRUPOSCache&lt;>(size);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oxKA4JFCEeuCTslxszDstQ" name="createCache" visibility="protected" method="_sctsoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oxKn8JFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rtE_cJFCEeuCTslxszDstQ" type="_ovHZgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sD_DkJFCEeuCTslxszDstQ" name="LRUCacheSet" method="_scsegJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sD_DkpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sD_Dk5FCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sD_DkZFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sD_DlJFCEeuCTslxszDstQ" type="_oxEhUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sD_qoJFCEeuCTslxszDstQ" name="LRUCacheSet" method="_sctFkJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sD_qo5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sD_qpJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sD_qoZFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sD_qopFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD_qpZFCEeuCTslxszDstQ" type="_oxEhUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sEARsZFCEeuCTslxszDstQ" name="LRUCacheSet" method="_sctFlJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sEARtJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sEARtZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sEARspFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEARs5FCEeuCTslxszDstQ" name="sizes" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEARtpFCEeuCTslxszDstQ" type="_oxEhUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_oxf_IJFCEeuCTslxszDstQ" name="Cache">
                <ownedComment xmi:id="_sfFEIZFCEeuCTslxszDstQ">
                  <body>A &lt;code>Cache&lt;/code> is a collection of values that are indexed by keys and that are stored for an
unspecified amount of time (which the implementor of &lt;code>Cache&lt;/code> may further specify).
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_sECG4JFCEeuCTslxszDstQ" general="_rWnAMZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_oxjpgJFCEeuCTslxszDstQ" name="capacity">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedAttribute>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_ox9SIJFCEeuCTslxszDstQ" name="CacheSet" isAbstract="true">
                <ownedComment xmi:id="_sfGSQJFCEeuCTslxszDstQ">
                  <body>A set of &lt;code>Caches&lt;/code>, indexed by &lt;code>CacheKey&lt;/code>.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sT6V8JFCEeuCTslxszDstQ" name="DEFAULT_CACHE_CAPACITY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sT69AJFCEeuCTslxszDstQ" value="1000"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sT69AZFCEeuCTslxszDstQ" name="caches" visibility="private" isLeaf="true" type="_ovHZgJFCEeuCTslxszDstQ" isReadOnly="true" association="_sjvhsJFCEeuCTslxszDstQ">
                  <qualifier xmi:id="_sUBDoJFCEeuCTslxszDstQ" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sT-AUZFCEeuCTslxszDstQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scx-EJFCEeuCTslxszDstQ" name="CacheSet" specification="_sEXeEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scx-EZFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scx-EpFCEeuCTslxszDstQ" type="_ox9SIJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this(keys, DEFAULT_CACHE_CAPACITY);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scx-E5FCEeuCTslxszDstQ" name="CacheSet" specification="_sEbIcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scx-FJFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scx-FZFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scx-FpFCEeuCTslxszDstQ" type="_ox9SIJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>for (K key : keys) {
         addCache(key, size);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scylIJFCEeuCTslxszDstQ" name="CacheSet" specification="_sEeLwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scylIZFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scylIpFCEeuCTslxszDstQ" name="sizes" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scylI5FCEeuCTslxszDstQ" type="_ox9SIJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>for (int i = 0; i &lt; keys.size(); i++) {
         addCache(keys.get(i), sizes.get(i));
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scylJJFCEeuCTslxszDstQ" name="addCache" specification="_sEmuoZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scylJZFCEeuCTslxszDstQ" name="key" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>addCache(key, DEFAULT_CACHE_CAPACITY);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sczMMJFCEeuCTslxszDstQ" name="addCache" specification="_sEoj0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sczMMZFCEeuCTslxszDstQ" name="key" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczMMpFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>caches.put(key, createCache(size));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sczMM5FCEeuCTslxszDstQ" name="cacheObject" specification="_sEvRgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sczMNJFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczMNZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczMNpFCEeuCTslxszDstQ" name="key" type="_sEsOMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczMN5FCEeuCTslxszDstQ" name="value" type="_sEpx8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczMOJFCEeuCTslxszDstQ" type="_sEpx8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>getCache(cacheKey).getCache(pos).put(key, value);
     return value;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sczzQJFCEeuCTslxszDstQ" name="clearObject" specification="_sEy74JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sczzQZFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczzQpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczzQ5FCEeuCTslxszDstQ" name="key" type="_sEsOMJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>getCache(cacheKey).getCache(pos).remove(key);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sczzRJFCEeuCTslxszDstQ" name="getCachedObject" specification="_sE1_MJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sczzRZFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczzRpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczzR5FCEeuCTslxszDstQ" name="key" type="_sEsOMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sczzSJFCEeuCTslxszDstQ" type="_sEpx8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return getCache(cacheKey).getCache(pos).get(key);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc0aUJFCEeuCTslxszDstQ" name="clearCache" specification="_sE5CgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sc0aUZFCEeuCTslxszDstQ" name="key" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>for (POS pos : POS.getAllPOS()) {
         getCache(key).getCache(pos).clear();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc0aUpFCEeuCTslxszDstQ" name="getCacheSize" specification="_sE63sJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sc0aU5FCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sc0aVJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = 0;
     for (POS pos : POS.getAllPOS()) {
         result = result + getCache(cacheKey).getCache(pos).size();
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc1BYJFCEeuCTslxszDstQ" name="getCacheCapacity" specification="_sE8F0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sc1BYZFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sc1BYpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>long result = 0;
     for (POS pos : POS.getAllPOS()) {
         result = result + getCache(cacheKey).getCache(pos).getCapacity();
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc1ocJFCEeuCTslxszDstQ" name="setCacheCapacity" specification="_sE97AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sc1ocZFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sc1ocpFCEeuCTslxszDstQ" name="capacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>for (POS pos : POS.getAllPOS()) {
         getCache(cacheKey).getCache(pos).setCapacity(capacity);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc1oc5FCEeuCTslxszDstQ" name="getSize" specification="_oyMisJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sc1odJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return caches.size();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc2PgJFCEeuCTslxszDstQ" name="getCache" specification="_sE_wMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sc2PgZFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sc2PgpFCEeuCTslxszDstQ" type="_ovHZgJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return caches.get(cacheKey);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oyEm4JFCEeuCTslxszDstQ" name="createCache" visibility="protected" isAbstract="true">
                  <ownedParameter xmi:id="_oyEm4ZFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rtHbsJFCEeuCTslxszDstQ" type="_ovHZgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oyMisJFCEeuCTslxszDstQ" name="getSize" method="_sc1oc5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_oyMisZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sEXeEJFCEeuCTslxszDstQ" name="CacheSet" method="_scx-EJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sEYFIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sEYFIZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sEXeEZFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEYFIpFCEeuCTslxszDstQ" type="_ox9SIJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sEbIcJFCEeuCTslxszDstQ" name="CacheSet" method="_scx-E5FCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sEbIc5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sEbIdJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sEbIcZFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEbIcpFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sEbIdZFCEeuCTslxszDstQ" type="_ox9SIJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sEeLwJFCEeuCTslxszDstQ" name="CacheSet" method="_scylIJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sEey0pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sEey05FCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sEey0JFCEeuCTslxszDstQ" name="keys" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEey0ZFCEeuCTslxszDstQ" name="sizes" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEfZ4JFCEeuCTslxszDstQ" type="_ox9SIJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sEmuoZFCEeuCTslxszDstQ" name="addCache" method="_scylJJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sEmuopFCEeuCTslxszDstQ" name="key" type="_sEk5cJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sEoj0JFCEeuCTslxszDstQ" name="addCache" method="_sczMMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sEoj0ZFCEeuCTslxszDstQ" name="key" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEoj0pFCEeuCTslxszDstQ" name="size">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sEvRgJFCEeuCTslxszDstQ" name="cacheObject" method="_sczMM5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sEv4kJFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEv4kZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEv4kpFCEeuCTslxszDstQ" name="key" type="_sEsOMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEwfoJFCEeuCTslxszDstQ" name="value" type="_sEpx8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEwfoZFCEeuCTslxszDstQ" type="_sEpx8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sEy74JFCEeuCTslxszDstQ" name="clearObject" method="_sczzQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sEy74ZFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEy74pFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sEzi8JFCEeuCTslxszDstQ" name="key" type="_sEsOMJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sE1_MJFCEeuCTslxszDstQ" name="getCachedObject" method="_sczzRJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sE1_MZFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sE2mQJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sE2mQZFCEeuCTslxszDstQ" name="key" type="_sEsOMJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sE3NUJFCEeuCTslxszDstQ" type="_sEpx8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sE5CgJFCEeuCTslxszDstQ" name="clearCache" method="_sc0aUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sE5pkJFCEeuCTslxszDstQ" name="key" type="_sEk5cJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sE63sJFCEeuCTslxszDstQ" name="getCacheSize" method="_sc0aUpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sE7ewJFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sE7ewZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sE8F0JFCEeuCTslxszDstQ" name="getCacheCapacity" method="_sc1BYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sE8s4JFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sE8s4ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sE97AJFCEeuCTslxszDstQ" name="setCacheCapacity" method="_sc1ocJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sE97AZFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sE-iEJFCEeuCTslxszDstQ" name="capacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sE_wMJFCEeuCTslxszDstQ" name="getCache" method="_sc2PgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sFAXQJFCEeuCTslxszDstQ" name="cacheKey" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sFCMcJFCEeuCTslxszDstQ" type="_ovHZgJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oyfdoJFCEeuCTslxszDstQ" name="HashPool">
                <ownedComment xmi:id="_sfG5UJFCEeuCTslxszDstQ">
                  <body>Pools objects through a HashSet.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sUI_cJFCEeuCTslxszDstQ" name="cache" visibility="private" isLeaf="true" type="_rW6iMJFCEeuCTslxszDstQ" isReadOnly="true" association="_sjylAJFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sUQUMJFCEeuCTslxszDstQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rtJQ4JFCEeuCTslxszDstQ" client="_oyfdoJFCEeuCTslxszDstQ" supplier="_ovB58JFCEeuCTslxszDstQ" contract="_ovB58JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc3doJFCEeuCTslxszDstQ" name="replace" specification="_sFGd4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sc3doZFCEeuCTslxszDstQ" name="object" type="_r8G58JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sc3dopFCEeuCTslxszDstQ" type="_r8G58JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>T result = cache.get(object);
     if (null == result) {
         result = object;
         cache.put(object, object);
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_sFGd4JFCEeuCTslxszDstQ" name="replace" method="_sc3doJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sFHE8JFCEeuCTslxszDstQ" name="object" type="_r8G58JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sFHsAJFCEeuCTslxszDstQ" type="_r8G58JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_ozKMAJFCEeuCTslxszDstQ" name="LRUPOSCache">
                <ownedComment xmi:id="_sfIugZFCEeuCTslxszDstQ">
                  <body>A set of Caches split by POS.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sUgy4JFCEeuCTslxszDstQ" name="caches" visibility="private" isLeaf="true" type="_oxf_IJFCEeuCTslxszDstQ" isReadOnly="true" association="_sj4roJFCEeuCTslxszDstQ">
                  <qualifier xmi:id="_sUousJFCEeuCTslxszDstQ" type="_sUmScJFCEeuCTslxszDstQ"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rtLtIJFCEeuCTslxszDstQ" client="_ozKMAJFCEeuCTslxszDstQ" supplier="_ovHZgJFCEeuCTslxszDstQ" contract="_ovHZgJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc89MJFCEeuCTslxszDstQ" name="LRUPOSCache" specification="_ozPrkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sc89MZFCEeuCTslxszDstQ" name="capacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sc89MpFCEeuCTslxszDstQ" type="_ozKMAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>caches = new EnumMap&lt;>(POS.class);
     for (POS pos : POS.getAllPOS()) {
         caches.put(pos, new LRUCache&lt;>(capacity));
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc9kQJFCEeuCTslxszDstQ" name="getCache" specification="_rtMUMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sc9kQZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sc9kQpFCEeuCTslxszDstQ" type="_oxf_IJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return caches.get(pos);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ozPrkJFCEeuCTslxszDstQ" name="LRUPOSCache" method="_sc89MJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_ozQSoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ozQSoZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ozPrkZFCEeuCTslxszDstQ" name="capacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ozQSopFCEeuCTslxszDstQ" type="_ozKMAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rtMUMJFCEeuCTslxszDstQ" name="getCache" method="_sc9kQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rtMUMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rtMUM5FCEeuCTslxszDstQ" type="_oxf_IJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_r8G58JFCEeuCTslxszDstQ" name="T"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_sEk5cJFCEeuCTslxszDstQ" name="K"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_sEpx8JFCEeuCTslxszDstQ" name="B"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_sEsOMJFCEeuCTslxszDstQ" name="A"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_sUmScJFCEeuCTslxszDstQ" name="POS"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjvhsJFCEeuCTslxszDstQ" name="" memberEnd="_sjvhsZFCEeuCTslxszDstQ _sT69AZFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjvhsZFCEeuCTslxszDstQ" name="" type="_ox9SIJFCEeuCTslxszDstQ" association="_sjvhsJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjylAJFCEeuCTslxszDstQ" name="" memberEnd="_sjylAZFCEeuCTslxszDstQ _sUI_cJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjylAZFCEeuCTslxszDstQ" name="" type="_oyfdoJFCEeuCTslxszDstQ" association="_sjylAJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sj4roJFCEeuCTslxszDstQ" name="" memberEnd="_sj4roZFCEeuCTslxszDstQ _sUgy4JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sj4roZFCEeuCTslxszDstQ" name="" type="_ozKMAJFCEeuCTslxszDstQ" association="_sj4roJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yPF68JFCEeuCTslxszDstQ" name="LRUCache">
                <ownedComment xmi:id="_yzH1EZFCEeuCTslxszDstQ">
                  <body>A fixed-capacity &lt;code>Cache&lt;/code> that stores the most recently used elements. Once the cache reaches
capacity, the least recently used elements will be removed.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_ytOocJFCEeuCTslxszDstQ" name="m" visibility="private" isLeaf="true" type="_yogggJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0KW4JFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_yPIXMJFCEeuCTslxszDstQ" client="_yPF68JFCEeuCTslxszDstQ" supplier="_oxf_IJFCEeuCTslxszDstQ" contract="_oxf_IJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywcUgJFCEeuCTslxszDstQ" name="LRUCache" specification="_yPKMYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywcUgZFCEeuCTslxszDstQ" name="capacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ywcUgpFCEeuCTslxszDstQ" type="_yPF68JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>m = new ConcurrentLinkedHashMap.Builder&lt;K, V>().maximumWeightedCapacity(capacity).build();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywcUg5FCEeuCTslxszDstQ" name="setCapacity" specification="_yPMBkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywcUhJFCEeuCTslxszDstQ" name="capacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>m.setCapacity(capacity);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywcUhZFCEeuCTslxszDstQ" name="getCapacity" specification="_yPMooJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywcUhpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return m.capacity();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywc7kJFCEeuCTslxszDstQ" name="size" specification="_yPN2wJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywc7kZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return m.size();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywc7kpFCEeuCTslxszDstQ" name="isEmpty" specification="_yPPr8ZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywc7k5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return m.isEmpty();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywc7lJFCEeuCTslxszDstQ" name="containsKey" specification="_yPSIMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywc7lZFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywc7lpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return m.containsKey(key);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywdioJFCEeuCTslxszDstQ" name="containsValue" specification="_yPUkcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywdioZFCEeuCTslxszDstQ" name="value" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywdiopFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return m.containsValue(value);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywdio5FCEeuCTslxszDstQ" name="get" specification="_yPWZoZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywdipJFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ywdipZFCEeuCTslxszDstQ" type="_yqe2cJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return m.get(key);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yweJsJFCEeuCTslxszDstQ" name="put" specification="_yqig0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yweJsZFCEeuCTslxszDstQ" name="key" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yweJspFCEeuCTslxszDstQ" name="value" type="_yqe2cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yweJs5FCEeuCTslxszDstQ" type="_yqe2cJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return m.put(key, value);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yweJtJFCEeuCTslxszDstQ" name="remove" specification="_yPY14JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yweJtZFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yweJtpFCEeuCTslxszDstQ" type="_yqe2cJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return m.remove(key);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywewwJFCEeuCTslxszDstQ" name="putAll" specification="_yParEZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywewwZFCEeuCTslxszDstQ" name="m" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>this.m.putAll(m);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywewwpFCEeuCTslxszDstQ" name="clear" specification="_yPcgQ5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>m.clear();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yweww5FCEeuCTslxszDstQ" name="keySet" specification="_yPduYpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywewxJFCEeuCTslxszDstQ" type="_sEk5cJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywewxZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return m.keySet();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywfX0JFCEeuCTslxszDstQ" name="values" specification="_yPfjkZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywfX0ZFCEeuCTslxszDstQ" type="_yqe2cJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywfX0pFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return m.values();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ywfX05FCEeuCTslxszDstQ" name="entrySet" specification="_yPhYwpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ywfX1JFCEeuCTslxszDstQ" type="_yqoAYJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywfX1ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return m.entrySet();
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yPKMYJFCEeuCTslxszDstQ" name="LRUCache" method="_ywcUgJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yPKzcJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yPKzcZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_yzIcIJFCEeuCTslxszDstQ">
                    <body>@param capacity the maximum number of elements that can be contained in the cache.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yPKMYZFCEeuCTslxszDstQ" name="capacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yPKzcpFCEeuCTslxszDstQ" type="_yPF68JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPMBkJFCEeuCTslxszDstQ" name="setCapacity" method="_ywcUg5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPMBkZFCEeuCTslxszDstQ" name="capacity">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPMooJFCEeuCTslxszDstQ" name="getCapacity" method="_ywcUhZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPNPsJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPN2wJFCEeuCTslxszDstQ" name="size" method="_ywc7kJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPN2wZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPPr8ZFCEeuCTslxszDstQ" name="isEmpty" method="_ywc7kpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPQTAJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPSIMJFCEeuCTslxszDstQ" name="containsKey" method="_ywc7lJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPSIMZFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPSvQJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPUkcJFCEeuCTslxszDstQ" name="containsValue" method="_ywdioJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPUkcZFCEeuCTslxszDstQ" name="value" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yPVLgJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPWZoZFCEeuCTslxszDstQ" name="get" method="_ywdio5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPWZopFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yqgEkZFCEeuCTslxszDstQ" type="_yqe2cJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPY14JFCEeuCTslxszDstQ" name="remove" method="_yweJtJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPY14ZFCEeuCTslxszDstQ" name="key" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yqmLMJFCEeuCTslxszDstQ" type="_yqe2cJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yParEZFCEeuCTslxszDstQ" name="putAll" method="_ywewwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yParEpFCEeuCTslxszDstQ" name="m" type="_rWnAMZFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yPcgQ5FCEeuCTslxszDstQ" name="clear" method="_ywewwpFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yPduYpFCEeuCTslxszDstQ" name="keySet" method="_yweww5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPeVcJFCEeuCTslxszDstQ" type="_sEk5cJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yPeVcZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPfjkZFCEeuCTslxszDstQ" name="values" method="_ywfX0JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yPgKoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yPgKoZFCEeuCTslxszDstQ" key="generic_container"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yPfjkpFCEeuCTslxszDstQ" type="_yqe2cJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yPfjk5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yPhYwpFCEeuCTslxszDstQ" name="entrySet" method="_ywfX05FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yPh_0JFCEeuCTslxszDstQ" type="_yqoAYJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yPh_0ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yqig0JFCEeuCTslxszDstQ" name="put" method="_yweJsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yqig0ZFCEeuCTslxszDstQ" name="key" type="_sEk5cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yqjH4JFCEeuCTslxszDstQ" name="value" type="_yqe2cJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yqju8JFCEeuCTslxszDstQ" type="_yqe2cJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yqe2cJFCEeuCTslxszDstQ" name="V"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_yqoAYJFCEeuCTslxszDstQ" name="Entry"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0KW4JFCEeuCTslxszDstQ" name="" memberEnd="_y0KW4ZFCEeuCTslxszDstQ _ytOocJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0KW4ZFCEeuCTslxszDstQ" name="" type="_yPF68JFCEeuCTslxszDstQ" association="_y0KW4JFCEeuCTslxszDstQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ovjeYJFCEeuCTslxszDstQ" name="ByteArrayCharSequence">
              <ownedComment xmi:id="_sfCA0ZFCEeuCTslxszDstQ">
                <body>CharSequence backed by byte array.
Does not convert encoding. Does not check bounds.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sTVHIJFCEeuCTslxszDstQ" name="bytes" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sTVHIZFCEeuCTslxszDstQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sTYxgJFCEeuCTslxszDstQ" name="start" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sTbNwJFCEeuCTslxszDstQ" name="end" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sTdC8JFCEeuCTslxszDstQ" name="position" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rtBVEZFCEeuCTslxszDstQ" client="_ovjeYJFCEeuCTslxszDstQ" supplier="_oxZRcJFCEeuCTslxszDstQ" contract="_oxZRcJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scdN8JFCEeuCTslxszDstQ" name="ByteArrayCharSequence" specification="_ovnIwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scdN8ZFCEeuCTslxszDstQ" name="bytes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_scdN8pFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scdN85FCEeuCTslxszDstQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scdN9JFCEeuCTslxszDstQ" name="end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scdN9ZFCEeuCTslxszDstQ" type="_ovjeYJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.bytes = bytes;
     this.start = start;
     this.end = end;
     this.position = -1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scd1AJFCEeuCTslxszDstQ" name="ByteArrayCharSequence" specification="_ovraMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scd1AZFCEeuCTslxszDstQ" name="bytes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_scd1ApFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scd1A5FCEeuCTslxszDstQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scd1BJFCEeuCTslxszDstQ" name="end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scd1BZFCEeuCTslxszDstQ" name="position">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scd1BpFCEeuCTslxszDstQ" type="_ovjeYJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.bytes = bytes;
     this.start = start;
     this.end = end;
     this.position = position;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scecEJFCEeuCTslxszDstQ" name="getLastBytePosition" specification="_ovvEkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scecEZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <language>java</language>
                <body>return position;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scecEpFCEeuCTslxszDstQ" name="length" specification="_ovzWAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scecE5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return end - start;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scfDIJFCEeuCTslxszDstQ" name="charAt" specification="_ov2ZUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scfDIZFCEeuCTslxszDstQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scfDIpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>return (char) bytes[start + index];
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scfDI5FCEeuCTslxszDstQ" name="subSequence" specification="_ov5coJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scfDJJFCEeuCTslxszDstQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scfDJZFCEeuCTslxszDstQ" name="end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scfDJpFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new ByteArrayCharSequence(bytes, this.start + start, this.start + end);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scfqMJFCEeuCTslxszDstQ" name="toString" specification="_ov8f8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scfqMZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String(bytes, start, end - start, StandardCharsets.US_ASCII);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scgRQJFCEeuCTslxszDstQ" name="indexOf" specification="_ov_jQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scgRQZFCEeuCTslxszDstQ" name="str">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scgRQpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return indexOf(bytes, start, end - start, str, 0, str.length(), 0);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scgRQ5FCEeuCTslxszDstQ" name="compareTo" specification="_owCmkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scgRRJFCEeuCTslxszDstQ" name="anotherString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scgRRZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int len1 = length();
     int len2 = anotherString.length();
     int lim = Math.min(len1, len2);

     int k = 0;
     while (k &lt; lim) {
         char c1 = (char) bytes[start + k];
         char c2 = anotherString.charAt(k);
         if (c1 != c2) {
             return c1 - c2;
         }
         k++;
     }
     return len1 - len2;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scg4UJFCEeuCTslxszDstQ" name="indexOf" specification="_owG4AJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scg4UZFCEeuCTslxszDstQ" name="source">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_scg4UpFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scg4U5FCEeuCTslxszDstQ" name="sourceOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scg4VJFCEeuCTslxszDstQ" name="sourceCount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scg4VZFCEeuCTslxszDstQ" name="target">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scg4VpFCEeuCTslxszDstQ" name="targetOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scg4V5FCEeuCTslxszDstQ" name="targetCount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scg4WJFCEeuCTslxszDstQ" name="fromIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scg4WZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (fromIndex >= sourceCount) {
         return (targetCount == 0 ? sourceCount : -1);
     }
     if (fromIndex &lt; 0) {
         fromIndex = 0;
     }
     if (targetCount == 0) {
         return fromIndex;
     }

     char first = target.charAt(targetOffset);
     int max = sourceOffset + (sourceCount - targetCount);

     for (int i = sourceOffset + fromIndex; i &lt;= max; i++) {
         /* Look for first character. */
         if (source[i] != first) {
             while (++i &lt;= max &amp;&amp; source[i] != first);
         }

         /* Found first character, now look at the rest of v2 */
         if (i &lt;= max) {
             int j = i + 1;
             int end = j + targetCount - 1;
             for (int k = targetOffset + 1; j &lt; end &amp;&amp; source[j] == target.charAt(k); j++, k++);

             if (j == end) {
                 /* Found whole string. */
                 return i - sourceOffset;
             }
         }
     }
     return -1;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ovnIwJFCEeuCTslxszDstQ" name="ByteArrayCharSequence" method="_scdN8JFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ovo98JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ovo98ZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sfCn4JFCEeuCTslxszDstQ">
                  <body>Creates a char sequence backed by &lt;var>bytes&lt;/var>,
     * starting from &lt;var>start&lt;/var> (inclusive) and ending at &lt;var>end&lt;/var> (exclusive).
     *
     * @param bytes backing byte array
     * @param start start index (inclusive)
     * @param end   end index (exclusive)</body>
                </ownedComment>
                <ownedParameter xmi:id="_ovnv0JFCEeuCTslxszDstQ" name="bytes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovqMEJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovoW4JFCEeuCTslxszDstQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovoW4ZFCEeuCTslxszDstQ" name="end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovo98pFCEeuCTslxszDstQ" type="_ovjeYJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ovraMJFCEeuCTslxszDstQ" name="ByteArrayCharSequence" method="_scd1AJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_ovtPYZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ovt2cJFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sfCn4ZFCEeuCTslxszDstQ">
                  <body>Creates a char sequence backed by &lt;var>bytes&lt;/var>,
     * starting from &lt;var>start&lt;/var> (inclusive) and ending at &lt;var>end&lt;/var> (exclusive).
     *
     * @param bytes    backing byte array
     * @param start    start index (inclusive)
     * @param end      end index (exclusive)
     * @param position last byte position (exclusive)</body>
                </ownedComment>
                <ownedParameter xmi:id="_ovsBQJFCEeuCTslxszDstQ" name="bytes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovudgJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovsoUJFCEeuCTslxszDstQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovsoUZFCEeuCTslxszDstQ" name="end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovtPYJFCEeuCTslxszDstQ" name="position">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovt2cZFCEeuCTslxszDstQ" type="_ovjeYJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ovvEkJFCEeuCTslxszDstQ" name="getLastBytePosition" method="_scecEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ovvroJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ovzWAJFCEeuCTslxszDstQ" name="length" method="_scecEpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ovz9EJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ov2ZUJFCEeuCTslxszDstQ" name="charAt" method="_scfDIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ov2ZUZFCEeuCTslxszDstQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ov3AYJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ov5coJFCEeuCTslxszDstQ" name="subSequence" method="_scfDI5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ov5coZFCEeuCTslxszDstQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ov6DsJFCEeuCTslxszDstQ" name="end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD7ZMJFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ov8f8JFCEeuCTslxszDstQ" name="toString" method="_scfqMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ov9HAJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ov_jQJFCEeuCTslxszDstQ" name="indexOf" method="_scgRQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ov_jQZFCEeuCTslxszDstQ" name="str">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owAKUJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_owCmkJFCEeuCTslxszDstQ" name="compareTo" method="_scgRQ5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_owCmkZFCEeuCTslxszDstQ" name="anotherString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owDNoJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_owG4AJFCEeuCTslxszDstQ" name="indexOf" visibility="private" isStatic="true" method="_scg4UJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfDO8JFCEeuCTslxszDstQ">
                  <body>The source is the character array being searched,
     * and the target is the string being searched for.
     *
     * @param   source       the characters being searched.
     * @param   sourceOffset offset of the source string.
     * @param   sourceCount  count of the source string.
     * @param   target       the characters being searched for.
     * @param   targetOffset offset of the target string.
     * @param   targetCount  count of the target string.
     * @param   fromIndex    the index to begin searching from.</body>
                </ownedComment>
                <ownedParameter xmi:id="_owG4AZFCEeuCTslxszDstQ" name="source">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_owJ7UJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owHfEJFCEeuCTslxszDstQ" name="sourceOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owHfEZFCEeuCTslxszDstQ" name="sourceCount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owHfEpFCEeuCTslxszDstQ" name="target">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owIGIJFCEeuCTslxszDstQ" name="targetOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owIGIZFCEeuCTslxszDstQ" name="targetCount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owIGIpFCEeuCTslxszDstQ" name="fromIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owItMJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_owQB8JFCEeuCTslxszDstQ" name="CharBufferCharSequence">
              <ownedComment xmi:id="_sfDO8ZFCEeuCTslxszDstQ">
                <body>CharSequence backed by CharBuffer.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sTkXsJFCEeuCTslxszDstQ" name="cb" visibility="private" isLeaf="true" type="_rtB8IJFCEeuCTslxszDstQ" isReadOnly="true" association="_sjoM8JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sTmM4JFCEeuCTslxszDstQ" name="position" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rtCjMJFCEeuCTslxszDstQ" client="_owQB8JFCEeuCTslxszDstQ" supplier="_oxZRcJFCEeuCTslxszDstQ" contract="_oxZRcJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sciGcJFCEeuCTslxszDstQ" name="CharBufferCharSequence" specification="_sD8AQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sciGcZFCEeuCTslxszDstQ" name="cb" type="_rtB8IJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sciGcpFCEeuCTslxszDstQ" type="_owQB8JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.cb = cb;
     this.position = -1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sciGc5FCEeuCTslxszDstQ" name="CharBufferCharSequence" specification="_sD8ARZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sciGdJFCEeuCTslxszDstQ" name="cb" type="_rtB8IJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sciGdZFCEeuCTslxszDstQ" name="position">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sciGdpFCEeuCTslxszDstQ" type="_owQB8JFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.cb = cb;
     this.position = position;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scitgJFCEeuCTslxszDstQ" name="length" specification="_owTFQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scitgZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return cb.length();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scjUkJFCEeuCTslxszDstQ" name="charAt" specification="_owVhgJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scjUkZFCEeuCTslxszDstQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scjUkpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>return cb.charAt(index);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scjUk5FCEeuCTslxszDstQ" name="subSequence" specification="_owZL4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scjUlJFCEeuCTslxszDstQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scjUlZFCEeuCTslxszDstQ" name="end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scjUlpFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new CharBufferCharSequence(cb.subSequence(start, end), position);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scj7oJFCEeuCTslxszDstQ" name="getLastBytePosition" specification="_owc2QZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scj7oZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <language>java</language>
                <body>return position;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sckisJFCEeuCTslxszDstQ" name="toString" specification="_owf5kJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sckisZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return cb.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sclJwJFCEeuCTslxszDstQ" name="indexOf" specification="_owi84JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sclJwZFCEeuCTslxszDstQ" name="str">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sclJwpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return indexOf(cb, 0, cb.length(), str, 0, str.length(), 0);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sclw0JFCEeuCTslxszDstQ" name="compareTo" specification="_owmAMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sclw0ZFCEeuCTslxszDstQ" name="anotherString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sclw0pFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int len1 = cb.length();
     int len2 = anotherString.length();
     int lim = Math.min(len1, len2);

     int k = 0;
     while (k &lt; lim) {
         char c1 = cb.charAt(k);
         char c2 = anotherString.charAt(k);
         if (c1 != c2) {
             return c1 - c2;
         }
         k++;
     }
     return len1 - len2;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scmX4JFCEeuCTslxszDstQ" name="indexOf" specification="_sD8nUZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scmX4ZFCEeuCTslxszDstQ" name="source" type="_rtB8IJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_scmX4pFCEeuCTslxszDstQ" name="sourceOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scmX45FCEeuCTslxszDstQ" name="sourceCount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scmX5JFCEeuCTslxszDstQ" name="target">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scmX5ZFCEeuCTslxszDstQ" name="targetOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scmX5pFCEeuCTslxszDstQ" name="targetCount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scm-8JFCEeuCTslxszDstQ" name="fromIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scm-8ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (fromIndex >= sourceCount) {
         return (targetCount == 0 ? sourceCount : -1);
     }
     if (fromIndex &lt; 0) {
         fromIndex = 0;
     }
     if (targetCount == 0) {
         return fromIndex;
     }

     char first = target.charAt(targetOffset);
     int max = sourceOffset + (sourceCount - targetCount);

     for (int i = sourceOffset + fromIndex; i &lt;= max; i++) {
         /* Look for first character. */
         if (source.charAt(i) != first) {
             while (++i &lt;= max &amp;&amp; source.charAt(i) != first);
         }

         /* Found first character, now look at the rest of v2 */
         if (i &lt;= max) {
             int j = i + 1;
             int end = j + targetCount - 1;
             for (int k = targetOffset + 1; j &lt; end &amp;&amp; source.charAt(j) == target.charAt(k); j++, k++);

             if (j == end) {
                 /* Found whole string. */
                 return i - sourceOffset;
             }
         }
     }
     return -1;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_owTFQJFCEeuCTslxszDstQ" name="length" method="_scitgJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_owTsUJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_owVhgJFCEeuCTslxszDstQ" name="charAt" method="_scjUkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_owWIkJFCEeuCTslxszDstQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owWvoJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_owZL4JFCEeuCTslxszDstQ" name="subSequence" method="_scjUk5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_owZy8JFCEeuCTslxszDstQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owZy8ZFCEeuCTslxszDstQ" name="end">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD8nUJFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_owc2QZFCEeuCTslxszDstQ" name="getLastBytePosition" method="_scj7oJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_owddUJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_owf5kJFCEeuCTslxszDstQ" name="toString" method="_sckisJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_owggoJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_owi84JFCEeuCTslxszDstQ" name="indexOf" method="_sclJwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_owi84ZFCEeuCTslxszDstQ" name="str">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owjj8JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_owmAMJFCEeuCTslxszDstQ" name="compareTo" method="_sclw0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_owmAMZFCEeuCTslxszDstQ" name="anotherString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_owmnQJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sD8AQJFCEeuCTslxszDstQ" name="CharBufferCharSequence" method="_sciGcJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_sD8AQpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sD8AQ5FCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sD8AQZFCEeuCTslxszDstQ" name="cb" type="_rtB8IJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sD8ARJFCEeuCTslxszDstQ" type="_owQB8JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sD8ARZFCEeuCTslxszDstQ" name="CharBufferCharSequence" method="_sciGc5FCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_sD8ASJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sD8ASZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sD8ARpFCEeuCTslxszDstQ" name="cb" type="_rtB8IJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sD8AR5FCEeuCTslxszDstQ" name="position">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD8ASpFCEeuCTslxszDstQ" type="_owQB8JFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sD8nUZFCEeuCTslxszDstQ" name="indexOf" visibility="private" isStatic="true" method="_scmX4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfD2AJFCEeuCTslxszDstQ">
                  <body>The source is the character array being searched,
     * and the target is the string being searched for.
     *
     * @param   source       the characters being searched.
     * @param   sourceOffset offset of the source string.
     * @param   sourceCount  count of the source string.
     * @param   target       the characters being searched for.
     * @param   targetOffset offset of the target string.
     * @param   targetCount  count of the target string.
     * @param   fromIndex    the index to begin searching from.</body>
                </ownedComment>
                <ownedParameter xmi:id="_sD8nUpFCEeuCTslxszDstQ" name="source" type="_rtB8IJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sD8nU5FCEeuCTslxszDstQ" name="sourceOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD8nVJFCEeuCTslxszDstQ" name="sourceCount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD8nVZFCEeuCTslxszDstQ" name="target">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD8nVpFCEeuCTslxszDstQ" name="targetOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD8nV5FCEeuCTslxszDstQ" name="targetCount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD8nWJFCEeuCTslxszDstQ" name="fromIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD8nWZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oww_UJFCEeuCTslxszDstQ" name="CharSequenceParser">
              <ownedComment xmi:id="_sfD2AZFCEeuCTslxszDstQ">
                <body>Parses CharSequence.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_rtDxUJFCEeuCTslxszDstQ" general="_oyyYkJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scnmAJFCEeuCTslxszDstQ" name="CharSequenceParser" specification="_sD9OYJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scnmAZFCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_scnmApFCEeuCTslxszDstQ" type="_oww_UJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>super(s);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scoNEJFCEeuCTslxszDstQ" name="nextToken" specification="_owzbkJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scoNEZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return super.nextToken().toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sco0IJFCEeuCTslxszDstQ" name="remainder" specification="_ow3tAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sco0IZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return super.remainder().toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sco0IpFCEeuCTslxszDstQ" name="nextLong" specification="_ow6JQpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sco0I5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <language>java</language>
                <body>return parseLong(super.nextToken(), 10);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scpbMJFCEeuCTslxszDstQ" name="nextInt" specification="_ow6wUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scpbMZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return parseInt(super.nextToken(), 10);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scqCQJFCEeuCTslxszDstQ" name="nextHexInt" specification="_ow7-cJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scqCQZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return parseInt(super.nextToken(), 16);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scqCQpFCEeuCTslxszDstQ" name="nextChar" specification="_ow8lgJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scqCQ5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
                <language>java</language>
                <body>return super.nextToken().charAt(0);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scqpUJFCEeuCTslxszDstQ" name="parseLong" specification="_sD91cpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scqpUZFCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_scqpUpFCEeuCTslxszDstQ" name="radix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scqpU5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
                <language>java</language>
                <body>if (s == null) {
         throw new NumberFormatException(&quot;null&quot;);
     }

     if (radix &lt; Character.MIN_RADIX) {
         throw new NumberFormatException(&quot;radix &quot; + radix + &quot; less than Character.MIN_RADIX&quot;);
     }
     if (radix > Character.MAX_RADIX) {
         throw new NumberFormatException(&quot;radix &quot; + radix + &quot; greater than Character.MAX_RADIX&quot;);
     }

     long result = 0;
     boolean negative = false;
     int i = 0, len = s.length();
     long limit = -Long.MAX_VALUE;
     long multmin;
     int digit;

     if (len > 0) {
         char firstChar = s.charAt(0);
         if (firstChar &lt; '0') { // Possible leading &quot;+&quot; or &quot;-&quot;
             if (firstChar == '-') {
                 negative = true;
                 limit = Long.MIN_VALUE;
             } else if (firstChar != '+')
                 throw NumberFormatExceptionForInputString(s);

             if (len == 1) // Cannot have lone &quot;+&quot; or &quot;-&quot;
                 throw NumberFormatExceptionForInputString(s);
             i++;
         }
         multmin = limit / radix;
         while (i &lt; len) {
             // Accumulating negatively avoids surprises near MAX_VALUE
             digit = Character.digit(s.charAt(i++), radix);
             if (digit &lt; 0) {
                 throw NumberFormatExceptionForInputString(s);
             }
             if (result &lt; multmin) {
                 throw NumberFormatExceptionForInputString(s);
             }
             result *= radix;
             if (result &lt; limit + digit) {
                 throw NumberFormatExceptionForInputString(s);
             }
             result -= digit;
         }
     } else {
         throw NumberFormatExceptionForInputString(s);
     }
     return negative ? result : -result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scrQYJFCEeuCTslxszDstQ" name="parseInt" specification="_sD-cgJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scrQYZFCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_scrQYpFCEeuCTslxszDstQ" name="radix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scrQY5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (s == null) {
         throw new NumberFormatException(&quot;null&quot;);
     }

     if (radix &lt; Character.MIN_RADIX) {
         throw new NumberFormatException(&quot;radix &quot; + radix +
                 &quot; less than Character.MIN_RADIX&quot;);
     }

     if (radix > Character.MAX_RADIX) {
         throw new NumberFormatException(&quot;radix &quot; + radix +
                 &quot; greater than Character.MAX_RADIX&quot;);
     }

     int result = 0;
     boolean negative = false;
     int i = 0, len = s.length();
     int limit = -Integer.MAX_VALUE;
     int multmin;
     int digit;

     if (len > 0) {
         char firstChar = s.charAt(0);
         if (firstChar &lt; '0') { // Possible leading &quot;+&quot; or &quot;-&quot;
             if (firstChar == '-') {
                 negative = true;
                 limit = Integer.MIN_VALUE;
             } else if (firstChar != '+')
                 throw NumberFormatExceptionForInputString(s);

             if (len == 1) // Cannot have lone &quot;+&quot; or &quot;-&quot;
                 throw NumberFormatExceptionForInputString(s);
             i++;
         }
         multmin = limit / radix;
         while (i &lt; len) {
             // Accumulating negatively avoids surprises near MAX_VALUE
             digit = Character.digit(s.charAt(i++),radix);
             if (digit &lt; 0) {
                 throw NumberFormatExceptionForInputString(s);
             }
             if (result &lt; multmin) {
                 throw NumberFormatExceptionForInputString(s);
             }
             result *= radix;
             if (result &lt; limit + digit) {
                 throw NumberFormatExceptionForInputString(s);
             }
             result -= digit;
         }
     } else {
         throw NumberFormatExceptionForInputString(s);
     }
     return negative ? result : -result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scr3cJFCEeuCTslxszDstQ" name="NumberFormatExceptionForInputString" specification="_sD-chJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scr3cZFCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_scr3cpFCEeuCTslxszDstQ" type="_sD91cJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new NumberFormatException(&quot;For input string: \&quot;&quot; + s.toString() + &quot;\&quot;&quot;);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_owzbkJFCEeuCTslxszDstQ" name="nextToken" method="_scoNEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ow0psJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ow3tAJFCEeuCTslxszDstQ" name="remainder" method="_sco0IJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ow4UEJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ow6JQpFCEeuCTslxszDstQ" name="nextLong" method="_sco0IpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ow6JQ5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ow6wUJFCEeuCTslxszDstQ" name="nextInt" method="_scpbMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ow6wUZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ow7-cJFCEeuCTslxszDstQ" name="nextHexInt" method="_scqCQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ow7-cZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ow8lgJFCEeuCTslxszDstQ" name="nextChar" method="_scqCQpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ow9MkJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sD9OYJFCEeuCTslxszDstQ" name="CharSequenceParser" method="_scnmAJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_sD9OYpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sD9OY5FCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sD9OYZFCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sD9OZJFCEeuCTslxszDstQ" type="_oww_UJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sD91cpFCEeuCTslxszDstQ" name="parseLong" visibility="private" isStatic="true" method="_scqpUJFCEeuCTslxszDstQ" raisedException="_sD91cJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sD91c5FCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sD91dJFCEeuCTslxszDstQ" name="radix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD91dZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sD-cgJFCEeuCTslxszDstQ" name="parseInt" visibility="private" isStatic="true" method="_scrQYJFCEeuCTslxszDstQ" raisedException="_sD91cJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sD-cgZFCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sD-cgpFCEeuCTslxszDstQ" name="radix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD-cg5FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sD-chJFCEeuCTslxszDstQ" name="NumberFormatExceptionForInputString" visibility="private" isStatic="true" method="_scr3cJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sD-chZFCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sD-chpFCEeuCTslxszDstQ" type="_sD91cJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oxR8sJFCEeuCTslxszDstQ" name="DeepCloneable">
              <ownedComment xmi:id="_sfEdEZFCEeuCTslxszDstQ">
                <body>A &lt;code>DeepCloneable&lt;/code> is a cloneable object that can be cloned shallowly (by
creating a copy of the object that contains references to the same
members as the original) or deeply (by creating a copy of the object
and of all it's member objects).
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_sEBf0ZFCEeuCTslxszDstQ" general="_sEA4wpFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_oxTx4JFCEeuCTslxszDstQ" name="clone" raisedException="_r4uOwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sEBf0pFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oxVAAJFCEeuCTslxszDstQ" name="deepClone" raisedException="_r4uOwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sEBf05FCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oxZRcJFCEeuCTslxszDstQ" name="PointedCharSequence">
              <ownedComment xmi:id="_sfFEIJFCEeuCTslxszDstQ">
                <body>PointedCharSequence is a char sequence with the position of its last byte in the original file.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_sEBf1JFCEeuCTslxszDstQ" general="_rysfQJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_oxbGoJFCEeuCTslxszDstQ" name="lastBytePosition" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedAttribute>
              <ownedOperation xmi:id="_oxcUwJFCEeuCTslxszDstQ" name="indexOf">
                <ownedParameter xmi:id="_oxcUwZFCEeuCTslxszDstQ" name="str">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oxc70JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oxdi4JFCEeuCTslxszDstQ" name="compareTo">
                <ownedParameter xmi:id="_oxeJ8JFCEeuCTslxszDstQ" name="anotherString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oxeJ8ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oxlesJFCEeuCTslxszDstQ" name="ResourceBundleSet">
              <ownedComment xmi:id="_sfFEIpFCEeuCTslxszDstQ">
                <body>A ResourceBundle that is a proxy to multiple ResourceBundles.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <generalization xmi:id="_sETMoJFCEeuCTslxszDstQ" general="_sECG4pFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sTv94JFCEeuCTslxszDstQ" name="locale" visibility="private" type="_sEDVAJFCEeuCTslxszDstQ" association="_sjqpMJFCEeuCTslxszDstQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sTwk8JFCEeuCTslxszDstQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sTxzEJFCEeuCTslxszDstQ" name="resources" visibility="private" isLeaf="true" isOrdered="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sT0PUJFCEeuCTslxszDstQ" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sT02YJFCEeuCTslxszDstQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scuTsJFCEeuCTslxszDstQ" name="ResourceBundleSet" specification="_oxn68JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scuTsZFCEeuCTslxszDstQ" name="resource">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scuTspFCEeuCTslxszDstQ" type="_oxlesJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>addResource(resource);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scuTs5FCEeuCTslxszDstQ" name="addResource" specification="_oxqXMJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scuTtJFCEeuCTslxszDstQ" name="resource">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>resources.add(resource);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scu6wJFCEeuCTslxszDstQ" name="setLocale" specification="_sEFxQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scu6wZFCEeuCTslxszDstQ" name="locale" type="_sEDVAJFCEeuCTslxszDstQ"/>
                <language>java</language>
                <body>this.locale = locale;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scu6wpFCEeuCTslxszDstQ" name="getKeys" specification="_oxrlUJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scu6w5FCEeuCTslxszDstQ" type="_sEG_YJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return new Enumeration&lt;String>() {
         private final Iterator&lt;String> itr = resources.iterator();
         private Enumeration&lt;String> currentEnum;

         public boolean hasMoreElements() {
             if (currentEnum == null || !currentEnum.hasMoreElements()) {
                 if (itr.hasNext()) {
                     currentEnum = getBndl(itr.next()).getKeys();
                 }
             }
             return currentEnum != null &amp;&amp; currentEnum.hasMoreElements();
         }


         public String nextElement() {
             return currentEnum.nextElement();
         }
     };
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scvh0JFCEeuCTslxszDstQ" name="resolveMessage" specification="_oxuooJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scvh0ZFCEeuCTslxszDstQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scvh0pFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return resolveMessage(msg, new Object[0]);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scvh05FCEeuCTslxszDstQ" name="resolveMessage" specification="_sEKCsJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scvh1JFCEeuCTslxszDstQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scvh1ZFCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_scvh1pFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return resolveMessage(msg, new Object[]{obj});
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scwI4JFCEeuCTslxszDstQ" name="resolveMessage" specification="_sEL34JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scwI4ZFCEeuCTslxszDstQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scwI4pFCEeuCTslxszDstQ" name="params" type="_ryMwAJFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_scwI45FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scwI5JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return insertParams(getString(msg), params);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scwv8JFCEeuCTslxszDstQ" name="insertParams" specification="_sENtEJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scwv8ZFCEeuCTslxszDstQ" name="str">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scwv8pFCEeuCTslxszDstQ" name="params" type="_ryMwAJFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_scwv85FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scwv9JFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuilder buf = new StringBuilder();
     int startIndex = 0;
     for (int i = 0; i &lt; params.length &amp;&amp; startIndex &lt;= str.length(); i++) {
         int endIndex = str.indexOf(&quot;{&quot; + i, startIndex);
         if (endIndex != -1) {
             buf.append(str, startIndex, endIndex);
             buf.append(params[i] == null ? null : params[i].toString());
             startIndex = endIndex + 3;
         }
     }
     buf.append(str.substring(startIndex));
     return buf.toString();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scwv9ZFCEeuCTslxszDstQ" name="handleGetObject" specification="_oxxr8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scwv9pFCEeuCTslxszDstQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scwv95FCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>for (String resource : resources) {
         ResourceBundle bundle = getBndl(resource);
         if (bundle.containsKey(key)) {
             return bundle.getString(key);
         }
     }
     return key;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scxXAJFCEeuCTslxszDstQ" name="getBndl" specification="_oxzhIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_scxXAZFCEeuCTslxszDstQ" name="bundle">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_scxXApFCEeuCTslxszDstQ" type="_sECG4pFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>if (null != locale) {
         return ResourceBundle.getBundle(bundle, locale);
     } else {
         return ResourceBundle.getBundle(bundle);
     }
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oxn68JFCEeuCTslxszDstQ" name="ResourceBundleSet" method="_scuTsJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_oxoiAJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oxoiAZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oxn68ZFCEeuCTslxszDstQ" name="resource">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oxpJEJFCEeuCTslxszDstQ" type="_oxlesJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oxqXMJFCEeuCTslxszDstQ" name="addResource" method="_scuTs5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oxqXMZFCEeuCTslxszDstQ" name="resource">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oxrlUJFCEeuCTslxszDstQ" name="getKeys" method="_scu6wpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sEJboZFCEeuCTslxszDstQ" type="_sEG_YJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oxuooJFCEeuCTslxszDstQ" name="resolveMessage" method="_scvh0JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfFrMJFCEeuCTslxszDstQ">
                  <body>Resolves &lt;var>msg&lt;/var>.
     *
     * @param msg message to resolve
     * @return resolved message</body>
                </ownedComment>
                <ownedParameter xmi:id="_oxuooZFCEeuCTslxszDstQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oxvPsJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oxxr8JFCEeuCTslxszDstQ" name="handleGetObject" visibility="protected" method="_scwv9ZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oxyTAJFCEeuCTslxszDstQ" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sER-gJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oxzhIJFCEeuCTslxszDstQ" name="getBndl" visibility="private" method="_scxXAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_ox0IMJFCEeuCTslxszDstQ" name="bundle">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sESlkJFCEeuCTslxszDstQ" type="_sECG4pFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEFxQJFCEeuCTslxszDstQ" name="setLocale" method="_scu6wJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sEFxQZFCEeuCTslxszDstQ" name="locale" type="_sEDVAJFCEeuCTslxszDstQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEKCsJFCEeuCTslxszDstQ" name="resolveMessage" method="_scvh05FCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfFrMZFCEeuCTslxszDstQ">
                  <body>Resolves &lt;var>msg&lt;/var>.
     *
     * @param msg message to resolve
     * @param obj parameter to insert into the resolved message
     * @return resolved message</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEKpwJFCEeuCTslxszDstQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEKpwZFCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sEKpwpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sEL34JFCEeuCTslxszDstQ" name="resolveMessage" method="_scwI4JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfFrMpFCEeuCTslxszDstQ">
                  <body>Resolves &lt;var>msg&lt;/var>
     *
     * @param msg    message to resolve
     * @param params parameters to insert into the resolved message
     * @return resolved message</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEL34ZFCEeuCTslxszDstQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEMe8JFCEeuCTslxszDstQ" name="params" type="_ryMwAJFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sENGAJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEMe8ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sENtEJFCEeuCTslxszDstQ" name="insertParams" isStatic="true" method="_scwv8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sENtEZFCEeuCTslxszDstQ" name="str">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sENtEpFCEeuCTslxszDstQ" name="params" type="_ryMwAJFCEeuCTslxszDstQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sEQwYJFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEPiQJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oyyYkJFCEeuCTslxszDstQ" name="CharSequenceTokenizer">
              <ownedComment xmi:id="_sfG5UpFCEeuCTslxszDstQ">
                <body>Tokenizes CharSequence.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
              </ownedComment>
              <ownedAttribute xmi:id="_sUT-kJFCEeuCTslxszDstQ" name="s" visibility="private" isLeaf="true" type="_rysfQJFCEeuCTslxszDstQ" isReadOnly="true" association="_sj1oUJFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_sUXB4JFCEeuCTslxszDstQ" name="currentPosition" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sUZeIJFCEeuCTslxszDstQ" name="newPosition" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sUasQJFCEeuCTslxszDstQ" name="maxPosition" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_sFLWYJFCEeuCTslxszDstQ" client="_oyyYkJFCEeuCTslxszDstQ" supplier="_rXB28JFCEeuCTslxszDstQ" contract="_rXB28JFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc4EsJFCEeuCTslxszDstQ" name="CharSequenceTokenizer" specification="_sFPn0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc4EsZFCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sc4EspFCEeuCTslxszDstQ" type="_oyyYkJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>this.s = s;
     currentPosition = 0;
     newPosition = -1;
     maxPosition = s.length();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc4rwJFCEeuCTslxszDstQ" name="hasMoreTokens" specification="_oy2C8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc4rwZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>/*
      * Temporarily store this position and use it in the following
      * nextToken() method only if the delimiters haven't been changed in
      * that nextToken() invocation.
      */
     newPosition = skipDelimiters(currentPosition);
     return (newPosition &lt; maxPosition);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc5S0JFCEeuCTslxszDstQ" name="nextToken" specification="_oy2qAJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc5S0ZFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>int start = skip();
     return s.subSequence(start, currentPosition);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc5S0pFCEeuCTslxszDstQ" name="skipToken" specification="_oy3REJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>skip();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc554JFCEeuCTslxszDstQ" name="remainder" specification="_oy34IJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc554ZFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>currentPosition = skipDelimiters(currentPosition);
     return s.subSequence(currentPosition, maxPosition);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc554pFCEeuCTslxszDstQ" name="hasNext" specification="_oy5GQJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc5545FCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return hasMoreTokens();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc6g8JFCEeuCTslxszDstQ" name="next" specification="_oy67cZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc6g8ZFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
                <language>java</language>
                <body>return nextToken();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc6g8pFCEeuCTslxszDstQ" name="remove" specification="_oy9XsJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>throw new UnsupportedOperationException();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc7IAJFCEeuCTslxszDstQ" name="skip" specification="_oy_z8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc7IAZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>/*
      * If next position already computed in hasMoreElements()
      * then use the computed value.
      */
     currentPosition = (newPosition >= 0) ? newPosition : skipDelimiters(currentPosition);

     /* Reset it anyway */
     newPosition = -1;

     if (currentPosition >= maxPosition) {
         throw new NoSuchElementException();
     }
     int start = currentPosition;
     currentPosition = scanToken(currentPosition);
     return start;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc7vEJFCEeuCTslxszDstQ" name="skipDelimiters" specification="_ozBpIJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc7vEZFCEeuCTslxszDstQ" name="startPos">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sc7vEpFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int position = startPos;
     while (position &lt; maxPosition &amp;&amp; ' ' == s.charAt(position)) {
         position++;
     }
     return position;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sc7vE5FCEeuCTslxszDstQ" name="scanToken" specification="_ozC3QJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sc7vFJFCEeuCTslxszDstQ" name="startPos">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sc7vFZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int position = startPos;
     while (position &lt; maxPosition &amp;&amp; ' ' != s.charAt(position)) {
         position++;
     }
     return position;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oy2C8JFCEeuCTslxszDstQ" name="hasMoreTokens" method="_sc4rwJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfHgYJFCEeuCTslxszDstQ">
                  <body>Tests if there are more tokens available from this tokenizer's string.
     * If this method returns &lt;tt>true&lt;/tt>, then a subsequent call to
     * &lt;tt>nextToken&lt;/tt> will successfully return a token.
     *
     * @return &lt;code>true&lt;/code> if and only if there is at least one token
     * in the string after the current position; &lt;code>false&lt;/code>
     * otherwise.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oy2C8ZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oy2qAJFCEeuCTslxszDstQ" name="nextToken" method="_sc5S0JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfHgYZFCEeuCTslxszDstQ">
                  <body>Returns the next token from this string tokenizer.
     *
     * @return the next token from this string tokenizer.
     * @throws NoSuchElementException if there are no more tokens in this tokenizer's string.</body>
                </ownedComment>
                <ownedParameter xmi:id="_sFRdAJFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oy3REJFCEeuCTslxszDstQ" name="skipToken" method="_sc5S0pFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfHgYpFCEeuCTslxszDstQ">
                  <body>Skips the next token.
     *
     * @throws NoSuchElementException if there are no more tokens in this tokenizer's string.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oy34IJFCEeuCTslxszDstQ" name="remainder" method="_sc554JFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfIHcJFCEeuCTslxszDstQ">
                  <body>Returns remainder of the string.
     *
     * @return remainder of the string</body>
                </ownedComment>
                <ownedParameter xmi:id="_sFSrIJFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oy5GQJFCEeuCTslxszDstQ" name="hasNext" method="_sc554pFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_oy5GQZFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oy67cZFCEeuCTslxszDstQ" name="next" method="_sc6g8JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_sFTSMJFCEeuCTslxszDstQ" type="_rysfQJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oy9XsJFCEeuCTslxszDstQ" name="remove" method="_sc6g8pFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_oy_z8JFCEeuCTslxszDstQ" name="skip" visibility="private" method="_sc7IAJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfIHcZFCEeuCTslxszDstQ">
                  <body>Skips to the next token and returns previous position.
     *
     * @throws NoSuchElementException if there are no more tokens in this tokenizer's string.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ozAbAJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ozBpIJFCEeuCTslxszDstQ" name="skipDelimiters" visibility="private" method="_sc7vEJFCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfIHcpFCEeuCTslxszDstQ">
                  <body>Skips delimiters starting from the specified position.
     * Returns the index of the first non-delimiter character at or after startPos.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ozBpIZFCEeuCTslxszDstQ" name="startPos">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ozCQMJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ozC3QJFCEeuCTslxszDstQ" name="scanToken" visibility="private" method="_sc7vE5FCEeuCTslxszDstQ">
                <ownedComment xmi:id="_sfIugJFCEeuCTslxszDstQ">
                  <body>Skips ahead from startPos and returns the index of the next delimiter
     * character encountered, or maxPosition if no such delimiter is found.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ozC3QZFCEeuCTslxszDstQ" name="startPos">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ozDeUJFCEeuCTslxszDstQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sFPn0JFCEeuCTslxszDstQ" name="CharSequenceTokenizer" method="_sc4EsJFCEeuCTslxszDstQ">
                <eAnnotations xmi:id="_sFQO4JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sFQO4ZFCEeuCTslxszDstQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sFPn0ZFCEeuCTslxszDstQ" name="s" type="_rysfQJFCEeuCTslxszDstQ"/>
                <ownedParameter xmi:id="_sFQO4pFCEeuCTslxszDstQ" type="_oyyYkJFCEeuCTslxszDstQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sjoM8JFCEeuCTslxszDstQ" name="" memberEnd="_sjoM8ZFCEeuCTslxszDstQ _sTkXsJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sjoM8ZFCEeuCTslxszDstQ" name="" type="_owQB8JFCEeuCTslxszDstQ" association="_sjoM8JFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sjqpMJFCEeuCTslxszDstQ" name="" memberEnd="_sjqpMZFCEeuCTslxszDstQ _sTv94JFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sjqpMZFCEeuCTslxszDstQ" name="" type="_oxlesJFCEeuCTslxszDstQ" association="_sjqpMJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sj1oUJFCEeuCTslxszDstQ" name="" memberEnd="_sj1oUZFCEeuCTslxszDstQ _sUT-kJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_sj1oUZFCEeuCTslxszDstQ" name="" type="_oyyYkJFCEeuCTslxszDstQ" association="_sj1oUJFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yY5XMJFCEeuCTslxszDstQ" name="TestByteArrayCharSequence">
              <eAnnotations xmi:id="_yY5-QJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yY5-QZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yY5-QpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <generalization xmi:id="_yp1WMJFCEeuCTslxszDstQ" general="_yZChIJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy5LkJFCEeuCTslxszDstQ" name="setUp" specification="_yY6lUJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>byte[] bytes = test.getBytes(StandardCharsets.US_ASCII);
     b = new ByteArrayCharSequence(bytes, 0, bytes.length);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy5LkZFCEeuCTslxszDstQ" name="tearDown" specification="_yY7zcZFCEeuCTslxszDstQ">
                <language>java</language>
                <body>b = null;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yY6lUJFCEeuCTslxszDstQ" name="setUp" method="_yy5LkJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yY7zcZFCEeuCTslxszDstQ" name="tearDown" method="_yy5LkZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yY9ooJFCEeuCTslxszDstQ" name="TestCharBufferCharSequence">
              <eAnnotations xmi:id="_yY-PsJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yY-PsZFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yY-PspFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <generalization xmi:id="_yp19QJFCEeuCTslxszDstQ" general="_yZChIJFCEeuCTslxszDstQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy5yoJFCEeuCTslxszDstQ" name="setUp" specification="_yY-Ps5FCEeuCTslxszDstQ">
                <language>java</language>
                <body>char[] chars = test.toCharArray();
     b = new CharBufferCharSequence(CharBuffer.wrap(chars));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy5yoZFCEeuCTslxszDstQ" name="tearDown" specification="_yZAE4JFCEeuCTslxszDstQ">
                <language>java</language>
                <body>b = null;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yY-Ps5FCEeuCTslxszDstQ" name="setUp" method="_yy5yoJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yZAE4JFCEeuCTslxszDstQ" name="tearDown" method="_yy5yoZFCEeuCTslxszDstQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZChIJFCEeuCTslxszDstQ" name="TestPointedCharSequence" isAbstract="true">
              <eAnnotations xmi:id="_yZChIZFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_yZChIpFCEeuCTslxszDstQ" source="codegen">
                  <details xmi:id="_yZDIMJFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_ywLOwJFCEeuCTslxszDstQ" name="b" visibility="protected" type="_oxZRcJFCEeuCTslxszDstQ" association="_y0UH5JFCEeuCTslxszDstQ"/>
              <ownedAttribute xmi:id="_ywL10JFCEeuCTslxszDstQ" name="test" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ywL10ZFCEeuCTslxszDstQ" value="&quot;abcd&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy5yopFCEeuCTslxszDstQ" name="testLength" specification="_yZEWUJFCEeuCTslxszDstQ">
                <language>java</language>
                <body>assertEquals(test.length(), b.length());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy6ZsJFCEeuCTslxszDstQ" name="testCharAt" specification="_yZFkcpFCEeuCTslxszDstQ">
                <language>java</language>
                <body>for (int i = 0; i &lt; test.length(); i++) {
         assertEquals(test.charAt(i), b.charAt(i));
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy6ZsZFCEeuCTslxszDstQ" name="testSubsequence" specification="_yZGykpFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yy6ZspFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy6Zs5FCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Object[][]{
             {&quot;&quot;, 0, 0},
             {&quot;a&quot;, 0, 1},
             {&quot;ab&quot;, 0, 2},
             {&quot;bc&quot;, 1, 3},
             {&quot;cd&quot;, 2, 4},
             {&quot;d&quot;, 3, 4},
             {&quot;&quot;, 3, 3}
     };
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy7AwJFCEeuCTslxszDstQ" name="testSubsequence" specification="_yZInwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yy7AwZFCEeuCTslxszDstQ" name="s">
                  <eAnnotations xmi:id="_yy7AwpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yy7Aw5FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yy7AxJFCEeuCTslxszDstQ" name="x">
                  <eAnnotations xmi:id="_yy7AxZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yy7AxpFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yy7Ax5FCEeuCTslxszDstQ" name="y">
                  <eAnnotations xmi:id="_yy7AyJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yy7AyZFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>assertEquals(s, b.subSequence(x, y).toString());
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy7n0JFCEeuCTslxszDstQ" name="testCompareTo" specification="_yZLEA5FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yy7n0ZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy7n0pFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Object[][]{
             {&quot;&quot;, 1},
             {&quot;abcd&quot;, 0},
             {&quot;abce&quot;, -1},
             {&quot;abca&quot;, 1},
             {&quot;a&quot;, 1},
             {&quot;abcde&quot;, -1},
             {&quot;adcd&quot;, -1},
             {&quot;aacd&quot;, 1}
     };
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy8O4JFCEeuCTslxszDstQ" name="testCompareTo" specification="_yZM5MJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yy8O4ZFCEeuCTslxszDstQ" name="s">
                  <eAnnotations xmi:id="_yy8O4pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yy8O45FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yy8O5JFCEeuCTslxszDstQ" name="x">
                  <eAnnotations xmi:id="_yy8O5ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yy8O5pFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>assertEquals(x, (int) Math.signum(b.compareTo(s)));
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy8O55FCEeuCTslxszDstQ" name="testIndexOf" specification="_yZOHVJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yy8O6JFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy8O6ZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Object[][]{
             {-1, &quot;f&quot;},
             {-1, &quot;fffffff&quot;},
             {-1, &quot;abcde&quot;},
             {-1, &quot;bcde&quot;},
             {0, &quot;&quot;},
             {0, &quot;a&quot;},
             {0, &quot;ab&quot;},
             {0, &quot;abc&quot;},
             {0, &quot;abcd&quot;},
             {1, &quot;b&quot;},
             {1, &quot;bc&quot;},
             {1, &quot;bcd&quot;},
             {3, &quot;d&quot;}
     };
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy818JFCEeuCTslxszDstQ" name="testIndexOf" specification="_yZP8gJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yy818ZFCEeuCTslxszDstQ" name="i">
                  <eAnnotations xmi:id="_yy818pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yy8185FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yy819JFCEeuCTslxszDstQ" name="s">
                  <eAnnotations xmi:id="_yy819ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yy819pFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>assertEquals(i, b.indexOf(s));
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yZEWUJFCEeuCTslxszDstQ" name="testLength" method="_yy5yopFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yZFkcpFCEeuCTslxszDstQ" name="testCharAt" method="_yy6ZsJFCEeuCTslxszDstQ"/>
              <ownedOperation xmi:id="_yZGykpFCEeuCTslxszDstQ" name="testSubsequence" isStatic="true" method="_yy6ZsZFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yZHZoJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yZHZoZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZInwJFCEeuCTslxszDstQ" name="testSubsequence" method="_yy7AwJFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yZInwZFCEeuCTslxszDstQ" name="s">
                  <eAnnotations xmi:id="_yZJO0pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yZJ14JFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZJO0JFCEeuCTslxszDstQ" name="x">
                  <eAnnotations xmi:id="_yZJ14ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yZJ14pFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZJO0ZFCEeuCTslxszDstQ" name="y">
                  <eAnnotations xmi:id="_yZKc8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yZKc8ZFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZLEA5FCEeuCTslxszDstQ" name="testCompareTo" isStatic="true" method="_yy7n0JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yZLrEJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yZLrEZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZM5MJFCEeuCTslxszDstQ" name="testCompareTo" method="_yy8O4JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yZM5MZFCEeuCTslxszDstQ" name="s">
                  <eAnnotations xmi:id="_yZNgQJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yZNgQZFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZM5MpFCEeuCTslxszDstQ" name="x">
                  <eAnnotations xmi:id="_yZNgQpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yZNgQ5FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZOHVJFCEeuCTslxszDstQ" name="testIndexOf" isStatic="true" method="_yy8O55FCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yZOuYJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yZOuYZFCEeuCTslxszDstQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZP8gJFCEeuCTslxszDstQ" name="testIndexOf" method="_yy818JFCEeuCTslxszDstQ">
                <ownedParameter xmi:id="_yZP8gZFCEeuCTslxszDstQ" name="i">
                  <eAnnotations xmi:id="_yZQjkJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yZQjkZFCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZP8gpFCEeuCTslxszDstQ" name="s">
                  <eAnnotations xmi:id="_yZQjkpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yZQjk5FCEeuCTslxszDstQ" key="final"/>
                  </eAnnotations>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y0UH5JFCEeuCTslxszDstQ" name="" memberEnd="_y0UH5ZFCEeuCTslxszDstQ _ywLOwJFCEeuCTslxszDstQ">
              <ownedEnd xmi:id="_y0UH5ZFCEeuCTslxszDstQ" name="" type="_yZChIJFCEeuCTslxszDstQ" association="_y0UH5JFCEeuCTslxszDstQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_mwTjcJFCEeuCTslxszDstQ" name="princeton">
            <packagedElement xmi:type="uml:Package" xmi:id="_mwUKgJFCEeuCTslxszDstQ" name="data">
              <packagedElement xmi:type="uml:Class" xmi:id="_osVyUJFCEeuCTslxszDstQ" name="AbstractDictionaryElementFactory" isAbstract="true">
                <ownedComment xmi:id="_se8hQZFCEeuCTslxszDstQ">
                  <body>Base class for element factories. Holds some common code.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <ownedAttribute xmi:id="_sSGYEJFCEeuCTslxszDstQ" name="dictionary" visibility="protected" isLeaf="true" type="_rVLc0JFCEeuCTslxszDstQ" isReadOnly="true" association="_sjMvIJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sSINQJFCEeuCTslxszDstQ" name="maxOffset" visibility="protected" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <qualifier xmi:id="_sSMesJFCEeuCTslxszDstQ" type="_sSLQkJFCEeuCTslxszDstQ"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSI0UJFCEeuCTslxszDstQ" value="new EnumMap&lt;>(POS.class)"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sSNs0JFCEeuCTslxszDstQ" name="CACHE_STRINGS_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSOT4JFCEeuCTslxszDstQ" value="&quot;cache_strings&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sSO68JFCEeuCTslxszDstQ" name="cacheStrings" visibility="protected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSPiAJFCEeuCTslxszDstQ" value="true"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sSRXMJFCEeuCTslxszDstQ" name="stringCache" visibility="protected" type="_ovB58JFCEeuCTslxszDstQ" association="_sjPLYZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSTzcJFCEeuCTslxszDstQ" value="new ZeroPool&lt;>()"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rrr4UJFCEeuCTslxszDstQ" client="_osVyUJFCEeuCTslxszDstQ" supplier="_oFyIoJFCEeuCTslxszDstQ" contract="_oFyIoJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb3YEJFCEeuCTslxszDstQ" name="AbstractDictionaryElementFactory" specification="_sBM1UJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb3YEZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb3YEpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb3YE5FCEeuCTslxszDstQ" type="_osVyUJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>this.dictionary = dictionary;
     if (null != params &amp;&amp; params.containsKey(CACHE_STRINGS_KEY)) {
         cacheStrings = Boolean.parseBoolean(params.get(CACHE_STRINGS_KEY).getValue());
     }
     for (POS pos : POS.values()) {
         maxOffset.put(pos, 0L);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb3_IJFCEeuCTslxszDstQ" name="createException" specification="_sBTjAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb3_IZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb3_IpFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb3_I5FCEeuCTslxszDstQ" name="exceptions" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb3_JJFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return new Exc(dictionary, pos, lemma, exceptions);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb4mMJFCEeuCTslxszDstQ" name="createSynset" specification="_rru7oJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb4mMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb4mMpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (POS.VERB == pos) {
         return new VerbSynset(dictionary, createNewOffset(pos));
     } else if (POS.ADJECTIVE == pos) {
         return new AdjectiveSynset(dictionary, createNewOffset(pos));
     } else {
         return new Synset(dictionary, pos, createNewOffset(pos));
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb5NQJFCEeuCTslxszDstQ" name="createIndexWord" specification="_sBcF4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb5NQZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb5NQpFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb5NQ5FCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb5NRJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return new IndexWord(dictionary, lemma, pos, synset);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb50UJFCEeuCTslxszDstQ" name="initVerbFrameFlags" specification="_sBfwQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb6bYJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sb6bYZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sb6bYpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb6bY5FCEeuCTslxszDstQ" name="vFrames" type="_rbT6AJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sb6bZJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sb6bZZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb6bZpFCEeuCTslxszDstQ" name="frameNumber">
                    <eAnnotations xmi:id="_sb6bZ5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sb6baJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb6baZFCEeuCTslxszDstQ" name="wordIndex">
                    <eAnnotations xmi:id="_sb6bapFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sb6ba5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (wordIndex > 0) {
         ((Verb) synset.getWords().get(wordIndex - 1)).getVerbFrameFlags().set(frameNumber);
     } else {
         for (Word w : synset.getWords()) {
             ((Verb) w).getVerbFrameFlags().set(frameNumber);
         }
         vFrames.set(frameNumber);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb83oJFCEeuCTslxszDstQ" name="createWord" specification="_sBl24JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb83oZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb83opFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sb83o5FCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (POS.VERB == synset.getPOS()) {
         return new Verb(dictionary, synset, stringCache.replace(lemma), new BitSet());
     } else if (POS.ADJECTIVE == synset.getPOS()) {
         AdjectivePosition adjectivePosition = AdjectivePosition.NONE;
         if (lemma.charAt(lemma.length() - 1) == ')') {
             int left = lemma.indexOf('(');
             if  (left > 0) {
                 String marker = lemma
                     .substring(left + 1, lemma.length() - 1);
                 adjectivePosition = AdjectivePosition
                     .getAdjectivePositionForKey(marker);
                 lemma = lemma.substring(0, left);
             }
         }
         return new Adjective(dictionary, synset, stringCache.replace(lemma), adjectivePosition);
     } else {
         return new Word(dictionary, synset, stringCache.replace(lemma));
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb9esJFCEeuCTslxszDstQ" name="setDictionary" specification="_sBqIUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb9esZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb-FwJFCEeuCTslxszDstQ" name="getDictionary" specification="_osgKYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb-FwZFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return dictionary;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb-FwpFCEeuCTslxszDstQ" name="startCaching" specification="_osjNsZFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (cacheStrings) {
         stringCache = new HashPool&lt;>();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb-s0JFCEeuCTslxszDstQ" name="stopCaching" specification="_oskb0JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (cacheStrings) {
         stringCache = new ZeroPool&lt;>();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sb_68JFCEeuCTslxszDstQ" name="createNewOffset" specification="_rrzNEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sb_68ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sb_68pFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>long result = maxOffset.get(pos) + 1;
     maxOffset.put(pos, result);
     return result;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_osgKYJFCEeuCTslxszDstQ" name="getDictionary" method="_sb-FwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sBuZwJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_osjNsZFCEeuCTslxszDstQ" name="startCaching" method="_sb-FwpFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_oskb0JFCEeuCTslxszDstQ" name="stopCaching" method="_sb-s0JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_rru7oJFCEeuCTslxszDstQ" name="createSynset" method="_sb4mMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_rru7oZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBa3wJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rrzNEJFCEeuCTslxszDstQ" name="createNewOffset" visibility="protected" method="_sb_68JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_rrz0IJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_rrz0IZFCEeuCTslxszDstQ" key="synchronized"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_rrzNEZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_rr0bMJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sBM1UJFCEeuCTslxszDstQ" name="AbstractDictionaryElementFactory" method="_sb3YEJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sBODcJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sBODcZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sBNcYJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBNcYZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBODcpFCEeuCTslxszDstQ" type="_osVyUJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sBTjAJFCEeuCTslxszDstQ" name="createException" method="_sb3_IJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sBUKEJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBUKEZFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sBUxIJFCEeuCTslxszDstQ" name="exceptions" type="_rV_8MJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBUxIZFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sBcF4JFCEeuCTslxszDstQ" name="createIndexWord" method="_sb5NQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sBcs8JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBcs8ZFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sBdUAJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBdUAZFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sBfwQJFCEeuCTslxszDstQ" name="initVerbFrameFlags" visibility="protected" isStatic="true" method="_sb50UJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sBfwQZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sBiMgJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sBizkJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sBgXUJFCEeuCTslxszDstQ" name="vFrames" type="_rbT6AJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sBizkZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sBizkpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sBg-YJFCEeuCTslxszDstQ" name="frameNumber">
                    <eAnnotations xmi:id="_sBjaoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sBjaoZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sBg-YZFCEeuCTslxszDstQ" name="wordIndex">
                    <eAnnotations xmi:id="_sBjaopFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sBjao5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sBl24JFCEeuCTslxszDstQ" name="createWord" visibility="protected" method="_sb83oJFCEeuCTslxszDstQ">
                  <ownedComment xmi:id="_se9IUJFCEeuCTslxszDstQ">
                    <body>Creates a word.
     *
     * @param synset synset
     * @param lemma  lemma
     * @return word</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_sBl24ZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBl24pFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sBnFAJFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sBqIUJFCEeuCTslxszDstQ" name="setDictionary" method="_sb9esJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sBqIUZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_os390JFCEeuCTslxszDstQ" name="AbstractPrincetonDatabaseDictionaryElementFactory" isAbstract="true">
                <ownedComment xmi:id="_se9IUZFCEeuCTslxszDstQ">
                  <body>Base class for database element factories.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rsDrwJFCEeuCTslxszDstQ" general="_osVyUJFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_rr_aUJFCEeuCTslxszDstQ" client="_os390JFCEeuCTslxszDstQ" supplier="_oFFlEJFCEeuCTslxszDstQ" contract="_oFFlEJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scBwIJFCEeuCTslxszDstQ" name="AbstractPrincetonDatabaseDictionaryElementFactory" specification="_sBzSQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scBwIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scBwIpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scBwI5FCEeuCTslxszDstQ" type="_os390JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scCXMJFCEeuCTslxszDstQ" name="createIndexWord" specification="_sB5_8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scCXMZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scCXMpFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scCXM5FCEeuCTslxszDstQ" name="rs" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scCXNJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>List&lt;Long> offsets = new ArrayList&lt;>();
     while (rs.next()) {
         offsets.add(rs.getLong(1));
     }
     if (offsets.isEmpty()) {
         return null;
     }

     long[] offsetArray = new long[offsets.size()];
     for (int i = 0; i &lt; offsets.size(); i++) {
         offsetArray[i] = offsets.get(i);
     }

     return new IndexWord(dictionary, stringCache.replace(lemma), pos, offsetArray);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scC-QJFCEeuCTslxszDstQ" name="createSynset" specification="_sB-RYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scC-QZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scC-QpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scC-Q5FCEeuCTslxszDstQ" name="synsets" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scC-RJFCEeuCTslxszDstQ" name="words" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scC-RZFCEeuCTslxszDstQ" name="pointers" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scC-RpFCEeuCTslxszDstQ" name="verbFrames" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scC-R5FCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (synsets.next()) {
         Synset synset;
         if (POS.VERB == pos) {
             synset = new VerbSynset(dictionary, offset);
         } else if (POS.ADJECTIVE == pos) {
             synset = new AdjectiveSynset(dictionary, offset);
         } else {
             synset = new Synset(dictionary, pos, offset);
         }

         if (POS.ADJECTIVE == pos) {
             synset.setIsAdjectiveCluster(synsets.getBoolean(1));
         }

         String gloss = synsets.getString(2);
         synset.setGloss(gloss);

         long lexFileNum = synsets.getLong(3);
         synset.setLexFileNum(lexFileNum);

         while (words.next()) {
             String lemma = stringCache.replace(words.getString(1));
             Word word = createWord(synset, lemma);
             word.setUseCount(words.getInt(3));
             word.setLexId(words.getInt(4));
             synset.getWords().add(word);
         }
         if (synset.getWords() instanceof ArrayList) {
             ((ArrayList) synset.getWords()).trimToSize();
         }

         while (pointers.next()) {
             PointerType type = PointerType.getPointerTypeForKey(pointers.getString(1));
             long targetOffset = pointers.getLong(2);
             POS targetPOS = POS.getPOSForKey(pointers.getString(3));
             //int sourceIndex = pointers.getInt(4);
             int targetIndex = pointers.getInt(5);
             synset.getPointers().add(new Pointer(synset, type, targetPOS, targetOffset, targetIndex));
         }
         if (synset.getPointers() instanceof ArrayList) {
             ((ArrayList) synset.getPointers()).trimToSize();
         }

         if (POS.VERB == pos) {
             BitSet vFrames = new BitSet();
             while (verbFrames.next()) {
                 int frameNumber = verbFrames.getInt(1);
                 int wordIndex = verbFrames.getInt(2);
                 initVerbFrameFlags(synset, vFrames, frameNumber, wordIndex);
             }
             synset.setVerbFrameFlags(vFrames);
         }
         return synset;
     } else {
         return null;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scDlUJFCEeuCTslxszDstQ" name="createExc" specification="_sCEYAJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scDlUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scDlUpFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scDlU5FCEeuCTslxszDstQ" name="rs" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scDlVJFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>ArrayList&lt;String> exceptions = new ArrayList&lt;>();
     while (rs.next()) {
         exceptions.add(stringCache.replace(rs.getString(1)));
     }
     if (0 &lt; exceptions.size()) {
         exceptions.trimToSize();
         return new Exc(dictionary, pos, stringCache.replace(derivation), exceptions);
     } else {
         return null;
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_sBzSQJFCEeuCTslxszDstQ" name="AbstractPrincetonDatabaseDictionaryElementFactory" method="_scBwIJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sB0gYJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sB0gYZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sBz5UJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sBz5UZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sB0gYpFCEeuCTslxszDstQ" type="_os390JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sB5_8JFCEeuCTslxszDstQ" name="createIndexWord" method="_scCXMJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sB6nAJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sB6nAZFCEeuCTslxszDstQ" name="lemma">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sB6nApFCEeuCTslxszDstQ" name="rs" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sB7OEJFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sB-RYJFCEeuCTslxszDstQ" name="createSynset" method="_scC-QJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sB-RYZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sB-4cJFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sCAtoJFCEeuCTslxszDstQ" name="synsets" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCBUsJFCEeuCTslxszDstQ" name="words" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCBUsZFCEeuCTslxszDstQ" name="pointers" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCB7wJFCEeuCTslxszDstQ" name="verbFrames" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCCi0JFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sCEYAJFCEeuCTslxszDstQ" name="createExc" method="_scDlUJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sCE_EJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCFmIJFCEeuCTslxszDstQ" name="derivation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sCFmIZFCEeuCTslxszDstQ" name="rs" type="_rVzu8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCFmIpFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_os9dYJFCEeuCTslxszDstQ" name="AbstractPrincetonFileDictionaryElementFactory" isAbstract="true">
                <ownedComment xmi:id="_se9vYJFCEeuCTslxszDstQ">
                  <body>&lt;code>FileDictionaryElementFactory&lt;/code> that parses lines from the dictionary files distributed by the
WordNet team at Princeton's Cognitive Science department.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rsNcwJFCEeuCTslxszDstQ" general="_osVyUJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sSbIMJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_sjRAkZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSbvQJFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(AbstractPrincetonFileDictionaryElementFactory.class)"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rsKZcJFCEeuCTslxszDstQ" client="_os9dYJFCEeuCTslxszDstQ" supplier="_oHHlYJFCEeuCTslxszDstQ" contract="_oHHlYJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scEzcJFCEeuCTslxszDstQ" name="AbstractPrincetonFileDictionaryElementFactory" specification="_sCJQgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scEzcZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scEzcpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scEzc5FCEeuCTslxszDstQ" type="_os9dYJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scFagJFCEeuCTslxszDstQ" name="createIndexWord" specification="_sCNh8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scFagZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scFagpFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scFag5FCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>CharSequenceParser p = new CharSequenceParser(line);
     String lemma = stringCache.replace(p.nextToken().replace('_', ' '));
     p.skipToken(); // pos
     p.skipToken(); // sense_cnt

     int pointerCount = p.nextInt();
     for (int i = 0; i &lt; pointerCount; ++i) {
         p.skipToken();    // ptr_symbol
     }
     // Same as sense_cnt above. This is redundant, but the field was preserved for compatibility reasons.
     int senseCount = p.nextInt();

     // Number of senses of lemma that are ranked according to their
     // frequency of occurrence in semantic concordance texts.
     p.skipToken(); // tagged sense count

     long[] synsetOffsets = new long[senseCount];
     for (int i = 0; i &lt; senseCount; i++) {
         synsetOffsets[i] = p.nextLong();
     }
     if (log.isTraceEnabled()) {
         log.trace(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_003&quot;, new Object[]{lemma, pos}));
     }
     return new IndexWord(dictionary, lemma, pos, synsetOffsets);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scGBkJFCEeuCTslxszDstQ" name="createSynset" specification="_sCPXIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scGBkZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scGBkpFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scGBk5FCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>CharSequenceParser p = new CharSequenceParser(line);

     long offset = p.nextLong();
     long lexFileNum = p.nextLong();
     char synsetPOS = p.nextChar();

     Synset synset;
     if (POS.VERB == pos) {
         synset = new VerbSynset(dictionary, offset);
     } else if (POS.ADJECTIVE == pos) {
         synset = new AdjectiveSynset(dictionary, offset);
         if ('s' == synsetPOS) {
             synset.setIsAdjectiveCluster(true);
         }
     } else {
         synset = new Synset(dictionary, POS.getPOSForKey(synsetPOS), offset);
     }

     synset.setLexFileNum(lexFileNum);

     int wordCount = p.nextHexInt();
     for (int i = 0; i &lt; wordCount; i++) {
         String lemma = stringCache.replace(p.nextToken().replace('_', ' '));

         int lexId = p.nextHexInt(); // lex id

         // NB index: Word numbers are assigned to the word fields in a synset, from left to right, beginning with 1
         Word w = createWord(synset, lemma);
         w.setLexId(lexId);
         synset.getWords().add(w);
     }
     if (synset.getWords() instanceof ArrayList) {
         ((ArrayList) synset.getWords()).trimToSize();
     }

     int pointerCount = p.nextInt();
     for (int i = 0; i &lt; pointerCount; i++) {
         CharSequence pt = ((CharSequenceTokenizer) p).nextToken();
         PointerType pointerType = PointerType.getPointerTypeForKey(pt);
         long targetOffset = p.nextLong();
         POS targetPOS = POS.getPOSForKey(p.nextChar());
         int linkIndices = p.nextHexInt();
         int sourceIndex = linkIndices / 256;
         int targetIndex = linkIndices &amp; 255;
         PointerTarget source = (sourceIndex == 0) ? synset : synset.getWords().get(sourceIndex - 1);

         Pointer pointer = new Pointer(source, pointerType, targetPOS, targetOffset, targetIndex);
         synset.getPointers().add(pointer);
     }
     if (synset.getPointers() instanceof ArrayList) {
         ((ArrayList) synset.getPointers()).trimToSize();
     }

     if (POS.VERB == pos) {
         BitSet verbFrames = new BitSet();
         int verbFrameCount = p.nextInt();
         for (int i = 0; i &lt; verbFrameCount; i++) {
             p.skipToken();    // &quot;+&quot;
             int frameNumber = p.nextInt();
             int wordIndex = p.nextHexInt();
             initVerbFrameFlags(synset, verbFrames, frameNumber, wordIndex);
         }
         synset.setVerbFrameFlags(verbFrames);
     }

     p.skipToken(); // |
     CharSequence gloss = ((CharSequenceTokenizer) p).remainder();
     synset.setGloss(gloss.subSequence(0, gloss.length() - 2).toString());

     Long mOffset = maxOffset.get(synset.getPOS());
     if (null == mOffset) {
         maxOffset.put(synset.getPOS(), synset.getOffset());
     } else {
         if (mOffset &lt; synset.getOffset()) {
             maxOffset.put(synset.getPOS(), synset.getOffset());
         }
     }

     if (log.isTraceEnabled()) {
         log.trace(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_002&quot;, new Object[]{pos, offset}));
     }
     return synset;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scHPsJFCEeuCTslxszDstQ" name="createExc" specification="_sCRMUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scHPsZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scHPspFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scHPs5FCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>CharSequenceParser p = new CharSequenceParser(line);
     String lemma = stringCache.replace(p.nextToken().replace('_', ' '));
     ArrayList&lt;String> exceptions = new ArrayList&lt;>();
     while (p.hasMoreTokens()) {
         exceptions.add(stringCache.replace(p.nextToken().replace('_', ' ')));
     }
     exceptions.trimToSize();
     if (log.isTraceEnabled()) {
         log.trace(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_001&quot;, new Object[]{pos, lemma}));
     }
     return new Exc(dictionary, pos, lemma, exceptions);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_sCJQgJFCEeuCTslxszDstQ" name="AbstractPrincetonFileDictionaryElementFactory" visibility="protected" method="_scEzcJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sCJ3kJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sCJ3kZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sCJQgZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCJQgpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCJ3kpFCEeuCTslxszDstQ" type="_os9dYJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sCNh8JFCEeuCTslxszDstQ" name="createIndexWord" method="_scFagJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sCOJAJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCOJAZFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCOJApFCEeuCTslxszDstQ" type="_oHXdAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sCPXIJFCEeuCTslxszDstQ" name="createSynset" method="_scGBkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sCP-MJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCP-MZFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCQlQJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sCRMUJFCEeuCTslxszDstQ" name="createExc" method="_scHPsJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sCRMUZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCRMUpFCEeuCTslxszDstQ" name="line" type="_rysfQJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCRzYJFCEeuCTslxszDstQ" type="_oGjksJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_otBHwJFCEeuCTslxszDstQ" name="PrincetonWN17DatabaseDictionaryElementFactory">
                <ownedComment xmi:id="_se-WcJFCEeuCTslxszDstQ">
                  <body>Element factory for WN1.7.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rsUKcJFCEeuCTslxszDstQ" general="_os390JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scH2wJFCEeuCTslxszDstQ" name="PrincetonWN17DatabaseDictionaryElementFactory" specification="_sCTBgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scH2wZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scH2wpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scH2w5FCEeuCTslxszDstQ" type="_otBHwJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_sCTBgJFCEeuCTslxszDstQ" name="PrincetonWN17DatabaseDictionaryElementFactory" method="_scH2wJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sCTokpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sCUPoJFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sCTokJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCTokZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCUPoZFCEeuCTslxszDstQ" type="_otBHwJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_otFZMJFCEeuCTslxszDstQ" name="PrincetonWN17FileDictionaryElementFactory">
                <ownedComment xmi:id="_se-WcZFCEeuCTslxszDstQ">
                  <body>&lt;code>FileDictionaryElementFactory&lt;/code> that produces elements for the Princeton release of WordNet v 1.7
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rsXNwJFCEeuCTslxszDstQ" general="_os9dYJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scId0JFCEeuCTslxszDstQ" name="PrincetonWN17FileDictionaryElementFactory" specification="_sCX6AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scId0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scId0pFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scId05FCEeuCTslxszDstQ" type="_otFZMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_sCX6AJFCEeuCTslxszDstQ" name="PrincetonWN17FileDictionaryElementFactory" method="_scId0JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sCYhEZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sCYhEpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sCX6AZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCYhEJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCYhE5FCEeuCTslxszDstQ" type="_otFZMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_sSLQkJFCEeuCTslxszDstQ" name="POS"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjMvIJFCEeuCTslxszDstQ" name="" memberEnd="_sjMvIZFCEeuCTslxszDstQ _sSGYEJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjMvIZFCEeuCTslxszDstQ" name="" type="_osVyUJFCEeuCTslxszDstQ" association="_sjMvIJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjPLYZFCEeuCTslxszDstQ" name="" memberEnd="_sjPLYpFCEeuCTslxszDstQ _sSRXMJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjPLYpFCEeuCTslxszDstQ" name="" type="_osVyUJFCEeuCTslxszDstQ" association="_sjPLYZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjRAkZFCEeuCTslxszDstQ" name="" memberEnd="_sjRAkpFCEeuCTslxszDstQ _sSbIMJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjRAkpFCEeuCTslxszDstQ" name="" type="_os9dYJFCEeuCTslxszDstQ" association="_sjRAkZFCEeuCTslxszDstQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_nq6KgJFCEeuCTslxszDstQ" name="file">
              <packagedElement xmi:type="uml:Class" xmi:id="_otKRsJFCEeuCTslxszDstQ" name="AbstractPrincetonDictionaryFile" isAbstract="true">
                <ownedComment xmi:id="_se-9gJFCEeuCTslxszDstQ">
                  <body>&lt;code>AbstractDictionaryFile&lt;/code> that uses file names compatible with Princeton's distribution of WordNet.
The associated filenames are: &amp;lt;index, data&amp;gt;.&amp;lt;noun, verb, adj, adv&amp;gt;, &amp;lt;noun, verb, adj, adv&amp;gt;.exc
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rscGQJFCEeuCTslxszDstQ" general="_okYwMJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sSfZoJFCEeuCTslxszDstQ" name="NOUN_EXT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSgnwJFCEeuCTslxszDstQ" value="&quot;noun&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sShO0JFCEeuCTslxszDstQ" name="VERB_EXT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSh14JFCEeuCTslxszDstQ" value="&quot;verb&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sSjEAJFCEeuCTslxszDstQ" name="ADJECTIVE_EXT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSjrEJFCEeuCTslxszDstQ" value="&quot;adj&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sSlgQJFCEeuCTslxszDstQ" name="ADVERB_EXT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sSlgQZFCEeuCTslxszDstQ" value="&quot;adv&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sSmuYJFCEeuCTslxszDstQ" name="posToExtMap" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <qualifier xmi:id="_sSpxsZFCEeuCTslxszDstQ" type="_sSn8gJFCEeuCTslxszDstQ"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sSq_0JFCEeuCTslxszDstQ" name="fileTypeToFileNameMap" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <qualifier xmi:id="_sSv4UJFCEeuCTslxszDstQ" type="_sSsN8JFCEeuCTslxszDstQ"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scJE4JFCEeuCTslxszDstQ" name="_initializer1" specification="_otN8EJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>posToExtMap = new EnumMap&lt;>(POS.class);
     posToExtMap.put(POS.NOUN, NOUN_EXT);
     posToExtMap.put(POS.VERB, VERB_EXT);
     posToExtMap.put(POS.ADJECTIVE, ADJECTIVE_EXT);
     posToExtMap.put(POS.ADVERB, ADVERB_EXT);

     fileTypeToFileNameMap = new EnumMap&lt;>(DictionaryFileType.class);
     fileTypeToFileNameMap.put(DictionaryFileType.INDEX, &quot;index&quot;);
     fileTypeToFileNameMap.put(DictionaryFileType.DATA, &quot;data&quot;);
     fileTypeToFileNameMap.put(DictionaryFileType.EXCEPTION, &quot;exc&quot;);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scJr8JFCEeuCTslxszDstQ" name="AbstractPrincetonDictionaryFile" specification="_sCdZkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scJr8ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scJr8pFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scJr85FCEeuCTslxszDstQ" type="_otKRsJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scKTAJFCEeuCTslxszDstQ" name="AbstractPrincetonDictionaryFile" specification="_sCiSEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scKTAZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scKTApFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scKTA5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scKTBJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scKTBZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scKTBpFCEeuCTslxszDstQ" type="_otKRsJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, path, pos, fileType, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scK6EJFCEeuCTslxszDstQ" name="getFilename" specification="_otSNgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scK6EZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (null != pos) {
         String posString = posToExtMap.get(pos);
         if (DictionaryFileType.EXCEPTION == fileType) {
             return posString + &quot;.&quot; + fileTypeToFileNameMap.get(fileType);
         } else {
             return fileTypeToFileNameMap.get(fileType) + &quot;.&quot; + posString;
         }
     } else {
         if (DictionaryFileType.REVCNTLIST == fileType) {
             return &quot;cntlist.rev&quot;;
         } else if (DictionaryFileType.CNTLIST == fileType) {
             return &quot;cntlist&quot;;
         } else if (DictionaryFileType.SENSEINDEX == fileType) {
             return &quot;index.sense&quot;;
         } else {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_054&quot;, new Object[]{getPOS(), getFileType()}));
         }
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_otN8EJFCEeuCTslxszDstQ" name="_initializer1" isStatic="true" method="_scJE4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_otN8EZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_otN8EpFCEeuCTslxszDstQ" key="init"/>
                  </eAnnotations>
                </ownedOperation>
                <ownedOperation xmi:id="_otSNgJFCEeuCTslxszDstQ" name="getFilename" method="_scK6EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_otS0kJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sCdZkJFCEeuCTslxszDstQ" name="AbstractPrincetonDictionaryFile" visibility="protected" method="_scJr8JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sCfOwJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sCfOwZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sCeAoJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCeAoZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCfOwpFCEeuCTslxszDstQ" type="_otKRsJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sCiSEJFCEeuCTslxszDstQ" name="AbstractPrincetonDictionaryFile" visibility="protected" method="_scKTAJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sCjgMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sCjgMZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sCiSEZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCi5IJFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sCi5IZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCi5IpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCi5I5FCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sCjgMpFCEeuCTslxszDstQ" type="_otKRsJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_otbXcJFCEeuCTslxszDstQ" name="AbstractPrincetonObjectDictionaryFile" isAbstract="true">
                <ownedComment xmi:id="_se-9gZFCEeuCTslxszDstQ">
                  <body>Parent for &lt;code>ObjectDictionaryFile&lt;/code>s that access files with the Princeton dictionary file naming convention.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rsoTgJFCEeuCTslxszDstQ" general="_otKRsJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sS0w0JFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_sjTc0ZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sS1X4JFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(AbstractPrincetonObjectDictionaryFile.class)"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sS1-8JFCEeuCTslxszDstQ" name="in" visibility="protected" type="_rVrzIJFCEeuCTslxszDstQ" association="_sjWgIJFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sS2mAJFCEeuCTslxszDstQ" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sS4bMJFCEeuCTslxszDstQ" name="out" visibility="protected" type="_rWIfEJFCEeuCTslxszDstQ" association="_sjYVUJFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sS5CQJFCEeuCTslxszDstQ" value="null"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rsiz8JFCEeuCTslxszDstQ" client="_otbXcJFCEeuCTslxszDstQ" supplier="_om-KIJFCEeuCTslxszDstQ" contract="_om-KIJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scLhIJFCEeuCTslxszDstQ" name="AbstractPrincetonObjectDictionaryFile" specification="_sCsDEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scLhIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scLhIpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scLhI5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scLhJJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scLhJZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scLhJpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scLhJ5FCEeuCTslxszDstQ" type="_otbXcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scMIMJFCEeuCTslxszDstQ" name="AbstractPrincetonObjectDictionaryFile" specification="_sCzX0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scMvQJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scMvQZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scMvQpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scMvQ5FCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_scMvRJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scMvRZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scMvRpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scMvR5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scMvSJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scMvSZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scMvSpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scMvS5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scMvTJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scMvTZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scMvTpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scMvT5FCEeuCTslxszDstQ" type="_otbXcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, path, pos, fileType, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scMvUJFCEeuCTslxszDstQ" name="isOpen" specification="_otiFIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scMvUZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (null != in || null != out);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scNWUJFCEeuCTslxszDstQ" name="save" specification="_otm9opFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (dictionary instanceof MapBackedDictionary) {
         final MapBackedDictionary dic = (MapBackedDictionary) dictionary;
         if (log.isDebugEnabled()) {
             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_004&quot;, getFilename()));
         }
         Map&lt;Object, ? extends DictionaryElement> map = dic.getTable(getPOS(), getFileType());

         try {
             getOutputStream().reset();
         } catch (IOException e) {
             throw new JWNLIOException(e);
         }

         writeObject(map);

         if (log.isDebugEnabled()) {
             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_012&quot;, getFilename()));
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scNWUZFCEeuCTslxszDstQ" name="close" specification="_otqA8JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>try {
         closeStreams(in, out);
     } catch (IOException e) {
         if (log.isErrorEnabled()) {
             log.error(dictionary.getMessages().resolveMessage(&quot;EXCEPTION_001&quot;, e.getMessage()), e);
         }
     } finally {
         in = null;
         out = null;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scN9YJFCEeuCTslxszDstQ" name="closeStreams" specification="_sC6FgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scN9YZFCEeuCTslxszDstQ" name="in" type="_rtYhcJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scN9YpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scN9Y5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scN9ZJFCEeuCTslxszDstQ" name="out" type="_rf4Q8JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scN9ZZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scN9ZpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (canRead()) {
         in.close();
     }
     if (canWrite()) {
         out.flush();
         out.close();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scOkcJFCEeuCTslxszDstQ" name="edit" specification="_otsdMJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>openStreams();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scPLgJFCEeuCTslxszDstQ" name="openStreams" specification="_otvggJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (!canWrite()) {
         openOutputStream();
     }
     if (!canRead()) {
         openInputStream();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scPLgZFCEeuCTslxszDstQ" name="getInputStream" specification="_ot1AEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scPLgpFCEeuCTslxszDstQ" type="_rVrzIJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (!canRead()) {
         openInputStream();
     }
     return in;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scPykJFCEeuCTslxszDstQ" name="getOutputStream" specification="_ot21QJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scPykZFCEeuCTslxszDstQ" type="_rWIfEJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (!canWrite()) {
         openOutputStream();
     }
     return out;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scQZoJFCEeuCTslxszDstQ" name="canRead" specification="_ot4DYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scQZoZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return in != null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scQZopFCEeuCTslxszDstQ" name="canWrite" specification="_ot5RgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scQZo5FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return out != null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scRnwJFCEeuCTslxszDstQ" name="readObject" specification="_ot6foJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scRnwZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (isOpen()) {
         if (canRead()) {
             try {
                 return getInputStream().readObject();
             } catch (IOException | ClassNotFoundException e) {
                 throw new JWNLException(e);
             }
         } else {
             return new HashMap&lt;Object, DictionaryElement>();
         }
     } else {
         throw new JWNLRuntimeException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;));
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scRnwpFCEeuCTslxszDstQ" name="writeObject" specification="_sC9v4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scRnw5FCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>if (isOpen() &amp;&amp; canWrite()) {
         try {
             getOutputStream().writeObject(obj);
         } catch (IOException e) {
             throw new JWNLIOException(e);
         }
     } else {
         throw new JWNLRuntimeException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_002&quot;));
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_otiFIJFCEeuCTslxszDstQ" name="isOpen" method="_scMvUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_otisMJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_otm9opFCEeuCTslxszDstQ" name="save" method="_scNWUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_otqA8JFCEeuCTslxszDstQ" name="close" method="_scNWUZFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_otsdMJFCEeuCTslxszDstQ" name="edit" method="_scOkcJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_otvggJFCEeuCTslxszDstQ" name="openStreams" visibility="protected" method="_scPLgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_otwuoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_otwuoZFCEeuCTslxszDstQ" key="synchronized"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_se_kkZFCEeuCTslxszDstQ">
                    <body>Open the input and output streams.
     *
     * @throws JWNLException JWNLException</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_otyj0JFCEeuCTslxszDstQ" name="openOutputStream" visibility="protected" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_otzx8JFCEeuCTslxszDstQ" name="openInputStream" visibility="protected" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ot1AEJFCEeuCTslxszDstQ" name="getInputStream" visibility="protected" method="_scPLgZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sC76sJFCEeuCTslxszDstQ" type="_rVrzIJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ot21QJFCEeuCTslxszDstQ" name="getOutputStream" visibility="protected" method="_scPykJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sC8hwJFCEeuCTslxszDstQ" type="_rWIfEJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ot4DYJFCEeuCTslxszDstQ" name="canRead" visibility="protected" method="_scQZoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ot4qcJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ot5RgJFCEeuCTslxszDstQ" name="canWrite" visibility="protected" method="_scQZopFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ot54kJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ot6foJFCEeuCTslxszDstQ" name="readObject" method="_scRnwJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sC9I0JFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ot_YIJFCEeuCTslxszDstQ" name="open" isAbstract="true" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_sCsDEJFCEeuCTslxszDstQ" name="AbstractPrincetonObjectDictionaryFile" method="_scLhIJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sCtRMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sCtRMZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_se-9gpFCEeuCTslxszDstQ">
                    <body>Factory constructor.
     *
     * @param dictionary dictionary
     * @param params     params</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_sCsqIJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sCt4QJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sCt4QZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sCsqIZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sCt4QpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sCt4Q5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sCtRMpFCEeuCTslxszDstQ" type="_otbXcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sCzX0JFCEeuCTslxszDstQ" name="AbstractPrincetonObjectDictionaryFile" visibility="protected" method="_scMIMJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sC0l8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sC0l8ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_se_kkJFCEeuCTslxszDstQ">
                    <body>Instance constructor.
     *
     * @param dictionary dictionary
     * @param path       file path
     * @param pos        part of speech
     * @param fileType   file type
     * @param params     params</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_sCzX0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sC1NAZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sC10EJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sCz-4JFCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_sC10EZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sC10EpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sCz-4ZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sC10E5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sC2bIJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sCz-4pFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sC2bIZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sC2bIpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sCz-45FCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sC2bI5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sC2bJJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sC1NAJFCEeuCTslxszDstQ" type="_otbXcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sC6FgJFCEeuCTslxszDstQ" name="closeStreams" visibility="protected" method="_scN9YJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sC6FgZFCEeuCTslxszDstQ" name="in" type="_rtYhcJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sC6skJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sC6skZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sC6FgpFCEeuCTslxszDstQ" name="out" type="_rf4Q8JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sC7ToJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sC7ToZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_sC9v4JFCEeuCTslxszDstQ" name="writeObject" method="_scRnwpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sC9v4ZFCEeuCTslxszDstQ" name="obj" type="_ryMwAJFCEeuCTslxszDstQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_ouThMJFCEeuCTslxszDstQ" name="AbstractPrincetonRandomAccessDictionaryFile" isAbstract="true">
                <ownedComment xmi:id="_sfALoJFCEeuCTslxszDstQ">
                  <body>Base class for text files.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rs1u4JFCEeuCTslxszDstQ" general="_otKRsJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sTCzQJFCEeuCTslxszDstQ" name="ENCODING_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sTDaUJFCEeuCTslxszDstQ" value="&quot;encoding&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sTEBYJFCEeuCTslxszDstQ" name="encoding" visibility="protected" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rszSoJFCEeuCTslxszDstQ" client="_ouThMJFCEeuCTslxszDstQ" supplier="_onE30JFCEeuCTslxszDstQ" contract="_onE30JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scS14JFCEeuCTslxszDstQ" name="AbstractPrincetonRandomAccessDictionaryFile" specification="_sDFEoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scS14ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scS14pFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scS145FCEeuCTslxszDstQ" type="_ouThMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
     this.encoding = null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scUEAJFCEeuCTslxszDstQ" name="AbstractPrincetonRandomAccessDictionaryFile" specification="_sDMZYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scUEAZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scUEApFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scUEA5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scUEBJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scUEBZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_scUEBpFCEeuCTslxszDstQ" type="_ouThMJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, path, pos, fileType, params);
     Param param = params.get(ENCODING_KEY);
     if (null != param) {
         encoding = param.getValue();
     } else {
         encoding = null;
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_sDFEoJFCEeuCTslxszDstQ" name="AbstractPrincetonRandomAccessDictionaryFile" visibility="protected" method="_scS14JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sDG50JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sDG50ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sDFEoZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sDFrsJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sDG50pFCEeuCTslxszDstQ" type="_ouThMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDMZYJFCEeuCTslxszDstQ" name="AbstractPrincetonRandomAccessDictionaryFile" visibility="protected" method="_scUEAJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sDNngZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sDNngpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sDMZYZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sDMZYpFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDNAcJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sDNAcZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sDNngJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_sDOOkJFCEeuCTslxszDstQ" type="_ouThMJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_oufHYJFCEeuCTslxszDstQ" name="PrincetonObjectDictionaryFile">
                <ownedComment xmi:id="_sfAysJFCEeuCTslxszDstQ">
                  <body>&lt;code>ObjectDictionaryFile&lt;/code> that loads dictionary files from file system.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_rs9DoJFCEeuCTslxszDstQ" general="_otbXcJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sTHrwJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_sjaKgZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sTIS0JFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(PrincetonObjectDictionaryFile.class)"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sTI54JFCEeuCTslxszDstQ" name="file" visibility="protected" isLeaf="true" type="_roxuQJFCEeuCTslxszDstQ" isReadOnly="true" association="_sjcmwZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_sTKvEJFCEeuCTslxszDstQ" name="fin" visibility="private" type="_sDTuIJFCEeuCTslxszDstQ" association="_sjfDAZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sTLWIJFCEeuCTslxszDstQ" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sTNyYJFCEeuCTslxszDstQ" name="fout" visibility="private" type="_sDXYgJFCEeuCTslxszDstQ" association="_sjitYJFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sTOZcJFCEeuCTslxszDstQ" value="null"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_rs6AUJFCEeuCTslxszDstQ" client="_oufHYJFCEeuCTslxszDstQ" supplier="_ol_5wJFCEeuCTslxszDstQ" contract="_ol_5wJFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_rs6nYJFCEeuCTslxszDstQ" client="_oufHYJFCEeuCTslxszDstQ" supplier="_omUp4JFCEeuCTslxszDstQ" contract="_omUp4JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scVSIJFCEeuCTslxszDstQ" name="PrincetonObjectDictionaryFile" specification="_sDbC4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scVSIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scVSIpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scVSI5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scVSJJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scVSJZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scVSJpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scVSJ5FCEeuCTslxszDstQ" type="_oufHYJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
     file = null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scV5MJFCEeuCTslxszDstQ" name="PrincetonObjectDictionaryFile" specification="_sDf7YJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scV5MZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scV5MpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scV5M5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scV5NJFCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_scV5NZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scV5NpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scV5N5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scV5OJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scV5OZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scV5OpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scV5O5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scV5PJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scV5PZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scV5PpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scV5P5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scV5QJFCEeuCTslxszDstQ" type="_oufHYJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, path, pos, fileType, params);
     file = new File(path, getFilename());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scWgQJFCEeuCTslxszDstQ" name="newInstance" specification="_sDnQIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scWgQZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scWgQpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scWgQ5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scWgRJFCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_scWgRZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scWgRpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scWgR5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scWgSJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scWgSZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scWgSpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scWgS5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scWgTJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scWgTZFCEeuCTslxszDstQ" type="_oufHYJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return new PrincetonObjectDictionaryFile(dictionary, path, pos, fileType, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scYVcJFCEeuCTslxszDstQ" name="close" specification="_oulOAJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>super.close();
     try {
         closeStreams(fin, fout);
     } catch (IOException e) {
         if (log.isErrorEnabled()) {
             log.error(dictionary.getMessages().resolveMessage(&quot;EXCEPTION_001&quot;, e.getMessage()), e);
         }
     } finally {
         fin = null;
         fout = null;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scYVcZFCEeuCTslxszDstQ" name="openOutputStream" specification="_ounqQJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>try {
         fout = new FileOutputStream(getFile());
         out = new ObjectOutputStream(fout);
     } catch (IOException e) {
         throw new JWNLIOException(e);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scYVcpFCEeuCTslxszDstQ" name="openInputStream" specification="_ouoRUJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>try {
         fin = new FileInputStream(getFile());
         in = new ObjectInputStream(new BufferedInputStream(fin));
     } catch (IOException e) {
         throw new JWNLIOException(e);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scY8gJFCEeuCTslxszDstQ" name="open" specification="_oupfcJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>synchronized (file) {
         if (!isOpen()) {
             try {
                 if (file.createNewFile()) {
                     openOutputStream();
                 } else {
                     openInputStream();
                 }
             } catch (IOException e) {
                 throw new JWNLIOException(e);
             }
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scZjkJFCEeuCTslxszDstQ" name="delete" specification="_our7sJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scZjkZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>close();
     return file.delete();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scZjkpFCEeuCTslxszDstQ" name="getFile" specification="_ouu_AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scZjk5FCEeuCTslxszDstQ" type="_roxuQJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return file;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oulOAJFCEeuCTslxszDstQ" name="close" method="_scYVcJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ounqQJFCEeuCTslxszDstQ" name="openOutputStream" visibility="protected" method="_scYVcZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ouoRUJFCEeuCTslxszDstQ" name="openInputStream" visibility="protected" method="_scYVcpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_oupfcJFCEeuCTslxszDstQ" name="open" method="_scY8gJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_our7sJFCEeuCTslxszDstQ" name="delete" method="_scZjkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ousiwJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ouu_AJFCEeuCTslxszDstQ" name="getFile" method="_scZjkpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sDuk4JFCEeuCTslxszDstQ" type="_roxuQJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDbC4JFCEeuCTslxszDstQ" name="PrincetonObjectDictionaryFile" method="_scVSIJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sDcRAJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sDcRAZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_sfAysZFCEeuCTslxszDstQ">
                    <body>Factory constructor.
     *
     * @param dictionary dictionary
     * @param params     params</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_sDbp8JFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sDc4EJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDc4EZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDbp8ZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sDc4EpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDc4E5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDcRApFCEeuCTslxszDstQ" type="_oufHYJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDf7YJFCEeuCTslxszDstQ" name="PrincetonObjectDictionaryFile" visibility="private" method="_scV5MJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sDhwkJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sDhwkZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_sfAyspFCEeuCTslxszDstQ">
                    <body>Instance constructor.
     *
     * @param dictionary dictionary
     * @param path       file path
     * @param pos        part of speech
     * @param fileType   file type
     * @param params     params</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_sDgicJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sDiXoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDiXoZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDgicZFCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_sDi-sJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDi-sZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDhJgJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sDi-spFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDi-s5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDhJgZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sDjlwJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDjlwZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDhJgpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sDjlwpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDjlw5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDhwkpFCEeuCTslxszDstQ" type="_oufHYJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDnQIJFCEeuCTslxszDstQ" name="newInstance" method="_scWgQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sDnQIZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sDq6gJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDrhkJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDn3MJFCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_sDsIoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDsIoZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDn3MZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sDsvsJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDsvsZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDn3MpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sDsvspFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sDsvs5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sDpFUJFCEeuCTslxszDstQ" type="_oufHYJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_ovMSAJFCEeuCTslxszDstQ" name="PrincetonResourceObjectDictionaryFile">
                <ownedComment xmi:id="_sfCA0JFCEeuCTslxszDstQ">
                  <body>&lt;code>ObjectDictionaryFile&lt;/code> that loads dictionary files from classpath.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a>
@author Paul Landes</body>
                </ownedComment>
                <generalization xmi:id="_rtAG8JFCEeuCTslxszDstQ" general="_otbXcJFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_rs_f4JFCEeuCTslxszDstQ" client="_ovMSAJFCEeuCTslxszDstQ" supplier="_omUp4JFCEeuCTslxszDstQ" contract="_omUp4JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scaxsJFCEeuCTslxszDstQ" name="PrincetonResourceObjectDictionaryFile" specification="_sD1SkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scaxsZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scaxspFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scaxs5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scaxtJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scaxtZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scaxtpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scaxt5FCEeuCTslxszDstQ" type="_ovMSAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scbYwJFCEeuCTslxszDstQ" name="PrincetonResourceObjectDictionaryFile" specification="_sD488JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scbYwZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scbYwpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scbYw5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scbYxJFCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_scbYxZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scbYxpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scbYx5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scbYyJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scbYyZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scbYypFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scbYy5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scbYzJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scbYzZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scbYzpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scbYz5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scbY0JFCEeuCTslxszDstQ" type="_ovMSAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, path, pos, fileType, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_scb_0JFCEeuCTslxszDstQ" name="newInstance" specification="_sD5kC5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_scb_0ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scb_0pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scb_05FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scb_1JFCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_scb_1ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scb_1pFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scb_15FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scb_2JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scb_2ZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scb_2pFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_scb_25FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_scb_3JFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_scb_3ZFCEeuCTslxszDstQ" type="_ovMSAJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return new PrincetonResourceObjectDictionaryFile(dictionary, path, pos, fileType, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sccm4JFCEeuCTslxszDstQ" name="openOutputStream" specification="_ovTmwJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sccm4ZFCEeuCTslxszDstQ" name="openInputStream" specification="_ovU04JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>try {
         final InputStream resourceStream =
                 PrincetonResourceObjectDictionaryFile.class.getResourceAsStream(path + &quot;/&quot; + getFilename());
         in = new ObjectInputStream(resourceStream);
     } catch (IOException e) {
         throw new JWNLIOException(e);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sccm4pFCEeuCTslxszDstQ" name="open" specification="_ovVb8JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>openInputStream();
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ovTmwJFCEeuCTslxszDstQ" name="openOutputStream" visibility="protected" method="_sccm4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ovU04JFCEeuCTslxszDstQ" name="openInputStream" visibility="protected" method="_sccm4ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ovVb8JFCEeuCTslxszDstQ" name="open" method="_sccm4pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_sD1SkJFCEeuCTslxszDstQ" name="PrincetonResourceObjectDictionaryFile" method="_scaxsJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sD15oZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sD15opFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sD1SkZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sD3HwJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD3HwZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD15oJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sD3HwpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD3Hw5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD2gsJFCEeuCTslxszDstQ" type="_ovMSAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sD488JFCEeuCTslxszDstQ" name="PrincetonResourceObjectDictionaryFile" visibility="private" method="_scbYwJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_sD489pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_sD4895FCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_sD488ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sD5kAJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD5kAZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD488pFCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_sD5kApFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD5kA5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD4885FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sD5kBJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD5kBZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD489JFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sD5kBpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD5kB5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD489ZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sD5kCJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD5kCZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD48-JFCEeuCTslxszDstQ" type="_ovMSAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sD5kC5FCEeuCTslxszDstQ" name="newInstance" method="_scb_0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_sD6LEJFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sD6LFpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD6LF5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD6LEZFCEeuCTslxszDstQ" name="path">
                    <eAnnotations xmi:id="_sD6LGJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD6LGZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD6LEpFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sD6LGpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD6LG5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD6LE5FCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_sD6LHJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_sD6LHZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sD6LFJFCEeuCTslxszDstQ" type="_ovMSAJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_sSn8gJFCEeuCTslxszDstQ" name="POS"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_sSsN8JFCEeuCTslxszDstQ" name="DictionaryFileType"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjTc0ZFCEeuCTslxszDstQ" name="" memberEnd="_sjTc0pFCEeuCTslxszDstQ _sS0w0JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjTc0pFCEeuCTslxszDstQ" name="" type="_otbXcJFCEeuCTslxszDstQ" association="_sjTc0ZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjWgIJFCEeuCTslxszDstQ" name="" memberEnd="_sjWgIZFCEeuCTslxszDstQ _sS1-8JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjWgIZFCEeuCTslxszDstQ" name="" type="_otbXcJFCEeuCTslxszDstQ" association="_sjWgIJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjYVUJFCEeuCTslxszDstQ" name="" memberEnd="_sjYVUZFCEeuCTslxszDstQ _sS4bMJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjYVUZFCEeuCTslxszDstQ" name="" type="_otbXcJFCEeuCTslxszDstQ" association="_sjYVUJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjaKgZFCEeuCTslxszDstQ" name="" memberEnd="_sjaKgpFCEeuCTslxszDstQ _sTHrwJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjaKgpFCEeuCTslxszDstQ" name="" type="_oufHYJFCEeuCTslxszDstQ" association="_sjaKgZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjcmwZFCEeuCTslxszDstQ" name="" memberEnd="_sjcmwpFCEeuCTslxszDstQ _sTI54JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjcmwpFCEeuCTslxszDstQ" name="" type="_oufHYJFCEeuCTslxszDstQ" association="_sjcmwZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjfDAZFCEeuCTslxszDstQ" name="" memberEnd="_sjfDApFCEeuCTslxszDstQ _sTKvEJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjfDApFCEeuCTslxszDstQ" name="" type="_oufHYJFCEeuCTslxszDstQ" association="_sjfDAZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_sjitYJFCEeuCTslxszDstQ" name="" memberEnd="_sjitYZFCEeuCTslxszDstQ _sTNyYJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_sjitYZFCEeuCTslxszDstQ" name="" type="_oufHYJFCEeuCTslxszDstQ" association="_sjitYJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yRXy4JFCEeuCTslxszDstQ" name="PrincetonRandomAccessDictionaryFile">
                <ownedComment xmi:id="_yzQ_ApFCEeuCTslxszDstQ">
                  <body>A &lt;code>RandomAccessDictionaryFile&lt;/code> that accesses files
named with Princeton's dictionary file naming convention.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_ySU1IJFCEeuCTslxszDstQ" general="_ouThMJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yuJ1gJFCEeuCTslxszDstQ" name="log" visibility="private" isLeaf="true" isStatic="true" type="_rWFbwJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0NaN5FCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuJ1gZFCEeuCTslxszDstQ" value="LoggerFactory.getLogger(PrincetonRandomAccessDictionaryFile.class)"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuKckJFCEeuCTslxszDstQ" name="WRITE_PRINCETON_HEADER_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuKckZFCEeuCTslxszDstQ" value="&quot;write_princeton_header&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuKckpFCEeuCTslxszDstQ" name="writePrincetonHeader" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuLDoJFCEeuCTslxszDstQ" value="false"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuLqsJFCEeuCTslxszDstQ" name="CHECK_LEX_FILE_NUMBER_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuLqsZFCEeuCTslxszDstQ" value="&quot;check_lex_file_number&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuLqspFCEeuCTslxszDstQ" name="checkLexFileNumber" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuMRwJFCEeuCTslxszDstQ" value="true"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuM40ZFCEeuCTslxszDstQ" name="CHECK_RELATION_LIMIT_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuM40pFCEeuCTslxszDstQ" value="&quot;check_relation_limit&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuM405FCEeuCTslxszDstQ" name="checkRelationLimit" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuM41JFCEeuCTslxszDstQ" value="true"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuM41pFCEeuCTslxszDstQ" name="CHECK_WORD_COUNT_LIMIT_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuM415FCEeuCTslxszDstQ" value="&quot;check_word_count_limit&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuM42JFCEeuCTslxszDstQ" name="checkWordCountLimit" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuM42ZFCEeuCTslxszDstQ" value="true"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuNf4ZFCEeuCTslxszDstQ" name="CHECK_LEX_ID_LIMIT_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuNf4pFCEeuCTslxszDstQ" value="&quot;check_lex_id_limit&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuNf45FCEeuCTslxszDstQ" name="checkLexIdLimit" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuNf5JFCEeuCTslxszDstQ" value="true"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuNf5pFCEeuCTslxszDstQ" name="CHECK_POINTER_INDEX_LIMIT_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuNf55FCEeuCTslxszDstQ" value="&quot;check_pointer_index_limit&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuNf6JFCEeuCTslxszDstQ" name="checkPointerIndexLimit" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuNf6ZFCEeuCTslxszDstQ" value="true"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuOG8JFCEeuCTslxszDstQ" name="CHECK_VERB_FRAME_LIMIT_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuOG8ZFCEeuCTslxszDstQ" value="&quot;check_verb_frame_limit&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuOG8pFCEeuCTslxszDstQ" name="checkVerbFrameLimit" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuOG85FCEeuCTslxszDstQ" value="true"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuOG9ZFCEeuCTslxszDstQ" name="CHECK_DATA_FILE_LINE_LENGTH_LIMIT_KEY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuOG9pFCEeuCTslxszDstQ" value="&quot;check_data_file_line_length_limit&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuOG95FCEeuCTslxszDstQ" name="dataFileLineLengthLimit" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuOG-JFCEeuCTslxszDstQ" value="15360"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuOuAJFCEeuCTslxszDstQ" name="checkDataFileLineLengthLimit" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuOuAZFCEeuCTslxszDstQ" value="true"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuOuA5FCEeuCTslxszDstQ" name="PRINCETON_HEADER_HEAD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuOuBJFCEeuCTslxszDstQ" value="&quot;  1 This software and database is being provided to you, the LICENSEE, by  \n&quot; +&#xA;            &quot;  2 Princeton University under the following license.  By obtaining, using  \n&quot; +&#xA;            &quot;  3 and/or copying this software and database, you agree that you have  \n&quot; +&#xA;            &quot;  4 read, understood, and will comply with these terms and conditions.:  \n&quot; +&#xA;            &quot;  5   \n&quot; +&#xA;            &quot;  6 Permission to use, copy, modify and distribute this software and  \n&quot; +&#xA;            &quot;  7 database and its documentation for any purpose and without fee or  \n&quot; +&#xA;            &quot;  8 royalty is hereby granted, provided that you agree to comply with  \n&quot; +&#xA;            &quot;  9 the following copyright notice and statements, including the disclaimer,  \n&quot; +&#xA;            &quot;  10 and that the same appear on ALL copies of the software, database and  \n&quot; +&#xA;            &quot;  11 documentation, including modifications that you make for internal  \n&quot; +&#xA;            &quot;  12 use or for distribution.  \n&quot; +&#xA;            &quot;  13   \n&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuOuBZFCEeuCTslxszDstQ" name="PRINCETON_HEADER_21" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuOuBpFCEeuCTslxszDstQ" value="&quot;  14 WordNet 2.1 Copyright 2005 by Princeton University.  All rights reserved.  \n&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuPVEJFCEeuCTslxszDstQ" name="PRINCETON_HEADER_30" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuPVEZFCEeuCTslxszDstQ" value="&quot;  14 WordNet 3.0 Copyright 2006 by Princeton University.  All rights reserved.  \n&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuPVEpFCEeuCTslxszDstQ" name="PRINCETON_HEADER_31" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuPVE5FCEeuCTslxszDstQ" value="&quot;  14 WordNet 3.1 Copyright 2011 by Princeton University.  All rights reserved.  \n&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuPVFJFCEeuCTslxszDstQ" name="PRINCETON_HEADER_TAIL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuPVFZFCEeuCTslxszDstQ" value="&quot;  15   \n&quot; +&#xA;            &quot;  16 THIS SOFTWARE AND DATABASE IS PROVIDED \&quot;AS IS\&quot; AND PRINCETON  \n&quot; +&#xA;            &quot;  17 UNIVERSITY MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR  \n&quot; +&#xA;            &quot;  18 IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, PRINCETON  \n&quot; +&#xA;            &quot;  19 UNIVERSITY MAKES NO REPRESENTATIONS OR WARRANTIES OF MERCHANT-  \n&quot; +&#xA;            &quot;  20 ABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE  \n&quot; +&#xA;            &quot;  21 OF THE LICENSED SOFTWARE, DATABASE OR DOCUMENTATION WILL NOT  \n&quot; +&#xA;            &quot;  22 INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR  \n&quot; +&#xA;            &quot;  23 OTHER RIGHTS.  \n&quot; +&#xA;            &quot;  24   \n&quot; +&#xA;            &quot;  25 The name of Princeton University or Princeton may not be used in  \n&quot; +&#xA;            &quot;  26 advertising or publicity pertaining to distribution of the software  \n&quot; +&#xA;            &quot;  27 and/or database.  Title to copyright in this software, database and  \n&quot; +&#xA;            &quot;  28 any associated documentation shall at all times remain with  \n&quot; +&#xA;            &quot;  29 Princeton University and LICENSEE agrees to preserve same.  \n&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuPVFpFCEeuCTslxszDstQ" name="PRINCETON_HEADER_LENGTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuPVF5FCEeuCTslxszDstQ" value="PRINCETON_HEADER_HEAD.length() + PRINCETON_HEADER_21.length() + PRINCETON_HEADER_TAIL.length()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuP8IJFCEeuCTslxszDstQ" name="READ_ONLY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuP8IZFCEeuCTslxszDstQ" value="&quot;r&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuP8IpFCEeuCTslxszDstQ" name="READ_WRITE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuP8I5FCEeuCTslxszDstQ" value="&quot;rw&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuP8JJFCEeuCTslxszDstQ" name="digits" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yuP8JZFCEeuCTslxszDstQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuP8J5FCEeuCTslxszDstQ" value="{&#xA;            '0', '1', '2', '3', '4', '5',&#xA;            '6', '7', '8', '9', 'a', 'b',&#xA;            'c', 'd', 'e', 'f', 'g', 'h',&#xA;            'i', 'j', 'k', 'l', 'm', 'n',&#xA;            'o', 'p', 'q', 'r', 's', 't',&#xA;            'u', 'v', 'w', 'x', 'y', 'z'&#xA;    }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuQjMZFCEeuCTslxszDstQ" name="DigitTens" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yuQjMpFCEeuCTslxszDstQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuQjNJFCEeuCTslxszDstQ" value="{&#xA;            '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',&#xA;            '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',&#xA;            '2', '2', '2', '2', '2', '2', '2', '2', '2', '2',&#xA;            '3', '3', '3', '3', '3', '3', '3', '3', '3', '3',&#xA;            '4', '4', '4', '4', '4', '4', '4', '4', '4', '4',&#xA;            '5', '5', '5', '5', '5', '5', '5', '5', '5', '5',&#xA;            '6', '6', '6', '6', '6', '6', '6', '6', '6', '6',&#xA;            '7', '7', '7', '7', '7', '7', '7', '7', '7', '7',&#xA;            '8', '8', '8', '8', '8', '8', '8', '8', '8', '8',&#xA;            '9', '9', '9', '9', '9', '9', '9', '9', '9', '9',&#xA;    }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuQjNpFCEeuCTslxszDstQ" name="DigitOnes" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yuRKQJFCEeuCTslxszDstQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuRxUJFCEeuCTslxszDstQ" value="{&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',&#xA;    }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuSYYZFCEeuCTslxszDstQ" name="synsetOffsetComparator" visibility="private" isLeaf="true" isStatic="true" type="_rzBPYJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0OBQZFCEeuCTslxszDstQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_yuUNkZFCEeuCTslxszDstQ" value="(o1, o2) -> (int) (o1.getOffset() - o2.getOffset())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuU0oZFCEeuCTslxszDstQ" name="file" visibility="protected" isLeaf="true" type="_roxuQJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0OBRJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yuWCwJFCEeuCTslxszDstQ" name="raFile" visibility="protected" type="_yopDYJFCEeuCTslxszDstQ" association="_y0OBR5FCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yuWp0ZFCEeuCTslxszDstQ" name="raFileLength" visibility="protected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuX38JFCEeuCTslxszDstQ" name="charset" visibility="private" isLeaf="true" type="_yot74pFCEeuCTslxszDstQ" isReadOnly="true" association="_y0OoUZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yuZGEJFCEeuCTslxszDstQ" name="decoder" visibility="private" isLeaf="true" type="_youi8ZFCEeuCTslxszDstQ" isReadOnly="true" association="_y0OoVJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yuZtIZFCEeuCTslxszDstQ" name="encoder" visibility="private" isLeaf="true" type="_yrMoIJFCEeuCTslxszDstQ" isReadOnly="true" association="_y0OoV5FCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yua7QJFCEeuCTslxszDstQ" name="chars" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yua7QZFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yucJYJFCEeuCTslxszDstQ" name="bytes" visibility="private" type="_yopqcZFCEeuCTslxszDstQ" association="_y0PPYZFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yucwcJFCEeuCTslxszDstQ" name="bytesBacker" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yucwcZFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yud-kJFCEeuCTslxszDstQ" name="offsetLength">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yuhB4JFCEeuCTslxszDstQ" name="firstLineOffset" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_yRaPIJFCEeuCTslxszDstQ" client="_yRXy4JFCEeuCTslxszDstQ" supplier="_omUp4JFCEeuCTslxszDstQ" contract="_omUp4JFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_yRcrYJFCEeuCTslxszDstQ" client="_yRXy4JFCEeuCTslxszDstQ" supplier="_ol_5wJFCEeuCTslxszDstQ" contract="_ol_5wJFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxMicJFCEeuCTslxszDstQ" name="formatOffset" specification="_yRknMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxMicZFCEeuCTslxszDstQ" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxMicpFCEeuCTslxszDstQ" name="formatLength">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxMic5FCEeuCTslxszDstQ" name="target" type="_r4ch8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>int lastIdx = target.length();
     target.setLength(target.length() + formatLength);

     // lifted from Long.java
     long q;
     int r;
     int charPos = lastIdx + formatLength;

     // Get 2 digits/iteration using longs until quotient fits into an int
     while (i > Integer.MAX_VALUE &amp;&amp; 0 &lt; charPos) {
         q = i / 100;
         // really: r = i - (q * 100);
         r = (int) (i - ((q &lt;&lt; 6) + (q &lt;&lt; 5) + (q &lt;&lt; 2)));
         i = q;
         target.setCharAt(--charPos, DigitOnes[r]);
         target.setCharAt(--charPos, DigitTens[r]);
     }

     // Get 2 digits/iteration using ints
     int q2;
     int i2 = (int) i;
     while (i2 >= 65536 &amp;&amp; 0 &lt; charPos) {
         q2 = i2 / 100;
         // really: r = i2 - (q * 100);
         r = i2 - ((q2 &lt;&lt; 6) + (q2 &lt;&lt; 5) + (q2 &lt;&lt; 2));
         i2 = q2;
         target.setCharAt(--charPos, DigitOnes[r]);
         target.setCharAt(--charPos, DigitTens[r]);
     }

     // Fall through to fast mode for smaller numbers
     // assert(i2 &lt;= 65536, i2);
     while (0 &lt; charPos) {
         q2 = (i2 * 52429) >>> (16 + 3);
         r = i2 - ((q2 &lt;&lt; 3) + (q2 &lt;&lt; 1));  // r = i2-(q2*10) ...
         target.setCharAt(--charPos, digits[r]);
         i2 = q2;
         if (i2 == 0) {
             break;
         }
     }

     while (lastIdx &lt; charPos &amp;&amp; 0 &lt; charPos) {
         target.setCharAt(--charPos, '0');
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxMidJFCEeuCTslxszDstQ" name="PrincetonRandomAccessDictionaryFile" specification="_yRmcYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxMidZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxMidpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxMid5FCEeuCTslxszDstQ" type="_yRXy4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
     this.file = null;
     this.charset = null;
     this.decoder = null;
     this.encoder = null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxNJgJFCEeuCTslxszDstQ" name="PrincetonRandomAccessDictionaryFile" specification="_yRpfsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxNJgZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxNJgpFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxNJg5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxNJhJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxNJhZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxNJhpFCEeuCTslxszDstQ" type="_yRXy4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, path, pos, fileType, params);
     this.firstLineOffset = -1;
     this.offsetLength = -1;
     this.file = new File(path, getFilename());
     if (null != encoding) {
         this.charset = Charset.forName(encoding);
     } else {
         this.charset = StandardCharsets.US_ASCII;
     }
     this.decoder = charset.newDecoder();
     this.encoder = charset.newEncoder();

     if (params.containsKey(WRITE_PRINCETON_HEADER_KEY)) {
         writePrincetonHeader = Boolean.parseBoolean(params.get(WRITE_PRINCETON_HEADER_KEY).getValue());
     }
     if (params.containsKey(CHECK_LEX_FILE_NUMBER_KEY)) {
         checkLexFileNumber = Boolean.parseBoolean(params.get(CHECK_LEX_FILE_NUMBER_KEY).getValue());
     }
     if (params.containsKey(CHECK_RELATION_LIMIT_KEY)) {
         checkRelationLimit = Boolean.parseBoolean(params.get(CHECK_RELATION_LIMIT_KEY).getValue());
     }
     if (params.containsKey(CHECK_WORD_COUNT_LIMIT_KEY)) {
         checkWordCountLimit = Boolean.parseBoolean(params.get(CHECK_WORD_COUNT_LIMIT_KEY).getValue());
     }
     if (params.containsKey(CHECK_LEX_ID_LIMIT_KEY)) {
         checkLexIdLimit = Boolean.parseBoolean(params.get(CHECK_LEX_ID_LIMIT_KEY).getValue());
     }
     if (params.containsKey(CHECK_POINTER_INDEX_LIMIT_KEY)) {
         checkPointerIndexLimit = Boolean.parseBoolean(params.get(CHECK_POINTER_INDEX_LIMIT_KEY).getValue());
     }
     if (params.containsKey(CHECK_VERB_FRAME_LIMIT_KEY)) {
         checkVerbFrameLimit = Boolean.parseBoolean(params.get(CHECK_VERB_FRAME_LIMIT_KEY).getValue());
     }
     if (params.containsKey(CHECK_DATA_FILE_LINE_LENGTH_LIMIT_KEY)) {
         checkDataFileLineLengthLimit = Boolean.parseBoolean(params.get(CHECK_DATA_FILE_LINE_LENGTH_LIMIT_KEY).getValue());
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxNwkJFCEeuCTslxszDstQ" name="newInstance" specification="_yRtKEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxNwkZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxNwkpFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxNwk5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxNwlJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxNwlZFCEeuCTslxszDstQ" type="_yRXy4JFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return new PrincetonRandomAccessDictionaryFile(dictionary, path, pos, fileType, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxOXoJFCEeuCTslxszDstQ" name="readLine" specification="_yRwNYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxOXoZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxOXopFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (isInvalidOffset(offset)) return null;

     // max line values
     // exc files - 46
     // cntlists - 56, 97% of lines is covered by buffer length 35
     // data.adj - 2794, 92% - 300
     // data.adv - 638, 95% - 250
     // data.noun - 12972, 97% - 400
     // data.verb - 7713, 95% - 400
     // index.adj - 272, 97% - 60
     // index.adv - 139, 98% - 60
     // index.noun - 331, 97% - 60
     // index.verb - 567, 95% - 80
     // index.sense - 94, 99.9% - 60
     int LINE_MAX = 64;
     if (DictionaryFileType.DATA == fileType) {
         LINE_MAX = 512;
     }

     byte[] line = new byte[LINE_MAX];
     int i = 0;
     try {
         final long tailLength = raFileLength - offset;
         out:
         while (i &lt; tailLength) {
             if (line.length == i) {
                 byte[] t = new byte[line.length * 2];
                 System.arraycopy(line, 0, t, 0, line.length);
                 line = t;
             }
             int readBytes = line.length - i;
             if (readBytes > tailLength - i) {
                 readBytes = (int) tailLength - i;
             }

             synchronized (this) {
                 raFile.seek(offset + i);
                 readBytes = i + raFile.read(line, i, readBytes);
             }

             while (i &lt; readBytes) {
                 if ('\n' == line[i]) {
                     break out;
                 }
                 i++;
             }
         }
     } catch (IOException e) {
         throw new JWNLIOException(e);
     }

     // resulting line ends at i (eol or eof)
     return getPointedCharSequence(offset, line, i);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxOXo5FCEeuCTslxszDstQ" name="readWord" specification="_yRyCkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxOXpJFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxOXpZFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (isInvalidOffset(offset)) return null;

     int LINE_MAX = 32;

     byte[] line = new byte[LINE_MAX];
     int i = 0;
     try {
         final long tailLength = raFileLength - offset;
         out:
         while (i &lt; tailLength) {
             if (line.length == i) {
                 byte[] t = new byte[line.length * 2];
                 System.arraycopy(line, 0, t, 0, line.length);
                 line = t;
             }
             int readBytes = line.length - i;
             if (readBytes > tailLength - i) {
                 readBytes = (int) tailLength - i;
             }

             synchronized (this) {
                 raFile.seek(offset + i);
                 readBytes = i + raFile.read(line, i, readBytes);
             }

             while (i &lt; readBytes) {
                 if (' ' == line[i] || '\n' == line[i]) {
                     break out;
                 }
                 i++;
             }
         }
     } catch (IOException e) {
         throw new JWNLIOException(e);
     }

     // resulting word ends at i (space, eol or eof)
     return getPointedCharSequence(offset, line, i);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxOXppFCEeuCTslxszDstQ" name="getNextLineOffset" specification="_yRzQsZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxO-sJFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxO-sZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!isOpen()) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;));
     }

     if (offset >= raFileLength || offset &lt; 0) {
         return -1;
     }

     int LINE_MAX = 64;
     if (DictionaryFileType.DATA == fileType) {
         LINE_MAX = 512;
     }

     byte[] line = new byte[LINE_MAX];
     int i = 0;
     try {
         final long tailLength = raFileLength - offset;
         out:
         while (i &lt; tailLength) {
             if (line.length == i) {
                 byte[] t = new byte[line.length * 2];
                 System.arraycopy(line, 0, t, 0, line.length);
                 line = t;
             }
             int readBytes = line.length - i;
             if (readBytes > tailLength - i) {
                 readBytes = (int) tailLength - i;
             }

             synchronized (this) {
                 raFile.seek(offset + i);
                 readBytes = i + raFile.read(line, i, readBytes);
             }

             while (i &lt; readBytes) {
                 if ('\n' == line[i]) {
                     break out;
                 }
                 i++;
             }
         }
     } catch (IOException e) {
         throw new JWNLIOException(e);
     }
     // we've read the line

     long result = offset + i + 1;
     if (result >= raFileLength) {
         result = -1;
     }

     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxPlwJFCEeuCTslxszDstQ" name="open" specification="_yR1F4JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>synchronized (this) {
         if (!isOpen()) {
             try {

                 /*
                  * Here we try to be intelligent about opening files.
                  * If the file exists, we assume that we are going to be reading from it,
                  * otherwise we assume that we are going to be creating it and writing to it.
                  */
                 if (file.exists()) {
                     raFile = new RandomAccessFile(file, READ_ONLY);
                 } else {
                     raFile = new RandomAccessFile(file, READ_WRITE);
                 }
                 raFileLength = raFile.length();
             } catch (IOException e) {
                 throw new JWNLIOException(e);
             }
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxQM0JFCEeuCTslxszDstQ" name="isOpen" specification="_yR2UAZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxQM0ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return raFile != null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxQM0pFCEeuCTslxszDstQ" name="close" specification="_yR3iI5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>synchronized (this) {
         try {
             if (null != raFile) {
                 raFile.close();
             }
         } catch (IOException e) {
             throw new JWNLIOException(e);
         } finally {
             raFile = null;
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxQz4JFCEeuCTslxszDstQ" name="edit" specification="_yR4wQpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>synchronized (this) {
         try {
             raFile.close();
             raFile = new RandomAccessFile(file, READ_WRITE);
         } catch (IOException e) {
             throw new JWNLIOException(e);
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxQz4ZFCEeuCTslxszDstQ" name="length" specification="_yR6lcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxQz4pFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return raFileLength;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxRa8JFCEeuCTslxszDstQ" name="save" specification="_yR8aoJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (log.isDebugEnabled()) {
         log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_004&quot;, getFilename()));
     }

     try {
         initBuffers();

         if (DictionaryFileType.EXCEPTION == fileType) {
             ArrayList&lt;String> exceptions = new ArrayList&lt;>();
             Iterator&lt;Exc> ei = dictionary.getExceptionIterator(getPOS());
             StringBuilder sb = new StringBuilder(512);
             while (ei.hasNext()) {
                 sb.delete(0, sb.length());
                 renderException(ei.next(), sb);
                 exceptions.add(sb.toString());
             }
             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_005&quot;, exceptions.size()));
             }
             Collections.sort(exceptions);

             synchronized (this) {
                 raFile.seek(0);
                 writeStrings(exceptions);
                 truncate();
             }
         } else if (DictionaryFileType.DATA == fileType) {
             ArrayList&lt;Synset> synsets = new ArrayList&lt;>();
             Iterator&lt;Synset> si = dictionary.getSynsetIterator(getPOS());
             while (si.hasNext()) {
                 synsets.add(si.next());
             }

             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_005&quot;, synsets.size()));
             }
             // dictionary is cached in a hashmap, synset order is not guaranteed
             synsets.sort(synsetOffsetComparator);

             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_007&quot;, synsets.size()));
             }
             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_008&quot;, getFilename()));
             }
             long counter = 0;
             long total = synsets.size();
             long reportInt = (total / 20) + 1; // i.e. report every 5%
             synchronized (this) {
                 raFile.seek(0);
                 writePrincetonHeader();
                 if (log.isDebugEnabled()) {
                     log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_021&quot;, getFilename()));
                 }
                 StringBuilder s = new StringBuilder(16 * 1024);
                 for (Synset synset : synsets) {
                     counter++;
                     if (0 == (counter % reportInt)) {
                         if (log.isDebugEnabled()) {
                             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_014&quot;, 100 * counter / total));
                         }
                     }

                     s.delete(0, s.length());
                     renderSynset(synset, s);
                     writeLine(s);
                 }
                 truncate();
             }
             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_009&quot;, getFilename()));
             }
         } else if (DictionaryFileType.INDEX == fileType) {
             ArrayList&lt;String> indexes = new ArrayList&lt;>();

             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_011&quot;, getFilename()));
             }
             Iterator&lt;IndexWord> ii = dictionary.getIndexWordIterator(getPOS());
             StringBuilder sb = new StringBuilder(512);
             while (ii.hasNext()) {
                 sb.delete(0, sb.length());
                 renderIndexWord(ii.next(), sb);
                 indexes.add(sb.toString());
             }

             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_005&quot;, indexes.size()));
             }
             Collections.sort(indexes);
             synchronized (this) {
                 raFile.seek(0);
                 writePrincetonHeader();
                 writeIndexStrings(indexes);
                 truncate();
             }
         } else if (DictionaryFileType.REVCNTLIST == fileType) {
             ArrayList&lt;Word> toRender = collectWordsToRender();

             // sort by sense key
             toRender.sort((o1, o2) -> {
                 try {
                     return o1.getSenseKeyWithAdjClass().compareTo(o2.getSenseKeyWithAdjClass());
                 } catch (JWNLException e) {
                     throw new JWNLRuntimeException(e);
                 }
             });


             raFile.seek(0);
             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_008&quot;, getFilename()));
             }
             long counter = 0;
             long total = toRender.size();
             long reportInt = (total / 20) + 1; // i.e. report every 5%
             StringBuilder s = new StringBuilder(100);
             for (Word word : toRender) {
                 counter++;
                 if (0 == (counter % reportInt)) {
                     if (log.isDebugEnabled()) {
                         log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_014&quot;, 100 * counter / total));
                     }
                 }

                 s.delete(0, s.length());

                 // sense_key  sense_number  tag_cnt
                 s.append(word.getSenseKeyWithAdjClass()).
                         append(' ').append(word.getSenseNumber()).
                         append(' ').append(word.getUseCount());

                 writeLine(s);
             }
             truncate();
             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_013&quot;, getFilename()));
             }
         } else if (DictionaryFileType.CNTLIST == fileType) {
             ArrayList&lt;Word> toRender = collectWordsToRender();

             // sort by count in descending order
             toRender.sort((o1, o2) -> {
                 int result = o2.getUseCount() - o1.getUseCount();
                 if (0 == result) {
                     try {
                         result = o2.getSenseKeyWithAdjClass().compareTo(o1.getSenseKeyWithAdjClass());
                     } catch (JWNLException e) {
                         throw new JWNLRuntimeException(e);
                     }
                 }
                 return result;
             });

             raFile.seek(0);
             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_008&quot;, getFilename()));
             }
             long counter = 0;
             long total = toRender.size();
             long reportInt = (total / 20) + 1; // i.e. report every 5%
             StringBuilder s = new StringBuilder(100);
             for (Word word : toRender) {
                 counter++;
                 if (0 == (counter % reportInt)) {
                     if (log.isDebugEnabled()) {
                         log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_014&quot;, 100 * counter / total));
                     }
                 }

                 s.delete(0, s.length());

                 // tag_cnt  sense_key  sense_number
                 s.append(word.getUseCount()).
                         append(' ').append(word.getSenseKeyWithAdjClass()).
                         append(' ').append(word.getSenseNumber());

                 writeLine(s);

                 // WN TRICK
                 // differences in re-rendering of cntlist are due to discrepancies(?) in wordnet files
                 // below from 2.1 (more in 3.0 and 3.1)
                 // e.g. 232 world%1:17:01:: 2 VS 232 world%1:17:01:: 1
                 //      original                 re-render
                 // however,
                 // world n 8 6 @ ~ #m %m %p + 8 7 09330440 05738136 07857779 09138104 05600868 09344389 08066556 02450463
                 // world%1:17:01:: corresponds to
                 // 09330440 17 n 06 universe 0 existence 0 creation 0 world 1 cosmos 0 macrocosm 0 011 @ 00018635 n 0000 + 02987805 a 0601 + 01437993 a 0501 + 02789059 a 0501 + 00553777 a 0105 %m 08157282 n 0000 %p 09107111 n 0000 ~ 09114410 n 0000 %p 09144850 n 0000 ~ 09232164 n 0000 ~ 09232329 n 0000 | everything that exists anywhere; &quot;they study the evolution of the universe&quot;; &quot;the biggest tree in existence&quot;
                 //          ^^                                        ^^^^^^^
                 // which is sense number 1, not 2.
                 // sense number 2 is
                 // 05738136 09 n 02 world 0 reality 0 002 @ 05908392 n 0000 ~ 05738508 n 0000 | all of your experiences that determine how things appear to you; &quot;his world was shattered&quot;; &quot;we live in different worlds&quot;; &quot;for them demons were as much a part of reality as trees were&quot;
                 //          ^^      ^^^^^^^
                 // that is &quot;156 world%1:09:00:: 2&quot; (2 and not 3: &quot;156 world%1:09:00:: 3&quot;)
                 // most differing indices are off-by-one
                 // some are off-by-two or more

                 // ussr%1:15:00:: is duplicated in original wordnet 2.1  files

                 // 7 old%5:00:00:preceding:00 9
                 // and
                 // 5 small%5:00:00:little:03 13
                 // are discrepancies in adjective satellite clusters
                 // e.g. (a) is missing from the key
             }
             truncate();
             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_013&quot;, getFilename()));
             }
         } else if (DictionaryFileType.SENSEINDEX == fileType) {
             Set&lt;String> senseIndexContent = new TreeSet&lt;>();
             StringBuilder result = new StringBuilder(100);
             for (POS pos : POS.getAllPOS()) {
                 Iterator&lt;IndexWord> ii = dictionary.getIndexWordIterator(pos);
                 while (ii.hasNext()) {
                     IndexWord iw = ii.next();
                     for (int i = 0; i &lt; iw.getSenses().size(); i++) {
                         Synset synset = iw.getSenses().get(i);
                         for (Word w : synset.getWords()) {
                             if (w.getLemma().equalsIgnoreCase(iw.getLemma())) {
                                 result.delete(0, result.length());

                                 // sense_key  synset_offset  sense_number  tag_cnt
                                 result.append(w.getSenseKey()).append(&quot; &quot;);
                                 formatOffset(synset.getOffset(), offsetLength, result);
                                 result.append(&quot; &quot;);
                                 result.append(i + 1);
                                 result.append(&quot; &quot;);
                                 result.append(w.getUseCount());
                                 senseIndexContent.add(result.toString());
                             }
                         }
                     }
                 }
             }

             raFile.seek(0);
             writeStrings(senseIndexContent);
             truncate();
         }
     } catch (IOException e) {
         throw new JWNLIOException(e);
     } finally {
         freeBuffers();
     }

     if (log.isDebugEnabled()) {
         log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_012&quot;, getFilename()));
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxRa8ZFCEeuCTslxszDstQ" name="truncate" specification="_yR9owpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>raFile.setLength(raFile.getFilePointer());
     raFileLength = raFile.length();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxSCAJFCEeuCTslxszDstQ" name="collectWordsToRender" specification="_yR-P0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxSCAZFCEeuCTslxszDstQ" type="_rX6nwJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>ArrayList&lt;Word> result = new ArrayList&lt;>();
     Set&lt;String> renderedKeys = new HashSet&lt;>();
     for (POS pos : POS.getAllPOS()) {
         Iterator&lt;IndexWord> ii = dictionary.getIndexWordIterator(pos);
         while (ii.hasNext()) {
             IndexWord iw = ii.next();
             for (int i = 0; i &lt; iw.getSenses().size(); i++) {
                 for (Word w : iw.getSenses().get(i).getWords()) {
                     if (0 &lt; w.getUseCount()) {
                         String key = w.getSenseKeyWithAdjClass();
                         if (!renderedKeys.contains(key)) {
                             result.add(w);
                             renderedKeys.add(key);
                         }
                     }
                 }
             }
         }
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxSCApFCEeuCTslxszDstQ" name="getFile" specification="_ySBTIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxSCA5FCEeuCTslxszDstQ" type="_roxuQJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return file;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxSpEJFCEeuCTslxszDstQ" name="delete" specification="_ySDIUpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxSpEZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>close();
     return file.delete();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxSpEpFCEeuCTslxszDstQ" name="getPointedCharSequence" specification="_ySE9gZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxSpE5FCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxSpFJFCEeuCTslxszDstQ" name="line">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxSpFZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxSpFpFCEeuCTslxszDstQ" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxSpF5FCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>final PointedCharSequence result;

     if (null == encoding) {
         result = new ByteArrayCharSequence(line, 0, i, offset + i);
     } else {
         final ByteBuffer bb = ByteBuffer.wrap(line, 0, i);

         try {
             synchronized (this) {
                 CharBuffer cb = decoder.decode(bb);
                 result = new CharBufferCharSequence(cb, offset + i);
             }
         } catch (CharacterCodingException e) {
             throw new JWNLIOException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_003&quot;,
                     new Object[]{getFilename(), offset}), e);
         }
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxTQIJFCEeuCTslxszDstQ" name="isInvalidOffset" specification="_ySHZwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxTQIZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxTQIpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!isOpen()) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;));
     }

     if (offset >= raFileLength || offset &lt; 0) {
         return true;
     }
     return false;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxT3MJFCEeuCTslxszDstQ" name="writePrincetonHeader" specification="_ySIA0JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>if (writePrincetonHeader) {
         if (log.isDebugEnabled()) {
             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_020&quot;, getFilename()));
         }
         raFile.write(PRINCETON_HEADER_HEAD.getBytes(charset));
         if (dictionary.getVersion().getNumber() > 3.05) {
             raFile.write(PRINCETON_HEADER_31.getBytes(charset));
         } else if (dictionary.getVersion().getNumber() > 2.9) {
             raFile.write(PRINCETON_HEADER_30.getBytes(charset));
         } else {
             raFile.write(PRINCETON_HEADER_21.getBytes(charset));
         }
         raFile.write(PRINCETON_HEADER_TAIL.getBytes(charset));
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxT3MZFCEeuCTslxszDstQ" name="writeLine" specification="_ySIn4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxT3MpFCEeuCTslxszDstQ" name="line">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>synchronized (this) {
         try {
             if (checkDataFileLineLengthLimit &amp;&amp; line.length() > dataFileLineLengthLimit) {
                 if (log.isWarnEnabled()) {
                     log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_009&quot;,
                             new Object[]{getFilename(), dataFileLineLengthLimit, line.length()}));
                 }
             }

             if (chars.length &lt; line.length()) {
                 chars = new char[line.length()];
             }
             line.getChars(0, line.length(), chars, 0);
             CharBuffer lchars = CharBuffer.wrap(chars);
             lchars.limit(line.length());

             CoderResult coderResult;
             do {
                 bytes.clear();
                 coderResult = encoder.encode(lchars, bytes, true);

                 if (coderResult.isError()) {
                     if (log.isWarnEnabled()) {
                         log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_011&quot;,
                                 new Object[]{lchars.toString()}));
                     }
                 }
                 raFile.write(bytesBacker, 0, bytes.position());
             } while (coderResult.isOverflow());
             raFile.writeByte((byte) '\n');
         } catch (IOException e) {
             throw new JWNLIOException(e);
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxUeQJFCEeuCTslxszDstQ" name="writeLine" specification="_ySJ2AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxUeQZFCEeuCTslxszDstQ" name="line" type="_r4ch8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>synchronized (this) {
         try {
             if (checkDataFileLineLengthLimit &amp;&amp; line.length() > dataFileLineLengthLimit) {
                 if (log.isWarnEnabled()) {
                     log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_009&quot;,
                             new Object[]{getFilename(), dataFileLineLengthLimit, bytes.position()}));
                 }
             }

             if (chars.length &lt; line.length()) {
                 chars = new char[line.length()];
             }
             line.getChars(0, line.length(), chars, 0);
             CharBuffer lchars = CharBuffer.wrap(chars);
             lchars.limit(line.length());

             CoderResult coderResult;
             do {
                 bytes.clear();
                 coderResult = encoder.encode(lchars, bytes, true);

                 if (coderResult.isError()) {
                     if (log.isWarnEnabled()) {
                         log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_011&quot;,
                                 new Object[]{lchars.toString()}));
                     }
                 }
                 raFile.write(bytesBacker, 0, bytes.position());
             } while (coderResult.isOverflow());
             raFile.writeByte((byte) '\n');
         } catch (IOException e) {
             throw new JWNLIOException(e);
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxUeQpFCEeuCTslxszDstQ" name="getByteLength" specification="_ySKdEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxUeQ5FCEeuCTslxszDstQ" name="line" type="_r4ch8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxUeRJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>long result = 0;

     if (chars.length &lt; line.length()) {
         chars = new char[line.length()];
     }
     line.getChars(0, line.length(), chars, 0);
     CharBuffer lchars = CharBuffer.wrap(chars);
     lchars.limit(line.length());

     CoderResult coderResult;
     do {
         bytes.clear();
         coderResult = encoder.encode(lchars, bytes, true);
         result = result + bytes.position();
     } while (coderResult.isOverflow());

     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxVFUJFCEeuCTslxszDstQ" name="writeStrings" specification="_ySLEIZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxVFUZFCEeuCTslxszDstQ" name="strings" type="_rWkj8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>synchronized (this) {
         if (log.isDebugEnabled()) {
             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_008&quot;, getFilename()));
         }
         long counter = 0;
         long total = strings.size();
         long reportInt = (total / 20) + 1; // i.e. report every 5%
         for (String s : strings) {
             counter++;
             if (0 == (counter % reportInt)) {
                 if (log.isDebugEnabled()) {
                     log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_014&quot;, 100 * counter / total));
                 }
             }
             writeLine(s);
         }
         if (log.isDebugEnabled()) {
             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_013&quot;, getFilename()));
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxVFUpFCEeuCTslxszDstQ" name="writeIndexStrings" specification="_ySM5UJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxVFU5FCEeuCTslxszDstQ" name="strings" type="_rX6nwJFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>synchronized (this) {
         if (log.isDebugEnabled()) {
             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_008&quot;, getFilename()));
         }
         long counter = 0;
         long total = strings.size();
         long reportInt = (total / 20) + 1; // i.e. report every 5%
         //see makedb.c FixLastRecord
         /* Funky routine to pad the second to the last record of the
          index file to be longer than the last record so the binary
          search in the search code works properly. */
         for (int i = 0; i &lt; strings.size() - 2; i++) {
             counter++;
             if (0 == (counter % reportInt)) {
                 if (log.isDebugEnabled()) {
                     log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_014&quot;, 100 * counter / total));
                 }
             }
             writeLine(strings.get(i));
         }
         if (1 &lt; strings.size()) {
             StringBuilder nextToLast = new StringBuilder(strings.get(strings.size() - 2));
             String last = strings.get(strings.size() - 1);
             while (nextToLast.length() &lt;= last.length()) {
                 nextToLast.append(' ');
             }
             writeLine(nextToLast);
             writeLine(last);
         } else if (1 == strings.size()) {
             String last = strings.get(strings.size() - 1);
             writeLine(last);
         }
         if (log.isDebugEnabled()) {
             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_014&quot;, 100));
         }
         if (log.isDebugEnabled()) {
             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_013&quot;, getFilename()));
         }
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxVsYJFCEeuCTslxszDstQ" name="getDigitCount" specification="_ySPVkZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxVsYZFCEeuCTslxszDstQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxVsYpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (number == 0) ? 1 : (int) Math.log10(number) + 1;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxVsY5FCEeuCTslxszDstQ" name="renderSynset" specification="_ySQjsJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxVsZJFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxVsZZFCEeuCTslxszDstQ" name="result" type="_r4ch8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>// synset_offset lex_filenum ss_type w_cnt word lex_id [word lex_id...] p_cnt [ptr...] [frames...] | gloss
     // w_cnt Two digit hexadecimal integer indicating the number of words in the synset.
     String posKey = synset.getPOS().getKey();
     if (POS.ADJECTIVE == synset.getPOS() &amp;&amp; synset.isAdjectiveCluster()) {
         posKey = POS.ADJECTIVE_SATELLITE_KEY;
     }
     if (checkLexFileNumber &amp;&amp; log.isWarnEnabled() &amp;&amp; !LexFileIdFileNameMap.getMap().containsKey(synset.getLexFileNum())) {
         log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_001&quot;, synset.getLexFileNum()));
     }
     if (checkWordCountLimit &amp;&amp; log.isWarnEnabled() &amp;&amp; (0xFF &lt; synset.getWords().size())) {
         log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_004&quot;,
                 new Object[]{synset.getOffset(), synset.getWords().size()}));
     }

     formatOffset(synset.getOffset(), offsetLength, result);
     if (synset.getLexFileNum() &lt; 10) {
         result.append(&quot; 0&quot;).append(synset.getLexFileNum());
     } else {
         result.append(' ').append(synset.getLexFileNum());
     }
     result.append(' ').append(posKey);
     if (synset.getWords().size() &lt; 0x10) {
         result.append(&quot; 0&quot;).append(Integer.toHexString(synset.getWords().size())).append(' ');
     } else {
         result.append(' ').append(Integer.toHexString(synset.getWords().size())).append(' ');
     }
     for (Word w : synset.getWords()) {
         // ASCII form of a word as entered in the synset by the lexicographer,
         // with spaces replaced by underscore characters (_). The text of the word is case sensitive.

         // lex_id One digit hexadecimal integer that, when appended onto lemma,
         // uniquely identifies a sense within a lexicographer file.
         String lemma = w.getLemma().replace(' ', '_');
         if (w instanceof Adjective) {
             Adjective a = (Adjective) w;
             if (AdjectivePosition.NONE != a.getAdjectivePosition()) {
                 lemma = lemma + &quot;(&quot; + a.getAdjectivePosition().getKey() + &quot;)&quot;;
             }
         }
         if (checkLexIdLimit &amp;&amp; log.isWarnEnabled() &amp;&amp; (0xF &lt; w.getLexId())) {
             log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_005&quot;,
                     new Object[]{synset.getOffset(), w.getLemma(), w.getLexId()}));
         }
         result.append(lemma).append(' ');
         result.append(Long.toHexString(w.getLexId())).append(' ');
     }
     // Three digit decimal integer indicating the number of pointers from this synset to other synsets.
     // If p_cnt is 000 the synset has no pointers.
     if (checkRelationLimit &amp;&amp; log.isWarnEnabled() &amp;&amp; (999 &lt; synset.getPointers().size())) {
         log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_002&quot;,
                 new Object[]{synset.getOffset(), synset.getPointers().size()}));
     }
     if (synset.getPointers().size() &lt; 100) {
         result.append(&quot;0&quot;);
         if (synset.getPointers().size() &lt; 10) {
             result.append(&quot;0&quot;);
         }
     }
     result.append(synset.getPointers().size()).append(' ');
     for (Pointer p : synset.getPointers()) {
         // pointer_symbol  synset_offset  pos  source/target
         result.append(p.getType().getKey()).append(' ');
         // synset_offset is the byte offset of the target synset in the data file corresponding to pos
         formatOffset(p.getTargetOffset(), offsetLength, result);
         result.append(' ');
         // pos
         result.append(p.getTargetPOS().getKey()).append(' ');
         // source/target
         // The source/target field distinguishes lexical and semantic pointers.
         // It is a four byte field, containing two two-digit hexadecimal integers.
         // The first two digits indicates the word number in the current (source) synset,
         // the last two digits indicate the word number in the target synset.
         // A value of 0000 means that pointer_symbol represents a semantic relation
         // between the current (source) synset and the target synset indicated by synset_offset.

         // A lexical relation between two words in different synsets is represented
         // by non-zero values in the source and target word numbers.
         // The first and last two bytes of this field indicate the word numbers
         // in the source and target synsets, respectively, between which the relation holds.
         // Word numbers are assigned to the word fields in a synset, from left to right, beginning with 1.
         if (checkPointerIndexLimit &amp;&amp; log.isWarnEnabled() &amp;&amp; (0xFF &lt; p.getSourceIndex())) {
             log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_006&quot;, new Object[]{synset.getOffset(),
                     p.getSource().getSynset().getOffset(), p.getSourceIndex()}));
         }
         if (checkPointerIndexLimit &amp;&amp; log.isWarnEnabled() &amp;&amp; (0xFF &lt; p.getTargetIndex())) {
             log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_006&quot;, new Object[]{synset.getOffset(),
                     p.getTarget().getSynset().getOffset(), p.getTargetIndex()}));
         }
         if (p.getSourceIndex() &lt; 0x10) {
             result.append(&quot;0&quot;);
         }
         result.append(Integer.toHexString(p.getSourceIndex()));
         if (p.getTargetIndex() &lt; 0x10) {
             result.append(&quot;0&quot;);
         }
         result.append(Integer.toHexString(p.getTargetIndex())).append(' ');
     }

     // frames In data.verb only
     if (POS.VERB == synset.getPOS()) {
         BitSet verbFrames = synset.getVerbFrameFlags();
         int verbFramesCount = verbFrames.cardinality();
         for (Word word : synset.getWords()) {
             if (word instanceof Verb) {
                 BitSet bits = ((Verb) word).getVerbFrameFlags();
                 for (int i = bits.nextSetBit(0); i >= 0; i = bits.nextSetBit(i + 1)) {
                     //WN TRICK - there are duplicates in data
                     //02593551 41 v 04 lord_it_over 0 queen_it_over 0 put_on_airs 0 act_superior 0 001 @ 02367363 v 0000
                     // 09 + 02 00 + 02 04 + 22 04 + 02 03 + 22 03 + 08 02 + 09 02 + 08 01 + 09 01 | act like the master of; &quot;He is lording it over the students&quot;
                     // + 02 04 and + 02 03 duplicate + 02 00
                     // it is the only one, but it causes offsets to differ on WN30 rewrite
                     if (!verbFrames.get(i)) {
                         verbFramesCount++;
                     }
                 }
             }
         }
         if (checkVerbFrameLimit &amp;&amp; log.isWarnEnabled() &amp;&amp; (99 &lt; verbFramesCount)) {
             log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_007&quot;, new Object[]{synset.getOffset(), verbFramesCount}));
         }
         if (verbFramesCount &lt; 10) {
             result.append(&quot;0&quot;);
         }
         result.append(verbFramesCount).append(' ');
         // render frames applicable to all words
         for (int i = verbFrames.nextSetBit(0); i >= 0; i = verbFrames.nextSetBit(i + 1)) {
             if (checkVerbFrameLimit &amp;&amp; log.isWarnEnabled() &amp;&amp; (99 &lt; i)) {
                 log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_008&quot;,
                         new Object[]{synset.getOffset(), i}));
             }
             result.append(&quot;+ &quot;);
             if (i &lt; 10) {
                 result.append(&quot;0&quot;);
             }
             result.append(i);
             result.append(&quot; 00 &quot;);
         }
         // render word-specific frames
         for (int idx = synset.getWords().size() - 1; idx >= 0; idx--) {
             Word word = synset.getWords().get(idx);
             if (word instanceof Verb) {
                 BitSet bits = ((Verb) word).getVerbFrameFlags();
                 for (int i = bits.nextSetBit(0); i >= 0; i = bits.nextSetBit(i + 1)) {
                     if (!verbFrames.get(i)) {
                         if (checkVerbFrameLimit &amp;&amp; log.isWarnEnabled() &amp;&amp; (0xFF &lt; word.getIndex())) {
                             log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_008&quot;,
                                     new Object[]{synset.getOffset(), word.getIndex()}));
                         }
                         result.append(&quot;+ &quot;);
                         if (i &lt; 10) {
                             result.append(&quot;0&quot;);
                         }
                         result.append(i).append(' ');
                         if (word.getIndex() &lt; 0x10) {
                             result.append(&quot;0&quot;);
                         }
                         result.append(Integer.toHexString(word.getIndex())).append(' ');
                     }
                 }
             }
         }
     }

     result.append(&quot;| &quot;).append(synset.getGloss()).append(&quot;  &quot;);// why every line in most WN files ends with two spaces?
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxWTcJFCEeuCTslxszDstQ" name="renderIndexWord" specification="_ySRx0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxWTcZFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxWTcpFCEeuCTslxszDstQ" name="result" type="_r4ch8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>ArrayList&lt;PointerType> pointerTypes = new ArrayList&lt;>();
     // find all the pointers that come from this word
     for (Synset synset : indexWord.getSenses()) {
         for (Pointer pointer : synset.getPointers()) {
             if ((pointer.getSource() instanceof Word) &amp;&amp; !indexWord.getLemma().equals(((Word) pointer.getSource()).getLemma().toLowerCase())) {
                 continue;
             }
             // WN TRICK
             // see makedb.c line 370
             PointerType pt = pointer.getType();
             char c = pointer.getType().getKey().charAt(0);
             if (';' == c || '-' == c || '@' == c || '~' == c) {
                 pt = PointerType.getPointerTypeForKey(Character.toString(c));
             }
             if (!pointerTypes.contains(pt)) {
                 pointerTypes.add(pt);
             }
         }
     }
     Collections.sort(pointerTypes);

     // sort senses and find out tagged sense count
     int tagSenseCnt = indexWord.sortSenses();

     // lemma pos synset_cnt p_cnt [ptr_symbol...] sense_cnt tagsense_cnt synset_offset [synset_offset...]
     result.append(indexWord.getLemma().replace(' ', '_'));
     result.append(' ');
     result.append(indexWord.getPOS().getKey()).append(' '); // pos
     result.append(indexWord.getSenses().size()).append(' '); // synset_cnt
     result.append(pointerTypes.size()).append(' '); // p_cnt
     for (PointerType pointerType : pointerTypes) {
         result.append(pointerType.getKey()).append(' ');
     }

     result.append(indexWord.getSenses().size()).append(' '); // sense_cnt

     result.append(tagSenseCnt).append(' '); // tagsense_cnt

     for (Synset synset : indexWord.getSenses()) {
         formatOffset(synset.getOffset(), offsetLength, result);
         result.append(' '); // synset_offset
     }

     result.append(' '); // the second of those 2 spaces at the end of line
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxWTc5FCEeuCTslxszDstQ" name="renderException" specification="_ySSY4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxWTdJFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxWTdZFCEeuCTslxszDstQ" name="result" type="_r4ch8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>result.append(exc.getLemma().replace(' ', '_'));
     for (String e : exc.getExceptions()) {
         result.append(' ').append(e.replace(' ', '_'));
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxW6gJFCEeuCTslxszDstQ" name="initBuffers" specification="_ySTnAJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>chars = new char[16 * 1024];
     bytesBacker = new byte[(int) Math.ceil(encoder.maxBytesPerChar() * 16 * 1024)];
     bytes = ByteBuffer.wrap(bytesBacker);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxW6gZFCEeuCTslxszDstQ" name="freeBuffers" specification="_ySUOEJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>chars = null;
     bytes = null;
     bytesBacker = null;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yRknMJFCEeuCTslxszDstQ" name="formatOffset" isStatic="true" method="_yxMicJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yRknMZFCEeuCTslxszDstQ" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yRlOQJFCEeuCTslxszDstQ" name="formatLength">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yRlOQZFCEeuCTslxszDstQ" name="target" type="_r4ch8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yRmcYJFCEeuCTslxszDstQ" name="PrincetonRandomAccessDictionaryFile" method="_yxMidJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yRnDcJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yRnDcZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_yzSNIJFCEeuCTslxszDstQ">
                    <body>Factory constructor.
     *
     * @param dictionary dictionary
     * @param params     params</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yRmcYZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yRmcYpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yRnDcpFCEeuCTslxszDstQ" type="_yRXy4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yRpfsJFCEeuCTslxszDstQ" name="PrincetonRandomAccessDictionaryFile" method="_yxNJgJFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yRqt0JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yRqt0ZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_yzSNIZFCEeuCTslxszDstQ">
                    <body>Instance constructor.
     *
     * @param dictionary dictionary
     * @param path       file path
     * @param pos        part of speech
     * @param fileType   file type
     * @param params     params</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yRpfsZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yRqGwJFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yRqGwZFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yRqGwpFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yRqGw5FCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yRqt0pFCEeuCTslxszDstQ" type="_yRXy4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yRtKEJFCEeuCTslxszDstQ" name="newInstance" method="_yxNwkJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yRtKEZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yRtKEpFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yRtxIJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yRtxIZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yoqRgJFCEeuCTslxszDstQ" type="_yRXy4JFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yRwNYJFCEeuCTslxszDstQ" name="readLine" method="_yxOXoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yRwNYZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yRwNYpFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yRyCkJFCEeuCTslxszDstQ" name="readWord" method="_yxOXo5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yRyCkZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yRyCkpFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yRzQsZFCEeuCTslxszDstQ" name="getNextLineOffset" method="_yxOXppFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yRz3wJFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yRz3wZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR1F4JFCEeuCTslxszDstQ" name="open" method="_yxPlwJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yR2UAZFCEeuCTslxszDstQ" name="isOpen" method="_yxQM0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yR27EJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR3iI5FCEeuCTslxszDstQ" name="close" method="_yxQM0pFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yR4wQpFCEeuCTslxszDstQ" name="edit" method="_yxQz4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yR6lcJFCEeuCTslxszDstQ" name="length" method="_yxQz4ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yR6lcZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yR8aoJFCEeuCTslxszDstQ" name="save" method="_yxRa8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yR9owpFCEeuCTslxszDstQ" name="truncate" visibility="private" method="_yxRa8ZFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yR-P0JFCEeuCTslxszDstQ" name="collectWordsToRender" visibility="private" method="_yxSCAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yR-24JFCEeuCTslxszDstQ" type="_rX6nwJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySBTIJFCEeuCTslxszDstQ" name="getFile" method="_yxSCApFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySB6MJFCEeuCTslxszDstQ" type="_roxuQJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySDIUpFCEeuCTslxszDstQ" name="delete" method="_yxSpEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySDvYJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ySE9gZFCEeuCTslxszDstQ" name="getPointedCharSequence" visibility="protected" method="_yxSpEpFCEeuCTslxszDstQ" raisedException="_oCXBMJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySFkkJFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ySFkkZFCEeuCTslxszDstQ" name="line">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ySGLoZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ySFkkpFCEeuCTslxszDstQ" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ySGLoJFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySHZwJFCEeuCTslxszDstQ" name="isInvalidOffset" visibility="protected" method="_yxTQIJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySHZwZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ySHZwpFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ySIA0JFCEeuCTslxszDstQ" name="writePrincetonHeader" visibility="protected" method="_yxT3MJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ySIn4JFCEeuCTslxszDstQ" name="writeLine" visibility="private" method="_yxT3MZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySIn4ZFCEeuCTslxszDstQ" name="line">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ySJ2AJFCEeuCTslxszDstQ" name="writeLine" visibility="private" method="_yxUeQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySJ2AZFCEeuCTslxszDstQ" name="line" type="_r4ch8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySKdEJFCEeuCTslxszDstQ" name="getByteLength" visibility="private" method="_yxUeQpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySKdEZFCEeuCTslxszDstQ" name="line" type="_r4ch8JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ySLEIJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ySLEIZFCEeuCTslxszDstQ" name="writeStrings" visibility="private" method="_yxVFUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySLEIpFCEeuCTslxszDstQ" name="strings" type="_rWkj8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySM5UJFCEeuCTslxszDstQ" name="writeIndexStrings" visibility="private" method="_yxVFUpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySNgYJFCEeuCTslxszDstQ" name="strings" type="_rX6nwJFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySPVkZFCEeuCTslxszDstQ" name="getDigitCount" visibility="private" method="_yxVsYJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySP8oJFCEeuCTslxszDstQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ySP8oZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ySQjsJFCEeuCTslxszDstQ" name="renderSynset" visibility="private" method="_yxVsY5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySQjsZFCEeuCTslxszDstQ" name="synset" type="_rb_PcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ySRKwJFCEeuCTslxszDstQ" name="result" type="_r4ch8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySRx0JFCEeuCTslxszDstQ" name="renderIndexWord" visibility="private" method="_yxWTcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySRx0ZFCEeuCTslxszDstQ" name="indexWord" type="_oHXdAJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ySRx0pFCEeuCTslxszDstQ" name="result" type="_r4ch8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySSY4JFCEeuCTslxszDstQ" name="renderException" visibility="private" method="_yxWTc5FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_ySSY4ZFCEeuCTslxszDstQ" name="exc" type="_oGjksJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ySS_8JFCEeuCTslxszDstQ" name="result" type="_r4ch8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ySTnAJFCEeuCTslxszDstQ" name="initBuffers" visibility="private" method="_yxW6gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_ySUOEJFCEeuCTslxszDstQ" name="freeBuffers" visibility="private" method="_yxW6gZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_ySvr4pFCEeuCTslxszDstQ" name="PrincetonResourceDictionaryFile">
                <ownedComment xmi:id="_yzUpYJFCEeuCTslxszDstQ">
                  <body>Loads dictionary files from classpath.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
                </ownedComment>
                <generalization xmi:id="_yTQCMJFCEeuCTslxszDstQ" general="_ouThMJFCEeuCTslxszDstQ"/>
                <ownedAttribute xmi:id="_yuoWoJFCEeuCTslxszDstQ" name="buffer" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yuoWoZFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yupkwZFCEeuCTslxszDstQ" name="firstLineOffset" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_yurZ8JFCEeuCTslxszDstQ" name="decoder" visibility="private" isLeaf="true" type="_youi8ZFCEeuCTslxszDstQ" isReadOnly="true" association="_y0PPZJFCEeuCTslxszDstQ"/>
                <interfaceRealization xmi:id="_ySw6AJFCEeuCTslxszDstQ" client="_ySvr4pFCEeuCTslxszDstQ" supplier="_omUp4JFCEeuCTslxszDstQ" contract="_omUp4JFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxZWwZFCEeuCTslxszDstQ" name="PrincetonResourceDictionaryFile" specification="_ySzWQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxZWwpFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxZWw5FCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxZWxJFCEeuCTslxszDstQ" type="_ySvr4pFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, params);
     this.decoder = null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxZ90JFCEeuCTslxszDstQ" name="PrincetonResourceDictionaryFile" specification="_yS1ygJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxZ90ZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxZ90pFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxZ905FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxZ91JFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxZ91ZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxZ91pFCEeuCTslxszDstQ" type="_ySvr4pFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>super(dictionary, path, pos, fileType, params);
     this.firstLineOffset = -1;
     this.buffer = null;
     if (null != encoding) {
         Charset charset = Charset.forName(encoding);
         decoder = charset.newDecoder();
     } else {
         decoder = null;
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxZ915FCEeuCTslxszDstQ" name="newInstance" specification="_yS410JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxZ92JFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxZ92ZFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxZ92pFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxZ925FCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxZ93JFCEeuCTslxszDstQ" type="_ySvr4pFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>return new PrincetonResourceDictionaryFile(dictionary, path, pos, fileType, params);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxak4JFCEeuCTslxszDstQ" name="open" specification="_yS75IJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>try (final InputStream input =
                  PrincetonResourceDictionaryFile.class.getResourceAsStream(path + &quot;/&quot; + getFilename())) {
         // data.noun is about 16M
         try (final ByteArrayOutputStream output = new ByteArrayOutputStream(16 * 1024 * 1024)) {
             copyStream(input, output);
             buffer = output.toByteArray();
         }
     } catch (IOException e) {
         throw new JWNLIOException(e);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxak4ZFCEeuCTslxszDstQ" name="isOpen" specification="_yS9uUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxak4pFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return null != buffer;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxak45FCEeuCTslxszDstQ" name="close" specification="_yS-8cpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>buffer = null;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxak5JFCEeuCTslxszDstQ" name="save" specification="_yTAxoJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxbL8JFCEeuCTslxszDstQ" name="edit" specification="_yTB_wpFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxbL8ZFCEeuCTslxszDstQ" name="getNextLineOffset" specification="_yTD08JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxbL8pFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxbL85FCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!isOpen()) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;));
     }

     int loffset = (int) offset;

     if (loffset >= buffer.length || loffset &lt; 0) {
         return -1;
     }

     int i = loffset;
     while (i &lt; buffer.length &amp;&amp; '\n' != buffer[i]) {
         i++;
     }
     // we've read the line

     long result = i + 1;
     if (result >= buffer.length) {
         result = -1;
     }

     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxbL9JFCEeuCTslxszDstQ" name="getOffsetLength" specification="_yTGRMpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxbL9ZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxbzAJFCEeuCTslxszDstQ" name="setOffsetLength" specification="_yTIGYpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxbzAZFCEeuCTslxszDstQ" name="length">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>throw new UnsupportedOperationException();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxbzApFCEeuCTslxszDstQ" name="readLine" specification="_yTJ7kJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxbzA5FCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxbzBJFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (!isOpen()) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;));
     }

     // long files limitation due to limitation in ByteBuffer.
     int loffset = (int) offset;

     if (loffset >= buffer.length || loffset &lt; 0) {
         return null;
     }

     int i = loffset;
     while (i &lt; buffer.length &amp;&amp; '\n' != buffer[i]) {
         i++;
     }

     // resulting line ends at i (eol or eof)
     final PointedCharSequence result;

     if (null == encoding) {
         result = new ByteArrayCharSequence(buffer, loffset, i, i);
     } else {
         final ByteBuffer bb = ByteBuffer.wrap(buffer, loffset, i - loffset);

         try {
             synchronized (this) {
                 CharBuffer cb = decoder.decode(bb);
                 result = new CharBufferCharSequence(cb, i);
             }
         } catch (CharacterCodingException e) {
             throw new JWNLIOException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_003&quot;,
                     new Object[]{getFilename(), loffset}), e);
         }
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxbzBZFCEeuCTslxszDstQ" name="readWord" specification="_yTLwwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxbzBpFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxbzB5FCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                  <language>java</language>
                  <body>if (!isOpen()) {
         throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;));
     }

     // long files limitation due to limitation in ByteBuffer.
     int loffset = (int) offset;

     if (loffset >= buffer.length || loffset &lt; 0) {
         return null;
     }

     int i = loffset;
     while (i &lt; buffer.length &amp;&amp; ' ' != buffer[i] &amp;&amp; '\n' != buffer[i]) {
         i++;
     }

     // resulting word ends at i (space, eol or eof)
     final PointedCharSequence result;

     if (null == encoding) {
         result = new ByteArrayCharSequence(buffer, loffset, i, i);
     } else {
         final ByteBuffer bb = ByteBuffer.wrap(buffer, loffset, i - loffset);

         try {
             synchronized (this) {
                 CharBuffer cb = decoder.decode(bb);
                 result = new CharBufferCharSequence(cb, i);
             }
         } catch (CharacterCodingException e) {
             throw new JWNLIOException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_003&quot;,
                     new Object[]{getFilename(), loffset}), e);
         }
     }
     return result;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxcaEJFCEeuCTslxszDstQ" name="length" specification="_yTNl8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxcaEZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return buffer.length;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxcaEpFCEeuCTslxszDstQ" name="fastChannelCopy" specification="_yrdt4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxcaE5FCEeuCTslxszDstQ" name="src" type="_yotU0ZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_yxcaFJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yxcaFZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yxcaFpFCEeuCTslxszDstQ" name="dest" type="_yotU05FCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_yxcaF5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yxcaGJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <language>java</language>
                  <body>final ByteBuffer buffer = ByteBuffer.allocateDirect(16 * 1024);
     while (src.read(buffer) != -1) {
         // prepare the buffer to be drained
         buffer.flip();
         // write to the channel, may block
         dest.write(buffer);
         // If partial transfer, shift remainder down
         // If buffer is empty, same as doing clear()
         buffer.compact();
     }
     // EOF will leave buffer in fill state
     buffer.flip();
     // make sure the buffer is fully drained.
     while (buffer.hasRemaining()) {
         dest.write(buffer);
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yxdBIJFCEeuCTslxszDstQ" name="copyStream" specification="_yTO0EJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yxdBIZFCEeuCTslxszDstQ" name="input" type="_rtYhcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yxdBIpFCEeuCTslxszDstQ" name="output" type="_rf4Q8JFCEeuCTslxszDstQ"/>
                  <language>java</language>
                  <body>try (final WritableByteChannel outputChannel = Channels.newChannel(output)) {
         try (final ReadableByteChannel inputChannel = Channels.newChannel(input)) {
             fastChannelCopy(inputChannel, outputChannel);
         }
     }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ySzWQJFCEeuCTslxszDstQ" name="PrincetonResourceDictionaryFile" method="_yxZWwZFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_ySz9UJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ySz9UZFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_yzUpYZFCEeuCTslxszDstQ">
                    <body>Factory constructor.
     *
     * @param dictionary dictionary
     * @param params     params</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ySzWQZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ySzWQpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_ySz9UpFCEeuCTslxszDstQ" type="_ySvr4pFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yS1ygJFCEeuCTslxszDstQ" name="PrincetonResourceDictionaryFile" method="_yxZ90JFCEeuCTslxszDstQ">
                  <eAnnotations xmi:id="_yS2ZkZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yS2ZkpFCEeuCTslxszDstQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_yzUpYpFCEeuCTslxszDstQ">
                    <body>Instance constructor.
     *
     * @param dictionary dictionary
     * @param path       file path
     * @param pos        part of speech
     * @param fileType   file type
     * @param params     params</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_yS1ygZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yS1ygpFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yS1yg5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yS1yhJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yS2ZkJFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yS3AoJFCEeuCTslxszDstQ" type="_ySvr4pFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yS410JFCEeuCTslxszDstQ" name="newInstance" method="_yxZ915FCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yS5c4JFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yS5c4ZFCEeuCTslxszDstQ" name="path">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yS5c4pFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yS5c45FCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_youi85FCEeuCTslxszDstQ" type="_ySvr4pFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yS75IJFCEeuCTslxszDstQ" name="open" method="_yxak4JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yS9uUJFCEeuCTslxszDstQ" name="isOpen" method="_yxak4ZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yS-VYJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yS-8cpFCEeuCTslxszDstQ" name="close" method="_yxak45FCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yTAxoJFCEeuCTslxszDstQ" name="save" method="_yxak5JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yTB_wpFCEeuCTslxszDstQ" name="edit" method="_yxbL8JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yTD08JFCEeuCTslxszDstQ" name="getNextLineOffset" method="_yxbL8ZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yTEcAJFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yTEcAZFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yTGRMpFCEeuCTslxszDstQ" name="getOffsetLength" method="_yxbL9JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yTG4QJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yTIGYpFCEeuCTslxszDstQ" name="setOffsetLength" method="_yxbzAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yTIGY5FCEeuCTslxszDstQ" name="length">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yTJ7kJFCEeuCTslxszDstQ" name="readLine" method="_yxbzApFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yTJ7kZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yTJ7kpFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yTLwwJFCEeuCTslxszDstQ" name="readWord" method="_yxbzBZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yTLwwZFCEeuCTslxszDstQ" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yTMX0JFCEeuCTslxszDstQ" type="_oxZRcJFCEeuCTslxszDstQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yTNl8JFCEeuCTslxszDstQ" name="length" method="_yxcaEJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yTONAJFCEeuCTslxszDstQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yTO0EJFCEeuCTslxszDstQ" name="copyStream" isStatic="true" method="_yxdBIJFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yTO0EZFCEeuCTslxszDstQ" name="input" type="_rtYhcJFCEeuCTslxszDstQ"/>
                  <ownedParameter xmi:id="_yTO0EpFCEeuCTslxszDstQ" name="output" type="_rf4Q8JFCEeuCTslxszDstQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yrdt4JFCEeuCTslxszDstQ" name="fastChannelCopy" visibility="private" isStatic="true" method="_yxcaEpFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yrdt4ZFCEeuCTslxszDstQ" name="src" type="_yotU0ZFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_yreU8JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yre8AJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yrdt4pFCEeuCTslxszDstQ" name="dest" type="_yotU05FCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_yre8AZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yre8ApFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yW82cJFCEeuCTslxszDstQ" name="TestPrincetonRandomAccessDictionaryFile">
                <eAnnotations xmi:id="_yW9dgJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                  <contents xmi:type="ecore:EAnnotation" xmi:id="_yW9dgZFCEeuCTslxszDstQ" source="codegen">
                    <details xmi:id="_yW9dgpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                  </contents>
                </eAnnotations>
                <ownedAttribute xmi:id="_ywCE0JFCEeuCTslxszDstQ" name="bytes" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywCE0ZFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ywDS8JFCEeuCTslxszDstQ" name="utfBytes" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywDS8ZFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ywEhEJFCEeuCTslxszDstQ" name="offset" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywFIIJFCEeuCTslxszDstQ" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ywGWQJFCEeuCTslxszDstQ" name="pradf" visibility="private" type="_yRXy4JFCEeuCTslxszDstQ" association="_y0Tg15FCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyp7AJFCEeuCTslxszDstQ" name="testFormatOffset" specification="_yW-roJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyp7AZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyp7ApFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, 0, &quot;&quot;},
             {0, 1, &quot;0&quot;},
             {0, 2, &quot;00&quot;},
             {1, 0, &quot;&quot;},
             {1, 1, &quot;1&quot;},
             {1, 2, &quot;01&quot;},
             {1, 3, &quot;001&quot;},
             {123, 1, &quot;3&quot;},
             {123, 2, &quot;23&quot;},
             {123, 3, &quot;123&quot;},
             {123, 4, &quot;0123&quot;},
             {12345678, 4, &quot;5678&quot;},
             {12345678, 8, &quot;12345678&quot;},
             {12345678, 9, &quot;012345678&quot;},
             {123456789123L, 9, &quot;456789123&quot;},
             {123456789123L, 12, &quot;123456789123&quot;},
             {123456789123L, 13, &quot;0123456789123&quot;}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyqiEJFCEeuCTslxszDstQ" name="testFormatOffset" specification="_yXAg0JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyqiEZFCEeuCTslxszDstQ" name="i">
                    <eAnnotations xmi:id="_yyqiEpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyqiE5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyqiFJFCEeuCTslxszDstQ" name="l">
                    <eAnnotations xmi:id="_yyqiFZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyqiFpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyqiF5FCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yyqiGJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyqiGZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuilder b = new StringBuilder();
     PrincetonRandomAccessDictionaryFile.formatOffset(i, l, b);
     assertEquals(s, b.toString());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyqiGpFCEeuCTslxszDstQ" name="beforeClass" specification="_yXCWAJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>{
         InputStream input = PrincetonRandomAccessDictionaryFile.class.getResourceAsStream(&quot;/readLineASCII.txt&quot;);
         ByteArrayOutputStream output = new ByteArrayOutputStream(16 * 1024);
         PrincetonResourceDictionaryFile.copyStream(input, output);
         bytes = output.toByteArray();
     }
     {
         InputStream input = PrincetonRandomAccessDictionaryFile.class.getResourceAsStream(&quot;/readLineUTF.txt&quot;);
         ByteArrayOutputStream output = new ByteArrayOutputStream(16 * 1024);
         PrincetonResourceDictionaryFile.copyStream(input, output);
         utfBytes = output.toByteArray();
     }
     {
         InputStream input = PrincetonRandomAccessDictionaryFile.class.getResourceAsStream(&quot;/firstLineOffset.txt&quot;);
         ByteArrayOutputStream output = new ByteArrayOutputStream(16 * 1024);
         PrincetonResourceDictionaryFile.copyStream(input, output);
         offset = output.toByteArray();
     }
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyrJIJFCEeuCTslxszDstQ" name="initPRADF" specification="_yXDkIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyrJIZFCEeuCTslxszDstQ" name="encoding">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyrJIpFCEeuCTslxszDstQ" name="bytes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyrJI5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Dictionary d = mock(Dictionary.class);
     ResourceBundleSet b = mock(ResourceBundleSet.class);
     when(d.getMessages()).thenReturn(b);
     when(b.resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;)).thenReturn(&quot;Illegal Operation: file is not open or is not readable&quot;);

     Map&lt;String, Param> params = new HashMap&lt;String, Param>();
     if (null != encoding) {
         NameValueParam e = new NameValueParam(null, AbstractPrincetonRandomAccessDictionaryFile.ENCODING_KEY, encoding);
         params.put(AbstractPrincetonRandomAccessDictionaryFile.ENCODING_KEY, e);
     }

     pradf = new PrincetonRandomAccessDictionaryFile(d, &quot;&quot;, POS.NOUN, DictionaryFileType.DATA, params);

     final ByteBuffer byteBuffer = ByteBuffer.wrap(bytes);
     final RandomAccessFile raFile = mock(RandomAccessFile.class);
     when(raFile.length()).thenReturn((long) byteBuffer.limit());
     doAnswer(new Answer() {
         @Override
         public Object answer(InvocationOnMock invocation) throws Throwable {
             Object[] args = invocation.getArguments();
             long offset = (Long) args[0];
             byteBuffer.position((int) offset);
             return null;
         }
     }).when(raFile).seek(anyLong());
     doAnswer(new Answer&lt;Integer>() {
         @Override
         public Integer answer(InvocationOnMock invocation) throws Throwable {
             Object[] args = invocation.getArguments();
             byte[] bytes = (byte[]) args[0];
             int off = (Integer) args[1];
             int len = (Integer) args[2];
             byteBuffer.get(bytes, off, len);
             return len;
         }
     }).when(raFile).read(any(byte[].class), anyInt(), anyInt());

     Field field = PrincetonRandomAccessDictionaryFile.class.getDeclaredField(&quot;raFile&quot;);
     field.setAccessible(true);
     field.set(pradf, raFile);
     field = PrincetonRandomAccessDictionaryFile.class.getDeclaredField(&quot;raFileLength&quot;);
     field.setAccessible(true);
     field.set(pradf, byteBuffer.limit());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyrJJJFCEeuCTslxszDstQ" name="testReadLinePre" specification="_yXEyQJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, bytes);

     assertNull(pradf.readLine(-1));
     assertNull(pradf.readLine(Integer.MAX_VALUE));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyrJJZFCEeuCTslxszDstQ" name="testReadLineJWNLException" specification="_yXGAYJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, bytes);

     Field field = PrincetonRandomAccessDictionaryFile.class.getDeclaredField(&quot;raFile&quot;);
     field.setAccessible(true);
     field.set(pradf, null);
     pradf.readLine(0);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyrJJpFCEeuCTslxszDstQ" name="testReadLine" specification="_yXHOgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyrJJ5FCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyrJKJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, &quot;a&quot;, 1},
             {1, &quot;&quot;, 1},
             {3, &quot;b&quot;, 4},
             {9, &quotquot;, 529}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyrwMJFCEeuCTslxszDstQ" name="testReadLine" specification="_yXIcoJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyrwMZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yyrwMpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyrwM5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyrwNJFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yyrwNZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyrwNpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyrwN5FCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yyrwOJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyrwOZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(null, bytes);

     PointedCharSequence sequence = pradf.readLine(o);
     assertNotNull(sequence);
     assertEquals(s, sequence.toString());
     assertEquals(p, sequence.getLastBytePosition());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yysXQJFCEeuCTslxszDstQ" name="testReadLineUTF" specification="_yXK44JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yysXQZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yysXQpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, &quot;a&quot;, 1},
             {1, &quot;&quot;, 1},
             {3, &quot;b&quot;, 4},
             {9, &quot;lunedìпонедельник&quot;, 38},
             {16, &quot;понедельник&quot;, 38}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yys-UJFCEeuCTslxszDstQ" name="testReadLineUTF" specification="_yXNVIZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yys-UZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yys-UpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yys-U5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yys-VJFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yys-VZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yys-VpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yys-V5FCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yys-WJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yys-WZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(&quot;UTF-8&quot;, utfBytes);

     PointedCharSequence sequence = pradf.readLine(o);
     assertNotNull(sequence);
     assertEquals(s, sequence.toString());
     assertEquals(p, sequence.getLastBytePosition());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yys-WpFCEeuCTslxszDstQ" name="testReadWordPre" specification="_yXQYcJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, bytes);

     assertNull(pradf.readWord(-1));
     assertNull(pradf.readWord(Integer.MAX_VALUE));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yytlYJFCEeuCTslxszDstQ" name="testReadWordJWNLException" specification="_yXRmkJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, bytes);

     Field field = PrincetonRandomAccessDictionaryFile.class.getDeclaredField(&quot;raFile&quot;);
     field.setAccessible(true);
     field.set(pradf, null);
     pradf.readWord(0);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yytlYZFCEeuCTslxszDstQ" name="testReadWord" specification="_yXTbwJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yytlYpFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yytlY5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, &quot;a&quot;, 1},
             {1, &quot;&quot;, 1},
             {530, &quot;word&quot;, 534},
             {535, &quot;second&quot;, 541}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yytlZJFCEeuCTslxszDstQ" name="testReadWord" specification="_yXV4AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yytlZZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yytlZpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yytlZ5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yytlaJFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yytlaZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yytlapFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yytla5FCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yytlbJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yytlbZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(null, bytes);

     PointedCharSequence sequence = pradf.readWord(o);
     assertNotNull(sequence);
     assertEquals(s, sequence.toString());
     assertEquals(p, sequence.getLastBytePosition());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyuMcJFCEeuCTslxszDstQ" name="testReadWordUTF" specification="_yXb-oJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyuMcZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyuMcpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, &quot;a&quot;, 1},
             {1, &quot;&quot;, 1},
             {3, &quot;b&quot;, 4},
             {9, &quot;lunedìпонедельник&quot;, 38},
             {16, &quot;понедельник&quot;, 38},
             {39, &quot;слово&quot;, 49},
             {50, &quot;ещё&quot;, 56},
             {68, &quot;supercalifragilisticexpialidocious&quot;, 102}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyuzgJFCEeuCTslxszDstQ" name="testReadWordUTF" specification="_yXea4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyuzgZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yyuzgpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyuzg5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyuzhJFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yyuzhZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyuzhpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyuzh5FCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yyuziJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyuziZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(&quot;UTF-8&quot;, utfBytes);

     PointedCharSequence sequence = pradf.readWord(o);
     assertNotNull(sequence);
     assertEquals(s, sequence.toString());
     assertEquals(p, sequence.getLastBytePosition());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyuzipFCEeuCTslxszDstQ" name="testGetFirstLineOffsetJWNLException" specification="_yXiFQJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, offset);

     Field field = PrincetonRandomAccessDictionaryFile.class.getDeclaredField(&quot;raFile&quot;);
     field.setAccessible(true);
     field.set(pradf, null);
     pradf.getFirstLineOffset();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyuzi5FCEeuCTslxszDstQ" name="testGetFirstLineOffset" specification="_yXkhgJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, offset);
     assertEquals(2210, pradf.getFirstLineOffset());
     assertEquals(2210, pradf.getFirstLineOffset()); // to cover also cached branch
     assertEquals(&quot;line&quot;, pradf.readLine(2210).toString());

     initPRADF(null, bytes);
     assertEquals(0, pradf.getFirstLineOffset());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyvakJFCEeuCTslxszDstQ" name="testGetNextLineOffsetPre" specification="_yXmWsJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, bytes);

     assertEquals(-1, pradf.getNextLineOffset(-1));
     assertEquals(-1, pradf.getNextLineOffset(Integer.MAX_VALUE));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyvakZFCEeuCTslxszDstQ" name="testGetNextLineOffsetJWNLException" specification="_yXoL4JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, bytes);

     Field field = PrincetonRandomAccessDictionaryFile.class.getDeclaredField(&quot;raFile&quot;);
     field.setAccessible(true);
     field.set(pradf, null);
     pradf.getNextLineOffset(0);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyvakpFCEeuCTslxszDstQ" name="testGetNextLineOffset" specification="_yXqoIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyvak5FCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyvalJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, 2},
             {1, 2},
             {2, 3},
             {3, 5},
             {9, 530},
             {530, 535},
             {545, -1}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yywBoJFCEeuCTslxszDstQ" name="testGetNextLineOffset" specification="_yXtrcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yywBoZFCEeuCTslxszDstQ" name="x">
                    <eAnnotations xmi:id="_yywBopFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yywBo5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yywBpJFCEeuCTslxszDstQ" name="y">
                    <eAnnotations xmi:id="_yywBpZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yywBppFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(null, bytes);

     assertEquals(y, pradf.getNextLineOffset(x));
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yW-roJFCEeuCTslxszDstQ" name="testFormatOffset" isStatic="true" method="_yyp7AJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yW-roZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yW-ropFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXAg0JFCEeuCTslxszDstQ" name="testFormatOffset" method="_yyqiEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXAg0ZFCEeuCTslxszDstQ" name="i">
                    <eAnnotations xmi:id="_yXBH4JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXBH4ZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXAg0pFCEeuCTslxszDstQ" name="l">
                    <eAnnotations xmi:id="_yXBH4pFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXBH45FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXAg05FCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yXBH5JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXBH5ZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXCWAJFCEeuCTslxszDstQ" name="beforeClass" isStatic="true" method="_yyqiGpFCEeuCTslxszDstQ" raisedException="_rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yXDkIJFCEeuCTslxszDstQ" name="initPRADF" visibility="protected" method="_yyrJIJFCEeuCTslxszDstQ" raisedException="_ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXDkIZFCEeuCTslxszDstQ" name="encoding">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXDkIpFCEeuCTslxszDstQ" name="bytes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yXELMZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXEyQJFCEeuCTslxszDstQ" name="testReadLinePre" method="_yyrJJJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yXGAYJFCEeuCTslxszDstQ" name="testReadLineJWNLException" method="_yyrJJZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yXHOgJFCEeuCTslxszDstQ" name="testReadLine" isStatic="true" method="_yyrJJpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXHOgZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yXHOgpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXIcoJFCEeuCTslxszDstQ" name="testReadLine" method="_yyrwMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXIcoZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yXJDspFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXJDs5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXJDsJFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yXJqwJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXJqwZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXJDsZFCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yXJqwpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXJqw5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXK44JFCEeuCTslxszDstQ" name="testReadLineUTF" isStatic="true" method="_yysXQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXLf8JFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yXLf8ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXNVIZFCEeuCTslxszDstQ" name="testReadLineUTF" method="_yys-UJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXN8MJFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yXOjQJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXOjQZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXN8MZFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yXOjQpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXOjQ5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXN8MpFCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yXPKUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXPKUZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXQYcJFCEeuCTslxszDstQ" name="testReadWordPre" method="_yys-WpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yXRmkJFCEeuCTslxszDstQ" name="testReadWordJWNLException" method="_yytlYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yXTbwJFCEeuCTslxszDstQ" name="testReadWord" isStatic="true" method="_yytlYZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXUC0JFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yXUC0ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXV4AJFCEeuCTslxszDstQ" name="testReadWord" method="_yytlZJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXV4AZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yXXGIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXXGIZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXWfEJFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yXXGIpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXXGI5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXWfEZFCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yXXGJJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXXtMJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXb-oJFCEeuCTslxszDstQ" name="testReadWordUTF" isStatic="true" method="_yyuMcJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXb-oZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yXb-opFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXea4JFCEeuCTslxszDstQ" name="testReadWordUTF" method="_yyuzgJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXea4ZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yXfpAJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXfpAZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXfB8JFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yXgQEJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXgQEZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXfB8ZFCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yXgQEpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXgQE5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXiFQJFCEeuCTslxszDstQ" name="testGetFirstLineOffsetJWNLException" method="_yyuzipFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yXkhgJFCEeuCTslxszDstQ" name="testGetFirstLineOffset" method="_yyuzi5FCEeuCTslxszDstQ" raisedException="_ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yXmWsJFCEeuCTslxszDstQ" name="testGetNextLineOffsetPre" method="_yyvakJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yXoL4JFCEeuCTslxszDstQ" name="testGetNextLineOffsetJWNLException" method="_yyvakZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yXqoIJFCEeuCTslxszDstQ" name="testGetNextLineOffset" isStatic="true" method="_yyvakpFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXrPMJFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yXrPMZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yXtrcJFCEeuCTslxszDstQ" name="testGetNextLineOffset" method="_yywBoJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _rVb7gJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yXtrcZFCEeuCTslxszDstQ" name="x">
                    <eAnnotations xmi:id="_yXuSgZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXu5kJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXuSgJFCEeuCTslxszDstQ" name="y">
                    <eAnnotations xmi:id="_yXu5kZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yXu5kpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_yX-xMJFCEeuCTslxszDstQ" name="TestPrincetonResourceDictionaryFile">
                <eAnnotations xmi:id="_yX_YQJFCEeuCTslxszDstQ" source="http://ns.yatta.de/umllab">
                  <contents xmi:type="ecore:EAnnotation" xmi:id="_yX_YQZFCEeuCTslxszDstQ" source="codegen">
                    <details xmi:id="_yX_YQpFCEeuCTslxszDstQ" key="codegenDirectory" value="/extjwnl/src/test/java"/>
                  </contents>
                </eAnnotations>
                <ownedAttribute xmi:id="_ywILcJFCEeuCTslxszDstQ" name="pradf" visibility="private" type="_ySvr4pFCEeuCTslxszDstQ" association="_y0UH4ZFCEeuCTslxszDstQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyx20JFCEeuCTslxszDstQ" name="initPRADF" specification="_yYGF8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyx20ZFCEeuCTslxszDstQ" name="encoding">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyx20pFCEeuCTslxszDstQ" name="file">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Dictionary d = mock(Dictionary.class);
     ResourceBundleSet b = mock(ResourceBundleSet.class);
     when(d.getMessages()).thenReturn(b);
     when(b.resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;)).thenReturn(&quot;Illegal Operation: file is not open or is not readable&quot;);

     Map&lt;String, Param> params = new HashMap&lt;String, Param>();
     if (null != encoding) {
         NameValueParam e = new NameValueParam(null, AbstractPrincetonRandomAccessDictionaryFile.ENCODING_KEY, encoding);
         params.put(AbstractPrincetonRandomAccessDictionaryFile.ENCODING_KEY, e);
     }

     pradf = new PrincetonResourceDictionaryFileName(d, &quot;&quot;, POS.NOUN, DictionaryFileType.DATA, params, file);
     pradf.open();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyx205FCEeuCTslxszDstQ" name="testReadLinePre" specification="_yYHUEJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, &quot;readLineASCII.txt&quot;);

     assertNull(pradf.readLine(-1));
     assertNull(pradf.readLine(Integer.MAX_VALUE));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyx21JFCEeuCTslxszDstQ" name="testReadLineJWNLException" specification="_yYIiMJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, &quot;readLineASCII.txt&quot;);

     Field field = PrincetonResourceDictionaryFile.class.getDeclaredField(&quot;buffer&quot;);
     field.setAccessible(true);
     field.set(pradf, null);
     pradf.readLine(0);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyyd4JFCEeuCTslxszDstQ" name="testReadLine" specification="_yYJwUJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyyd4ZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyyd4pFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, &quot;a&quot;, 1},
             {1, &quot;&quot;, 1},
             {3, &quot;b&quot;, 4},
             {9, &quot;1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890&quot;, 529}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyyd45FCEeuCTslxszDstQ" name="testReadLine" specification="_yYLlgJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyyd5JFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yyyd5ZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyyd5pFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyyd55FCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yyyd6JFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyyd6ZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyyd6pFCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yyyd65FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyyd7JFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(null, &quot;readLineASCII.txt&quot;);

     PointedCharSequence sequence = pradf.readLine(o);
     assertNotNull(sequence);
     assertEquals(s, sequence.toString());
     assertEquals(p, sequence.getLastBytePosition());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyzE8JFCEeuCTslxszDstQ" name="testReadLineUTF" specification="_yYPP4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyzE8ZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzE8pFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, &quot;a&quot;, 1},
             {1, &quot;&quot;, 1},
             {3, &quot;b&quot;, 4},
             {9, &quot;lunedìпонедельник&quot;, 38},
             {16, &quot;понедельник&quot;, 38}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyzsAJFCEeuCTslxszDstQ" name="testReadLineUTF" specification="_yYRsIJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yyzsAZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yyzsApFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyzsA5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyzsBJFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yyzsBZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyzsBpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yyzsB5FCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yyzsCJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yyzsCZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(&quot;UTF-8&quot;, &quot;readLineUTF.txt&quot;);

     PointedCharSequence sequence = pradf.readLine(o);
     assertNotNull(sequence);
     assertEquals(s, sequence.toString());
     assertEquals(p, sequence.getLastBytePosition());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyzsCpFCEeuCTslxszDstQ" name="testReadWordPre" specification="_yYUvcJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, &quot;readLineASCII.txt&quot;);

     assertNull(pradf.readWord(-1));
     assertNull(pradf.readWord(Integer.MAX_VALUE));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyzsC5FCEeuCTslxszDstQ" name="testReadWordJWNLException" specification="_yYWkoJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, &quot;readLineASCII.txt&quot;);

     Field field = PrincetonResourceDictionaryFile.class.getDeclaredField(&quot;buffer&quot;);
     field.setAccessible(true);
     field.set(pradf, null);
     pradf.readWord(0);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy0TEJFCEeuCTslxszDstQ" name="testReadWord" specification="_yYXywJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yy0TEZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy0TEpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, &quot;a&quot;, 1},
             {1, &quot;&quot;, 1},
             {530, &quot;word&quot;, 534},
             {535, &quot;second&quot;, 541}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy0TE5FCEeuCTslxszDstQ" name="testReadWord" specification="_yYZn8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yy0TFJFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yy0TFZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yy0TFpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yy0TF5FCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yy0TGJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yy0TGZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yy0TGpFCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yy0TG5FCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yy0THJFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(null, &quot;readLineASCII.txt&quot;);

     PointedCharSequence sequence = pradf.readWord(o);
     assertNotNull(sequence);
     assertEquals(s, sequence.toString());
     assertEquals(p, sequence.getLastBytePosition());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy06IJFCEeuCTslxszDstQ" name="testReadWordUTF" specification="_yYcrQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yy06IZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy06IpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, &quot;a&quot;, 1},
             {1, &quot;&quot;, 1},
             {3, &quot;b&quot;, 4},
             {9, &quot;lunedìпонедельник&quot;, 38},
             {16, &quot;понедельник&quot;, 38},
             {39, &quot;слово&quot;, 49},
             {50, &quot;ещё&quot;, 56},
             {68, &quot;supercalifragilisticexpialidocious&quot;, 102}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy1hMJFCEeuCTslxszDstQ" name="testReadWordUTF" specification="_yYd5YZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yy1hMZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yy1hMpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yy1hM5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yy1hNJFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yy1hNZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yy1hNpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yy1hN5FCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yy1hOJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yy1hOZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(&quot;UTF-8&quot;, &quot;readLineUTF.txt&quot;);

     PointedCharSequence sequence = pradf.readWord(o);
     assertNotNull(sequence);
     assertEquals(s, sequence.toString());
     assertEquals(p, sequence.getLastBytePosition());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy2IQJFCEeuCTslxszDstQ" name="testGetFirstLineOffsetJWNLException" specification="_yYgVoJFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, &quot;firstLineOffset.txt&quot;);

     Field field = PrincetonResourceDictionaryFile.class.getDeclaredField(&quot;buffer&quot;);
     field.setAccessible(true);
     field.set(pradf, null);
     pradf.getFirstLineOffset();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy2IQZFCEeuCTslxszDstQ" name="testGetFirstLineOffset" specification="_yYg8s5FCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, &quot;firstLineOffset.txt&quot;);
     assertEquals(2210, pradf.getFirstLineOffset());
     assertEquals(2210, pradf.getFirstLineOffset()); // to cover also cached branch
     assertEquals(&quot;line&quot;, pradf.readLine(2210).toString());

     initPRADF(null, &quot;readLineASCII.txt&quot;);
     assertEquals(0, pradf.getFirstLineOffset());
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy2vUJFCEeuCTslxszDstQ" name="testGetNextLineOffsetPre" specification="_yYiK0JFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, &quot;readLineASCII.txt&quot;);

     assertEquals(-1, pradf.getNextLineOffset(-1));
     assertEquals(-1, pradf.getNextLineOffset(Integer.MAX_VALUE));
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy3WYJFCEeuCTslxszDstQ" name="testGetNextLineOffsetJWNLException" specification="_yYix4pFCEeuCTslxszDstQ">
                  <language>java</language>
                  <body>initPRADF(null, &quot;readLineASCII.txt&quot;);

     Field field = PrincetonResourceDictionaryFile.class.getDeclaredField(&quot;buffer&quot;);
     field.setAccessible(true);
     field.set(pradf, null);
     pradf.getNextLineOffset(0);
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy3WYZFCEeuCTslxszDstQ" name="testGetNextLineOffset" specification="_yYkAAZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yy3WYpFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy3WY5FCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new Object[][]{
             {0, 2},
             {1, 2},
             {2, 3},
             {3, 5},
             {9, 530},
             {530, 535},
             {545, -1}
     };
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yy39cJFCEeuCTslxszDstQ" name="testGetNextLineOffset" specification="_yYmcQJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yy39cZFCEeuCTslxszDstQ" name="x">
                    <eAnnotations xmi:id="_yy39cpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yy39c5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yy39dJFCEeuCTslxszDstQ" name="y">
                    <eAnnotations xmi:id="_yy39dZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yy39dpFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>initPRADF(null, &quot;readLineASCII.txt&quot;);

     assertEquals(y, pradf.getNextLineOffset(x));
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yYGF8JFCEeuCTslxszDstQ" name="initPRADF" visibility="protected" method="_yyx20JFCEeuCTslxszDstQ" raisedException="_ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYGtAJFCEeuCTslxszDstQ" name="encoding">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYGtAZFCEeuCTslxszDstQ" name="file">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYHUEJFCEeuCTslxszDstQ" name="testReadLinePre" method="_yyx205FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yYIiMJFCEeuCTslxszDstQ" name="testReadLineJWNLException" method="_yyx21JFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yYJwUJFCEeuCTslxszDstQ" name="testReadLine" isStatic="true" method="_yyyd4JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYJwUZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yYJwUpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYLlgJFCEeuCTslxszDstQ" name="testReadLine" method="_yyyd45FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYMMkJFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yYMzoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYMzoZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYMMkZFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yYNasJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYNasZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYMMkpFCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yYNaspFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYNas5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYPP4JFCEeuCTslxszDstQ" name="testReadLineUTF" isStatic="true" method="_yyzE8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYPP4ZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yYP28JFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYRsIJFCEeuCTslxszDstQ" name="testReadLineUTF" method="_yyzsAJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYRsIZFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yYSTMJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYSTMZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYRsIpFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yYS6QJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYS6QZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYRsI5FCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yYS6QpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYS6Q5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYUvcJFCEeuCTslxszDstQ" name="testReadWordPre" method="_yyzsCpFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yYWkoJFCEeuCTslxszDstQ" name="testReadWordJWNLException" method="_yyzsC5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yYXywJFCEeuCTslxszDstQ" name="testReadWord" isStatic="true" method="_yy0TEJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYYZ0JFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yYYZ0ZFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYZn8JFCEeuCTslxszDstQ" name="testReadWord" method="_yy0TE5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYaPAJFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yYa2EJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYa2EZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYaPAZFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yYa2EpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYa2E5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYaPApFCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yYbdIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYbdIZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYcrQJFCEeuCTslxszDstQ" name="testReadWordUTF" isStatic="true" method="_yy06IJFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYcrQZFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yYcrQpFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYd5YZFCEeuCTslxszDstQ" name="testReadWordUTF" method="_yy1hMJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYd5YpFCEeuCTslxszDstQ" name="o">
                    <eAnnotations xmi:id="_yYegcpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYegc5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYegcJFCEeuCTslxszDstQ" name="s">
                    <eAnnotations xmi:id="_yYfHgJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYfHgZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYegcZFCEeuCTslxszDstQ" name="p">
                    <eAnnotations xmi:id="_yYfHgpFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYfHg5FCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYgVoJFCEeuCTslxszDstQ" name="testGetFirstLineOffsetJWNLException" method="_yy2IQJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yYg8s5FCEeuCTslxszDstQ" name="testGetFirstLineOffset" method="_yy2IQZFCEeuCTslxszDstQ" raisedException="_ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ _oB2q4JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yYiK0JFCEeuCTslxszDstQ" name="testGetNextLineOffsetPre" method="_yy2vUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yYix4pFCEeuCTslxszDstQ" name="testGetNextLineOffsetJWNLException" method="_yy3WYJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ"/>
                <ownedOperation xmi:id="_yYkAAZFCEeuCTslxszDstQ" name="testGetNextLineOffset" isStatic="true" method="_yy3WYZFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYkAApFCEeuCTslxszDstQ" type="_ryMwAJFCEeuCTslxszDstQ" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yYknEJFCEeuCTslxszDstQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_yYmcQJFCEeuCTslxszDstQ" name="testGetNextLineOffset" method="_yy39cJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ _ysEK0JFCEeuCTslxszDstQ _ysFY8JFCEeuCTslxszDstQ">
                  <ownedParameter xmi:id="_yYmcQZFCEeuCTslxszDstQ" name="x">
                    <eAnnotations xmi:id="_yYnDUJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYnDUZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yYmcQpFCEeuCTslxszDstQ" name="y">
                    <eAnnotations xmi:id="_yYnqYJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYnqYZFCEeuCTslxszDstQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_yYAmYJFCEeuCTslxszDstQ" name="PrincetonResourceDictionaryFileName" visibility="private">
                  <generalization xmi:id="_ypuBcJFCEeuCTslxszDstQ" general="_ySvr4pFCEeuCTslxszDstQ"/>
                  <ownedAttribute xmi:id="_ywIygJFCEeuCTslxszDstQ" name="fileName" visibility="private" isLeaf="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyxPwJFCEeuCTslxszDstQ" name="PrincetonResourceDictionaryFileName" specification="_yYB0gJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_yyxPwZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_yyxPwpFCEeuCTslxszDstQ" name="path">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_yyxPw5FCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_yyxPxJFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_yyxPxZFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_yyxPxpFCEeuCTslxszDstQ" name="fileName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_yyxPx5FCEeuCTslxszDstQ" type="_yYAmYJFCEeuCTslxszDstQ" direction="return"/>
                    <language>java</language>
                    <body>super(dictionary, path, pos, fileType, params);
         this.fileName = fileName;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yyxPyJFCEeuCTslxszDstQ" name="getFilename" specification="_yYEQwZFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_yyxPyZFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return fileName;
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_yYB0gJFCEeuCTslxszDstQ" name="PrincetonResourceDictionaryFileName" method="_yyxPwJFCEeuCTslxszDstQ">
                    <eAnnotations xmi:id="_yYDCoJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_yYDCoZFCEeuCTslxszDstQ" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_yYB0gZFCEeuCTslxszDstQ" name="dictionary" type="_rVLc0JFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_yYB0gpFCEeuCTslxszDstQ" name="path">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_yYCbkJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_yYCbkZFCEeuCTslxszDstQ" name="fileType" type="_omdz0JFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_yYCbkpFCEeuCTslxszDstQ" name="params" type="_rWnAMZFCEeuCTslxszDstQ"/>
                    <ownedParameter xmi:id="_yYCbk5FCEeuCTslxszDstQ" name="fileName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_yYDCopFCEeuCTslxszDstQ" type="_yYAmYJFCEeuCTslxszDstQ" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_yYEQwZFCEeuCTslxszDstQ" name="getFilename" method="_yyxPyJFCEeuCTslxszDstQ">
                    <ownedParameter xmi:id="_yYE30JFCEeuCTslxszDstQ" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0NaN5FCEeuCTslxszDstQ" name="" memberEnd="_y0NaOJFCEeuCTslxszDstQ _yuJ1gJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0NaOJFCEeuCTslxszDstQ" name="" type="_yRXy4JFCEeuCTslxszDstQ" association="_y0NaN5FCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0OBQZFCEeuCTslxszDstQ" name="" memberEnd="_y0OBQpFCEeuCTslxszDstQ _yuSYYZFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0OBQpFCEeuCTslxszDstQ" name="" type="_yRXy4JFCEeuCTslxszDstQ" association="_y0OBQZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0OBRJFCEeuCTslxszDstQ" name="" memberEnd="_y0OBRZFCEeuCTslxszDstQ _yuU0oZFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0OBRZFCEeuCTslxszDstQ" name="" type="_yRXy4JFCEeuCTslxszDstQ" association="_y0OBRJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0OBR5FCEeuCTslxszDstQ" name="" memberEnd="_y0OBSJFCEeuCTslxszDstQ _yuWCwJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0OBSJFCEeuCTslxszDstQ" name="" type="_yRXy4JFCEeuCTslxszDstQ" association="_y0OBR5FCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0OoUZFCEeuCTslxszDstQ" name="" memberEnd="_y0OoUpFCEeuCTslxszDstQ _yuX38JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0OoUpFCEeuCTslxszDstQ" name="" type="_yRXy4JFCEeuCTslxszDstQ" association="_y0OoUZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0OoVJFCEeuCTslxszDstQ" name="" memberEnd="_y0OoVZFCEeuCTslxszDstQ _yuZGEJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0OoVZFCEeuCTslxszDstQ" name="" type="_yRXy4JFCEeuCTslxszDstQ" association="_y0OoVJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0OoV5FCEeuCTslxszDstQ" name="" memberEnd="_y0OoWJFCEeuCTslxszDstQ _yuZtIZFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0OoWJFCEeuCTslxszDstQ" name="" type="_yRXy4JFCEeuCTslxszDstQ" association="_y0OoV5FCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0PPYZFCEeuCTslxszDstQ" name="" memberEnd="_y0PPYpFCEeuCTslxszDstQ _yucJYJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0PPYpFCEeuCTslxszDstQ" name="" type="_yRXy4JFCEeuCTslxszDstQ" association="_y0PPYZFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0PPZJFCEeuCTslxszDstQ" name="" memberEnd="_y0PPZZFCEeuCTslxszDstQ _yurZ8JFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0PPZZFCEeuCTslxszDstQ" name="" type="_ySvr4pFCEeuCTslxszDstQ" association="_y0PPZJFCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0Tg15FCEeuCTslxszDstQ" name="" memberEnd="_y0Tg2JFCEeuCTslxszDstQ _ywGWQJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0Tg2JFCEeuCTslxszDstQ" name="" type="_yW82cJFCEeuCTslxszDstQ" association="_y0Tg15FCEeuCTslxszDstQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_y0UH4ZFCEeuCTslxszDstQ" name="" memberEnd="_y0UH4pFCEeuCTslxszDstQ _ywILcJFCEeuCTslxszDstQ">
                <ownedEnd xmi:id="_y0UH4pFCEeuCTslxszDstQ" name="" type="_yX-xMJFCEeuCTslxszDstQ" association="_y0UH4ZFCEeuCTslxszDstQ"/>
              </packagedElement>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_oB2q4JFCEeuCTslxszDstQ" name="JWNLException">
            <ownedComment xmi:id="_sdV-wJFCEeuCTslxszDstQ">
              <body>Base level exception.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_rxJnIJFCEeuCTslxszDstQ" general="_rxBrUJFCEeuCTslxszDstQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVWgYJFCEeuCTslxszDstQ" name="JWNLException" specification="_rxFVsJFCEeuCTslxszDstQ">
              <ownedParameter xmi:id="_sVWgYZFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_sVWgYpFCEeuCTslxszDstQ" type="_oB2q4JFCEeuCTslxszDstQ" direction="return"/>
              <language>java</language>
              <body>super(cause);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVfDQJFCEeuCTslxszDstQ" name="JWNLException" specification="_oCCREJFCEeuCTslxszDstQ">
              <ownedParameter xmi:id="_sVfqUJFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_sVfqUZFCEeuCTslxszDstQ" type="_oB2q4JFCEeuCTslxszDstQ" direction="return"/>
              <language>java</language>
              <body>super(message);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVg4cJFCEeuCTslxszDstQ" name="JWNLException" specification="_rxHx8JFCEeuCTslxszDstQ">
              <ownedParameter xmi:id="_sVg4cZFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_sVg4cpFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_sVg4c5FCEeuCTslxszDstQ" type="_oB2q4JFCEeuCTslxszDstQ" direction="return"/>
              <language>java</language>
              <body>super(message, cause);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_oCCREJFCEeuCTslxszDstQ" name="JWNLException" method="_sVfDQJFCEeuCTslxszDstQ">
              <eAnnotations xmi:id="_oCGigJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_oCHJkJFCEeuCTslxszDstQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_oCC4IJFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_oCHwoJFCEeuCTslxszDstQ" type="_oB2q4JFCEeuCTslxszDstQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rxFVsJFCEeuCTslxszDstQ" name="JWNLException" method="_sVWgYJFCEeuCTslxszDstQ">
              <eAnnotations xmi:id="_rxF8wJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rxF8wZFCEeuCTslxszDstQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rxFVsZFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_rxGj0JFCEeuCTslxszDstQ" type="_oB2q4JFCEeuCTslxszDstQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rxHx8JFCEeuCTslxszDstQ" name="JWNLException" method="_sVg4cJFCEeuCTslxszDstQ">
              <eAnnotations xmi:id="_rxIZApFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rxJAEJFCEeuCTslxszDstQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rxIZAJFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rxIZAZFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_rxJAEZFCEeuCTslxszDstQ" type="_oB2q4JFCEeuCTslxszDstQ" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_oCXBMJFCEeuCTslxszDstQ" name="JWNLIOException">
            <ownedComment xmi:id="_sdWl0JFCEeuCTslxszDstQ">
              <body>IO exception wrapper.
 *
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_rVHLYJFCEeuCTslxszDstQ" general="_oB2q4JFCEeuCTslxszDstQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVjUsJFCEeuCTslxszDstQ" name="JWNLIOException" specification="_rxLcUJFCEeuCTslxszDstQ">
              <ownedParameter xmi:id="_sVjUsZFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_sVjUspFCEeuCTslxszDstQ" type="_oCXBMJFCEeuCTslxszDstQ" direction="return"/>
              <language>java</language>
              <body>super(cause);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVki0JFCEeuCTslxszDstQ" name="JWNLIOException" specification="_oCe9AJFCEeuCTslxszDstQ">
              <ownedParameter xmi:id="_sVki0ZFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_sVki0pFCEeuCTslxszDstQ" type="_oCXBMJFCEeuCTslxszDstQ" direction="return"/>
              <language>java</language>
              <body>super(message);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVm_EJFCEeuCTslxszDstQ" name="JWNLIOException" specification="_rxPGsJFCEeuCTslxszDstQ">
              <ownedParameter xmi:id="_sVm_EZFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_sVm_EpFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_sVm_E5FCEeuCTslxszDstQ" type="_oCXBMJFCEeuCTslxszDstQ" direction="return"/>
              <language>java</language>
              <body>super(message, cause);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_oCe9AJFCEeuCTslxszDstQ" name="JWNLIOException" method="_sVki0JFCEeuCTslxszDstQ">
              <eAnnotations xmi:id="_oCgLIJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_oCgyMJFCEeuCTslxszDstQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_oCfkEJFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_oCgyMZFCEeuCTslxszDstQ" type="_oCXBMJFCEeuCTslxszDstQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rxLcUJFCEeuCTslxszDstQ" name="JWNLIOException" method="_sVjUsJFCEeuCTslxszDstQ">
              <eAnnotations xmi:id="_rxMqcJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rxMqcZFCEeuCTslxszDstQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rxMDYJFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_rxMqcpFCEeuCTslxszDstQ" type="_oCXBMJFCEeuCTslxszDstQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rxPGsJFCEeuCTslxszDstQ" name="JWNLIOException" method="_sVm_EJFCEeuCTslxszDstQ">
              <eAnnotations xmi:id="_rxPtwJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rxPtwZFCEeuCTslxszDstQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rxPGsZFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rxPGspFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_rxPtwpFCEeuCTslxszDstQ" type="_oCXBMJFCEeuCTslxszDstQ" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_oCuNkJFCEeuCTslxszDstQ" name="JWNLRuntimeException">
            <ownedComment xmi:id="_sdWl0ZFCEeuCTslxszDstQ">
              <body>Base level runtime exception.
 *
@author John Didion (jdidion@didion.net)
@author &lt;a href=&quot;http://autayeu.com/&quot;>Aliaksandr Autayeu&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_rxY3sJFCEeuCTslxszDstQ" general="_rxRi8JFCEeuCTslxszDstQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVo0QJFCEeuCTslxszDstQ" name="JWNLRuntimeException" specification="_rxT_MJFCEeuCTslxszDstQ">
              <ownedParameter xmi:id="_sVo0QZFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_sVo0QpFCEeuCTslxszDstQ" type="_oCuNkJFCEeuCTslxszDstQ" direction="return"/>
              <language>java</language>
              <body>super(cause);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVqCYJFCEeuCTslxszDstQ" name="JWNLRuntimeException" specification="_oC07QJFCEeuCTslxszDstQ">
              <ownedParameter xmi:id="_sVqCYZFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_sVqCYpFCEeuCTslxszDstQ" type="_oCuNkJFCEeuCTslxszDstQ" direction="return"/>
              <language>java</language>
              <body>super(message);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVr3kJFCEeuCTslxszDstQ" name="JWNLRuntimeException" specification="_rxWbcJFCEeuCTslxszDstQ">
              <ownedParameter xmi:id="_sVr3kZFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_sVr3kpFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_sVr3k5FCEeuCTslxszDstQ" type="_oCuNkJFCEeuCTslxszDstQ" direction="return"/>
              <language>java</language>
              <body>super(message, cause);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_oC07QJFCEeuCTslxszDstQ" name="JWNLRuntimeException" method="_sVqCYJFCEeuCTslxszDstQ">
              <eAnnotations xmi:id="_oC2JYJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_oC2wcJFCEeuCTslxszDstQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_oC1iUJFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_oC2wcZFCEeuCTslxszDstQ" type="_oCuNkJFCEeuCTslxszDstQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rxT_MJFCEeuCTslxszDstQ" name="JWNLRuntimeException" method="_sVo0QJFCEeuCTslxszDstQ">
              <eAnnotations xmi:id="_rxUmQZFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rxUmQpFCEeuCTslxszDstQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rxUmQJFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_rxVNUJFCEeuCTslxszDstQ" type="_oCuNkJFCEeuCTslxszDstQ" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_rxWbcJFCEeuCTslxszDstQ" name="JWNLRuntimeException" method="_sVr3kJFCEeuCTslxszDstQ">
              <eAnnotations xmi:id="_rxXpkJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_rxXpkZFCEeuCTslxszDstQ" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_rxXCgJFCEeuCTslxszDstQ" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_rxXCgZFCEeuCTslxszDstQ" name="cause" type="_rxDggJFCEeuCTslxszDstQ"/>
              <ownedParameter xmi:id="_rxXpkpFCEeuCTslxszDstQ" type="_oCuNkJFCEeuCTslxszDstQ" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_mqjgwJFCEeuCTslxszDstQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_mqku4JFCEeuCTslxszDstQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_rVb7gJFCEeuCTslxszDstQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rVrzIJFCEeuCTslxszDstQ" name="ObjectInputStream"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rV-HAJFCEeuCTslxszDstQ" name="Serializable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rWIfEJFCEeuCTslxszDstQ" name="ObjectOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rbybIJFCEeuCTslxszDstQ" name="PrintStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rf4Q8JFCEeuCTslxszDstQ" name="OutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rf77UJFCEeuCTslxszDstQ" name="StringWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_roxuQJFCEeuCTslxszDstQ" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rtYhcJFCEeuCTslxszDstQ" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sDTuIJFCEeuCTslxszDstQ" name="FileInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sDXYgJFCEeuCTslxszDstQ" name="FileOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yopDYJFCEeuCTslxszDstQ" name="RandomAccessFile"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yostwJFCEeuCTslxszDstQ" name="ByteArrayOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yowYIpFCEeuCTslxszDstQ" name="FileNotFoundException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mquf4JFCEeuCTslxszDstQ" name="sql">
        <packagedElement xmi:type="uml:Interface" xmi:id="_rVzu8JFCEeuCTslxszDstQ" name="ResultSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rV2LMZFCEeuCTslxszDstQ" name="SQLException"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rnTHkJFCEeuCTslxszDstQ" name="Connection"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rnTHkpFCEeuCTslxszDstQ" name="Driver"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rnTuoZFCEeuCTslxszDstQ" name="DriverManager"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rn2hMJFCEeuCTslxszDstQ" name="PreparedStatement"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mrG6YJFCEeuCTslxszDstQ" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_rV_8MJFCEeuCTslxszDstQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rWBxYJFCEeuCTslxszDstQ" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rWBxYpFCEeuCTslxszDstQ" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rWkj8JFCEeuCTslxszDstQ" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rWlyEZFCEeuCTslxszDstQ" name="EnumMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rWnAMZFCEeuCTslxszDstQ" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rWo1YZFCEeuCTslxszDstQ" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rW6iMJFCEeuCTslxszDstQ" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rXB28JFCEeuCTslxszDstQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rXZqYJFCEeuCTslxszDstQ" name="Objects"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rX6nwJFCEeuCTslxszDstQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rYl9MJFCEeuCTslxszDstQ" name="HashSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rbT6AJFCEeuCTslxszDstQ" name="BitSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rbzCMJFCEeuCTslxszDstQ" name="ListIterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_reZDMJFCEeuCTslxszDstQ" name="LinkedList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rhbJEJFCEeuCTslxszDstQ" name="NoSuchElementException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rnZOMJFCEeuCTslxszDstQ" name="Random"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ry8W4JFCEeuCTslxszDstQ" name="Spliterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rzBPYJFCEeuCTslxszDstQ" name="Comparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sECG4pFCEeuCTslxszDstQ" name="ResourceBundle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sEDVAJFCEeuCTslxszDstQ" name="Locale"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_sEG_YJFCEeuCTslxszDstQ" name="Enumeration"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nsdCoJFCEeuCTslxszDstQ" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_nsdpsJFCEeuCTslxszDstQ" name="charset">
          <packagedElement xmi:type="uml:Class" xmi:id="_rtAuAJFCEeuCTslxszDstQ" name="StandardCharsets"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yot74JFCEeuCTslxszDstQ" name="CharacterCodingException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yot74pFCEeuCTslxszDstQ" name="Charset"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_youi8ZFCEeuCTslxszDstQ" name="CharsetDecoder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yrMoIJFCEeuCTslxszDstQ" name="CharsetEncoder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rtB8IJFCEeuCTslxszDstQ" name="CharBuffer"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_yDr8MJFCEeuCTslxszDstQ" name="channels">
          <packagedElement xmi:type="uml:Class" xmi:id="_yostwpFCEeuCTslxszDstQ" name="Channels"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_yotU0ZFCEeuCTslxszDstQ" name="ReadableByteChannel"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_yotU05FCEeuCTslxszDstQ" name="WritableByteChannel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_yopqcZFCEeuCTslxszDstQ" name="ByteBuffer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nvKYYJFCEeuCTslxszDstQ" name="lang">
        <packagedElement xmi:type="uml:Package" xmi:id="_nvK_cJFCEeuCTslxszDstQ" name="reflect">
          <packagedElement xmi:type="uml:Class" xmi:id="_rteBAJFCEeuCTslxszDstQ" name="Constructor"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_rtgdQJFCEeuCTslxszDstQ" name="InvocationTargetException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yo5iEJFCEeuCTslxszDstQ" name="Field"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yo6wMJFCEeuCTslxszDstQ" name="Method"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rxBrUJFCEeuCTslxszDstQ" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rxDggJFCEeuCTslxszDstQ" name="Throwable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rxRi8JFCEeuCTslxszDstQ" name="RuntimeException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rx2xwJFCEeuCTslxszDstQ" name="ClassNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ryMwAJFCEeuCTslxszDstQ" name="Object"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rysfQJFCEeuCTslxszDstQ" name="CharSequence"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r4ch8JFCEeuCTslxszDstQ" name="StringBuilder"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r4uOwJFCEeuCTslxszDstQ" name="CloneNotSupportedException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r4wrAJFCEeuCTslxszDstQ" name="UnsupportedOperationException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r6P4wJFCEeuCTslxszDstQ" name="StringBuffer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_r-ITMJFCEeuCTslxszDstQ" name="Class"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sD91cJFCEeuCTslxszDstQ" name="NumberFormatException"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_sEA4wpFCEeuCTslxszDstQ" name="Cloneable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yr5ywJFCEeuCTslxszDstQ" name="Thread"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yr_SUJFCEeuCTslxszDstQ" name="Runnable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ysEK0JFCEeuCTslxszDstQ" name="NoSuchFieldException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ysFY8JFCEeuCTslxszDstQ" name="IllegalAccessException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ysGnEJFCEeuCTslxszDstQ" name="NoSuchMethodException"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_mr3IUJFCEeuCTslxszDstQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_mr3IUZFCEeuCTslxszDstQ" name="slf4j">
        <packagedElement xmi:type="uml:Interface" xmi:id="_rWFbwJFCEeuCTslxszDstQ" name="Logger"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rWGC0ZFCEeuCTslxszDstQ" name="LoggerFactory"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nF_fkJFCEeuCTslxszDstQ" name="w3c">
        <packagedElement xmi:type="uml:Package" xmi:id="_nGDJ8JFCEeuCTslxszDstQ" name="dom">
          <packagedElement xmi:type="uml:Interface" xmi:id="_rhYs0JFCEeuCTslxszDstQ" name="Document"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_yojj0JFCEeuCTslxszDstQ" name="NamedNodeMap"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_yokK4ZFCEeuCTslxszDstQ" name="Node"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_yokK45FCEeuCTslxszDstQ" name="NodeList"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nu4EgJFCEeuCTslxszDstQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_yIMBsJFCEeuCTslxszDstQ" name="runner">
          <packagedElement xmi:type="uml:Interface" xmi:id="_ypafcZFCEeuCTslxszDstQ" name="RunWith"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rtPXgJFCEeuCTslxszDstQ" name="Assert"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rtRzwJFCEeuCTslxszDstQ" name="Test"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rtWFMJFCEeuCTslxszDstQ" name="Before"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yowYIJFCEeuCTslxszDstQ" name="BeforeClass"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_yo0CgJFCEeuCTslxszDstQ" name="Ignore"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ypAPwZFCEeuCTslxszDstQ" name="AfterClass"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ypCsAJFCEeuCTslxszDstQ" name="After"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yBnfoJFCEeuCTslxszDstQ" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_yBnfoZFCEeuCTslxszDstQ" name="sax">
          <packagedElement xmi:type="uml:Class" xmi:id="_yokK5ZFCEeuCTslxszDstQ" name="InputSource"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yokx8ZFCEeuCTslxszDstQ" name="SAXException"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yHtgkJFCEeuCTslxszDstQ" name="hamcrest">
        <packagedElement xmi:type="uml:Class" xmi:id="_ypEhMJFCEeuCTslxszDstQ" name="CoreMatchers"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yIMowJFCEeuCTslxszDstQ" name="mockito">
        <packagedElement xmi:type="uml:Package" xmi:id="_yIMowZFCEeuCTslxszDstQ" name="invocation">
          <packagedElement xmi:type="uml:Interface" xmi:id="_ypcUoZFCEeuCTslxszDstQ" name="InvocationOnMock"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_yINP0JFCEeuCTslxszDstQ" name="stubbing">
          <packagedElement xmi:type="uml:Interface" xmi:id="_ypdiwZFCEeuCTslxszDstQ" name="Answer"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ypfX8ZFCEeuCTslxszDstQ" name="Matchers"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ypgmEZFCEeuCTslxszDstQ" name="Mockito"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_nCdDYJFCEeuCTslxszDstQ" name="PointerTargetTreeNodeList">
      <packagedElement xmi:type="uml:Interface" xmi:id="_rc7DkJFCEeuCTslxszDstQ" name="Operation"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_x_fYsJFCEeuCTslxszDstQ" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_x_f_wJFCEeuCTslxszDstQ" name="googlecode">
        <packagedElement xmi:type="uml:Package" xmi:id="_x_f_wZFCEeuCTslxszDstQ" name="concurrentlinkedhashmap">
          <packagedElement xmi:type="uml:Class" xmi:id="_yogggJFCEeuCTslxszDstQ" name="ConcurrentLinkedHashMap"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yIKMgJFCEeuCTslxszDstQ" name="tngtech">
        <packagedElement xmi:type="uml:Package" xmi:id="_yIKzkJFCEeuCTslxszDstQ" name="java">
          <packagedElement xmi:type="uml:Package" xmi:id="_yIKzkZFCEeuCTslxszDstQ" name="junit">
            <packagedElement xmi:type="uml:Package" xmi:id="_yIKzkpFCEeuCTslxszDstQ" name="dataprovider">
              <packagedElement xmi:type="uml:Interface" xmi:id="_ypWOAJFCEeuCTslxszDstQ" name="DataProvider"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ypXcIZFCEeuCTslxszDstQ" name="DataProviderRunner"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_ypZRUJFCEeuCTslxszDstQ" name="UseDataProvider"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yBoGsJFCEeuCTslxszDstQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_yBoGsZFCEeuCTslxszDstQ" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_yBoGspFCEeuCTslxszDstQ" name="parsers">
          <packagedElement xmi:type="uml:Class" xmi:id="_yokx85FCEeuCTslxszDstQ" name="DocumentBuilder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yokx9ZFCEeuCTslxszDstQ" name="DocumentBuilderFactory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_yolZAZFCEeuCTslxszDstQ" name="ParserConfigurationException"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yHSp0JFCEeuCTslxszDstQ" name="junit">
      <packagedElement xmi:type="uml:Package" xmi:id="_yHTQ4JFCEeuCTslxszDstQ" name="framework">
        <packagedElement xmi:type="uml:Class" xmi:id="_yo2ewJFCEeuCTslxszDstQ" name="AssertionFailedError"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yo3F0ZFCEeuCTslxszDstQ" name="TestCase"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_yo3F05FCEeuCTslxszDstQ" name="TestResult"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_iOiocJFCEeuCTslxszDstQ">
      <eAnnotations xmi:id="_iOsZcJFCEeuCTslxszDstQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_iO500JFCEeuCTslxszDstQ" base_Package="_eCpPwJFCEeuCTslxszDstQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oEw08JFCEeuCTslxszDstQ" base_Element="_oEtKkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oG0qcJFCEeuCTslxszDstQ" base_Element="_oGxnIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oG474JFCEeuCTslxszDstQ" base_Element="_oGxnIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oG5i8JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oHmGgZFCEeuCTslxszDstQ" base_Element="_oHlfdZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oHmGgpFCEeuCTslxszDstQ" base_Element="_oHlfdZFCEeuCTslxszDstQ">
    <annotations xmi:id="_oHnUoJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oHoiwJFCEeuCTslxszDstQ" base_Element="_oHnUoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oHoiwZFCEeuCTslxszDstQ" base_Element="_oHnUoZFCEeuCTslxszDstQ">
    <annotations xmi:id="_oHoiwpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oHpw4JFCEeuCTslxszDstQ" base_Element="_oHpJ0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oHqX8JFCEeuCTslxszDstQ" base_Element="_oHpJ0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_oHqX8ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_oHq_ApFCEeuCTslxszDstQ" base_Element="_oHqX8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oHrmEJFCEeuCTslxszDstQ" base_Element="_oHqX8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oHrmEZFCEeuCTslxszDstQ" base_Element="_oHqX8pFCEeuCTslxszDstQ">
    <annotations xmi:id="_oHrmEpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oHs0MJFCEeuCTslxszDstQ" base_Element="_oHsNIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oHs0MZFCEeuCTslxszDstQ" base_Element="_oHsNIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oHtbQJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oHupYJFCEeuCTslxszDstQ" base_Element="_oHuCUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oHvQcJFCEeuCTslxszDstQ" base_Element="_oHuCUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oHvQcZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oHv3gJFCEeuCTslxszDstQ" base_Element="_oHvQcpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oHv3gZFCEeuCTslxszDstQ" base_Element="_oHvQcpFCEeuCTslxszDstQ">
    <annotations xmi:id="_oHv3gpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oHxssJFCEeuCTslxszDstQ" base_Element="_oHwekJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oHxssZFCEeuCTslxszDstQ" base_Element="_oHwekJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oHxsspFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oHy60JFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_oHxss5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oHzh4JFCEeuCTslxszDstQ" base_Element="_oHxss5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oHzh4ZFCEeuCTslxszDstQ" base_Element="_oHxss5FCEeuCTslxszDstQ">
    <annotations xmi:id="_oHzh4pFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oH1XEJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_oH0I8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oH3MQJFCEeuCTslxszDstQ" base_Element="_oH0I8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oH4aYJFCEeuCTslxszDstQ" base_Element="_oH0I8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_oH4aYZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oH_IEJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_oH6PkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oIA9QJFCEeuCTslxszDstQ" base_Element="_oH6PkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oICLYJFCEeuCTslxszDstQ" base_Element="_oH6PkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oICLYZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oII5EJFCEeuCTslxszDstQ" base_Element="_oIDZgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oIKuQJFCEeuCTslxszDstQ" base_Element="_oIDZgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oILVUJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oIVGUJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_oIQ04JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oIWUcJFCEeuCTslxszDstQ" base_Element="_oIQ04JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oIYJoJFCEeuCTslxszDstQ" base_Element="_oIQ04JFCEeuCTslxszDstQ">
    <annotations xmi:id="_oIYJoZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_oKRAAJFCEeuCTslxszDstQ" dimensions="1" base_Element="_oKPK0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oKg3oJFCEeuCTslxszDstQ" base_Element="_oKfCcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oKiFwJFCEeuCTslxszDstQ" base_Element="_oKfCcJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oKiFwZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oK4EAJFCEeuCTslxszDstQ" base_Element="_oK2O0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oK88gJFCEeuCTslxszDstQ" genericsValue="Long, String" base_Element="_oK4rEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oLGtgJFCEeuCTslxszDstQ" base_Element="_oLDDIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oLNbMJFCEeuCTslxszDstQ" genericsValue="String, Long" base_Element="_oLHUkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNJ78JFCEeuCTslxszDstQ" base_Element="_oNHfsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNKjAJFCEeuCTslxszDstQ" base_Element="_oNHfsJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oNLKEJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oNTs8JFCEeuCTslxszDstQ" base_Element="_oNSe0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oNTs8ZFCEeuCTslxszDstQ" base_Element="_oNSe0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_oNTs8pFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oOn7kJFCEeuCTslxszDstQ" base_Element="_oOmGYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oOs0EJFCEeuCTslxszDstQ" base_Element="_oOrl8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPgFUJFCEeuCTslxszDstQ" base_Element="_oPeQIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPihkJFCEeuCTslxszDstQ" base_Element="_oPgsYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPkWwJFCEeuCTslxszDstQ" base_Element="_oPjIoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPmzAJFCEeuCTslxszDstQ" base_Element="_oPk90JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_oTB6cZFCEeuCTslxszDstQ" dimensions="1" base_Element="_oTBTYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_oTChgpFCEeuCTslxszDstQ" base_Element="_oTB6cpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_oTE9w5FCEeuCTslxszDstQ" base_Element="_oTE9wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_oTFk0pFCEeuCTslxszDstQ" base_Element="_oTE9xJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTIoI5FCEeuCTslxszDstQ" base_Element="_oTIoIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oTJPMJFCEeuCTslxszDstQ" base_Element="_oTIoIZFCEeuCTslxszDstQ">
    <annotations xmi:id="_oTJPMZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oTP84JFCEeuCTslxszDstQ" genericsValue="E extends Node" base_Element="_oTM5kJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTTAMJFCEeuCTslxszDstQ" base_Element="_oTRyEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oTfNcJFCEeuCTslxszDstQ" genericsValue="E extends Node" base_Element="_oTdYQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oUmAsJFCEeuCTslxszDstQ" genericsValue="PointerTargetNode" base_Element="_oUjkcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oUsuYJFCEeuCTslxszDstQ" base_Element="_oUq5MJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oUt8gJFCEeuCTslxszDstQ" base_Element="_oUq5MJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oUt8gZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVFv8JFCEeuCTslxszDstQ" base_Element="_oVD6wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oVG-EJFCEeuCTslxszDstQ" base_Element="_oVD6wJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oVG-EZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oWjIgJFCEeuCTslxszDstQ" genericsValue="PointerTargetTreeNode" base_Element="_oWgsQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oYXGYJFCEeuCTslxszDstQ" base_Element="_oYUDEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oYZioJFCEeuCTslxszDstQ" base_Element="_oYUDEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oYaJsJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oanwMJFCEeuCTslxszDstQ" genericsValue="DictionaryElementType, Object, DictionaryElement" base_Element="_oaks4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oawTEJFCEeuCTslxszDstQ" base_Element="_oaud4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oaxhMJFCEeuCTslxszDstQ" base_Element="_oaud4JFCEeuCTslxszDstQ">
    <annotations xmi:id="_oaxhMZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ocSkIJFCEeuCTslxszDstQ" base_Element="_ocRWAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ocUZUJFCEeuCTslxszDstQ" base_Element="_ocRWAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ocUZUZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ocW1kJFCEeuCTslxszDstQ" base_Element="_ocVncJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ocYDsJFCEeuCTslxszDstQ" base_Element="_ocVncJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ocYDsZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_occ8MJFCEeuCTslxszDstQ" genericsValue="E extends DictionaryElement" base_Element="_ocZ44JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_od-mMJFCEeuCTslxszDstQ" genericsValue="T" base_Element="_od5tsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oeOd0JFCEeuCTslxszDstQ" base_Element="_oeMooJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oePr8JFCEeuCTslxszDstQ" base_Element="_oeMooJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oePr8ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oeSIMJFCEeuCTslxszDstQ" base_Element="_oeQTAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oeSvQJFCEeuCTslxszDstQ" base_Element="_oeQTAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oeSvQZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oedHUJFCEeuCTslxszDstQ" base_Element="_oeb5MJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oeeVcJFCEeuCTslxszDstQ" base_Element="_oeb5MJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oeeVcZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oegxsJFCEeuCTslxszDstQ" base_Element="_oefjkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oegxsZFCEeuCTslxszDstQ" base_Element="_oefjkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oegxspFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oehYwJFCEeuCTslxszDstQ" base_Element="_oegxs5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oehYwZFCEeuCTslxszDstQ" base_Element="_oegxs5FCEeuCTslxszDstQ">
    <annotations xmi:id="_oehYwpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oeim4JFCEeuCTslxszDstQ" genericsValue="E extends DictionaryElement" base_Element="_oeh_0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oekcEJFCEeuCTslxszDstQ" base_Element="_oej1AJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oelDIJFCEeuCTslxszDstQ" base_Element="_oej1AJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oelDIZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oelqMJFCEeuCTslxszDstQ" base_Element="_oelDIpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oelqMZFCEeuCTslxszDstQ" base_Element="_oelDIpFCEeuCTslxszDstQ">
    <annotations xmi:id="_oelqMpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oemRQJFCEeuCTslxszDstQ" base_Element="_oelqM5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oemRQZFCEeuCTslxszDstQ" base_Element="_oelqM5FCEeuCTslxszDstQ">
    <annotations xmi:id="_oemRQpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oeyegJFCEeuCTslxszDstQ" base_Element="_oexQYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oezsoJFCEeuCTslxszDstQ" base_Element="_oexQYJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oe0TsJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oe2I4JFCEeuCTslxszDstQ" base_Element="_oe06wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oe3XAJFCEeuCTslxszDstQ" base_Element="_oe06wJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oe3XAZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogSTUJFCEeuCTslxszDstQ" base_Element="_ogQeIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ogThcJFCEeuCTslxszDstQ" base_Element="_ogQeIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ogThcZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogXL0JFCEeuCTslxszDstQ" base_Element="_ogUvkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ogYZ8JFCEeuCTslxszDstQ" base_Element="_ogUvkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ogYZ8ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogbdQJFCEeuCTslxszDstQ" base_Element="_ogZBAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ogdScJFCEeuCTslxszDstQ" base_Element="_ogZBAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ogdScZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ogfusJFCEeuCTslxszDstQ" base_Element="_ogd5gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ogg80JFCEeuCTslxszDstQ" base_Element="_ogd5gJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ogg80ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ohChQJFCEeuCTslxszDstQ" base_Element="_ohBTIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ohDvYJFCEeuCTslxszDstQ" base_Element="_ohBTIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ohDvYZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ojA3MJFCEeuCTslxszDstQ" base_Element="_oi_CAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_ojFIoJFCEeuCTslxszDstQ" base_Element="_ojCsYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_ojG90JFCEeuCTslxszDstQ" base_Element="_ojFvsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_ojIzAJFCEeuCTslxszDstQ" base_Element="_ojHk4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ojR88JFCEeuCTslxszDstQ" base_Element="_ojQu0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ojTLEJFCEeuCTslxszDstQ" base_Element="_ojQu0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_ojTyIJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ok0OAJFCEeuCTslxszDstQ" genericsValue="E extends DictionaryFile" base_Element="_okwjoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_olBpYJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_ok_NIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_olcgIJFCEeuCTslxszDstQ" genericsValue="E extends DictionaryFile" base_Element="_olY1wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_olpUcJFCEeuCTslxszDstQ" genericsValue="DictionaryCatalog&lt;E>" base_Element="_olm4MJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_omXtMJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_omUp4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ooM5MJFCEeuCTslxszDstQ" base_Element="_ooLrEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ooOHUJFCEeuCTslxszDstQ" base_Element="_ooLrEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ooOHUZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ooQjkJFCEeuCTslxszDstQ" base_Element="_ooPVcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ooRxsJFCEeuCTslxszDstQ" base_Element="_ooPVcJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ooRxsZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ooTm4JFCEeuCTslxszDstQ" base_Element="_ooSYwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ooUN8JFCEeuCTslxszDstQ" base_Element="_ooSYwJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ooUN8ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_opMXsJFCEeuCTslxszDstQ" base_Element="_opKigJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_oq_HcJFCEeuCTslxszDstQ" base_Element="_oq8EIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_orxxoJFCEeuCTslxszDstQ" base_Element="_orwjgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_osQSwJFCEeuCTslxszDstQ" base_Element="_osOdkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oshYgJFCEeuCTslxszDstQ" base_Element="_osgKYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_osimoJFCEeuCTslxszDstQ" base_Element="_osgKYJFCEeuCTslxszDstQ">
    <annotations xmi:id="_osjNsJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otOjIJFCEeuCTslxszDstQ" base_Element="_otN8EJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otjTQJFCEeuCTslxszDstQ" base_Element="_otiFIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_otm9oJFCEeuCTslxszDstQ" base_Element="_otiFIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_otm9oZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otoLwJFCEeuCTslxszDstQ" base_Element="_otm9opFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_otpZ4JFCEeuCTslxszDstQ" base_Element="_otm9opFCEeuCTslxszDstQ">
    <annotations xmi:id="_otpZ4ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otqoAJFCEeuCTslxszDstQ" base_Element="_otqA8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_otrPEJFCEeuCTslxszDstQ" base_Element="_otqA8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_otrPEZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ottEQJFCEeuCTslxszDstQ" base_Element="_otsdMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ottrUJFCEeuCTslxszDstQ" base_Element="_otsdMJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ottrUZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ot7twJFCEeuCTslxszDstQ" base_Element="_ot6foJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ot9i8JFCEeuCTslxszDstQ" base_Element="_ot6foJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ot9i8ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ouAmQJFCEeuCTslxszDstQ" base_Element="_ot_YIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ouB0YJFCEeuCTslxszDstQ" base_Element="_ot_YIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ouB0YZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oumcIJFCEeuCTslxszDstQ" base_Element="_oulOAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ounDMJFCEeuCTslxszDstQ" base_Element="_oulOAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ounDMZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ouqtkJFCEeuCTslxszDstQ" base_Element="_oupfcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ourUoJFCEeuCTslxszDstQ" base_Element="_oupfcJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ourUoZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_outJ0JFCEeuCTslxszDstQ" base_Element="_our7sJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ouuX8JFCEeuCTslxszDstQ" base_Element="_our7sJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ouuX8ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ouwNIJFCEeuCTslxszDstQ" base_Element="_ouu_AJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ouw0MJFCEeuCTslxszDstQ" base_Element="_ouu_AJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ouw0MZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ovEWMJFCEeuCTslxszDstQ" genericsValue="T" base_Element="_ovB58JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ovJ1wJFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_ovHZgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ovWqEJFCEeuCTslxszDstQ" base_Element="_ovVb8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ovXRIJFCEeuCTslxszDstQ" base_Element="_ovVb8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_ovXRIZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ovwSsJFCEeuCTslxszDstQ" base_Element="_ovvEkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ovyH4JFCEeuCTslxszDstQ" base_Element="_ovvEkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ovyu8JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ov0kIJFCEeuCTslxszDstQ" base_Element="_ovzWAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ov1LMJFCEeuCTslxszDstQ" base_Element="_ovzWAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ov1yQJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ov3ncJFCEeuCTslxszDstQ" base_Element="_ov2ZUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ov4OgJFCEeuCTslxszDstQ" base_Element="_ov2ZUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ov41kJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ov6qwJFCEeuCTslxszDstQ" base_Element="_ov5coJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ov744JFCEeuCTslxszDstQ" base_Element="_ov5coJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ov744ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ov9uEJFCEeuCTslxszDstQ" base_Element="_ov8f8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ov-VIJFCEeuCTslxszDstQ" base_Element="_ov8f8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_ov-VIZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_owAxYJFCEeuCTslxszDstQ" base_Element="_ov_jQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_owBYcJFCEeuCTslxszDstQ" base_Element="_ov_jQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_owB_gJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_owD0sJFCEeuCTslxszDstQ" base_Element="_owCmkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_owFC0JFCEeuCTslxszDstQ" base_Element="_owCmkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_owFC0ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_owUTYJFCEeuCTslxszDstQ" base_Element="_owTFQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_owU6cJFCEeuCTslxszDstQ" base_Element="_owTFQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_owU6cZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_owXWsJFCEeuCTslxszDstQ" base_Element="_owVhgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_owYk0JFCEeuCTslxszDstQ" base_Element="_owVhgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_owYk0ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_owboIJFCEeuCTslxszDstQ" base_Element="_owZL4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_owcPMJFCEeuCTslxszDstQ" base_Element="_owZL4JFCEeuCTslxszDstQ">
    <annotations xmi:id="_owc2QJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_owercJFCEeuCTslxszDstQ" base_Element="_owc2QZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_owfSgJFCEeuCTslxszDstQ" base_Element="_owc2QZFCEeuCTslxszDstQ">
    <annotations xmi:id="_owfSgZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_owhHsJFCEeuCTslxszDstQ" base_Element="_owf5kJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_owhuwJFCEeuCTslxszDstQ" base_Element="_owf5kJFCEeuCTslxszDstQ">
    <annotations xmi:id="_owiV0JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_owkLAJFCEeuCTslxszDstQ" base_Element="_owi84JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_owkyEJFCEeuCTslxszDstQ" base_Element="_owi84JFCEeuCTslxszDstQ">
    <annotations xmi:id="_owlZIJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ownOUJFCEeuCTslxszDstQ" base_Element="_owmAMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_own1YJFCEeuCTslxszDstQ" base_Element="_owmAMJFCEeuCTslxszDstQ">
    <annotations xmi:id="_owoccJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ow1QwJFCEeuCTslxszDstQ" base_Element="_owzbkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ow2e4JFCEeuCTslxszDstQ" base_Element="_owzbkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ow3F8JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ow5iMJFCEeuCTslxszDstQ" base_Element="_ow3tAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ow6JQJFCEeuCTslxszDstQ" base_Element="_ow3tAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ow6JQZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oxG9kJFCEeuCTslxszDstQ" genericsValue="K, A, B" base_Element="_oxEhUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oxMdIJFCEeuCTslxszDstQ" genericsValue="A, B" base_Element="_oxKA4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oxjCcJFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_oxf_IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oxtagJFCEeuCTslxszDstQ" genericsValue="String" base_Element="_oxrlUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oyAVcJFCEeuCTslxszDstQ" genericsValue="K, A, B" base_Element="_ox9SIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oyHDIJFCEeuCTslxszDstQ" genericsValue="A, B" base_Element="_oyEm4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_oyig8JFCEeuCTslxszDstQ" genericsValue="T" base_Element="_oyfdoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oy5tUJFCEeuCTslxszDstQ" base_Element="_oy5GQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oy6UYJFCEeuCTslxszDstQ" base_Element="_oy5GQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oy67cJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oy8JkJFCEeuCTslxszDstQ" base_Element="_oy67cZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oy8woJFCEeuCTslxszDstQ" base_Element="_oy67cZFCEeuCTslxszDstQ">
    <annotations xmi:id="_oy8woZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oy-l0JFCEeuCTslxszDstQ" base_Element="_oy9XsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oy_M4JFCEeuCTslxszDstQ" base_Element="_oy9XsJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oy_M4ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ozN2YJFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_ozKMAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ozYOcJFCEeuCTslxszDstQ" base_Element="_ozXnYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ozY1gJFCEeuCTslxszDstQ" base_Element="_ozXnYJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ozZckJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ozdG8JFCEeuCTslxszDstQ" base_Element="_ozb40JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ozeVEJFCEeuCTslxszDstQ" base_Element="_ozb40JFCEeuCTslxszDstQ">
    <annotations xmi:id="_oze8IJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ozm38JFCEeuCTslxszDstQ" base_Element="_ozlp0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ozpUMJFCEeuCTslxszDstQ" base_Element="_ozlp0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_ozp7QJFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oz3WoJFCEeuCTslxszDstQ" base_Element="_oz2IgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_oz39sJFCEeuCTslxszDstQ" base_Element="_oz2IgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_oz4kwJFCEeuCTslxszDstQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_oz5L0JFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_sfJVkpFCEeuCTslxszDstQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rVdwsJFCEeuCTslxszDstQ" base_Element="_rVb7gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rVtoUJFCEeuCTslxszDstQ" base_Element="_rVrzIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rV2LMJFCEeuCTslxszDstQ" base_Element="_rVzu8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rV3ZUJFCEeuCTslxszDstQ" base_Element="_rV2LMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rV_VIJFCEeuCTslxszDstQ" base_Element="_rV-HAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rV_8MZFCEeuCTslxszDstQ" base_Element="_rV_8MJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rWBxYZFCEeuCTslxszDstQ" base_Element="_rWBxYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rWCYcJFCEeuCTslxszDstQ" base_Element="_rWBxYpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rWGC0JFCEeuCTslxszDstQ" base_Element="_rWFbwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rWGC0pFCEeuCTslxszDstQ" base_Element="_rWGC0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rWIfEZFCEeuCTslxszDstQ" base_Element="_rWIfEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rWlyEJFCEeuCTslxszDstQ" base_Element="_rWkj8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rWnAMJFCEeuCTslxszDstQ" base_Element="_rWlyEZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rWo1YJFCEeuCTslxszDstQ" base_Element="_rWnAMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rWqqkJFCEeuCTslxszDstQ" base_Element="_rWo1YZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rW8-cJFCEeuCTslxszDstQ" base_Element="_rW6iMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rXDsIJFCEeuCTslxszDstQ" base_Element="_rXB28JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rXGIYJFCEeuCTslxszDstQ" base_Element="_rXE6QJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rXHWgJFCEeuCTslxszDstQ" base_Element="_rXE6QJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rXHWgZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rXcGoJFCEeuCTslxszDstQ" base_Element="_rXZqYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rX714JFCEeuCTslxszDstQ" base_Element="_rX6nwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rYnLUJFCEeuCTslxszDstQ" base_Element="_rYl9MJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rbYLcJFCEeuCTslxszDstQ" base_Element="_rbT6AJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rbybIZFCEeuCTslxszDstQ" base_Element="_rbybIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rbzCMZFCEeuCTslxszDstQ" base_Element="_rbzCMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rc9f0JFCEeuCTslxszDstQ" base_Element="_rc7DkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rebfcJFCEeuCTslxszDstQ" base_Element="_reZDMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rf7UQJFCEeuCTslxszDstQ" base_Element="_rf4Q8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rf-XkJFCEeuCTslxszDstQ" base_Element="_rf77UJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rhCukJFCEeuCTslxszDstQ" base_Element="_rg_rQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rhD8sJFCEeuCTslxszDstQ" base_Element="_rg_rQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rhD8sZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rhaiAJFCEeuCTslxszDstQ" base_Element="_rhYs0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rhcXMJFCEeuCTslxszDstQ" base_Element="_rhbJEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rhkTAJFCEeuCTslxszDstQ" genericsValue="Exc" base_Element="_rhjr8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rhk6EJFCEeuCTslxszDstQ" base_Element="_rhjr8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rhk6EZFCEeuCTslxszDstQ" base_Element="_rhjr8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_rhk6EpFCEeuCTslxszDstQ" name="Override"/>
    <annotations xmi:id="_rhlhIJFCEeuCTslxszDstQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_rhlhIZFCEeuCTslxszDstQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_seRy4JFCEeuCTslxszDstQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rhmIMJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_rhlhIpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rhmIMZFCEeuCTslxszDstQ" base_Element="_rhlhIpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rhmvQJFCEeuCTslxszDstQ" base_Element="_rhlhIpFCEeuCTslxszDstQ">
    <annotations xmi:id="_rhmvQZFCEeuCTslxszDstQ" name="Override"/>
    <annotations xmi:id="_rhmvQpFCEeuCTslxszDstQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_rhmvQ5FCEeuCTslxszDstQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_seRy4ZFCEeuCTslxszDstQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rhn9YJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rhnWUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rhokcJFCEeuCTslxszDstQ" base_Element="_rhnWUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rhqZoJFCEeuCTslxszDstQ" base_Element="_rhnWUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rhrAsJFCEeuCTslxszDstQ" name="Override"/>
    <annotations xmi:id="_rhrnwJFCEeuCTslxszDstQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_rhrnwZFCEeuCTslxszDstQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_seSZ8JFCEeuCTslxszDstQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rh0xsJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rhurEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rh2m4JFCEeuCTslxszDstQ" base_Element="_rhurEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rh5qMJFCEeuCTslxszDstQ" base_Element="_rhurEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rh5qMZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_riAX4JFCEeuCTslxszDstQ" base_Element="_rh-isJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_riDbMJFCEeuCTslxszDstQ" base_Element="_rh-isJFCEeuCTslxszDstQ">
    <annotations xmi:id="_riDbMZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_riF3cJFCEeuCTslxszDstQ" base_Element="_riECQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_riHFkJFCEeuCTslxszDstQ" base_Element="_riECQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_riHsoJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_riJh0JFCEeuCTslxszDstQ" base_Element="_riITsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_riKv8JFCEeuCTslxszDstQ" base_Element="_riITsJFCEeuCTslxszDstQ">
    <annotations xmi:id="_riKv8ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_riL-EJFCEeuCTslxszDstQ" base_Element="_riLXAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_riNzQJFCEeuCTslxszDstQ" base_Element="_riLXAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_riNzQZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rjHLIJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rjEu4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rjMqsJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rjIZQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rjWbsJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_rjTYYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rjdwcJFCEeuCTslxszDstQ" genericsValue="Exc" base_Element="_rjaGEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rjsZ8JFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rjpWoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rj2K8JFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_rjx5gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rkENYJFCEeuCTslxszDstQ" genericsValue="Exc" base_Element="_rj_78JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rkY9gJFCEeuCTslxszDstQ" genericsValue="T" base_Element="_rkXIUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rkpcMJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rkj8oJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rkqqUJFCEeuCTslxszDstQ" base_Element="_rkj8oJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rksfgJFCEeuCTslxszDstQ" base_Element="_rkj8oJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rktGkJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rkzNMJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rkuUsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rk1CYJFCEeuCTslxszDstQ" base_Element="_rkuUsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rk5T0JFCEeuCTslxszDstQ" base_Element="_rkuUsJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rk564JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rk9lQJFCEeuCTslxszDstQ" base_Element="_rk7JAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rk_acJFCEeuCTslxszDstQ" base_Element="_rk7JAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rlABgJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rlB2sJFCEeuCTslxszDstQ" base_Element="_rlAokJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rlDE0JFCEeuCTslxszDstQ" base_Element="_rlAokJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rlDE0ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rlH9UJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_rlES8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rlJLcJFCEeuCTslxszDstQ" base_Element="_rlES8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rlKZkJFCEeuCTslxszDstQ" base_Element="_rlES8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_rlKZkZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rlNc4JFCEeuCTslxszDstQ" base_Element="_rlLnsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rlOrAJFCEeuCTslxszDstQ" base_Element="_rlLnsJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rlOrAZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rlTjgJFCEeuCTslxszDstQ" genericsValue="Exc" base_Element="_rlP5IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rlUKkJFCEeuCTslxszDstQ" base_Element="_rlP5IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rlV_wJFCEeuCTslxszDstQ" base_Element="_rlP5IJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rlWm0JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rl1H8JFCEeuCTslxszDstQ" base_Element="_rlyrsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rl2WEJFCEeuCTslxszDstQ" base_Element="_rlyrsJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rl2WEZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rl4yUJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rl2WEpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rmnLEJFCEeuCTslxszDstQ" genericsValue="Object, DictionaryElement" base_Element="_rmjgsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rm77MJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rm5e8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rm--gJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_rm9JUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rnAMoJFCEeuCTslxszDstQ" base_Element="_rm9JUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rnBawJFCEeuCTslxszDstQ" base_Element="_rm9JUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rnBawZFCEeuCTslxszDstQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_rnCB0JFCEeuCTslxszDstQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_segcYJFCEeuCTslxszDstQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rnG6UJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_rnEeEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rnG6UZFCEeuCTslxszDstQ" base_Element="_rnEeEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rnHhYJFCEeuCTslxszDstQ" base_Element="_rnEeEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rnIIcJFCEeuCTslxszDstQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_rnIIcZFCEeuCTslxszDstQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_sehDcJFCEeuCTslxszDstQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rnMZ4JFCEeuCTslxszDstQ" genericsValue="Exc" base_Element="_rnJWkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rnMZ4ZFCEeuCTslxszDstQ" base_Element="_rnJWkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rnNA8JFCEeuCTslxszDstQ" base_Element="_rnJWkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rnNA8ZFCEeuCTslxszDstQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_rnNA8pFCEeuCTslxszDstQ" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_sehDcZFCEeuCTslxszDstQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rnOPEpFCEeuCTslxszDstQ" base_Element="_rnOPEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rnOPE5FCEeuCTslxszDstQ" base_Element="_rnOPEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rnOPFJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rnO2IJFCEeuCTslxszDstQ" base_Element="_rnOPFZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rnO2IZFCEeuCTslxszDstQ" base_Element="_rnOPFZFCEeuCTslxszDstQ">
    <annotations xmi:id="_rnO2IpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rnO2JZFCEeuCTslxszDstQ" base_Element="_rnO2I5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rnO2JpFCEeuCTslxszDstQ" base_Element="_rnO2I5FCEeuCTslxszDstQ">
    <annotations xmi:id="_rnO2J5FCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rnPdMpFCEeuCTslxszDstQ" base_Element="_rnPdMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rnPdM5FCEeuCTslxszDstQ" base_Element="_rnPdMJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rnPdNJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rnQEQ5FCEeuCTslxszDstQ" genericsValue="Object, DictionaryElement" base_Element="_rnQEQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rnTHkZFCEeuCTslxszDstQ" base_Element="_rnTHkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rnTuoJFCEeuCTslxszDstQ" base_Element="_rnTHkpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rnTuopFCEeuCTslxszDstQ" base_Element="_rnTuoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rnZ1QJFCEeuCTslxszDstQ" base_Element="_rnZOMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rn4WYJFCEeuCTslxszDstQ" base_Element="_rn2hMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ronWMJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_rolhAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ro0KgJFCEeuCTslxszDstQ" base_Element="_roxuQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rpjKUJFCEeuCTslxszDstQ" base_Element="_rphVIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rpkYcJFCEeuCTslxszDstQ" base_Element="_rphVIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rpk_gJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rpoC0JFCEeuCTslxszDstQ" base_Element="_rplmkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rpp4AJFCEeuCTslxszDstQ" base_Element="_rplmkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rpp4AZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rpsUQJFCEeuCTslxszDstQ" base_Element="_rpqfEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rps7UJFCEeuCTslxszDstQ" base_Element="_rpqfEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rptiYJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rpya4JFCEeuCTslxszDstQ" base_Element="_rpwlsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rpzpAJFCEeuCTslxszDstQ" base_Element="_rpwlsJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rpzpAZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rs8ckJFCEeuCTslxszDstQ" genericsValue="PrincetonObjectDictionaryFile" base_Element="_rs6nYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rs-40pFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_rs-40JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rs_f4ZFCEeuCTslxszDstQ" genericsValue="PrincetonResourceObjectDictionaryFile" base_Element="_rs_f4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rtBVEJFCEeuCTslxszDstQ" base_Element="_rtAuAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rtB8IZFCEeuCTslxszDstQ" base_Element="_rtB8IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rtFmgZFCEeuCTslxszDstQ" genericsValue="K, A, B" base_Element="_rtFmgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rtJ38JFCEeuCTslxszDstQ" genericsValue="T" base_Element="_rtJQ4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rtLtIZFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_rtLtIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rtMUMpFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_rtMUMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rtMUNJFCEeuCTslxszDstQ" base_Element="_rtMUMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rtNiUJFCEeuCTslxszDstQ" base_Element="_rtMUMJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rtNiUZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rtRMsJFCEeuCTslxszDstQ" base_Element="_rtPXgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rtTB4JFCEeuCTslxszDstQ" base_Element="_rtRzwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rtX6YJFCEeuCTslxszDstQ" base_Element="_rtWFMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rtZvkJFCEeuCTslxszDstQ" base_Element="_rtYhcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rtf2MJFCEeuCTslxszDstQ" base_Element="_rteBAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rtiScJFCEeuCTslxszDstQ" base_Element="_rtgdQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rxC5cJFCEeuCTslxszDstQ" base_Element="_rxBrUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rxEuoJFCEeuCTslxszDstQ" base_Element="_rxDggJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rxTYIJFCEeuCTslxszDstQ" base_Element="_rxRi8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rx5OAJFCEeuCTslxszDstQ" base_Element="_rx2xwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ryPMQJFCEeuCTslxszDstQ" base_Element="_ryMwAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ryV58JFCEeuCTslxszDstQ" genericsValue="String" base_Element="_ryRogJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ryo04JFCEeuCTslxszDstQ" genericsValue="String" base_Element="_rykjcZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ryr4MZFCEeuCTslxszDstQ" base_Element="_ryqqEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ryr4MpFCEeuCTslxszDstQ" base_Element="_ryqqEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ryr4M5FCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rytGUJFCEeuCTslxszDstQ" base_Element="_rysfQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rywJoJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_ryvikJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rywJpJFCEeuCTslxszDstQ" base_Element="_rywJoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rywwsJFCEeuCTslxszDstQ" base_Element="_rywJoZFCEeuCTslxszDstQ">
    <annotations xmi:id="_rywwsZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rywwtZFCEeuCTslxszDstQ" base_Element="_rywwspFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ryxXwJFCEeuCTslxszDstQ" base_Element="_rywwspFCEeuCTslxszDstQ">
    <annotations xmi:id="_ryxXwZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ryxXxZFCEeuCTslxszDstQ" base_Element="_ryxXwpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ryx-0JFCEeuCTslxszDstQ" base_Element="_ryxXwpFCEeuCTslxszDstQ">
    <annotations xmi:id="_ryx-0ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ryyl4JFCEeuCTslxszDstQ" base_Element="_ryx-05FCEeuCTslxszDstQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ryyl45FCEeuCTslxszDstQ" typeParameterDeclarationValue="T" base_Operation="_ryyl4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_ryyl5pFCEeuCTslxszDstQ" base_Element="_ryyl4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ryzM8JFCEeuCTslxszDstQ" base_Element="_ryyl4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_ryzM8pFCEeuCTslxszDstQ" base_Element="_ryyl4pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ryzM85FCEeuCTslxszDstQ" base_Element="_ryyl4ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_ryzM9JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ryz0BJFCEeuCTslxszDstQ" base_Element="_ryz0AJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ryz0BZFCEeuCTslxszDstQ" base_Element="_ryz0AJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ryz0BpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ry0bE5FCEeuCTslxszDstQ" base_Element="_ry0bEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ry0bFJFCEeuCTslxszDstQ" base_Element="_ry0bEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ry0bFZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ry1CI5FCEeuCTslxszDstQ" base_Element="_ry1CIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ry1CJJFCEeuCTslxszDstQ" base_Element="_ry1CIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ry1CJZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ry1pNJFCEeuCTslxszDstQ" base_Element="_ry1pMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ry1pNZFCEeuCTslxszDstQ" base_Element="_ry1pMZFCEeuCTslxszDstQ">
    <annotations xmi:id="_ry1pNpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ry2QQ5FCEeuCTslxszDstQ" base_Element="_ry2QQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ry2QRJFCEeuCTslxszDstQ" genericsValue="? extends Synset" base_Element="_ry2QQZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ry23UJFCEeuCTslxszDstQ" base_Element="_ry2QQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ry23UZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ry23VpFCEeuCTslxszDstQ" base_Element="_ry23UpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ry3eYJFCEeuCTslxszDstQ" genericsValue="? extends Synset" base_Element="_ry23VJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ry3eYZFCEeuCTslxszDstQ" base_Element="_ry23UpFCEeuCTslxszDstQ">
    <annotations xmi:id="_ry3eYpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ry4sg5FCEeuCTslxszDstQ" base_Element="_ry4sgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ry5TkJFCEeuCTslxszDstQ" genericsValue="?" base_Element="_ry4sgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ry5TkZFCEeuCTslxszDstQ" base_Element="_ry4sgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ry5TkpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ry56o5FCEeuCTslxszDstQ" base_Element="_ry56oJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ry6hsJFCEeuCTslxszDstQ" genericsValue="?" base_Element="_ry56oZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ry6hsZFCEeuCTslxszDstQ" base_Element="_ry56oJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ry6hspFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ry7Iw5FCEeuCTslxszDstQ" base_Element="_ry7IwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ry7v0JFCEeuCTslxszDstQ" genericsValue="?" base_Element="_ry7IwZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ry7v0ZFCEeuCTslxszDstQ" base_Element="_ry7IwJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ry7v0pFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ry8W4ZFCEeuCTslxszDstQ" base_Element="_ry8W4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ry-MEZFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_ry-MEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_rzBPYZFCEeuCTslxszDstQ" base_Element="_rzBPYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rzE5wZFCEeuCTslxszDstQ" base_Element="_rzESsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rzE5wpFCEeuCTslxszDstQ" base_Element="_rzESsJFCEeuCTslxszDstQ">
    <annotations xmi:id="_rzE5w5FCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rzGu9pFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_rzGu8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_rzH9EJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_rzHWA5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rzJLNJFCEeuCTslxszDstQ" base_Element="_rzJLMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rzJLNZFCEeuCTslxszDstQ" base_Element="_rzJLMZFCEeuCTslxszDstQ">
    <annotations xmi:id="_rzJLNpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rzKZUJFCEeuCTslxszDstQ" base_Element="_rzJyQZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_rzKZUZFCEeuCTslxszDstQ" base_Element="_rzJyQZFCEeuCTslxszDstQ">
    <annotations xmi:id="_rzKZUpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rzfwgJFCEeuCTslxszDstQ" genericsValue="Pointer" base_Element="_rzctMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_r4ch8ZFCEeuCTslxszDstQ" base_Element="_r4ch8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_r4e-MJFCEeuCTslxszDstQ" base_Element="_r4eXJpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r4flQpFCEeuCTslxszDstQ" genericsValue="E" base_Element="_r4flQZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r4gzYJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_r4gMUZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r4hacJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_r4gzYpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r4iokJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_r4iBgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r4iolZFCEeuCTslxszDstQ" genericsValue="E" base_Element="_r4iokpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r4jPpZFCEeuCTslxszDstQ" genericsValue="E" base_Element="_r4jPoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r4j2tZFCEeuCTslxszDstQ" genericsValue="E" base_Element="_r4j2sZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_r4wD8JFCEeuCTslxszDstQ" base_Element="_r4uOwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_r4ygMJFCEeuCTslxszDstQ" base_Element="_r4wrAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r46cAJFCEeuCTslxszDstQ" genericsValue="? extends PointerTargetNode" base_Element="_r43YsZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r4_UgJFCEeuCTslxszDstQ" genericsValue="PointerTarget" base_Element="_r47qIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r5K6sJFCEeuCTslxszDstQ" genericsValue="PointerTargetNode" base_Element="_r5JskJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r5aLQJFCEeuCTslxszDstQ" base_Element="_r5RBUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_r5bZYJFCEeuCTslxszDstQ" base_Element="_r5RBUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_r5bZYZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r5r4EJFCEeuCTslxszDstQ" genericsValue="PointerTargetTreeNode" base_Element="_r5oNsZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r5x-sJFCEeuCTslxszDstQ" genericsValue="PointerTargetTreeNode" base_Element="_r5u7YZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r54FUJFCEeuCTslxszDstQ" genericsValue="PointerTargetTreeNode" base_Element="_r52QIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r6MOYJFCEeuCTslxszDstQ" base_Element="_r6LAQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_r6M1cJFCEeuCTslxszDstQ" base_Element="_r6LAQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_r6M1cZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_r6Rt8JFCEeuCTslxszDstQ" base_Element="_r6P4wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r628wJFCEeuCTslxszDstQ" genericsValue="Relationship" base_Element="_r60ggJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r7AtwJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_r6-4kJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r7G0YJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_r7DxEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r7gdAJFCEeuCTslxszDstQ" base_Element="_r7fO4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_r7hEEJFCEeuCTslxszDstQ" base_Element="_r7fO4JFCEeuCTslxszDstQ">
    <annotations xmi:id="_r7hrIJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r7kHYJFCEeuCTslxszDstQ" base_Element="_r7iSMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_r7kucJFCEeuCTslxszDstQ" base_Element="_r7iSMJFCEeuCTslxszDstQ">
    <annotations xmi:id="_r7kucZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r743gJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_r73pYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_r7760JFCEeuCTslxszDstQ" base_Element="_r76FoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_r8IIEJFCEeuCTslxszDstQ" base_Element="_r8G58JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r8THMJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_r8RSAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r8mCIJFCEeuCTslxszDstQ" genericsValue="Object, DictionaryElement" base_Element="_r8k0ApFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r8t98JFCEeuCTslxszDstQ" genericsValue="? extends DictionaryElement" base_Element="_r8sv0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r8vzIJFCEeuCTslxszDstQ" genericsValue="Object, ? extends DictionaryElement" base_Element="_r8sv0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r8yPYJFCEeuCTslxszDstQ" base_Element="_r8xoUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_r8zdgJFCEeuCTslxszDstQ" base_Element="_r8xoUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_r8zdgZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r815wJFCEeuCTslxszDstQ" base_Element="_r80roJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_r82g0JFCEeuCTslxszDstQ" base_Element="_r80roJFCEeuCTslxszDstQ">
    <annotations xmi:id="_r82g0ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r9R-oJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_r9O7UZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r90KIJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_r9yU8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r9630JFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_r930gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_r-Eo0JFCEeuCTslxszDstQ" base_Element="_r-BlgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_r-JhUJFCEeuCTslxszDstQ" base_Element="_r-ITMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r-KvcJFCEeuCTslxszDstQ" base_Element="_r-KIYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r-KvcpFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_r-KIZJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_r-LWgJFCEeuCTslxszDstQ" base_Element="_r-KIYJFCEeuCTslxszDstQ">
    <annotations xmi:id="_r-LWgZFCEeuCTslxszDstQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_r-LWgpFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_set3wZFCEeuCTslxszDstQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r-RdIJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_r-OZ0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r-8LgJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_r-4hIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r_NRQJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_r_IYwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_r_5NwJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_r_wq4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sAXu4JFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sARoQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_sAcAUJFCEeuCTslxszDstQ" dimensions="2" base_Element="_sAZkEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sAoNkJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sAlKQZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sA6hcJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sAxXgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sBSU4JFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sBNcYZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sBZpoJFCEeuCTslxszDstQ" genericsValue="String" base_Element="_sBUxIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sBrWcJFCEeuCTslxszDstQ" base_Element="_sBqIUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_sBtLoJFCEeuCTslxszDstQ" base_Element="_sBqIUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_sBtLoZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sB4x0JFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sBz5UZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sCMT0JFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sCJQgpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sCWE0JFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sCTokZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sCa9UJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sCYhEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sChrAJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sCeAoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sCmjgJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sCi5I5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sCwUgJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sCsqIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sC4QUJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sCz-45FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sC--AJFCEeuCTslxszDstQ" base_Element="_sC9v4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_sC_lEJFCEeuCTslxszDstQ" base_Element="_sC9v4JFCEeuCTslxszDstQ">
    <annotations xmi:id="_sC_lEZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sDJ9IJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sDFrsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sDQDwJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sDNngJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sDWKYJFCEeuCTslxszDstQ" base_Element="_sDTuIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sDZNsJFCEeuCTslxszDstQ" base_Element="_sDXYgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sDeGMJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sDbp8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sDla8JFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sDhJgpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDpsYJFCEeuCTslxszDstQ" base_Element="_sDnQIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDt90JFCEeuCTslxszDstQ" base_Element="_sDnQIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_sDt90ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sD4V4JFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sD15oJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sD5kCpFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_sD489ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sD6LFZFCEeuCTslxszDstQ" base_Element="_sD5kC5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_sD6LHpFCEeuCTslxszDstQ" base_Element="_sD5kC5FCEeuCTslxszDstQ">
    <annotations xmi:id="_sD6LH5FCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sD91cZFCEeuCTslxszDstQ" base_Element="_sD91cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sD_DlZFCEeuCTslxszDstQ" genericsValue="K" base_Element="_sD_DkZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sEARsJFCEeuCTslxszDstQ" genericsValue="K" base_Element="_sD_qoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sEA4wJFCEeuCTslxszDstQ" genericsValue="K" base_Element="_sEARspFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sEA4wZFCEeuCTslxszDstQ" genericsValue="Integer" base_Element="_sEARs5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sEBf0JFCEeuCTslxszDstQ" base_Element="_sEA4wpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sECG4ZFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_sECG4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sECt8JFCEeuCTslxszDstQ" base_Element="_sECG4pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sED8EJFCEeuCTslxszDstQ" base_Element="_sEDVAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sEJboJFCEeuCTslxszDstQ" base_Element="_sEG_YJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sEZ6UJFCEeuCTslxszDstQ" genericsValue="K" base_Element="_sEXeEZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sEc9oJFCEeuCTslxszDstQ" genericsValue="K" base_Element="_sEbIcZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sEgoAJFCEeuCTslxszDstQ" genericsValue="K" base_Element="_sEey0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sEjrUJFCEeuCTslxszDstQ" genericsValue="Integer" base_Element="_sEey0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sEmuoJFCEeuCTslxszDstQ" base_Element="_sEk5cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sErAEJFCEeuCTslxszDstQ" base_Element="_sEpx8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sEuqcJFCEeuCTslxszDstQ" base_Element="_sEsOMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sFBlYJFCEeuCTslxszDstQ" genericsValue="A, B" base_Element="_sE_wMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sFNyoJFCEeuCTslxszDstQ" genericsValue="CharSequence" base_Element="_sFLWYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sFjw4JFCEeuCTslxszDstQ" genericsValue="Param" base_Element="_sFffcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sFvXEJFCEeuCTslxszDstQ" genericsValue="Param" base_Element="_sFsTwpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sHV5kJFCEeuCTslxszDstQ" base_Element="_sHUrcJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sHY84JFCEeuCTslxszDstQ" name="getAdjectivePosition" method="_sVtFsJFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sHayEJFCEeuCTslxszDstQ" type="_oDfCkJFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sHhfwJFCEeuCTslxszDstQ" base_Element="_sHfqkJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sHjU8JFCEeuCTslxszDstQ" name="getKey" method="_sVylQJFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sHlKIJFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sHoNcJFCEeuCTslxszDstQ" base_Element="_sHnmYJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sHqCoJFCEeuCTslxszDstQ" name="getLabel" method="_sVzMUZFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sHrQwJFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sHylgJFCEeuCTslxszDstQ" base_Element="_sHwwUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sH8WgJFCEeuCTslxszDstQ" base_Element="_sH5TMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sICdIJFCEeuCTslxszDstQ" base_Element="_sIAn8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sIM1MJFCEeuCTslxszDstQ" base_Element="_sILnEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sIZpgJFCEeuCTslxszDstQ" base_Element="_sIX0UJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sIeiAJFCEeuCTslxszDstQ" base_Element="_sIcFwJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sIiMYJFCEeuCTslxszDstQ" name="getSynsetOffsets" method="_sWVX0JFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sIjagJFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sIjagZFCEeuCTslxszDstQ" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Array xmi:id="_sIfwIJFCEeuCTslxszDstQ" dimensions="1" base_Element="_sIcFwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_sIkBkJFCEeuCTslxszDstQ" base_Element="_sIiMYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sIoTAJFCEeuCTslxszDstQ" base_Element="_sIl2wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sI71AJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_sI0gQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJYg8JFCEeuCTslxszDstQ" base_Element="_sJVdoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJcLUJFCEeuCTslxszDstQ" base_Element="_sJa9MJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJhq4JFCEeuCTslxszDstQ" base_Element="_sJgcwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJkHIJFCEeuCTslxszDstQ" base_Element="_sJi5AJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJo_pZFCEeuCTslxszDstQ" base_Element="_sJo_opFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJpms5FCEeuCTslxszDstQ" base_Element="_sJpmsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJqNwpFCEeuCTslxszDstQ" base_Element="_sJpmtJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJq00ZFCEeuCTslxszDstQ" base_Element="_sJq00JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJq005FCEeuCTslxszDstQ" base_Element="_sJq00pFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sJq01JFCEeuCTslxszDstQ" name="getTargetIndex" method="_sXhDkJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sJq01ZFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJq015FCEeuCTslxszDstQ" base_Element="_sJq01pFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sJq02JFCEeuCTslxszDstQ" name="getSource" method="_sXhqoJFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sJq02ZFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJsC8pFCEeuCTslxszDstQ" base_Element="_sJq02pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJwUYJFCEeuCTslxszDstQ" base_Element="_sJvGQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJyJkJFCEeuCTslxszDstQ" base_Element="_sJw7cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJzXsJFCEeuCTslxszDstQ" base_Element="_sJywoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sJ8hoJFCEeuCTslxszDstQ" base_Element="_sJ7TgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sKQqsJFCEeuCTslxszDstQ" base_Element="_sKO1gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sKUVEJFCEeuCTslxszDstQ" base_Element="_sKTG8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sKXYYJFCEeuCTslxszDstQ" base_Element="_sKWKQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sKfUMJFCEeuCTslxszDstQ" base_Element="_sKc38JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_sLQJMJFCEeuCTslxszDstQ" dimensions="1" base_Element="_sLO7EJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sLR-YJFCEeuCTslxszDstQ" base_Element="_sLO7EJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sLUaoJFCEeuCTslxszDstQ" base_Element="_sLSlcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sLdkkJFCEeuCTslxszDstQ" base_Element="_sLcWcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sLojsJFCEeuCTslxszDstQ" base_Element="_sLmugJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sLqY4JFCEeuCTslxszDstQ" base_Element="_sLojsZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sLuqUJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_sLsOEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sLvRYJFCEeuCTslxszDstQ" base_Element="_sLsOEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sL1_EJFCEeuCTslxszDstQ" base_Element="_sL0w8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sL_JAJFCEeuCTslxszDstQ" genericsValue="PointerTargetNode" base_Element="_sL8FsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMF2sJFCEeuCTslxszDstQ" base_Element="_sMEokJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sMGdwJFCEeuCTslxszDstQ" name="getRootNode" method="_sZfZgJFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sMGdwZFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_sMQOwJFCEeuCTslxszDstQ" genericsValue="PointerTargetTreeNode" base_Element="_sMPAoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMTSEJFCEeuCTslxszDstQ" base_Element="_sMSD8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMVuUJFCEeuCTslxszDstQ" base_Element="_sMUgMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMdqIJFCEeuCTslxszDstQ" base_Element="_sMdDEJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sMe4QJFCEeuCTslxszDstQ" name="getCommonParentIndex" method="_saISsJFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sMffUJFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMjJsJFCEeuCTslxszDstQ" base_Element="_sMgtcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMopQJFCEeuCTslxszDstQ" base_Element="_sMnbIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMp3YJFCEeuCTslxszDstQ" base_Element="_sMpQUJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sMqecJFCEeuCTslxszDstQ" name="getType" method="_saMkIJFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sMrFgJFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMthwJFCEeuCTslxszDstQ" base_Element="_sMsToJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMuv4JFCEeuCTslxszDstQ" base_Element="_sMuI0JFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sMv-AJFCEeuCTslxszDstQ" name="getTargetSynset" method="_saNLMZFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sMwlEJFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sMyaQJFCEeuCTslxszDstQ" base_Element="_sMxzMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sM_OkJFCEeuCTslxszDstQ" base_Element="_sM-AcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNBq0JFCEeuCTslxszDstQ" base_Element="_sNAcsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sNGjUJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_sNEuIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNHKYJFCEeuCTslxszDstQ" base_Element="_sNEuIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNI_kJFCEeuCTslxszDstQ" base_Element="_sNHxcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNKNsJFCEeuCTslxszDstQ" base_Element="_sNJmoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sNN4EJFCEeuCTslxszDstQ" genericsValue="DictionaryElementType, Object, DictionaryElement" base_Element="_sNMC4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNPGMJFCEeuCTslxszDstQ" base_Element="_sNMC4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNQ7YJFCEeuCTslxszDstQ" base_Element="_sNPtQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNioMJFCEeuCTslxszDstQ" base_Element="_sNgzAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNkdYJFCEeuCTslxszDstQ" base_Element="_sNjPQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNoHwJFCEeuCTslxszDstQ" base_Element="_sNm5oJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNrLEJFCEeuCTslxszDstQ" base_Element="_sNpV4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNtnUJFCEeuCTslxszDstQ" base_Element="_sNryIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sNxRsJFCEeuCTslxszDstQ" base_Element="_sNu1cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sOTdMJFCEeuCTslxszDstQ" base_Element="_sORoAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sOVSYJFCEeuCTslxszDstQ" base_Element="_sOUEQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sOY8wJFCEeuCTslxszDstQ" base_Element="_sOXuoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sObZAJFCEeuCTslxszDstQ" base_Element="_sOZj0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sOd1QJFCEeuCTslxszDstQ" base_Element="_sOcnIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sOiGsJFCEeuCTslxszDstQ" base_Element="_sOg4kJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sO0akJFCEeuCTslxszDstQ" genericsValue="ObjectDictionaryFile" base_Element="_sOylYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sO1BoJFCEeuCTslxszDstQ" base_Element="_sOylYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sO8WYJFCEeuCTslxszDstQ" genericsValue="DictionaryFileType, Map&lt;Object, DictionaryElement>" base_Element="_sO56IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sO9kgJFCEeuCTslxszDstQ" base_Element="_sO56IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sPAn0JFCEeuCTslxszDstQ" base_Element="_sO-yoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPODMJFCEeuCTslxszDstQ" base_Element="_sPLm8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPRGgJFCEeuCTslxszDstQ" base_Element="_sPPRUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPTiwJFCEeuCTslxszDstQ" base_Element="_sPRtkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPV_AJFCEeuCTslxszDstQ" base_Element="_sPUw4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPWmEZFCEeuCTslxszDstQ" base_Element="_sPWmEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPXNIZFCEeuCTslxszDstQ" base_Element="_sPXNIJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sPX0MJFCEeuCTslxszDstQ" name="getConnection" method="_sa-AOZFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sPX0MZFCEeuCTslxszDstQ" type="_rnTHkJFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPbekZFCEeuCTslxszDstQ" base_Element="_sPbekJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPbek5FCEeuCTslxszDstQ" base_Element="_sPbekpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sPcFoJFCEeuCTslxszDstQ" base_Element="_sPbelJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPcssZFCEeuCTslxszDstQ" base_Element="_sPcssJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPgXEJFCEeuCTslxszDstQ" base_Element="_sPfwAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPiMQJFCEeuCTslxszDstQ" base_Element="_sPg-IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPkBcJFCEeuCTslxszDstQ" base_Element="_sPizUJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sPlPkJFCEeuCTslxszDstQ" name="getStatement" method="_sbAccJFCEeuCTslxszDstQ" raisedException="_rV2LMZFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sPmdsJFCEeuCTslxszDstQ" type="_rn2hMJFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPo58JFCEeuCTslxszDstQ" base_Element="_sPnr0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPwOsJFCEeuCTslxszDstQ" base_Element="_sPuZgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sPyq8JFCEeuCTslxszDstQ" base_Element="_sPw1wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sP1HMJFCEeuCTslxszDstQ" base_Element="_sPz5EJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sP2VUJFCEeuCTslxszDstQ" base_Element="_sP1uQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sP3jcJFCEeuCTslxszDstQ" base_Element="_sP28YJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sP8b8JFCEeuCTslxszDstQ" base_Element="_sP7N0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sP-4MJFCEeuCTslxszDstQ" base_Element="_sP9DAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQBUcJFCEeuCTslxszDstQ" base_Element="_sQAGUJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sQCikJFCEeuCTslxszDstQ" name="getFileType" method="_sbBDj5FCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sQDJoJFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQP98JFCEeuCTslxszDstQ" base_Element="_sQEXwJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sQRMEJFCEeuCTslxszDstQ" name="getDictionary" method="_sbBDkZFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sQRzIJFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_sQbkIJFCEeuCTslxszDstQ" genericsValue="E" base_Element="_sQZH4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQcyQJFCEeuCTslxszDstQ" base_Element="_sQZH4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQf1kJFCEeuCTslxszDstQ" base_Element="_sQencJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQqNoJFCEeuCTslxszDstQ" base_Element="_sQo_gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQufEJFCEeuCTslxszDstQ" base_Element="_sQtQ8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sQ1MwJFCEeuCTslxszDstQ" genericsValue="RandomAccessDictionaryFile" base_Element="_sQywgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQ2a4JFCEeuCTslxszDstQ" base_Element="_sQywgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQ5eMJFCEeuCTslxszDstQ" base_Element="_sQ4QEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQ7TYJFCEeuCTslxszDstQ" base_Element="_sQ6FQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQ9voJFCEeuCTslxszDstQ" base_Element="_sQ76cZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sQ_k0JFCEeuCTslxszDstQ" base_Element="_sQ-WsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRBaAJFCEeuCTslxszDstQ" base_Element="_sQ_k0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sRIuwJFCEeuCTslxszDstQ" genericsValue="String, Operation[]" base_Element="_sRG5kJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRJ84JFCEeuCTslxszDstQ" base_Element="_sRG5kJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRLLAJFCEeuCTslxszDstQ" base_Element="_sRKj8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRPccJFCEeuCTslxszDstQ" base_Element="_sROOUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRSfwJFCEeuCTslxszDstQ" base_Element="_sRRRoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRVjEJFCEeuCTslxszDstQ" base_Element="_sRTt4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRWxMJFCEeuCTslxszDstQ" base_Element="_sRVjEZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sRkMkJFCEeuCTslxszDstQ" genericsValue="String, LookupInfo" base_Element="_sRhwUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRlasJFCEeuCTslxszDstQ" base_Element="_sRhwUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_sRnP4JFCEeuCTslxszDstQ" base_Element="_sRmBwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRn28JFCEeuCTslxszDstQ" base_Element="_sRmBwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRqTMJFCEeuCTslxszDstQ" base_Element="_sRpFEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRsIYJFCEeuCTslxszDstQ" base_Element="_sRq6QJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRt9kJFCEeuCTslxszDstQ" base_Element="_sRsvcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRvywJFCEeuCTslxszDstQ" base_Element="_sRukoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sRyPAJFCEeuCTslxszDstQ" base_Element="_sRwZ0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sR8AAJFCEeuCTslxszDstQ" genericsValue="POS, String[][]" base_Element="_sR48sJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_sSCGoJFCEeuCTslxszDstQ" base_Element="_sSBfkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sSDUwJFCEeuCTslxszDstQ" base_Element="_sSBfkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sSHmMJFCEeuCTslxszDstQ" base_Element="_sSGYEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sSJbYJFCEeuCTslxszDstQ" base_Element="_sSINQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sSL3oJFCEeuCTslxszDstQ" base_Element="_sSLQkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sSQwIJFCEeuCTslxszDstQ" base_Element="_sSO68JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sSTMYJFCEeuCTslxszDstQ" genericsValue="String" base_Element="_sSRXMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sSVBkJFCEeuCTslxszDstQ" base_Element="_sSRXMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sSpxsJFCEeuCTslxszDstQ" base_Element="_sSn8gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sSvRQJFCEeuCTslxszDstQ" base_Element="_sSsN8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sS3NEJFCEeuCTslxszDstQ" base_Element="_sS1-8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sS8FkJFCEeuCTslxszDstQ" base_Element="_sS4bMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTFPgJFCEeuCTslxszDstQ" base_Element="_sTEBYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTKIAJFCEeuCTslxszDstQ" base_Element="_sTI54JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTL9MJFCEeuCTslxszDstQ" base_Element="_sTKvEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTPnkJFCEeuCTslxszDstQ" base_Element="_sTNyYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_sTVuMJFCEeuCTslxszDstQ" base_Element="_sTVHIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTXjYJFCEeuCTslxszDstQ" base_Element="_sTVHIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTZ_oJFCEeuCTslxszDstQ" base_Element="_sTYxgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTcb4JFCEeuCTslxszDstQ" base_Element="_sTbNwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTdqAJFCEeuCTslxszDstQ" base_Element="_sTdC8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTll0JFCEeuCTslxszDstQ" base_Element="_sTkXsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTnbAJFCEeuCTslxszDstQ" base_Element="_sTmM4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sTxMAJFCEeuCTslxszDstQ" base_Element="_sTv94JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sT1dcJFCEeuCTslxszDstQ" base_Element="_sTxzEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sT-AUJFCEeuCTslxszDstQ" genericsValue="A, B" base_Element="_sT69AZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sT_OcJFCEeuCTslxszDstQ" base_Element="_sT69AZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sUPtIJFCEeuCTslxszDstQ" genericsValue="T, T" base_Element="_sUI_cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUSJYJFCEeuCTslxszDstQ" base_Element="_sUI_cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUVMsJFCEeuCTslxszDstQ" base_Element="_sUT-kJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUYQAJFCEeuCTslxszDstQ" base_Element="_sUXB4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUaFMJFCEeuCTslxszDstQ" base_Element="_sUZeIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUb6YJFCEeuCTslxszDstQ" base_Element="_sUasQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_sUkdQJFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_sUgy4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUlrYJFCEeuCTslxszDstQ" base_Element="_sUgy4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sUoHoJFCEeuCTslxszDstQ" base_Element="_sUmScJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUryAJFCEeuCTslxszDstQ" base_Element="_sUp80JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUtnMJFCEeuCTslxszDstQ" base_Element="_sUsZEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUxRkJFCEeuCTslxszDstQ" base_Element="_sUvcYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sUzGwJFCEeuCTslxszDstQ" base_Element="_sUx4oJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sU4mUJFCEeuCTslxszDstQ" base_Element="_sU2xIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sU5NYJFCEeuCTslxszDstQ" base_Element="_sU4mUZFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sU6bgJFCEeuCTslxszDstQ" name="getValue" method="_sdCcwJFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_sU8QsJFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <uml:OpaqueBehavior xmi:id="_sVtFsJFCEeuCTslxszDstQ" name="getAdjectivePosition" specification="_sHY84JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sVuT0JFCEeuCTslxszDstQ" type="_oDfCkJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>return adjectivePosition;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sVxXIJFCEeuCTslxszDstQ" name="getAdjectivePositionForKey" specification="_oDpaoJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sVxXIZFCEeuCTslxszDstQ" name="key">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sVxXIpFCEeuCTslxszDstQ" type="_oDfCkJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>if (NONE.getKey().equals(key)) {
         return NONE;
     }
     if (PREDICATIVE.getKey().equals(key)) {
         return PREDICATIVE;
     }
     if (ATTRIBUTIVE.getKey().equals(key)) {
         return ATTRIBUTIVE;
     }
     if (IMMEDIATE_POSTNOMINAL.getKey().equals(key)) {
         return IMMEDIATE_POSTNOMINAL;
     }
     return null;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sVylQJFCEeuCTslxszDstQ" name="getKey" specification="_sHjU8JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sVzMUJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return key;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sVzMUZFCEeuCTslxszDstQ" name="getLabel" specification="_sHqCoJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sVzzYJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return label;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sV0acJFCEeuCTslxszDstQ" name="AdjectivePosition" specification="_oD4rMJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sV1BgJFCEeuCTslxszDstQ" name="key">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sV1BgZFCEeuCTslxszDstQ" name="label">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sV1BgpFCEeuCTslxszDstQ" type="_oDfCkJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>this.key = key;
     this.label = label;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sV1okJFCEeuCTslxszDstQ" name="toString" specification="_oD88oJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sV2PoJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return ResourceBundleSet.insertParams(&quot;[AdjectivePosition: {0}]&quot;, new String[]{label});
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sWFgMJFCEeuCTslxszDstQ" name="getAllDictionaryElementTypes" specification="_oGR34JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sWGuUJFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sWGuUZFCEeuCTslxszDstQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return ALL_TYPES;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sWGuUpFCEeuCTslxszDstQ" name="DictionaryElementType" specification="_oGWJUJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sWHVYJFCEeuCTslxszDstQ" name="name">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sWHVYZFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>this.name = name;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sWH8cJFCEeuCTslxszDstQ" name="toString" specification="_oGYlkJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sWH8cZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return ResourceBundleSet.insertParams(&quot;[DictionaryElementType: {0}]&quot;, new String[]{getName()});
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sWIjgJFCEeuCTslxszDstQ" name="getName" specification="_oGZzsJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sWJKkJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return name;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sWVX0JFCEeuCTslxszDstQ" name="getSynsetOffsets" specification="_sIiMYJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sWWl8JFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sWWl8ZFCEeuCTslxszDstQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>if (null == synsetOffsets) {
         long[] result = new long[synsets.size()];
         for (int i = 0; i &lt; synsets.size(); i++) {
             result[i] = synsets.get(i).getOffset();
         }
         return result;
     }
     return synsetOffsets;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXZHwJFCEeuCTslxszDstQ" name="getAllPOS" specification="_oLw00JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXZu0JFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sXZu0ZFCEeuCTslxszDstQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return ALL_POS;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXZu0pFCEeuCTslxszDstQ" name="getPOSForLabel" specification="_oL0fMJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXaV4JFCEeuCTslxszDstQ" name="label">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sXaV4ZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>for (POS pos : ALL_POS) {
         if (pos.getLabel().equals(label)) {
             return pos;
         }
     }
     return null;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXa88JFCEeuCTslxszDstQ" name="getPOSForKey" specification="_oL27cJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXa88ZFCEeuCTslxszDstQ" name="key">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sXbkAJFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>if (NOUN.getKey().equals(key)) {
         return POS.NOUN;
     }
     if (VERB.getKey().equals(key)) {
         return POS.VERB;
     }
     if (ADJECTIVE.getKey().equals(key)) {
         return POS.ADJECTIVE;
     }
     if (ADVERB.getKey().equals(key)) {
         return POS.ADVERB;
     }
     if (ADJECTIVE_SATELLITE_KEY.equals(key)) {
         return POS.ADJECTIVE;
     }
     return null;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXbkAZFCEeuCTslxszDstQ" name="getPOSForKey" specification="_oL5XsJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXcLEJFCEeuCTslxszDstQ" name="key">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sXcLEZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>if (key == NOUN.getKey().charAt(0)) {
         return POS.NOUN;
     }
     if (key == VERB.getKey().charAt(0)) {
         return POS.VERB;
     }
     if (key == ADJECTIVE.getKey().charAt(0)) {
         return POS.ADJECTIVE;
     }
     if (key == ADVERB.getKey().charAt(0)) {
         return POS.ADVERB;
     }
     if (key == ADJECTIVE_SATELLITE_KEY.charAt(0)) {
         return POS.ADJECTIVE;
     }
     return null;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXcLEpFCEeuCTslxszDstQ" name="getPOSForId" specification="_oL7z8JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXcyIJFCEeuCTslxszDstQ" name="id">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sXcyIZFCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>if (NOUN.getId() == id) {
         return POS.NOUN;
     }
     if (VERB.getId() == id) {
         return POS.VERB;
     }
     if (ADJECTIVE.getId() == id) {
         return POS.ADJECTIVE;
     }
     if (ADVERB.getId() == id) {
         return POS.ADVERB;
     }
     if (ADJECTIVE_SATELLITE_ID == id) {
         return POS.ADJECTIVE;
     }
     return null;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXcyIpFCEeuCTslxszDstQ" name="POS" specification="_oMHaIJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXdZMJFCEeuCTslxszDstQ" name="id">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sXdZMZFCEeuCTslxszDstQ" name="key">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sXdZMpFCEeuCTslxszDstQ" name="label">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sXdZM5FCEeuCTslxszDstQ" type="_oLknkJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>this.id = id;
     this.key = key;
     this.label = label;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXeAQJFCEeuCTslxszDstQ" name="toString" specification="_oMLEgJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXeAQZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return ResourceBundleSet.insertParams(&quot;[POS: {0}]&quot;, new String[] {getLabel()});
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXenUJFCEeuCTslxszDstQ" name="getLabel" specification="_oMOH0JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXfOYJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return label;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXfOYZFCEeuCTslxszDstQ" name="getKey" specification="_oMP9AJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXf1cJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return key;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXf1cZFCEeuCTslxszDstQ" name="getId" specification="_oMRyMJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXf1cpFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return id;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXhDkJFCEeuCTslxszDstQ" name="getTargetIndex" specification="_sJq01JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXhDkZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>if (null == target) {
         if (null != source.getDictionary() &amp;&amp; source.getDictionary().isEditable()) {
             return getTarget().getIndex();
         } else {
             return targetIndex.index;
         }
     } else {
         return target.getIndex();
     }
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sXhqoJFCEeuCTslxszDstQ" name="getSource" specification="_sJq02JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sXhqoZFCEeuCTslxszDstQ" type="_oNn2AJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>return source;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX1MoJFCEeuCTslxszDstQ" name="_initializer1" specification="_oOmGYJFCEeuCTslxszDstQ">
    <language>java</language>
    <body>POS_TO_MASK_MAP.put(POS.NOUN, PointerTypeFlags.N);
     POS_TO_MASK_MAP.put(POS.VERB, PointerTypeFlags.V);
     POS_TO_MASK_MAP.put(POS.ADJECTIVE, PointerTypeFlags.ADJ);
     POS_TO_MASK_MAP.put(POS.ADVERB, PointerTypeFlags.ADV);
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX1zsJFCEeuCTslxszDstQ" name="_initializer2" specification="_oOrl8JFCEeuCTslxszDstQ">
    <language>java</language>
    <body>setSymmetric(ANTONYM, ANTONYM);
     setSymmetric(HYPERNYM, HYPONYM);
     setSymmetric(MEMBER_MERONYM, MEMBER_HOLONYM);
     setSymmetric(SUBSTANCE_MERONYM, SUBSTANCE_HOLONYM);
     setSymmetric(PART_MERONYM, PART_HOLONYM);
     setSymmetric(SIMILAR_TO, SIMILAR_TO);
     setSymmetric(ATTRIBUTE, ATTRIBUTE);
     setSymmetric(VERB_GROUP, VERB_GROUP);
     setSymmetric(CATEGORY, CATEGORY_MEMBER);
     setSymmetric(REGION, REGION_MEMBER);
     setSymmetric(USAGE, USAGE_MEMBER);
     setSymmetric(DERIVATION, DERIVATION);
     setSymmetric(INSTANCE_HYPERNYM, INSTANCES_HYPONYM);
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX1zsZFCEeuCTslxszDstQ" name="isSymmetric" specification="_rYOJwJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX1zspFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
    <ownedParameter xmi:id="_sX2awJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return type.symmetricTo(type);
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX2awZFCEeuCTslxszDstQ" name="getPointerTypeForKey" specification="_oOuCMJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX2awpFCEeuCTslxszDstQ" name="key">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sX2aw5FCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>if (ANTONYM.getKey().equals(key)) {
         return ANTONYM;
     }
     if (HYPERNYM.getKey().equals(key)) {
         return HYPERNYM;
     }
     if (HYPONYM.getKey().equals(key)) {
         return HYPONYM;
     }
     if (ENTAILMENT.getKey().equals(key)) {
         return ENTAILMENT;
     }
     if (SIMILAR_TO.getKey().equals(key)) {
         return SIMILAR_TO;
     }
     if (MEMBER_HOLONYM.getKey().equals(key)) {
         return MEMBER_HOLONYM;
     }
     if (SUBSTANCE_HOLONYM.getKey().equals(key)) {
         return SUBSTANCE_HOLONYM;
     }
     if (PART_HOLONYM.getKey().equals(key)) {
         return PART_HOLONYM;
     }
     if (MEMBER_MERONYM.getKey().equals(key)) {
         return MEMBER_MERONYM;
     }
     if (SUBSTANCE_MERONYM.getKey().equals(key)) {
         return SUBSTANCE_MERONYM;
     }
     if (PART_MERONYM.getKey().equals(key)) {
         return PART_MERONYM;
     }
     if (CAUSE.getKey().equals(key)) {
         return CAUSE;
     }
     if (PARTICIPLE_OF.getKey().equals(key)) {
         return PARTICIPLE_OF;
     }
     if (SEE_ALSO.getKey().equals(key)) {
         return SEE_ALSO;
     }
     if (PERTAINYM.getKey().equals(key)) {
         return PERTAINYM;
     }
     if (ATTRIBUTE.getKey().equals(key)) {
         return ATTRIBUTE;
     }
     if (VERB_GROUP.getKey().equals(key)) {
         return VERB_GROUP;
     }
     if (DERIVATION.getKey().equals(key)) {
         return DERIVATION;
     }
     if (DOMAIN_ALL.getKey().equals(key)) {
         return DOMAIN_ALL;
     }
     if (MEMBER_ALL.getKey().equals(key)) {
         return MEMBER_ALL;
     }
     if (CATEGORY.getKey().equals(key)) {
         return CATEGORY;
     }
     if (USAGE.getKey().equals(key)) {
         return USAGE;
     }
     if (REGION.getKey().equals(key)) {
         return REGION;
     }
     if (CATEGORY_MEMBER.getKey().equals(key)) {
         return CATEGORY_MEMBER;
     }
     if (USAGE_MEMBER.getKey().equals(key)) {
         return USAGE_MEMBER;
     }
     if (REGION_MEMBER.getKey().equals(key)) {
         return REGION_MEMBER;
     }
     if (INSTANCE_HYPERNYM.getKey().equals(key)) {
         return INSTANCE_HYPERNYM;
     }
     if (INSTANCES_HYPONYM.getKey().equals(key)) {
         return INSTANCES_HYPONYM;
     }
     return null;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX2axJFCEeuCTslxszDstQ" name="getPointerTypeForKey" specification="_rzrWsJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX3B0JFCEeuCTslxszDstQ" name="key" type="_rysfQJFCEeuCTslxszDstQ"/>
    <ownedParameter xmi:id="_sX3B0ZFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>if (0 == key.length()) {
         return null;
     } else {
         if (key.charAt(0) == ANTONYM.getKey().charAt(0)) {
             return ANTONYM;
         }
         if (key.charAt(0) == HYPERNYM.getKey().charAt(0)) {
             if (1 == key.length()) {
                 return HYPERNYM;
             } else if (2 == key.length() &amp;&amp; key.charAt(1) == INSTANCE_HYPERNYM.getKey().charAt(1)) {
                 return INSTANCE_HYPERNYM;
             } else {
                 return null;
             }
         }
         if (key.charAt(0) == HYPONYM.getKey().charAt(0)) {
             if (1 == key.length()) {
                 return HYPONYM;
             } else if (2 == key.length() &amp;&amp; key.charAt(1) == INSTANCES_HYPONYM.getKey().charAt(1)) {
                 return INSTANCES_HYPONYM;
             } else {
                 return null;
             }
         }
         if (key.charAt(0) == ENTAILMENT.getKey().charAt(0)) {
             return ENTAILMENT;
         }
         if (key.charAt(0) == SIMILAR_TO.getKey().charAt(0)) {
             return SIMILAR_TO;
         }
         if (key.charAt(0) == CAUSE.getKey().charAt(0)) {
             return CAUSE;
         }
         if (key.charAt(0) == PARTICIPLE_OF.getKey().charAt(0)) {
             return PARTICIPLE_OF;
         }
         if (key.charAt(0) == SEE_ALSO.getKey().charAt(0)) {
             return SEE_ALSO;
         }
         if (key.charAt(0) == PERTAINYM.getKey().charAt(0)) {
             return PERTAINYM;
         }
         if (key.charAt(0) == ATTRIBUTE.getKey().charAt(0)) {
             return ATTRIBUTE;
         }
         if (key.charAt(0) == VERB_GROUP.getKey().charAt(0)) {
             return VERB_GROUP;
         }
         if (key.charAt(0) == DERIVATION.getKey().charAt(0)) {
             return DERIVATION;
         }
         if (key.charAt(0) == DOMAIN_ALL.getKey().charAt(0)) {
             if (1 == key.length()) {
                 return DOMAIN_ALL;
             } else if (2 == key.length()) {
                 if (key.charAt(1) == CATEGORY.getKey().charAt(1)) {
                     return CATEGORY;
                 }
                 if (key.charAt(1) == USAGE.getKey().charAt(1)) {
                     return USAGE;
                 }
                 if (key.charAt(1) == REGION.getKey().charAt(1)) {
                     return REGION;
                 }
             } else {
                 return null;
             }

         }
         if (key.charAt(0) == MEMBER_ALL.getKey().charAt(0)) {
             if (1 == key.length()) {
                 return MEMBER_ALL;
             } else if (2 == key.length()) {
                 if (key.charAt(1) == CATEGORY_MEMBER.getKey().charAt(1)) {
                     return CATEGORY_MEMBER;
                 }
                 if (key.charAt(1) == USAGE_MEMBER.getKey().charAt(1)) {
                     return USAGE_MEMBER;
                 }
                 if (key.charAt(1) == REGION_MEMBER.getKey().charAt(1)) {
                     return REGION_MEMBER;
                 }
             } else {
                 return null;
             }
         }
         if (key.charAt(0) == MEMBER_HOLONYM.getKey().charAt(0)) {
             if (2 == key.length()) {
                 if (key.charAt(1) == MEMBER_HOLONYM.getKey().charAt(1)) {
                     return MEMBER_HOLONYM;
                 }
                 if (key.charAt(1) == SUBSTANCE_HOLONYM.getKey().charAt(1)) {
                     return SUBSTANCE_HOLONYM;
                 }
                 if (key.charAt(1) == PART_HOLONYM.getKey().charAt(1)) {
                     return PART_HOLONYM;
                 }
             } else {
                 return null;
             }
         }
         if (key.charAt(0) == MEMBER_MERONYM.getKey().charAt(0)) {
             if (2 == key.length()) {
                 if (key.charAt(1) == MEMBER_MERONYM.getKey().charAt(1)) {
                     return MEMBER_MERONYM;
                 }
                 if (key.charAt(1) == SUBSTANCE_MERONYM.getKey().charAt(1)) {
                     return SUBSTANCE_MERONYM;
                 }
                 if (key.charAt(1) == PART_MERONYM.getKey().charAt(1)) {
                     return PART_MERONYM;
                 }
             } else {
                 return null;
             }
         }
         return null;
     }
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX3B0pFCEeuCTslxszDstQ" name="getAllPointerTypes" specification="_oOwecJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX3o4JFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sX3o4ZFCEeuCTslxszDstQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return ALL_TYPES;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX3o4pFCEeuCTslxszDstQ" name="getAllPointerTypesForPOS" specification="_rYQmAJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX4P8JFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
    <ownedParameter xmi:id="_sX4P8ZFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sX4P8pFCEeuCTslxszDstQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>List&lt;PointerType> types = new ArrayList&lt;>();
     for (PointerType pt : ALL_TYPES) {
         if (pt.appliesTo(pos)) {
             types.add(pt);
         }
     }
     return Collections.unmodifiableList(types);
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX43AJFCEeuCTslxszDstQ" name="PointerType" specification="_oO7dkJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX43AZFCEeuCTslxszDstQ" name="key">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sX43ApFCEeuCTslxszDstQ" name="label">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sX43A5FCEeuCTslxszDstQ" name="flags">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sX43BJFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>this.key = key;
     this.label = label;
     this.flags = flags;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX5eEJFCEeuCTslxszDstQ" name="toString" specification="_oO950JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX5eEZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return ResourceBundleSet.insertParams(&quot;[PointerType: [Label: {0}] [Key: {1}] Applies To: {2}]&quot;,
             new Object[]{getLabel(), getKey(), getFlagsAsString()});
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX6FIJFCEeuCTslxszDstQ" name="getKey" specification="_oO_H8JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX6FIZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return key;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX6FIpFCEeuCTslxszDstQ" name="getLabel" specification="_oO_vAZFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX6sMJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return label;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX6sMZFCEeuCTslxszDstQ" name="appliesTo" specification="_rYUQYJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX7TQJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
    <ownedParameter xmi:id="_sX7TQZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return (flags &amp; getPOSMask(pos)) != 0;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX7TQpFCEeuCTslxszDstQ" name="isSymmetric" specification="_oPBkMJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX76UJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return symmetricTo(this);
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX76UZFCEeuCTslxszDstQ" name="symmetricTo" specification="_rYVegJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX76UpFCEeuCTslxszDstQ" name="type" type="_oONE0JFCEeuCTslxszDstQ"/>
    <ownedParameter xmi:id="_sX8hYJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return getSymmetricType() != null &amp;&amp; getSymmetricType().equals(type);
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX8hYZFCEeuCTslxszDstQ" name="getFlags" specification="_oPDZYJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX8hYpFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return flags;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX8hY5FCEeuCTslxszDstQ" name="setSymmetric" specification="_rYX6wJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX8hZJFCEeuCTslxszDstQ" name="a" type="_oONE0JFCEeuCTslxszDstQ"/>
    <ownedParameter xmi:id="_sX8hZZFCEeuCTslxszDstQ" name="b" type="_oONE0JFCEeuCTslxszDstQ"/>
    <language>java</language>
    <body>a.symmetricType = b;
     b.symmetricType = a;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX9IcJFCEeuCTslxszDstQ" name="getPOSMask" specification="_rYZI4JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX9vgJFCEeuCTslxszDstQ" name="pos" type="_oLknkJFCEeuCTslxszDstQ"/>
    <ownedParameter xmi:id="_sX9vgZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return POS_TO_MASK_MAP.get(pos);
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sX-WkJFCEeuCTslxszDstQ" name="getFlagsAsString" specification="_oPI48JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sX-9oJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>if (flagStringCache == null) {
         String str = &quot;&quot;;
         if ((flags &amp; PointerTypeFlags.N) != 0) {
             str += &quot;noun&quot; + &quot;, &quot;;
         }
         if ((flags &amp; PointerTypeFlags.V) != 0) {
             str += &quot;verb&quot; + &quot;, &quot;;
         }
         if ((flags &amp; PointerTypeFlags.ADJ) != 0) {
             str += &quot;adjective&quot; + &quot;, &quot;;
         }
         if ((flags &amp; PointerTypeFlags.ADV) != 0) {
             str += &quot;adverb&quot; + &quot;, &quot;;
         }
         flagStringCache = str.substring(0, str.length() - 2);
     }
     return flagStringCache;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sZfZgJFCEeuCTslxszDstQ" name="getRootNode" specification="_sMGdwJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sZgAkJFCEeuCTslxszDstQ" type="_oVexgJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>return rootNode;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_saISsJFCEeuCTslxszDstQ" name="getCommonParentIndex" specification="_sMe4QJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_saISsZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return commonParentIndex;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_saMkIJFCEeuCTslxszDstQ" name="getType" specification="_sMqecJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_saNLMJFCEeuCTslxszDstQ" type="_oONE0JFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>return type;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_saNLMZFCEeuCTslxszDstQ" name="getTargetSynset" specification="_sMv-AJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_saNLMpFCEeuCTslxszDstQ" type="_rb_PcJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>return targetSynset;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sa-AOZFCEeuCTslxszDstQ" name="getConnection" specification="_sPX0MJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sa-AOpFCEeuCTslxszDstQ" type="_rnTHkJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>if (null != connection) {
         return connection;
     }
     if (userName == null) {
         connection = DriverManager.getConnection(url);
         connection.setReadOnly(true);
         return connection;
     } else {
         connection = DriverManager.getConnection(url, userName, (password != null) ? password : &quot;&quot;);
         connection.setReadOnly(true);
         return connection;
     }
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sbAccJFCEeuCTslxszDstQ" name="getStatement" specification="_sPlPkJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sbAccZFCEeuCTslxszDstQ" type="_rn2hMJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>if (statement == null) {
         statement = connection.prepareStatement(sql);
     }
     return statement;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sbBDj5FCEeuCTslxszDstQ" name="getFileType" specification="_sQCikJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sbBDkJFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>return fileType;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sbBDkZFCEeuCTslxszDstQ" name="getDictionary" specification="_sQRMEJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sbBDkpFCEeuCTslxszDstQ" type="_rVLc0JFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>return dictionary;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sbMCoJFCEeuCTslxszDstQ" name="getAllDictionaryFileTypes" specification="_omlvoJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sbMpsJFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sbMpsZFCEeuCTslxszDstQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return ALL_TYPES;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sbMpspFCEeuCTslxszDstQ" name="DictionaryFileType" specification="_rpA-0JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sbMps5FCEeuCTslxszDstQ" name="type">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_sbNQwJFCEeuCTslxszDstQ" name="elementType" type="_oGGRsJFCEeuCTslxszDstQ"/>
    <ownedParameter xmi:id="_sbNQwZFCEeuCTslxszDstQ" type="_omdz0JFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>this.name = type;
     this.elementType = elementType;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sbNQwpFCEeuCTslxszDstQ" name="getName" specification="_omr2QJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sbNQw5FCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return name;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sbNQxJFCEeuCTslxszDstQ" name="getElementType" specification="_omtrcJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sbN30JFCEeuCTslxszDstQ" type="_oGGRsJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>return elementType;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sbN30ZFCEeuCTslxszDstQ" name="toString" specification="_omuSgJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sbOe4JFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return ResourceBundleSet.insertParams(&quot;[DictionaryFile: {0}]&quot;, new String[]{getName()});
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_sdCcwJFCEeuCTslxszDstQ" name="getValue" specification="_sU6bgJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_sdCcwZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return value;
 </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_sg3M0JFCEeuCTslxszDstQ" base_Element="_sgzicJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sg8FUJFCEeuCTslxszDstQ" base_Element="_sg4a8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shCzAJFCEeuCTslxszDstQ" base_Element="_sg-hkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shGdYJFCEeuCTslxszDstQ" base_Element="_shDaEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shLV4JFCEeuCTslxszDstQ" base_Element="_shHEcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shPnUJFCEeuCTslxszDstQ" base_Element="_shMkAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shRcgJFCEeuCTslxszDstQ" base_Element="_shPnUZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shT4wJFCEeuCTslxszDstQ" base_Element="_shSDkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shWVAJFCEeuCTslxszDstQ" base_Element="_shUf0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shYKMJFCEeuCTslxszDstQ" base_Element="_shW8EJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shZ_YJFCEeuCTslxszDstQ" base_Element="_shYxQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shb0kJFCEeuCTslxszDstQ" base_Element="_shamcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sheQ0JFCEeuCTslxszDstQ" base_Element="_shcboJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shgGAJFCEeuCTslxszDstQ" base_Element="_sheQ0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shh7MJFCEeuCTslxszDstQ" base_Element="_shgGAZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shjJUJFCEeuCTslxszDstQ" base_Element="_shh7MZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shkXcJFCEeuCTslxszDstQ" base_Element="_shjJUZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shllkJFCEeuCTslxszDstQ" base_Element="_shkXcZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shnawJFCEeuCTslxszDstQ" base_Element="_shllkZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shpP8JFCEeuCTslxszDstQ" base_Element="_shnawZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shsTQJFCEeuCTslxszDstQ" base_Element="_shp3AJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shthYJFCEeuCTslxszDstQ" base_Element="_shs6UJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shuvgJFCEeuCTslxszDstQ" base_Element="_shuIcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shwksJFCEeuCTslxszDstQ" base_Element="_shvWkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_shyZ4JFCEeuCTslxszDstQ" base_Element="_shxLwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sh02IJFCEeuCTslxszDstQ" base_Element="_shzA8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sh2rUJFCEeuCTslxszDstQ" base_Element="_sh02IZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sh4ggJFCEeuCTslxszDstQ" base_Element="_sh3SYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sh68wJFCEeuCTslxszDstQ" base_Element="_sh5HkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sh8x8JFCEeuCTslxszDstQ" base_Element="_sh68wZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sh-nIJFCEeuCTslxszDstQ" base_Element="_sh8x8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siAcUJFCEeuCTslxszDstQ" base_Element="_sh-nIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siC4kJFCEeuCTslxszDstQ" base_Element="_siBDYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siEtwJFCEeuCTslxszDstQ" base_Element="_siC4kZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siGi8JFCEeuCTslxszDstQ" base_Element="_siEtwZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siHxEJFCEeuCTslxszDstQ" base_Element="_siGi8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siJmQJFCEeuCTslxszDstQ" base_Element="_siIYIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siLbcJFCEeuCTslxszDstQ" base_Element="_siKNUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siNQoJFCEeuCTslxszDstQ" base_Element="_siLbcZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siPF0JFCEeuCTslxszDstQ" base_Element="_siN3sJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siQT8JFCEeuCTslxszDstQ" base_Element="_siPF0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siSwMJFCEeuCTslxszDstQ" base_Element="_siQ7AJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siUlYJFCEeuCTslxszDstQ" base_Element="_siSwMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siXBoJFCEeuCTslxszDstQ" base_Element="_siUlYZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siY20JFCEeuCTslxszDstQ" base_Element="_siXBoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sibTEJFCEeuCTslxszDstQ" base_Element="_siZd4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sichMJFCEeuCTslxszDstQ" base_Element="_sibTEZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sieWYJFCEeuCTslxszDstQ" base_Element="_sidIQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sihZsJFCEeuCTslxszDstQ" base_Element="_sie9cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sijO4JFCEeuCTslxszDstQ" base_Element="_sihZsZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_silEEJFCEeuCTslxszDstQ" base_Element="_sij18JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_simSMJFCEeuCTslxszDstQ" base_Element="_silEEZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sioucJFCEeuCTslxszDstQ" base_Element="_simSMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siqjoJFCEeuCTslxszDstQ" base_Element="_sipVgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sis_4JFCEeuCTslxszDstQ" base_Element="_sirKsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siuOAJFCEeuCTslxszDstQ" base_Element="_sis_4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sivcIJFCEeuCTslxszDstQ" base_Element="_siuOAZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_siwqQJFCEeuCTslxszDstQ" base_Element="_sivcIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sizGgJFCEeuCTslxszDstQ" base_Element="_sixRUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_si07sJFCEeuCTslxszDstQ" base_Element="_sizGgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_si2w4JFCEeuCTslxszDstQ" base_Element="_si07sZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_si4mEJFCEeuCTslxszDstQ" base_Element="_si3X8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_si6bQJFCEeuCTslxszDstQ" base_Element="_si4mEZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_si83gJFCEeuCTslxszDstQ" base_Element="_si7CUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_si_60JFCEeuCTslxszDstQ" base_Element="_si9ekJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjBwAJFCEeuCTslxszDstQ" base_Element="_si_60ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjDlMJFCEeuCTslxszDstQ" base_Element="_sjCXEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjGogJFCEeuCTslxszDstQ" base_Element="_sjEMQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjIdsJFCEeuCTslxszDstQ" base_Element="_sjGogZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjKS4JFCEeuCTslxszDstQ" base_Element="_sjIdsZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjMIEJFCEeuCTslxszDstQ" base_Element="_sjKS4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjPLYJFCEeuCTslxszDstQ" base_Element="_sjMvIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjRAkJFCEeuCTslxszDstQ" base_Element="_sjPLYZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjTc0JFCEeuCTslxszDstQ" base_Element="_sjRAkZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjV5EJFCEeuCTslxszDstQ" base_Element="_sjTc0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjXuQJFCEeuCTslxszDstQ" base_Element="_sjWgIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjaKgJFCEeuCTslxszDstQ" base_Element="_sjYVUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjcmwJFCEeuCTslxszDstQ" base_Element="_sjaKgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjfDAJFCEeuCTslxszDstQ" base_Element="_sjcmwZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjiGUJFCEeuCTslxszDstQ" base_Element="_sjfDAZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjnl4JFCEeuCTslxszDstQ" base_Element="_sjitYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjqCIJFCEeuCTslxszDstQ" base_Element="_sjoM8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjuTkJFCEeuCTslxszDstQ" base_Element="_sjqpMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sjx98JFCEeuCTslxszDstQ" base_Element="_sjvhsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sj1BQJFCEeuCTslxszDstQ" base_Element="_sjylAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sj4EkJFCEeuCTslxszDstQ" base_Element="_sj1oUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sj7u8JFCEeuCTslxszDstQ" base_Element="_sj4roJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sj-LMJFCEeuCTslxszDstQ" base_Element="_sj7u8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_sj_ZUJFCEeuCTslxszDstQ" base_Element="_sj-LMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_skBOgJFCEeuCTslxszDstQ" base_Element="_sj_ZUZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_skDqwJFCEeuCTslxszDstQ" base_Element="_skBOgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_x_agMJFCEeuCTslxszDstQ" genericsValue="Param" base_Element="_x_YrAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yBEtEJFCEeuCTslxszDstQ" base_Element="_yBEGAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yBFUIJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yBF7MJFCEeuCTslxszDstQ" base_Element="_yBFUIZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yBF7MZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yBIXcZFCEeuCTslxszDstQ" base_Element="_yBHwYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yBKzsJFCEeuCTslxszDstQ" base_Element="_yBKMoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yBNP8JFCEeuCTslxszDstQ" base_Element="_yBMB0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yBNP8ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yCS1EJFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_yCRm8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yCWfcJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_yCUDMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yCY7sJFCEeuCTslxszDstQ" genericsValue="Exc" base_Element="_yCXGgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yCj60JFCEeuCTslxszDstQ" base_Element="_yCjTwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yClI8pFCEeuCTslxszDstQ" base_Element="_yCkh4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yKGtQJFCEeuCTslxszDstQ" base_Element="_yBEGAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yKHUUJFCEeuCTslxszDstQ" base_Element="_yBFUIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yKJJgJFCEeuCTslxszDstQ" base_Element="_yBMB0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yO5tsJFCEeuCTslxszDstQ" genericsValue="Param" base_Element="_yO34gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yPAbYJFCEeuCTslxszDstQ" genericsValue="Param" base_Element="_yO9_IpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yPEFwJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_yPBpgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yPHJEJFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_yPF68JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yPI-QJFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_yPIXMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPOd0JFCEeuCTslxszDstQ" base_Element="_yPN2wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPPE4JFCEeuCTslxszDstQ" base_Element="_yPN2wJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPPr8JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPQ6EJFCEeuCTslxszDstQ" base_Element="_yPPr8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPRhIJFCEeuCTslxszDstQ" base_Element="_yPPr8ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPRhIZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPTWUJFCEeuCTslxszDstQ" base_Element="_yPSIMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPT9YJFCEeuCTslxszDstQ" base_Element="_yPSIMJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPT9YZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPVykJFCEeuCTslxszDstQ" base_Element="_yPUkcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPVykZFCEeuCTslxszDstQ" base_Element="_yPUkcJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPWZoJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPXAsJFCEeuCTslxszDstQ" base_Element="_yPWZoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPXnwJFCEeuCTslxszDstQ" base_Element="_yPWZoZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPYO0JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPZc8JFCEeuCTslxszDstQ" base_Element="_yPY14JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPaEAJFCEeuCTslxszDstQ" base_Element="_yPY14JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yParEJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPbSIJFCEeuCTslxszDstQ" base_Element="_yParEZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yPcgQJFCEeuCTslxszDstQ" genericsValue="? extends K, ? extends V" base_Element="_yParEpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPcgQZFCEeuCTslxszDstQ" base_Element="_yParEZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPcgQpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPdHUJFCEeuCTslxszDstQ" base_Element="_yPcgQ5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPduYJFCEeuCTslxszDstQ" base_Element="_yPcgQ5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yPduYZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPe8gJFCEeuCTslxszDstQ" base_Element="_yPduYpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPe8gZFCEeuCTslxszDstQ" base_Element="_yPduYpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPfjkJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPgxsJFCEeuCTslxszDstQ" base_Element="_yPfjkZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPhYwJFCEeuCTslxszDstQ" base_Element="_yPfjkZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPhYwZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yPjN8JFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_yPhYwpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPjN8ZFCEeuCTslxszDstQ" base_Element="_yPhYwpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPkcEJFCEeuCTslxszDstQ" base_Element="_yPhYwpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPkcEZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPpUkJFCEeuCTslxszDstQ" base_Element="_yPotgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPpUlJFCEeuCTslxszDstQ" base_Element="_yPpUkpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPpUlZFCEeuCTslxszDstQ" base_Element="_yPpUkpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPpUlpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPpUmZFCEeuCTslxszDstQ" base_Element="_yPpUl5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPpUmpFCEeuCTslxszDstQ" base_Element="_yPpUl5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yPpUm5FCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPp7o5FCEeuCTslxszDstQ" base_Element="_yPp7oJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPp7pJFCEeuCTslxszDstQ" base_Element="_yPp7oJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPp7pZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPp7qZFCEeuCTslxszDstQ" base_Element="_yPp7ppFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPp7qpFCEeuCTslxszDstQ" base_Element="_yPp7ppFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPp7q5FCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPqis5FCEeuCTslxszDstQ" base_Element="_yPqisJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPqitJFCEeuCTslxszDstQ" base_Element="_yPqisJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPqitZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPqiuJFCEeuCTslxszDstQ" base_Element="_yPqitpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPqiuZFCEeuCTslxszDstQ" base_Element="_yPqitpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPqiupFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yPrJwJFCEeuCTslxszDstQ" base_Element="_yPqiu5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPrJwZFCEeuCTslxszDstQ" base_Element="_yPqiu5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPrJwpFCEeuCTslxszDstQ" base_Element="_yPqiu5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yPrJw5FCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_yPrJxpFCEeuCTslxszDstQ" typeParameterDeclarationValue="T" base_Operation="_yPrJxJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yPrJyZFCEeuCTslxszDstQ" base_Element="_yPrJxJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPrJypFCEeuCTslxszDstQ" base_Element="_yPrJxJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yPrw0JFCEeuCTslxszDstQ" base_Element="_yPrJxZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPrw0ZFCEeuCTslxszDstQ" base_Element="_yPrJxJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPrw0pFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPrw1pFCEeuCTslxszDstQ" base_Element="_yPrw05FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPrw15FCEeuCTslxszDstQ" base_Element="_yPrw05FCEeuCTslxszDstQ">
    <annotations xmi:id="_yPrw2JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPsX4pFCEeuCTslxszDstQ" base_Element="_yPrw2ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPsX45FCEeuCTslxszDstQ" base_Element="_yPrw2ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPsX5JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPsX6JFCEeuCTslxszDstQ" base_Element="_yPsX5ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPsX6ZFCEeuCTslxszDstQ" base_Element="_yPsX5ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPsX6pFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPs-85FCEeuCTslxszDstQ" base_Element="_yPs-8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPs-9JFCEeuCTslxszDstQ" base_Element="_yPs-8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPs-9ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPtmAJFCEeuCTslxszDstQ" base_Element="_yPs-9pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yPtmAZFCEeuCTslxszDstQ" genericsValue="? extends Pointer" base_Element="_yPs-95FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPtmApFCEeuCTslxszDstQ" base_Element="_yPs-9pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPtmA5FCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPuNEZFCEeuCTslxszDstQ" base_Element="_yPtmBJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yPuNEpFCEeuCTslxszDstQ" genericsValue="? extends Pointer" base_Element="_yPtmBpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPuNE5FCEeuCTslxszDstQ" base_Element="_yPtmBJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPuNFJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPu0I5FCEeuCTslxszDstQ" base_Element="_yPu0IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPu0JJFCEeuCTslxszDstQ" base_Element="_yPu0IJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPu0JZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPu0KZFCEeuCTslxszDstQ" base_Element="_yPu0JpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPvbMJFCEeuCTslxszDstQ" base_Element="_yPu0JpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPvbMZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPvbM5FCEeuCTslxszDstQ" base_Element="_yPvbMpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPvbNJFCEeuCTslxszDstQ" base_Element="_yPvbMpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPvbNZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPwCQJFCEeuCTslxszDstQ" base_Element="_yPvbNpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPwCQZFCEeuCTslxszDstQ" base_Element="_yPvbNpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPwCQpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yPwCRZFCEeuCTslxszDstQ" genericsValue="Pointer" base_Element="_yPwCQ5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPwpUJFCEeuCTslxszDstQ" base_Element="_yPwCQ5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPwpUZFCEeuCTslxszDstQ" base_Element="_yPwCQ5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yPwpUpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yPwpVZFCEeuCTslxszDstQ" genericsValue="Pointer" base_Element="_yPwpU5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPxQYJFCEeuCTslxszDstQ" base_Element="_yPwpU5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPxQYZFCEeuCTslxszDstQ" base_Element="_yPwpU5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yPxQYpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yPx3cJFCEeuCTslxszDstQ" genericsValue="Pointer" base_Element="_yPxQY5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPx3cZFCEeuCTslxszDstQ" base_Element="_yPxQY5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPx3cpFCEeuCTslxszDstQ" base_Element="_yPxQY5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yPx3c5FCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPyegpFCEeuCTslxszDstQ" base_Element="_yPx3dJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPyeg5FCEeuCTslxszDstQ" base_Element="_yPx3dJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPyehJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPzFkZFCEeuCTslxszDstQ" base_Element="_yPyehZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yPzFkpFCEeuCTslxszDstQ" genericsValue="?" base_Element="_yPyehpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPzFk5FCEeuCTslxszDstQ" base_Element="_yPyehZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yPzFlJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yPzsoZFCEeuCTslxszDstQ" base_Element="_yPzFlZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yPzsopFCEeuCTslxszDstQ" genericsValue="?" base_Element="_yPzFlpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yPzso5FCEeuCTslxszDstQ" base_Element="_yPzFlZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yP0TsJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP0TtJFCEeuCTslxszDstQ" base_Element="_yP0TsZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yP0TtZFCEeuCTslxszDstQ" genericsValue="?" base_Element="_yP0TspFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP06wJFCEeuCTslxszDstQ" base_Element="_yP0TsZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yP06wZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yP1h0pFCEeuCTslxszDstQ" genericsValue="Pointer" base_Element="_yP1h0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP2v8JFCEeuCTslxszDstQ" base_Element="_yP2I4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP3XAJFCEeuCTslxszDstQ" base_Element="_yP2v8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP3XAZFCEeuCTslxszDstQ" base_Element="_yP2v8pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yP3XApFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP3XBpFCEeuCTslxszDstQ" base_Element="_yP3XA5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP3XB5FCEeuCTslxszDstQ" base_Element="_yP3XA5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yP3XCJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP3-E5FCEeuCTslxszDstQ" base_Element="_yP3-EJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP3-FJFCEeuCTslxszDstQ" base_Element="_yP3-EJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yP3-FZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP3-GZFCEeuCTslxszDstQ" base_Element="_yP3-FpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yP4lIJFCEeuCTslxszDstQ" genericsValue="? extends Word" base_Element="_yP3-F5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP4lIZFCEeuCTslxszDstQ" base_Element="_yP3-FpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yP4lIpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP4lJ5FCEeuCTslxszDstQ" base_Element="_yP4lI5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yP5MMJFCEeuCTslxszDstQ" genericsValue="? extends Word" base_Element="_yP4lJZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP5MMZFCEeuCTslxszDstQ" base_Element="_yP4lI5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yP5MMpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP5MNpFCEeuCTslxszDstQ" base_Element="_yP5MM5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP5zQJFCEeuCTslxszDstQ" base_Element="_yP5MM5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yP5zQZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP5zRZFCEeuCTslxszDstQ" base_Element="_yP5zQpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP6aUJFCEeuCTslxszDstQ" base_Element="_yP5zQpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yP6aUZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP7ocJFCEeuCTslxszDstQ" base_Element="_yP7BYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP8PgJFCEeuCTslxszDstQ" base_Element="_yP7BYJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yP8PgZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yP9doJFCEeuCTslxszDstQ" base_Element="_yP8PgpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yP-EsJFCEeuCTslxszDstQ" base_Element="_yP8PgpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yP-EsZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yQC9MJFCEeuCTslxszDstQ" genericsValue="Word" base_Element="_yQBvEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQiscJFCEeuCTslxszDstQ" base_Element="_yQheUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yQjTgJFCEeuCTslxszDstQ" base_Element="_yQheUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yQj6kJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQlIsJFCEeuCTslxszDstQ" base_Element="_yQj6kZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yQlvwJFCEeuCTslxszDstQ" base_Element="_yQj6kZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yQlvwZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yQm94ZFCEeuCTslxszDstQ" base_Element="_yQmW0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yQnk8JFCEeuCTslxszDstQ" base_Element="_yQmW0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yQnk8ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yQwH0JFCEeuCTslxszDstQ" genericsValue="IndexWord" base_Element="_yQtrkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yQ88IJFCEeuCTslxszDstQ" genericsValue="String" base_Element="_yQ540pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yRB0oJFCEeuCTslxszDstQ" dimensions="1" base_Element="_yQ__cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yRDCwJFCEeuCTslxszDstQ" base_Element="_yRAmgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yRcEUJFCEeuCTslxszDstQ" genericsValue="PrincetonRandomAccessDictionaryFile" base_Element="_yRaPIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yRo4oJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_yRmcYpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yRsjAJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_yRqGw5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRuYMJFCEeuCTslxszDstQ" base_Element="_yRtKEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yRu_QJFCEeuCTslxszDstQ" base_Element="_yRtKEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yRvmUJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRw0cJFCEeuCTslxszDstQ" base_Element="_yRwNYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yRxbgJFCEeuCTslxszDstQ" base_Element="_yRwNYJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yRxbgZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yRypoJFCEeuCTslxszDstQ" base_Element="_yRyCkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yRypoZFCEeuCTslxszDstQ" base_Element="_yRyCkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yRzQsJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR0e0JFCEeuCTslxszDstQ" base_Element="_yRzQsZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yR0e0ZFCEeuCTslxszDstQ" base_Element="_yRzQsZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yR0e0pFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR1s8JFCEeuCTslxszDstQ" base_Element="_yR1F4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yR1s8ZFCEeuCTslxszDstQ" base_Element="_yR1F4JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yR2UAJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR3iIJFCEeuCTslxszDstQ" base_Element="_yR2UAZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yR3iIZFCEeuCTslxszDstQ" base_Element="_yR2UAZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yR3iIpFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR4JMJFCEeuCTslxszDstQ" base_Element="_yR3iI5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yR4wQJFCEeuCTslxszDstQ" base_Element="_yR3iI5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yR4wQZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR5XUJFCEeuCTslxszDstQ" base_Element="_yR4wQpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yR5-YJFCEeuCTslxszDstQ" base_Element="_yR4wQpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yR5-YZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR7MgJFCEeuCTslxszDstQ" base_Element="_yR6lcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yR7zkJFCEeuCTslxszDstQ" base_Element="_yR6lcJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yR7zkZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yR9BsJFCEeuCTslxszDstQ" base_Element="_yR8aoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yR9owJFCEeuCTslxszDstQ" base_Element="_yR8aoJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yR9owZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ySAsEJFCEeuCTslxszDstQ" genericsValue="Word" base_Element="_yR-P0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySChQJFCEeuCTslxszDstQ" base_Element="_ySBTIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ySDIUJFCEeuCTslxszDstQ" base_Element="_ySBTIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_ySDIUZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySEWcJFCEeuCTslxszDstQ" base_Element="_ySDIUpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ySEWcZFCEeuCTslxszDstQ" base_Element="_ySDIUpFCEeuCTslxszDstQ">
    <annotations xmi:id="_ySE9gJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ySMSQJFCEeuCTslxszDstQ" genericsValue="String" base_Element="_ySLEIpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_ySPVkJFCEeuCTslxszDstQ" genericsValue="String" base_Element="_ySNgYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySsokJFCEeuCTslxszDstQ" base_Element="_ySsBg5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yStPoJFCEeuCTslxszDstQ" base_Element="_ySsBg5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yStPoZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySt2sJFCEeuCTslxszDstQ" base_Element="_yStPopFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ySudwJFCEeuCTslxszDstQ" base_Element="_yStPopFCEeuCTslxszDstQ">
    <annotations xmi:id="_ySudwZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ySvE0JFCEeuCTslxszDstQ" base_Element="_ySudwpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_ySvr4JFCEeuCTslxszDstQ" base_Element="_ySudwpFCEeuCTslxszDstQ">
    <annotations xmi:id="_ySvr4ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ySxhEJFCEeuCTslxszDstQ" genericsValue="PrincetonResourceDictionaryFile" base_Element="_ySw6AJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yS1LcJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_ySzWQpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yS4OwJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_yS2ZkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yS6rAJFCEeuCTslxszDstQ" base_Element="_yS410JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yS7SEJFCEeuCTslxszDstQ" base_Element="_yS410JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yS7SEZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yS8gMJFCEeuCTslxszDstQ" base_Element="_yS75IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yS9HQJFCEeuCTslxszDstQ" base_Element="_yS75IJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yS9HQZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yS-VYZFCEeuCTslxszDstQ" base_Element="_yS9uUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yS-8cJFCEeuCTslxszDstQ" base_Element="_yS9uUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yS-8cZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yS_jgJFCEeuCTslxszDstQ" base_Element="_yS-8cpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTAKkJFCEeuCTslxszDstQ" base_Element="_yS-8cpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTAKkZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTBYsJFCEeuCTslxszDstQ" base_Element="_yTAxoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTB_wJFCEeuCTslxszDstQ" base_Element="_yTAxoJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTB_wZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTCm0JFCEeuCTslxszDstQ" base_Element="_yTB_wpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTDN4JFCEeuCTslxszDstQ" base_Element="_yTB_wpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTDN4ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTFqIJFCEeuCTslxszDstQ" base_Element="_yTD08JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTGRMJFCEeuCTslxszDstQ" base_Element="_yTD08JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTGRMZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTHfUJFCEeuCTslxszDstQ" base_Element="_yTGRMpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTIGYJFCEeuCTslxszDstQ" base_Element="_yTGRMpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTIGYZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTItcJFCEeuCTslxszDstQ" base_Element="_yTIGYpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTJUgJFCEeuCTslxszDstQ" base_Element="_yTIGYpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTJUgZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTKioJFCEeuCTslxszDstQ" base_Element="_yTJ7kJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTLJsJFCEeuCTslxszDstQ" base_Element="_yTJ7kJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTLJsZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTMX0ZFCEeuCTslxszDstQ" base_Element="_yTLwwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTM-4JFCEeuCTslxszDstQ" base_Element="_yTLwwJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTM-4ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTX-AJFCEeuCTslxszDstQ" base_Element="_yTXW8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTYlEJFCEeuCTslxszDstQ" base_Element="_yTXW8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTYlEZFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTZMIJFCEeuCTslxszDstQ" base_Element="_yTYlEpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTZMIZFCEeuCTslxszDstQ" base_Element="_yTYlEpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTZzMJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTaaQJFCEeuCTslxszDstQ" base_Element="_yTZzMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTaaQZFCEeuCTslxszDstQ" base_Element="_yTZzMZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTaaQpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTboYJFCEeuCTslxszDstQ" base_Element="_yTbBUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTcPcJFCEeuCTslxszDstQ" base_Element="_yTbBUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTcPcZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTc2gJFCEeuCTslxszDstQ" base_Element="_yTcPcpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTddkJFCEeuCTslxszDstQ" base_Element="_yTcPcpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTddkZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yTddkpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzVQcZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTersJFCEeuCTslxszDstQ" base_Element="_yTeEoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTfSwJFCEeuCTslxszDstQ" base_Element="_yTeEoJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTfSwZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yTfSwpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzVQcpFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTf50JFCEeuCTslxszDstQ" base_Element="_yTfSw5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTgg4JFCEeuCTslxszDstQ" base_Element="_yTfSw5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yTgg4ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yThH8JFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzVQc5FCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yThvAJFCEeuCTslxszDstQ" base_Element="_yThH8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTiWEJFCEeuCTslxszDstQ" base_Element="_yThH8ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTi9IJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yTi9IZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzV3gJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTjkMJFCEeuCTslxszDstQ" base_Element="_yTi9IpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTkLQJFCEeuCTslxszDstQ" base_Element="_yTi9IpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTkLQZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yTkyUJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzV3gZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTlZYJFCEeuCTslxszDstQ" base_Element="_yTkyUZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTlZYZFCEeuCTslxszDstQ" base_Element="_yTkyUZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTlZYpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yTmAcJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzV3gpFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTmngJFCEeuCTslxszDstQ" base_Element="_yTmAcZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTmngZFCEeuCTslxszDstQ" base_Element="_yTmAcZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTmngpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTn1oJFCEeuCTslxszDstQ" base_Element="_yTnOkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTocsJFCEeuCTslxszDstQ" base_Element="_yTnOkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTocsZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTpDwJFCEeuCTslxszDstQ" base_Element="_yTocspFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTpDwZFCEeuCTslxszDstQ" base_Element="_yTocspFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTpDwpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTvxcJFCEeuCTslxszDstQ" base_Element="_yTvKYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTvxcZFCEeuCTslxszDstQ" base_Element="_yTvKYJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTwYgJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yTwYgZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzV3hJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTw_kJFCEeuCTslxszDstQ" base_Element="_yTwYgpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTxmoJFCEeuCTslxszDstQ" base_Element="_yTwYgpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yTxmoZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yTxmopFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzWekJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTyNsJFCEeuCTslxszDstQ" base_Element="_yTxmo5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yTy0wJFCEeuCTslxszDstQ" base_Element="_yTxmo5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yTy0wZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yTy0wpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzWekZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yTzb0JFCEeuCTslxszDstQ" base_Element="_yTy0w5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT0C4JFCEeuCTslxszDstQ" base_Element="_yTy0w5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yT0C4ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yT0C4pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzWekpFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT1RAJFCEeuCTslxszDstQ" base_Element="_yT0p8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT1RAZFCEeuCTslxszDstQ" base_Element="_yT0p8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yT1RApFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT2fIJFCEeuCTslxszDstQ" base_Element="_yT14EJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT2fIZFCEeuCTslxszDstQ" base_Element="_yT14EJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yT2fIpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yT2fI5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzWek5FCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT3GMZFCEeuCTslxszDstQ" base_Element="_yT3GMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT3tQJFCEeuCTslxszDstQ" base_Element="_yT3GMJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yT3tQZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yT3tQpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzWelJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT4UUZFCEeuCTslxszDstQ" base_Element="_yT4UUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT47YJFCEeuCTslxszDstQ" base_Element="_yT4UUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yT47YZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yT47YpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzWelZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT5icJFCEeuCTslxszDstQ" base_Element="_yT47Y5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT5icZFCEeuCTslxszDstQ" base_Element="_yT47Y5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yT6JgJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yT6JgZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzXFoJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT6wkJFCEeuCTslxszDstQ" base_Element="_yT6JgpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT7XoJFCEeuCTslxszDstQ" base_Element="_yT6JgpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yT7XoZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT7-sJFCEeuCTslxszDstQ" base_Element="_yT7XopFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT8lwJFCEeuCTslxszDstQ" base_Element="_yT7XopFCEeuCTslxszDstQ">
    <annotations xmi:id="_yT8lwZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yT8lwpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzXFoZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT9M0JFCEeuCTslxszDstQ" base_Element="_yT8lw5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT9z4JFCEeuCTslxszDstQ" base_Element="_yT8lw5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yT9z4ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yT9z4pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzXFopFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yT_CAJFCEeuCTslxszDstQ" base_Element="_yT-a8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yT_pEJFCEeuCTslxszDstQ" base_Element="_yT-a8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yT_pEZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yT_pEpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzXFo5FCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUAQIJFCEeuCTslxszDstQ" base_Element="_yT_pE5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUBeQJFCEeuCTslxszDstQ" base_Element="_yT_pE5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yUBeQZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yUCFUJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzXFpJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUDTcJFCEeuCTslxszDstQ" base_Element="_yUCsYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUD6gJFCEeuCTslxszDstQ" base_Element="_yUCsYJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUD6gZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUEhkJFCEeuCTslxszDstQ" base_Element="_yUD6gpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUFIoJFCEeuCTslxszDstQ" base_Element="_yUD6gpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUFIoZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yUFIopFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzXssJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUFvsJFCEeuCTslxszDstQ" base_Element="_yUFIo5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUGWwJFCEeuCTslxszDstQ" base_Element="_yUFIo5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yUGWwZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yUGWwpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzXssZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUG90JFCEeuCTslxszDstQ" base_Element="_yUGWw5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUG90ZFCEeuCTslxszDstQ" base_Element="_yUGWw5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yUHk4JFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUIL8JFCEeuCTslxszDstQ" base_Element="_yUHk4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUIL8ZFCEeuCTslxszDstQ" base_Element="_yUHk4ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUIL8pFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUJaEJFCEeuCTslxszDstQ" base_Element="_yUIzAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUKBIJFCEeuCTslxszDstQ" base_Element="_yUIzAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUKBIZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yUKBIpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzXsspFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUKoMJFCEeuCTslxszDstQ" base_Element="_yUKBI5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yULPQJFCEeuCTslxszDstQ" base_Element="_yUKBI5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yULPQZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yUL2UJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzXss5FCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUMdYJFCEeuCTslxszDstQ" base_Element="_yUL2UZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUNEcJFCEeuCTslxszDstQ" base_Element="_yUL2UZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUNEcZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUOSkJFCEeuCTslxszDstQ" base_Element="_yUNrgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUO5oJFCEeuCTslxszDstQ" base_Element="_yUNrgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUO5oZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUPgsJFCEeuCTslxszDstQ" base_Element="_yUO5opFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUQHwJFCEeuCTslxszDstQ" base_Element="_yUO5opFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUQHwZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yURV4JFCEeuCTslxszDstQ" base_Element="_yUQHwpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yURV4ZFCEeuCTslxszDstQ" base_Element="_yUQHwpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUR88JFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUSkAJFCEeuCTslxszDstQ" base_Element="_yUR88ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUTLEJFCEeuCTslxszDstQ" base_Element="_yUR88ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUTLEZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUTyIJFCEeuCTslxszDstQ" base_Element="_yUTLEpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUUZMJFCEeuCTslxszDstQ" base_Element="_yUTLEpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUUZMZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yUVAQJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzYTwJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUVnUJFCEeuCTslxszDstQ" base_Element="_yUVAQZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUWOYJFCEeuCTslxszDstQ" base_Element="_yUVAQZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUWOYZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yUWOYpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzYTwZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUXcgJFCEeuCTslxszDstQ" base_Element="_yUWOY5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUXcgZFCEeuCTslxszDstQ" base_Element="_yUWOY5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yUYDkJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUYqoJFCEeuCTslxszDstQ" base_Element="_yUYDkZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUZRsJFCEeuCTslxszDstQ" base_Element="_yUYDkZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUZRsZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUZ4wJFCEeuCTslxszDstQ" base_Element="_yUZRspFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUaf0JFCEeuCTslxszDstQ" base_Element="_yUZRspFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUaf0ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUbG4JFCEeuCTslxszDstQ" base_Element="_yUaf0pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUbt8JFCEeuCTslxszDstQ" base_Element="_yUaf0pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUbt8ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUc8EJFCEeuCTslxszDstQ" base_Element="_yUbt8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUdjIJFCEeuCTslxszDstQ" base_Element="_yUbt8pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUdjIZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUexQJFCEeuCTslxszDstQ" base_Element="_yUdjIpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUexQZFCEeuCTslxszDstQ" base_Element="_yUdjIpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUfYUJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUf_YJFCEeuCTslxszDstQ" base_Element="_yUfYUZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUgmcJFCEeuCTslxszDstQ" base_Element="_yUfYUZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUgmcZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUh0kJFCEeuCTslxszDstQ" base_Element="_yUgmcpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUh0kZFCEeuCTslxszDstQ" base_Element="_yUgmcpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUh0kpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUjCsJFCEeuCTslxszDstQ" base_Element="_yUiboJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUjpwJFCEeuCTslxszDstQ" base_Element="_yUiboJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUjpwZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUkQ0JFCEeuCTslxszDstQ" base_Element="_yUjpwpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUk34JFCEeuCTslxszDstQ" base_Element="_yUjpwpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUk34ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUle8JFCEeuCTslxszDstQ" base_Element="_yUk34pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUle8ZFCEeuCTslxszDstQ" base_Element="_yUk34pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUle8pFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUmtEJFCEeuCTslxszDstQ" base_Element="_yUmGAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUmtEZFCEeuCTslxszDstQ" base_Element="_yUmGAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUmtEpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUnUIJFCEeuCTslxszDstQ" base_Element="_yUmtE5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUn7MJFCEeuCTslxszDstQ" base_Element="_yUmtE5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yUn7MZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUoiQJFCEeuCTslxszDstQ" base_Element="_yUn7MpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUpJUJFCEeuCTslxszDstQ" base_Element="_yUn7MpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUpJUZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUpwYJFCEeuCTslxszDstQ" base_Element="_yUpJUpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUqXcJFCEeuCTslxszDstQ" base_Element="_yUpJUpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUqXcZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUrlkJFCEeuCTslxszDstQ" base_Element="_yUq-gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUsMoJFCEeuCTslxszDstQ" base_Element="_yUq-gJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUsMoZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUszsJFCEeuCTslxszDstQ" base_Element="_yUsMopFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUtawJFCEeuCTslxszDstQ" base_Element="_yUsMopFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUtawZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUuo4JFCEeuCTslxszDstQ" base_Element="_yUuB0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUvP8JFCEeuCTslxszDstQ" base_Element="_yUuB0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUvP8ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yUv3AJFCEeuCTslxszDstQ" base_Element="_yUvP8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yUweEJFCEeuCTslxszDstQ" base_Element="_yUvP8pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yUweEZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU3y0JFCEeuCTslxszDstQ" base_Element="_yU3LwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yU3y0ZFCEeuCTslxszDstQ" base_Element="_yU3LwJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yU3y0pFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU4Z4JFCEeuCTslxszDstQ" base_Element="_yU3y05FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yU5A8JFCEeuCTslxszDstQ" base_Element="_yU3y05FCEeuCTslxszDstQ">
    <annotations xmi:id="_yU5A8ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU5oAJFCEeuCTslxszDstQ" base_Element="_yU5A8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yU6PEJFCEeuCTslxszDstQ" base_Element="_yU5A8pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yU6PEZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU7dMJFCEeuCTslxszDstQ" base_Element="_yU62IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yU7dMZFCEeuCTslxszDstQ" base_Element="_yU62IJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yU7dMpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU8rUJFCEeuCTslxszDstQ" base_Element="_yU8EQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yU9SYJFCEeuCTslxszDstQ" base_Element="_yU8EQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yU9SYZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yU_uoZFCEeuCTslxszDstQ" base_Element="_yU_uoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVAVsJFCEeuCTslxszDstQ" base_Element="_yU_uoJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVAVsZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVBj0ZFCEeuCTslxszDstQ" base_Element="_yVBj0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVCK4JFCEeuCTslxszDstQ" base_Element="_yVBj0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVCK4ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVDZAJFCEeuCTslxszDstQ" base_Element="_yVCK4pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVDZAZFCEeuCTslxszDstQ" base_Element="_yVCK4pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVDZApFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVEAEZFCEeuCTslxszDstQ" base_Element="_yVEAEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVEnIJFCEeuCTslxszDstQ" base_Element="_yVEAEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVEnIZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVGcUJFCEeuCTslxszDstQ" base_Element="_yVF1QZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVHDYJFCEeuCTslxszDstQ" base_Element="_yVF1QZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVHDYZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVHDYpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzZh4ZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVHqcJFCEeuCTslxszDstQ" base_Element="_yVHDY5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVIRgJFCEeuCTslxszDstQ" base_Element="_yVHDY5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVIRgZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVIRgpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzZh4pFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVJfoJFCEeuCTslxszDstQ" base_Element="_yVIRg5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVKGsJFCEeuCTslxszDstQ" base_Element="_yVIRg5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVKGsZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVKGspFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzaI8JFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVKtwJFCEeuCTslxszDstQ" base_Element="_yVKGs5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVLU0JFCEeuCTslxszDstQ" base_Element="_yVKGs5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVLU0ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVMi8JFCEeuCTslxszDstQ" base_Element="_yVL74JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVMi8ZFCEeuCTslxszDstQ" base_Element="_yVL74JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVMi8pFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVNKAJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzaI8ZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVNKApFCEeuCTslxszDstQ" base_Element="_yVNKAZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVNxEJFCEeuCTslxszDstQ" base_Element="_yVNKAZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVNxEZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVNxEpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzaI8pFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVOYIZFCEeuCTslxszDstQ" base_Element="_yVOYIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVO_MJFCEeuCTslxszDstQ" base_Element="_yVOYIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVO_MZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVO_MpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzaI85FCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVQNUJFCEeuCTslxszDstQ" base_Element="_yVO_M5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVQNUZFCEeuCTslxszDstQ" base_Element="_yVO_M5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVQNUpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVQNU5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzaI9JFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVQ0YJFCEeuCTslxszDstQ" base_Element="_yVQNVJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVQ0YZFCEeuCTslxszDstQ" base_Element="_yVQNVJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVQ0YpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVRbcJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzawAJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVSCgJFCEeuCTslxszDstQ" base_Element="_yVRbcZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVSCgZFCEeuCTslxszDstQ" base_Element="_yVRbcZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVSCgpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVSpkJFCEeuCTslxszDstQ" base_Element="_yVSCg5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVTQoJFCEeuCTslxszDstQ" base_Element="_yVSCg5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVTQoZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVT3sJFCEeuCTslxszDstQ" base_Element="_yVTQopFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVT3sZFCEeuCTslxszDstQ" base_Element="_yVTQopFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVT3spFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVUewJFCEeuCTslxszDstQ" base_Element="_yVT3s5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVVF0JFCEeuCTslxszDstQ" base_Element="_yVT3s5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVVF0ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVVs4JFCEeuCTslxszDstQ" base_Element="_yVVF0pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVVs4ZFCEeuCTslxszDstQ" base_Element="_yVVF0pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVVs4pFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVWT8JFCEeuCTslxszDstQ" base_Element="_yVVs45FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVWT8ZFCEeuCTslxszDstQ" base_Element="_yVVs45FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVWT8pFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVWT9JFCEeuCTslxszDstQ" base_Element="_yVWT85FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVWT9ZFCEeuCTslxszDstQ" base_Element="_yVWT85FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVWT9pFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVWT-JFCEeuCTslxszDstQ" base_Element="_yVWT95FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVWT-ZFCEeuCTslxszDstQ" base_Element="_yVWT95FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVWT-pFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVW7AJFCEeuCTslxszDstQ" base_Element="_yVWT-5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVW7AZFCEeuCTslxszDstQ" base_Element="_yVWT-5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVW7ApFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVW7BJFCEeuCTslxszDstQ" base_Element="_yVW7A5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVW7BZFCEeuCTslxszDstQ" base_Element="_yVW7A5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVW7BpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVW7CJFCEeuCTslxszDstQ" base_Element="_yVW7B5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVW7CZFCEeuCTslxszDstQ" base_Element="_yVW7B5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVW7CpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVXiEJFCEeuCTslxszDstQ" base_Element="_yVW7C5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVXiEZFCEeuCTslxszDstQ" base_Element="_yVW7C5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVXiEpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVXiFJFCEeuCTslxszDstQ" base_Element="_yVXiE5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVXiFZFCEeuCTslxszDstQ" base_Element="_yVXiE5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVXiFpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVXiGJFCEeuCTslxszDstQ" base_Element="_yVXiF5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVXiGZFCEeuCTslxszDstQ" base_Element="_yVXiF5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVXiGpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVXiHJFCEeuCTslxszDstQ" base_Element="_yVXiG5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVYJIJFCEeuCTslxszDstQ" base_Element="_yVXiG5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVYJIZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVYJI5FCEeuCTslxszDstQ" base_Element="_yVYJIpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVYJJJFCEeuCTslxszDstQ" base_Element="_yVYJIpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVYJJZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVYJJ5FCEeuCTslxszDstQ" base_Element="_yVYJJpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVYJKJFCEeuCTslxszDstQ" base_Element="_yVYJJpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVYJKZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVYJK5FCEeuCTslxszDstQ" base_Element="_yVYJKpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVYJLJFCEeuCTslxszDstQ" base_Element="_yVYJKpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVYJLZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVYwMJFCEeuCTslxszDstQ" base_Element="_yVYJLpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVYwMZFCEeuCTslxszDstQ" base_Element="_yVYJLpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVYwMpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVYwNJFCEeuCTslxszDstQ" base_Element="_yVYwM5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVYwNZFCEeuCTslxszDstQ" base_Element="_yVYwM5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVYwNpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVYwOJFCEeuCTslxszDstQ" base_Element="_yVYwN5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVZXQJFCEeuCTslxszDstQ" base_Element="_yVYwN5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVZXQZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVZXQ5FCEeuCTslxszDstQ" base_Element="_yVZXQpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVZXRJFCEeuCTslxszDstQ" base_Element="_yVZXQpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVZXRZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVZXR5FCEeuCTslxszDstQ" base_Element="_yVZXRpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVZXSJFCEeuCTslxszDstQ" base_Element="_yVZXRpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVZXSZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVZXS5FCEeuCTslxszDstQ" base_Element="_yVZXSpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVZ-UJFCEeuCTslxszDstQ" base_Element="_yVZXSpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVZ-UZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVZ-U5FCEeuCTslxszDstQ" base_Element="_yVZ-UpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVZ-VJFCEeuCTslxszDstQ" base_Element="_yVZ-UpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVZ-VZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVZ-V5FCEeuCTslxszDstQ" base_Element="_yVZ-VpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVZ-WJFCEeuCTslxszDstQ" base_Element="_yVZ-VpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVZ-WZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVZ-W5FCEeuCTslxszDstQ" base_Element="_yVZ-WpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVZ-XJFCEeuCTslxszDstQ" base_Element="_yVZ-WpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVZ-XZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVbMdJFCEeuCTslxszDstQ" base_Element="_yVbMc5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVbMdZFCEeuCTslxszDstQ" base_Element="_yVbMc5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVbMdpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVbzgZFCEeuCTslxszDstQ" base_Element="_yVbzgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVbzgpFCEeuCTslxszDstQ" base_Element="_yVbzgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVbzg5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVbzhZFCEeuCTslxszDstQ" base_Element="_yVbzhJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVbzhpFCEeuCTslxszDstQ" base_Element="_yVbzhJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVbzh5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVbziZFCEeuCTslxszDstQ" base_Element="_yVbziJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVbzipFCEeuCTslxszDstQ" base_Element="_yVbziJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVbzi5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVcakZFCEeuCTslxszDstQ" base_Element="_yVcakJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVcakpFCEeuCTslxszDstQ" base_Element="_yVcakJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVcak5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVcalZFCEeuCTslxszDstQ" base_Element="_yVcalJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVcalpFCEeuCTslxszDstQ" base_Element="_yVcalJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVcal5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVcamZFCEeuCTslxszDstQ" base_Element="_yVcamJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVcampFCEeuCTslxszDstQ" base_Element="_yVcamJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVcam5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVdBpZFCEeuCTslxszDstQ" base_Element="_yVdBpJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVdBppFCEeuCTslxszDstQ" base_Element="_yVdBpJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVdBp5FCEeuCTslxszDstQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVdosZFCEeuCTslxszDstQ" base_Element="_yVdosJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVdospFCEeuCTslxszDstQ" base_Element="_yVdosJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVdos5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVePxJFCEeuCTslxszDstQ" base_Element="_yVePw5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVe20JFCEeuCTslxszDstQ" base_Element="_yVePw5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVe20ZFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVe205FCEeuCTslxszDstQ" base_Element="_yVe20pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVe21JFCEeuCTslxszDstQ" base_Element="_yVe20pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVe21ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVe215FCEeuCTslxszDstQ" base_Element="_yVe21pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVe22JFCEeuCTslxszDstQ" base_Element="_yVe21pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVe22ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVe225FCEeuCTslxszDstQ" base_Element="_yVe22pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVfd4JFCEeuCTslxszDstQ" base_Element="_yVe22pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVfd4ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVfd4pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzb-IJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVfd5JFCEeuCTslxszDstQ" base_Element="_yVfd45FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVfd5ZFCEeuCTslxszDstQ" base_Element="_yVfd45FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVfd5pFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVfd55FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzb-IZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVfd6ZFCEeuCTslxszDstQ" base_Element="_yVfd6JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVfd6pFCEeuCTslxszDstQ" base_Element="_yVfd6JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVfd65FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVfd7ZFCEeuCTslxszDstQ" base_Element="_yVfd7JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVgE8JFCEeuCTslxszDstQ" base_Element="_yVfd7JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVgE8ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVgE85FCEeuCTslxszDstQ" base_Element="_yVgE8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVgE9JFCEeuCTslxszDstQ" base_Element="_yVgE8pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVgE9ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVgE9pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzb-IpFCEeuCTslxszDstQ" value="UnsupportedOperationException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVgE-JFCEeuCTslxszDstQ" base_Element="_yVgE95FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVgE-ZFCEeuCTslxszDstQ" base_Element="_yVgE95FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVgE-pFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVgE_JFCEeuCTslxszDstQ" base_Element="_yVgE-5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVgE_ZFCEeuCTslxszDstQ" base_Element="_yVgE-5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVgE_pFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVgsAJFCEeuCTslxszDstQ" base_Element="_yVgE_5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVgsAZFCEeuCTslxszDstQ" base_Element="_yVgE_5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVgsApFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVgsBJFCEeuCTslxszDstQ" base_Element="_yVgsA5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVgsBZFCEeuCTslxszDstQ" base_Element="_yVgsA5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVgsBpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVgsCJFCEeuCTslxszDstQ" base_Element="_yVgsB5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVgsCZFCEeuCTslxszDstQ" base_Element="_yVgsB5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVgsCpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVgsC5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzb-I5FCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVhTEJFCEeuCTslxszDstQ" base_Element="_yVgsDJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVhTEZFCEeuCTslxszDstQ" base_Element="_yVgsDJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVhTEpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVhTE5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzb-JJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVhTFZFCEeuCTslxszDstQ" base_Element="_yVhTFJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVhTFpFCEeuCTslxszDstQ" base_Element="_yVhTFJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVhTF5FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVhTGJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzb-JZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVhTGpFCEeuCTslxszDstQ" base_Element="_yVhTGZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVhTG5FCEeuCTslxszDstQ" base_Element="_yVhTGZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVhTHJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVhTHZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzclMJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVh6IJFCEeuCTslxszDstQ" base_Element="_yVhTHpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVh6IZFCEeuCTslxszDstQ" base_Element="_yVhTHpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVh6IpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVh6JJFCEeuCTslxszDstQ" base_Element="_yVh6I5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVh6JZFCEeuCTslxszDstQ" base_Element="_yVh6I5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVh6JpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVh6KJFCEeuCTslxszDstQ" base_Element="_yVh6J5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVh6KZFCEeuCTslxszDstQ" base_Element="_yVh6J5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVh6KpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVihMJFCEeuCTslxszDstQ" base_Element="_yVh6K5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVihMZFCEeuCTslxszDstQ" base_Element="_yVh6K5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVihMpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVihNJFCEeuCTslxszDstQ" base_Element="_yVihM5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVihNZFCEeuCTslxszDstQ" base_Element="_yVihM5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVihNpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVihOJFCEeuCTslxszDstQ" base_Element="_yVihN5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVihOZFCEeuCTslxszDstQ" base_Element="_yVihN5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVihOpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVihPJFCEeuCTslxszDstQ" base_Element="_yVihO5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVjIQJFCEeuCTslxszDstQ" base_Element="_yVihO5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVjIQZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVjIQ5FCEeuCTslxszDstQ" base_Element="_yVjIQpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVjIRJFCEeuCTslxszDstQ" base_Element="_yVjIQpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVjIRZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVjIR5FCEeuCTslxszDstQ" base_Element="_yVjIRpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVjISJFCEeuCTslxszDstQ" base_Element="_yVjIRpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVjISZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVjIS5FCEeuCTslxszDstQ" base_Element="_yVjISpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVjITJFCEeuCTslxszDstQ" base_Element="_yVjISpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVjITZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVjvUJFCEeuCTslxszDstQ" base_Element="_yVjITpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVjvUZFCEeuCTslxszDstQ" base_Element="_yVjITpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVjvUpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVjvVJFCEeuCTslxszDstQ" base_Element="_yVjvU5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVjvVZFCEeuCTslxszDstQ" base_Element="_yVjvU5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVjvVpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVjvWJFCEeuCTslxszDstQ" base_Element="_yVjvV5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVjvWZFCEeuCTslxszDstQ" base_Element="_yVjvV5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVjvWpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVkWYJFCEeuCTslxszDstQ" base_Element="_yVjvW5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVkWYZFCEeuCTslxszDstQ" base_Element="_yVjvW5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVkWYpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVkWZJFCEeuCTslxszDstQ" base_Element="_yVkWY5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVkWZZFCEeuCTslxszDstQ" base_Element="_yVkWY5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVkWZpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVkWaJFCEeuCTslxszDstQ" base_Element="_yVkWZ5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVkWaZFCEeuCTslxszDstQ" base_Element="_yVkWZ5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVkWapFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVkWbJFCEeuCTslxszDstQ" base_Element="_yVkWa5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVk9cJFCEeuCTslxszDstQ" base_Element="_yVkWa5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVk9cZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVk9c5FCEeuCTslxszDstQ" base_Element="_yVk9cpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVk9dJFCEeuCTslxszDstQ" base_Element="_yVk9cpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVk9dZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVk9d5FCEeuCTslxszDstQ" base_Element="_yVk9dpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVlkgJFCEeuCTslxszDstQ" base_Element="_yVk9dpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVlkgZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVlkg5FCEeuCTslxszDstQ" base_Element="_yVlkgpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVlkhJFCEeuCTslxszDstQ" base_Element="_yVlkgpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVlkhZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVlkhpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzdzUJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVlkiJFCEeuCTslxszDstQ" base_Element="_yVlkh5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVmLkJFCEeuCTslxszDstQ" base_Element="_yVlkh5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVmLkZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVmLk5FCEeuCTslxszDstQ" base_Element="_yVmLkpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVmLlJFCEeuCTslxszDstQ" base_Element="_yVmLkpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVmLlZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVmLlpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzdzUZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVmLmJFCEeuCTslxszDstQ" base_Element="_yVmLl5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVmLmZFCEeuCTslxszDstQ" base_Element="_yVmLl5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVmLmpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVmLm5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzeaYJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVmLnZFCEeuCTslxszDstQ" base_Element="_yVmLnJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVmyoJFCEeuCTslxszDstQ" base_Element="_yVmLnJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVmyoZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVmyopFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzeaYZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVmypJFCEeuCTslxszDstQ" base_Element="_yVmyo5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVmypZFCEeuCTslxszDstQ" base_Element="_yVmyo5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVmyppFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVmyqJFCEeuCTslxszDstQ" base_Element="_yVmyp5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVmyqZFCEeuCTslxszDstQ" base_Element="_yVmyp5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVmyqpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVnZsJFCEeuCTslxszDstQ" base_Element="_yVmyq5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVnZsZFCEeuCTslxszDstQ" base_Element="_yVmyq5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVnZspFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVnZtJFCEeuCTslxszDstQ" base_Element="_yVnZs5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVnZtZFCEeuCTslxszDstQ" base_Element="_yVnZs5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVnZtpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVnZuJFCEeuCTslxszDstQ" base_Element="_yVnZt5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVnZuZFCEeuCTslxszDstQ" base_Element="_yVnZt5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVnZupFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVoAwJFCEeuCTslxszDstQ" base_Element="_yVnZu5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVoAwZFCEeuCTslxszDstQ" base_Element="_yVnZu5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVoAwpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVoAxJFCEeuCTslxszDstQ" base_Element="_yVoAw5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVoAxZFCEeuCTslxszDstQ" base_Element="_yVoAw5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVoAxpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVoAx5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzfBcJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVoAyZFCEeuCTslxszDstQ" base_Element="_yVoAyJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVoAypFCEeuCTslxszDstQ" base_Element="_yVoAyJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVoAy5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVon0JFCEeuCTslxszDstQ" base_Element="_yVoAzJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVon0ZFCEeuCTslxszDstQ" base_Element="_yVoAzJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVon0pFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVon05FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzfogJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVon1ZFCEeuCTslxszDstQ" base_Element="_yVon1JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVon1pFCEeuCTslxszDstQ" base_Element="_yVon1JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVon15FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVon2JFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzfogZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVon2pFCEeuCTslxszDstQ" base_Element="_yVon2ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVon25FCEeuCTslxszDstQ" base_Element="_yVon2ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVon3JFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVpO4JFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzgPkJFCEeuCTslxszDstQ" value="UnsupportedOperationException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVpO4pFCEeuCTslxszDstQ" base_Element="_yVpO4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVpO45FCEeuCTslxszDstQ" base_Element="_yVpO4ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVpO5JFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVpO5ZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzgPkZFCEeuCTslxszDstQ" value="UnsupportedOperationException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVpO55FCEeuCTslxszDstQ" base_Element="_yVpO5pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVpO6JFCEeuCTslxszDstQ" base_Element="_yVpO5pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVpO6ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVpO6pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzgPkpFCEeuCTslxszDstQ" value="UnsupportedOperationException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVpO7JFCEeuCTslxszDstQ" base_Element="_yVpO65FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVp18JFCEeuCTslxszDstQ" base_Element="_yVpO65FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVp18ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVp18pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzgPk5FCEeuCTslxszDstQ" value="UnsupportedOperationException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVp19JFCEeuCTslxszDstQ" base_Element="_yVp185FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVp19ZFCEeuCTslxszDstQ" base_Element="_yVp185FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVp19pFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVp195FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzg2oJFCEeuCTslxszDstQ" value="UnsupportedOperationException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVp1-ZFCEeuCTslxszDstQ" base_Element="_yVp1-JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVp1-pFCEeuCTslxszDstQ" base_Element="_yVp1-JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVp1-5FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVp1_JFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzg2oZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVqdAJFCEeuCTslxszDstQ" base_Element="_yVp1_ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVqdAZFCEeuCTslxszDstQ" base_Element="_yVp1_ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVqdApFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVqdBJFCEeuCTslxszDstQ" base_Element="_yVqdA5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVqdBZFCEeuCTslxszDstQ" base_Element="_yVqdA5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVqdBpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVqdCJFCEeuCTslxszDstQ" base_Element="_yVqdB5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVqdCZFCEeuCTslxszDstQ" base_Element="_yVqdB5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVqdCpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVqdC5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzg2opFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVqdDZFCEeuCTslxszDstQ" base_Element="_yVqdDJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVrEEJFCEeuCTslxszDstQ" base_Element="_yVqdDJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVrEEZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVrEE5FCEeuCTslxszDstQ" base_Element="_yVrEEpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVrEFJFCEeuCTslxszDstQ" base_Element="_yVrEEpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVrEFZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVrEF5FCEeuCTslxszDstQ" base_Element="_yVrEFpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVrEGJFCEeuCTslxszDstQ" base_Element="_yVrEFpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVrEGZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVrEG5FCEeuCTslxszDstQ" base_Element="_yVrEGpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVrEHJFCEeuCTslxszDstQ" base_Element="_yVrEGpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVrrIJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVrrIZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzhdsJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVrrI5FCEeuCTslxszDstQ" base_Element="_yVrrIpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVrrJJFCEeuCTslxszDstQ" base_Element="_yVrrIpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVrrJZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVrrJ5FCEeuCTslxszDstQ" base_Element="_yVrrJpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVrrKJFCEeuCTslxszDstQ" base_Element="_yVrrJpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVrrKZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVrrK5FCEeuCTslxszDstQ" base_Element="_yVrrKpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVrrLJFCEeuCTslxszDstQ" base_Element="_yVrrKpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVsSMJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVsSMpFCEeuCTslxszDstQ" base_Element="_yVsSMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVsSM5FCEeuCTslxszDstQ" base_Element="_yVsSMZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVsSNJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVsSNpFCEeuCTslxszDstQ" base_Element="_yVsSNZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVsSN5FCEeuCTslxszDstQ" base_Element="_yVsSNZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVsSOJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVsSOpFCEeuCTslxszDstQ" base_Element="_yVsSOZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVsSO5FCEeuCTslxszDstQ" base_Element="_yVsSOZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVsSPJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVuHZZFCEeuCTslxszDstQ" base_Element="_yVuHZJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVuHZpFCEeuCTslxszDstQ" base_Element="_yVuHZJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVuHZ5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVuudpFCEeuCTslxszDstQ" base_Element="_yVuudZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVuud5FCEeuCTslxszDstQ" base_Element="_yVuudZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVuueJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVvVgJFCEeuCTslxszDstQ" base_Element="_yVuueZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVvVgZFCEeuCTslxszDstQ" base_Element="_yVuueZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVvVgpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVvVhJFCEeuCTslxszDstQ" base_Element="_yVvVg5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVvVhZFCEeuCTslxszDstQ" base_Element="_yVvVg5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVvVhpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVvViJFCEeuCTslxszDstQ" base_Element="_yVvVh5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVvViZFCEeuCTslxszDstQ" base_Element="_yVvVh5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVvVipFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVvVi5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yziEwZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVv8kJFCEeuCTslxszDstQ" base_Element="_yVvVjJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVv8kZFCEeuCTslxszDstQ" base_Element="_yVvVjJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVv8kpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVv8k5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yziEwpFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVwjoJFCEeuCTslxszDstQ" base_Element="_yVv8mZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVwjoZFCEeuCTslxszDstQ" base_Element="_yVv8mZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVwjopFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVwjpJFCEeuCTslxszDstQ" base_Element="_yVwjo5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVwjpZFCEeuCTslxszDstQ" base_Element="_yVwjo5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVwjppFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVwjp5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzir0JFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVwjqZFCEeuCTslxszDstQ" base_Element="_yVwjqJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVwjqpFCEeuCTslxszDstQ" base_Element="_yVwjqJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVwjq5FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVwjrJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzir0ZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVxKsJFCEeuCTslxszDstQ" base_Element="_yVwjrZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVxKsZFCEeuCTslxszDstQ" base_Element="_yVwjrZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVxKspFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVxKs5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzir0pFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVxKtZFCEeuCTslxszDstQ" base_Element="_yVxKtJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVxKtpFCEeuCTslxszDstQ" base_Element="_yVxKtJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVxKt5FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVxKuJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzjS4JFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVxKupFCEeuCTslxszDstQ" base_Element="_yVxKuZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVxKu5FCEeuCTslxszDstQ" base_Element="_yVxKuZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVxKvJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVxxwJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzjS4ZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVxxwpFCEeuCTslxszDstQ" base_Element="_yVxxwZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVxxw5FCEeuCTslxszDstQ" base_Element="_yVxxwZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVxxxJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVxxxZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzjS4pFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVxxx5FCEeuCTslxszDstQ" base_Element="_yVxxxpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVxxyJFCEeuCTslxszDstQ" base_Element="_yVxxxpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVxxyZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVxxypFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzjS45FCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVxxzJFCEeuCTslxszDstQ" base_Element="_yVxxy5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVxxzZFCEeuCTslxszDstQ" base_Element="_yVxxy5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVxxzpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVxxz5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzj58JFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVyY0ZFCEeuCTslxszDstQ" base_Element="_yVyY0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVyY0pFCEeuCTslxszDstQ" base_Element="_yVyY0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVyY05FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVyY1JFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzj58ZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVyY1pFCEeuCTslxszDstQ" base_Element="_yVyY1ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVyY15FCEeuCTslxszDstQ" base_Element="_yVyY1ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVyY2JFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVyY2ZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzj58pFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVyY25FCEeuCTslxszDstQ" base_Element="_yVyY2pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVyY3JFCEeuCTslxszDstQ" base_Element="_yVyY2pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVyY3ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVy_4JFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzj585FCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVy_4pFCEeuCTslxszDstQ" base_Element="_yVy_4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVy_45FCEeuCTslxszDstQ" base_Element="_yVy_4ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVy_5JFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVy_5ZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzj59JFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVy_55FCEeuCTslxszDstQ" base_Element="_yVy_5pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVy_6JFCEeuCTslxszDstQ" base_Element="_yVy_5pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVy_6ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVy_6pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzkhAJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVy_7JFCEeuCTslxszDstQ" base_Element="_yVy_65FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVy_7ZFCEeuCTslxszDstQ" base_Element="_yVy_65FCEeuCTslxszDstQ">
    <annotations xmi:id="_yVy_7pFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yVy_75FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzkhAZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVzm8ZFCEeuCTslxszDstQ" base_Element="_yVzm8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVzm8pFCEeuCTslxszDstQ" base_Element="_yVzm8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVzm85FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVzm9ZFCEeuCTslxszDstQ" base_Element="_yVzm9JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVzm9pFCEeuCTslxszDstQ" base_Element="_yVzm9JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVzm95FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVzm-ZFCEeuCTslxszDstQ" base_Element="_yVzm-JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yVzm-pFCEeuCTslxszDstQ" base_Element="_yVzm-JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yVzm-5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yVzm_ZFCEeuCTslxszDstQ" base_Element="_yVzm_JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV0OAJFCEeuCTslxszDstQ" base_Element="_yVzm_JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV0OAZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV01FJFCEeuCTslxszDstQ" base_Element="_yV01E5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV01FZFCEeuCTslxszDstQ" base_Element="_yV01E5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV01FpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV01GJFCEeuCTslxszDstQ" base_Element="_yV01F5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV01GZFCEeuCTslxszDstQ" base_Element="_yV01F5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV01GpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV01G5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzlIEJFCEeuCTslxszDstQ" value="UnsupportedOperationException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV1cJJFCEeuCTslxszDstQ" base_Element="_yV1cI5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV1cJZFCEeuCTslxszDstQ" base_Element="_yV1cI5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV1cJpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV1cKJFCEeuCTslxszDstQ" base_Element="_yV1cJ5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV1cKZFCEeuCTslxszDstQ" base_Element="_yV1cJ5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV1cKpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV1cLJFCEeuCTslxszDstQ" base_Element="_yV1cK5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV2DMJFCEeuCTslxszDstQ" base_Element="_yV1cK5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV2DMZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV2DN5FCEeuCTslxszDstQ" base_Element="_yV2DNpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV2DOJFCEeuCTslxszDstQ" base_Element="_yV2DNpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV2DOZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV2DO5FCEeuCTslxszDstQ" base_Element="_yV2DOpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV2qQJFCEeuCTslxszDstQ" base_Element="_yV2DOpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV2qQZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV2qQ5FCEeuCTslxszDstQ" base_Element="_yV2qQpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV2qRJFCEeuCTslxszDstQ" base_Element="_yV2qQpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV2qRZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV3RUJFCEeuCTslxszDstQ" base_Element="_yV2qS5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV3RUZFCEeuCTslxszDstQ" base_Element="_yV2qS5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV3RUpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV3RVJFCEeuCTslxszDstQ" base_Element="_yV3RU5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV3RVZFCEeuCTslxszDstQ" base_Element="_yV3RU5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV3RVpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV3RWJFCEeuCTslxszDstQ" base_Element="_yV3RV5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV3RWZFCEeuCTslxszDstQ" base_Element="_yV3RV5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV3RWpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV3RXJFCEeuCTslxszDstQ" base_Element="_yV3RW5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV34YJFCEeuCTslxszDstQ" base_Element="_yV3RW5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV34YZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV34aJFCEeuCTslxszDstQ" base_Element="_yV34Z5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV34aZFCEeuCTslxszDstQ" base_Element="_yV34Z5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV34apFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV4fcJFCEeuCTslxszDstQ" base_Element="_yV34a5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV4fcZFCEeuCTslxszDstQ" base_Element="_yV34a5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV4fcpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV4fdJFCEeuCTslxszDstQ" base_Element="_yV4fc5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV4fdZFCEeuCTslxszDstQ" base_Element="_yV4fc5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV4fdpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV5GgZFCEeuCTslxszDstQ" base_Element="_yV5GgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV5GgpFCEeuCTslxszDstQ" base_Element="_yV5GgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV5Gg5FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV5GhJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzmWMJFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV5GhpFCEeuCTslxszDstQ" base_Element="_yV5GhZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV5Gh5FCEeuCTslxszDstQ" base_Element="_yV5GhZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV5GiJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV5GiZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzmWMZFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV5Gi5FCEeuCTslxszDstQ" base_Element="_yV5GipFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV5tkJFCEeuCTslxszDstQ" base_Element="_yV5GipFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV5tkZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV5tkpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzmWMpFCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV5tlJFCEeuCTslxszDstQ" base_Element="_yV5tk5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV5tlZFCEeuCTslxszDstQ" base_Element="_yV5tk5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV5tlpFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV5tl5FCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzmWM5FCEeuCTslxszDstQ" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV5tmZFCEeuCTslxszDstQ" base_Element="_yV5tmJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV5tmpFCEeuCTslxszDstQ" base_Element="_yV5tmJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV5tm5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV5tnZFCEeuCTslxszDstQ" base_Element="_yV5tnJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV6UoJFCEeuCTslxszDstQ" base_Element="_yV5tnJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV6UoZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yV6Up5FCEeuCTslxszDstQ" base_Element="_yV6Uo5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yV67spFCEeuCTslxszDstQ" base_Element="_yV67sJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yV7iwJFCEeuCTslxszDstQ" base_Element="_yV67s5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV7iwZFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV7iw5FCEeuCTslxszDstQ" base_Element="_yV7iwpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV7ixJFCEeuCTslxszDstQ" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV7ixpFCEeuCTslxszDstQ" base_Element="_yV7ixZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV7ix5FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV7iyJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzm9QJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV7iypFCEeuCTslxszDstQ" base_Element="_yV7iyZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV7iy5FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV7izJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yznkUJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV8J0JFCEeuCTslxszDstQ" base_Element="_yV7izZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV8J0ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV8J0pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yznkUZFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV8J1JFCEeuCTslxszDstQ" base_Element="_yV8J05FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV8J1ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV8J15FCEeuCTslxszDstQ" base_Element="_yV8J1pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV8J2JFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV8J2pFCEeuCTslxszDstQ" base_Element="_yV8J2ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV8J25FCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV8J3JFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yznkUpFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV8w4JFCEeuCTslxszDstQ" base_Element="_yV8J3ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV8w4ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV8w4pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yznkU5FCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV8w5JFCEeuCTslxszDstQ" base_Element="_yV8w45FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV8w5ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV8w5pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzoLYJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV8w6JFCEeuCTslxszDstQ" base_Element="_yV8w55FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV8w6ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV8w6pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzoLYZFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV8w7JFCEeuCTslxszDstQ" base_Element="_yV8w65FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV8w7ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV8w7pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzoLYpFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV9X8JFCEeuCTslxszDstQ" base_Element="_yV8w75FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV9X8ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV9X8pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzoLY5FCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV9X9JFCEeuCTslxszDstQ" base_Element="_yV9X85FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV9X9ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV9X95FCEeuCTslxszDstQ" base_Element="_yV9X9pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV9X-JFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV9X-pFCEeuCTslxszDstQ" base_Element="_yV9X-ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV9X-5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV9_AJFCEeuCTslxszDstQ" base_Element="_yV9X_JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV9_AZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV9_ApFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzoycJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV9_BJFCEeuCTslxszDstQ" base_Element="_yV9_A5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV9_BZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV9_B5FCEeuCTslxszDstQ" base_Element="_yV9_BpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV9_CJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV9_CZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzoycZFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV9_C5FCEeuCTslxszDstQ" base_Element="_yV9_CpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV9_DJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV9_DZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzoycpFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV-mEJFCEeuCTslxszDstQ" base_Element="_yV9_DpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV-mEZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV-mEpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzpZgJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV-mFJFCEeuCTslxszDstQ" base_Element="_yV-mE5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV-mFZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV-mFpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzpZgZFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV-mGJFCEeuCTslxszDstQ" base_Element="_yV-mF5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV-mGZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yV-mGpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzpZgpFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV-mHJFCEeuCTslxszDstQ" base_Element="_yV-mG5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yV-mHZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV_NIJFCEeuCTslxszDstQ" base_Element="_yV-mHpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV_NIZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV_NI5FCEeuCTslxszDstQ" base_Element="_yV_NIpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV_NJJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV_NJpFCEeuCTslxszDstQ" base_Element="_yV_NJZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV_NJ5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV_0MJFCEeuCTslxszDstQ" base_Element="_yV_NKJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV_0MZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV_0M5FCEeuCTslxszDstQ" base_Element="_yV_0MpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV_0NJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yV_0NpFCEeuCTslxszDstQ" base_Element="_yV_0NZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yV_0N5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yV_0OZFCEeuCTslxszDstQ" base_Element="_yV_0OJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yV_0PJFCEeuCTslxszDstQ" base_Element="_yV_0OpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yWAbQpFCEeuCTslxszDstQ" base_Element="_yWAbQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yWAbRZFCEeuCTslxszDstQ" base_Element="_yWAbQ5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWAbR5FCEeuCTslxszDstQ" base_Element="_yWAbRpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWAbSJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWBCUJFCEeuCTslxszDstQ" base_Element="_yWAbSZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWBCUZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWBCU5FCEeuCTslxszDstQ" base_Element="_yWBCUpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWBCVJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWBCVpFCEeuCTslxszDstQ" base_Element="_yWBCVZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWBCV5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yWBpYpFCEeuCTslxszDstQ" base_Element="_yWBpYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yWBpZZFCEeuCTslxszDstQ" base_Element="_yWBpY5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yWBpaJFCEeuCTslxszDstQ" base_Element="_yWBpZpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yWBpa5FCEeuCTslxszDstQ" base_Element="_yWBpaZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWCQcJFCEeuCTslxszDstQ" base_Element="_yWBpbJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWCQcZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWCQc5FCEeuCTslxszDstQ" base_Element="_yWCQcpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWCQdJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yWCQd5FCEeuCTslxszDstQ" base_Element="_yWCQdZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yWCQepFCEeuCTslxszDstQ" base_Element="_yWCQeJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWC3gJFCEeuCTslxszDstQ" base_Element="_yWCQe5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWC3gZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWC3g5FCEeuCTslxszDstQ" base_Element="_yWC3gpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWC3hJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWC3hpFCEeuCTslxszDstQ" base_Element="_yWC3hZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWC3h5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWC3iZFCEeuCTslxszDstQ" base_Element="_yWC3iJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWC3ipFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWDekJFCEeuCTslxszDstQ" base_Element="_yWC3i5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWDekZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yWDelJFCEeuCTslxszDstQ" base_Element="_yWDekpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yWDel5FCEeuCTslxszDstQ" base_Element="_yWDelZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWDemZFCEeuCTslxszDstQ" base_Element="_yWDemJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWDempFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWDenJFCEeuCTslxszDstQ" base_Element="_yWDem5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWDenZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yWEFoZFCEeuCTslxszDstQ" base_Element="_yWDenpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yWEFpJFCEeuCTslxszDstQ" base_Element="_yWEFopFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yWEFp5FCEeuCTslxszDstQ" base_Element="_yWEFpZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWEFqZFCEeuCTslxszDstQ" base_Element="_yWEFqJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWEFqpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWEFrJFCEeuCTslxszDstQ" base_Element="_yWEFq5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWEssJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWEsspFCEeuCTslxszDstQ" base_Element="_yWEssZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWEss5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWEstZFCEeuCTslxszDstQ" base_Element="_yWEstJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWEstpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWEst5FCEeuCTslxszDstQ" base_Element="_yV6Uo5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWEsuJFCEeuCTslxszDstQ" name="Ignore"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWHwBJFCEeuCTslxszDstQ" base_Element="_yWHwAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWI-IZFCEeuCTslxszDstQ" base_Element="_yWI-IJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWI-IpFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yWJlMJFCEeuCTslxszDstQ" base_Element="_yWI-J5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWJlMpFCEeuCTslxszDstQ" base_Element="_yWJlMZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWJlM5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWJlNZFCEeuCTslxszDstQ" base_Element="_yWJlNJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWJlNpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWJlOJFCEeuCTslxszDstQ" base_Element="_yWJlN5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWJlOZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWJlO5FCEeuCTslxszDstQ" base_Element="_yWJlOpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWJlPJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWKMQJFCEeuCTslxszDstQ" base_Element="_yWJlPZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWKMQZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWKMQ5FCEeuCTslxszDstQ" base_Element="_yWKMQpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWKMRJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWKMRpFCEeuCTslxszDstQ" base_Element="_yWKMRZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWKMR5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWKMSZFCEeuCTslxszDstQ" base_Element="_yWKMSJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWKMSpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWKMTJFCEeuCTslxszDstQ" base_Element="_yWKMS5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWKMTZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yWKzU5FCEeuCTslxszDstQ" base_Element="_yWKzUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWKzVZFCEeuCTslxszDstQ" base_Element="_yWKzVJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWKzVpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWKzWJFCEeuCTslxszDstQ" base_Element="_yWKzV5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWKzWZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWLaYJFCEeuCTslxszDstQ" base_Element="_yWKzWpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWLaYZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWLaY5FCEeuCTslxszDstQ" base_Element="_yWLaYpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWLaZJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWLaZpFCEeuCTslxszDstQ" base_Element="_yWLaZZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWLaZ5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWLaaZFCEeuCTslxszDstQ" base_Element="_yWLaaJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWLaapFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWMBcJFCEeuCTslxszDstQ" base_Element="_yWLaa5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWMBcZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWMBc5FCEeuCTslxszDstQ" base_Element="_yWMBcpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWMBdJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWMBdpFCEeuCTslxszDstQ" base_Element="_yWMBdZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWMBd5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWMBeZFCEeuCTslxszDstQ" base_Element="_yWMBeJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWMBepFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWMogJFCEeuCTslxszDstQ" base_Element="_yWMBe5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWMogZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWMog5FCEeuCTslxszDstQ" base_Element="_yWMogpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWMohJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWMohpFCEeuCTslxszDstQ" base_Element="_yWMohZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWMoh5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWMoiZFCEeuCTslxszDstQ" base_Element="_yWMoiJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWMoipFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWMojJFCEeuCTslxszDstQ" base_Element="_yWMoi5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWMojZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWNPkJFCEeuCTslxszDstQ" base_Element="_yWMojpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWNPkZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWNPk5FCEeuCTslxszDstQ" base_Element="_yWNPkpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWNPlJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWNPlpFCEeuCTslxszDstQ" base_Element="_yWNPlZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWNPl5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWNPmZFCEeuCTslxszDstQ" base_Element="_yWNPmJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWNPmpFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWNPnJFCEeuCTslxszDstQ" base_Element="_yWNPm5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWNPnZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWN2oJFCEeuCTslxszDstQ" base_Element="_yWNPnpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWN2oZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yWN2o5FCEeuCTslxszDstQ" base_Element="_yWN2opFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWN2pJFCEeuCTslxszDstQ" base_Element="_yWHwAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWN2pZFCEeuCTslxszDstQ" name="Ignore"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWTWM5FCEeuCTslxszDstQ" base_Element="_yWSvIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWTWNZFCEeuCTslxszDstQ" base_Element="_yWTWNJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWTWNpFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWTWOJFCEeuCTslxszDstQ" base_Element="_yWTWN5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWT9QJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWT9QpFCEeuCTslxszDstQ" base_Element="_yWT9QZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWT9Q5FCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yWT9RJFCEeuCTslxszDstQ" base_Element="_yWSvIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWT9RZFCEeuCTslxszDstQ" name="Ignore"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWUkVJFCEeuCTslxszDstQ" base_Element="_yWUkU5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWUkVZFCEeuCTslxszDstQ" base_Element="_yWUkU5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWUkVpFCEeuCTslxszDstQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWVLZJFCEeuCTslxszDstQ" base_Element="_yWVLY5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWVLZZFCEeuCTslxszDstQ" base_Element="_yWVLY5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWVLZpFCEeuCTslxszDstQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWVLbJFCEeuCTslxszDstQ" base_Element="_yWVLa5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWVycJFCEeuCTslxszDstQ" base_Element="_yWVLa5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWVycZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWVyc5FCEeuCTslxszDstQ" base_Element="_yWVycpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWVydJFCEeuCTslxszDstQ" base_Element="_yWVycpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWVydZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWXAkpFCEeuCTslxszDstQ" base_Element="_yWXAkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWXAk5FCEeuCTslxszDstQ" base_Element="_yWXAkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWXAlJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWXnoJFCEeuCTslxszDstQ" base_Element="_yWXAlZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWXnoZFCEeuCTslxszDstQ" base_Element="_yWXAlZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWXnopFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWY1xpFCEeuCTslxszDstQ" base_Element="_yWY1xJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWY1x5FCEeuCTslxszDstQ" base_Element="_yWY1xJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWY1yJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWZc1pFCEeuCTslxszDstQ" base_Element="_yWZc1JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWZc15FCEeuCTslxszDstQ" base_Element="_yWZc1JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWaD4JFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWaD55FCEeuCTslxszDstQ" base_Element="_yWaD5ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWaD6JFCEeuCTslxszDstQ" base_Element="_yWaD5ZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWaD6ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWaq9ZFCEeuCTslxszDstQ" base_Element="_yWaq9JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWaq9pFCEeuCTslxszDstQ" base_Element="_yWaq9JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWaq95FCEeuCTslxszDstQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWaq-ZFCEeuCTslxszDstQ" base_Element="_yWaq-JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWbSAJFCEeuCTslxszDstQ" base_Element="_yWaq-JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWbSAZFCEeuCTslxszDstQ" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWbSB5FCEeuCTslxszDstQ" base_Element="_yWbSBpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWb5EJFCEeuCTslxszDstQ" base_Element="_yWbSBpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWb5EZFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWb5E5FCEeuCTslxszDstQ" base_Element="_yWb5EpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWb5FJFCEeuCTslxszDstQ" base_Element="_yWb5EpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWb5FZFCEeuCTslxszDstQ" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWb5F5FCEeuCTslxszDstQ" base_Element="_yWb5FpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWb5GJFCEeuCTslxszDstQ" base_Element="_yWb5FpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWb5GZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWcgJZFCEeuCTslxszDstQ" base_Element="_yWcgJJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWcgJpFCEeuCTslxszDstQ" base_Element="_yWcgJJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWcgJ5FCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWcgKZFCEeuCTslxszDstQ" base_Element="_yWcgKJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWcgKpFCEeuCTslxszDstQ" base_Element="_yWcgKJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWdHMJFCEeuCTslxszDstQ" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWdHMpFCEeuCTslxszDstQ" base_Element="_yWdHMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWdHM5FCEeuCTslxszDstQ" base_Element="_yWdHMZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWdHNJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWduQJFCEeuCTslxszDstQ" base_Element="_yWdHOZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWduQZFCEeuCTslxszDstQ" base_Element="_yWdHOZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWduQpFCEeuCTslxszDstQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWduRJFCEeuCTslxszDstQ" base_Element="_yWduQ5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWduRZFCEeuCTslxszDstQ" base_Element="_yWduQ5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWduRpFCEeuCTslxszDstQ" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWeVUZFCEeuCTslxszDstQ" base_Element="_yWeVUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWeVUpFCEeuCTslxszDstQ" base_Element="_yWeVUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWeVU5FCEeuCTslxszDstQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWeVVZFCEeuCTslxszDstQ" base_Element="_yWeVVJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWeVVpFCEeuCTslxszDstQ" base_Element="_yWeVVJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWeVV5FCEeuCTslxszDstQ" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yWmRIJFCEeuCTslxszDstQ" genericsValue="String" base_Element="_yWkb8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWm4MJFCEeuCTslxszDstQ" base_Element="_yWmRIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWnfQJFCEeuCTslxszDstQ" base_Element="_yWmRIZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yWnfQZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWvbEJFCEeuCTslxszDstQ" base_Element="_yWu0A5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yWwCIJFCEeuCTslxszDstQ" base_Element="_yWu0A5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yWwCIZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yW5MEJFCEeuCTslxszDstQ" genericsValue="String" base_Element="_yW398pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yW5zIZFCEeuCTslxszDstQ" base_Element="_yW5zIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yW6aMJFCEeuCTslxszDstQ" base_Element="_yW5zIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yW6aMZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yW-EkJFCEeuCTslxszDstQ" base_Element="_yW82cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yW_SsJFCEeuCTslxszDstQ" dimensions="2" base_Element="_yW-roJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yW_5wJFCEeuCTslxszDstQ" base_Element="_yW-roJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yW_5wZFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXBu8JFCEeuCTslxszDstQ" base_Element="_yXAg0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXBu8ZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yXBu8pFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yXBu85FCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzwuQZFCEeuCTslxszDstQ" value="&quot;testFormatOffset&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXC9EJFCEeuCTslxszDstQ" base_Element="_yXCWAJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXC9EZFCEeuCTslxszDstQ" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yXELMJFCEeuCTslxszDstQ" base_Element="_yXDkIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yXFZUJFCEeuCTslxszDstQ" base_Element="_yXEyQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXFZUZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXGncJFCEeuCTslxszDstQ" base_Element="_yXGAYJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXGncZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yXGncpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzxVUJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yXH1kJFCEeuCTslxszDstQ" dimensions="2" base_Element="_yXHOgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yXH1kZFCEeuCTslxszDstQ" base_Element="_yXHOgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXH1kpFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXKR0JFCEeuCTslxszDstQ" base_Element="_yXIcoJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXKR0ZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yXKR0pFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yXKR05FCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzxVUZFCEeuCTslxszDstQ" value="&quot;testReadLine&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yXMHAJFCEeuCTslxszDstQ" dimensions="2" base_Element="_yXK44JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yXMuEJFCEeuCTslxszDstQ" base_Element="_yXK44JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXNVIJFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXPKUpFCEeuCTslxszDstQ" base_Element="_yXNVIZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXPKU5FCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yXPxYJFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yXPxYZFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzxVUpFCEeuCTslxszDstQ" value="&quot;testReadLineUTF&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXQ_gJFCEeuCTslxszDstQ" base_Element="_yXQYcJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXQ_gZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXS0sJFCEeuCTslxszDstQ" base_Element="_yXRmkJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXS0sZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yXS0spFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzx8YJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yXUp4JFCEeuCTslxszDstQ" dimensions="2" base_Element="_yXTbwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yXVQ8JFCEeuCTslxszDstQ" base_Element="_yXTbwJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXVQ8ZFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXaJcJFCEeuCTslxszDstQ" base_Element="_yXV4AJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXawgJFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yXawgZFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yXawgpFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzx8YZFCEeuCTslxszDstQ" value="&quot;testReadWord&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yXclsJFCEeuCTslxszDstQ" dimensions="2" base_Element="_yXb-oJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yXdMwJFCEeuCTslxszDstQ" base_Element="_yXb-oJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXdz0JFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXg3IJFCEeuCTslxszDstQ" base_Element="_yXea4JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXg3IZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yXg3IpFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yXheMJFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzyjcJFCEeuCTslxszDstQ" value="&quot;testReadWordUTF&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXjTYJFCEeuCTslxszDstQ" base_Element="_yXiFQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXj6cJFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yXj6cZFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzyjcZFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXlvoJFCEeuCTslxszDstQ" base_Element="_yXkhgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXlvoZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXnk0JFCEeuCTslxszDstQ" base_Element="_yXmWsJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXnk0ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXoy8JFCEeuCTslxszDstQ" base_Element="_yXoL4JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXoy8ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yXoy8pFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzzKgJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yXr2QJFCEeuCTslxszDstQ" dimensions="2" base_Element="_yXqoIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yXtEYJFCEeuCTslxszDstQ" base_Element="_yXqoIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXtEYZFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXvgoJFCEeuCTslxszDstQ" base_Element="_yXtrcJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXvgoZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yXvgopFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yXwHsJFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzzKgZFCEeuCTslxszDstQ" value="&quot;testGetNextLineOffset&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yXxV0JFCEeuCTslxszDstQ" base_Element="_yW82cJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yXxV0ZFCEeuCTslxszDstQ" name="RunWith">
      <annotationParameters xmi:id="_yXxV0pFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzwuQJFCEeuCTslxszDstQ" value="DataProviderRunner.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yX_YQ5FCEeuCTslxszDstQ" base_Element="_yX-xMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yYBNcJFCEeuCTslxszDstQ" base_Element="_yYAmYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yYEQwJFCEeuCTslxszDstQ" genericsValue="String, Param" base_Element="_yYCbkpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yYFe4JFCEeuCTslxszDstQ" base_Element="_yYEQwZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yYFe4ZFCEeuCTslxszDstQ" base_Element="_yYEQwZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYFe4pFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_yYGtApFCEeuCTslxszDstQ" base_Element="_yYGF8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yYH7IJFCEeuCTslxszDstQ" base_Element="_yYHUEJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYH7IZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYJJQJFCEeuCTslxszDstQ" base_Element="_yYIiMJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYJJQZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yYJJQpFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzzxkJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yYKXYJFCEeuCTslxszDstQ" dimensions="2" base_Element="_yYJwUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yYK-cJFCEeuCTslxszDstQ" base_Element="_yYJwUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYK-cZFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYOBwJFCEeuCTslxszDstQ" base_Element="_yYLlgJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYOBwZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yYOBwpFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yYOo0JFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzzxkZFCEeuCTslxszDstQ" value="&quot;testReadLine&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yYP28ZFCEeuCTslxszDstQ" dimensions="2" base_Element="_yYPP4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yYQeAJFCEeuCTslxszDstQ" base_Element="_yYPP4JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYRFEJFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYThUJFCEeuCTslxszDstQ" base_Element="_yYRsIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYThUZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yYUIYJFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yYUIYZFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz0YoJFCEeuCTslxszDstQ" value="&quot;testReadLineUTF&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYVWgJFCEeuCTslxszDstQ" base_Element="_yYUvcJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYV9kJFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYXLsJFCEeuCTslxszDstQ" base_Element="_yYWkoJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYXLsZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yYXLspFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz0YoZFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yYYZ0pFCEeuCTslxszDstQ" dimensions="2" base_Element="_yYXywJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yYZA4JFCEeuCTslxszDstQ" base_Element="_yYXywJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYZA4ZFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYbdIpFCEeuCTslxszDstQ" base_Element="_yYZn8JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYbdI5FCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yYcEMJFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yYcEMZFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz0YopFCEeuCTslxszDstQ" value="&quot;testReadWord&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yYdSUJFCEeuCTslxszDstQ" dimensions="2" base_Element="_yYcrQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yYdSUZFCEeuCTslxszDstQ" base_Element="_yYcrQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYd5YJFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYfukJFCEeuCTslxszDstQ" base_Element="_yYd5YZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYfukZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yYfukpFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yYfuk5FCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz0_sJFCEeuCTslxszDstQ" value="&quot;testReadWordUTF&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYg8sJFCEeuCTslxszDstQ" base_Element="_yYgVoJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYg8sZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yYg8spFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz0_sZFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYhjwJFCEeuCTslxszDstQ" base_Element="_yYg8s5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yYhjwZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYix4JFCEeuCTslxszDstQ" base_Element="_yYiK0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYix4ZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYjY8JFCEeuCTslxszDstQ" base_Element="_yYix4pFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYjY8ZFCEeuCTslxszDstQ" name="Test">
      <annotationParameters xmi:id="_yYkAAJFCEeuCTslxszDstQ" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz1mwJFCEeuCTslxszDstQ" value="JWNLException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yYknEZFCEeuCTslxszDstQ" dimensions="2" base_Element="_yYkAAZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yYlOIJFCEeuCTslxszDstQ" base_Element="_yYkAAZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYlOIZFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYoRcJFCEeuCTslxszDstQ" base_Element="_yYmcQJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYoRcZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yYoRcpFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yYoRc5FCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz1mwZFCEeuCTslxszDstQ" value="&quot;testGetNextLineOffset&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yYpfkJFCEeuCTslxszDstQ" base_Element="_yX-xMJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yYqGoJFCEeuCTslxszDstQ" name="RunWith">
      <annotationParameters xmi:id="_yYqGoZFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzzKgpFCEeuCTslxszDstQ" value="DataProviderRunner.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yY7MYJFCEeuCTslxszDstQ" base_Element="_yY6lUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yY7MYZFCEeuCTslxszDstQ" base_Element="_yY6lUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yY7zcJFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yY8agJFCEeuCTslxszDstQ" base_Element="_yY7zcZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yY9BkJFCEeuCTslxszDstQ" base_Element="_yY7zcZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yY9BkZFCEeuCTslxszDstQ" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yY-2wJFCEeuCTslxszDstQ" base_Element="_yY-Ps5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yY_d0JFCEeuCTslxszDstQ" base_Element="_yY-Ps5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yY_d0ZFCEeuCTslxszDstQ" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yZAr8JFCEeuCTslxszDstQ" base_Element="_yZAE4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yZAr8ZFCEeuCTslxszDstQ" base_Element="_yZAE4JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yZBTAJFCEeuCTslxszDstQ" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yZDvQJFCEeuCTslxszDstQ" base_Element="_yZChIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yZFkcJFCEeuCTslxszDstQ" base_Element="_yZEWUJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yZFkcZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yZGykJFCEeuCTslxszDstQ" base_Element="_yZFkcpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yZGykZFCEeuCTslxszDstQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yZIAsJFCEeuCTslxszDstQ" dimensions="2" base_Element="_yZGykpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yZIAsZFCEeuCTslxszDstQ" base_Element="_yZGykpFCEeuCTslxszDstQ">
    <annotations xmi:id="_yZIAspFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yZKc8pFCEeuCTslxszDstQ" base_Element="_yZInwJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yZLEAJFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yZLEAZFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yZLEApFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz2N0JFCEeuCTslxszDstQ" value="&quot;testSubsequence&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yZMSIJFCEeuCTslxszDstQ" dimensions="2" base_Element="_yZLEA5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yZMSIZFCEeuCTslxszDstQ" base_Element="_yZLEA5FCEeuCTslxszDstQ">
    <annotations xmi:id="_yZMSIpFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yZOHUJFCEeuCTslxszDstQ" base_Element="_yZM5MJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yZOHUZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yZOHUpFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yZOHU5FCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz2N0ZFCEeuCTslxszDstQ" value="&quot;testCompareTo&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yZOuYpFCEeuCTslxszDstQ" dimensions="2" base_Element="_yZOHVJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yZPVcJFCEeuCTslxszDstQ" base_Element="_yZOHVJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yZPVcZFCEeuCTslxszDstQ" name="DataProvider"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yZRKoJFCEeuCTslxszDstQ" base_Element="_yZP8gJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yZRKoZFCEeuCTslxszDstQ" name="Test"/>
    <annotations xmi:id="_yZRKopFCEeuCTslxszDstQ" name="UseDataProvider">
      <annotationParameters xmi:id="_yZRKo5FCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz2N0pFCEeuCTslxszDstQ" value="&quot;testIndexOf&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yZRxsJFCEeuCTslxszDstQ" base_Element="_yZChIJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yZRxsZFCEeuCTslxszDstQ" name="RunWith">
      <annotationParameters xmi:id="_yZRxspFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yz1mwpFCEeuCTslxszDstQ" value="DataProviderRunner.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yogggZFCEeuCTslxszDstQ" base_Element="_yogggJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yokK4JFCEeuCTslxszDstQ" base_Element="_yojj0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yokK4pFCEeuCTslxszDstQ" base_Element="_yokK4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yokK5JFCEeuCTslxszDstQ" base_Element="_yokK45FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yokx8JFCEeuCTslxszDstQ" base_Element="_yokK5ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yokx8pFCEeuCTslxszDstQ" base_Element="_yokx8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yokx9JFCEeuCTslxszDstQ" base_Element="_yokx85FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yolZAJFCEeuCTslxszDstQ" base_Element="_yokx9ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yolZApFCEeuCTslxszDstQ" base_Element="_yolZAZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yopqcJFCEeuCTslxszDstQ" base_Element="_yopDYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yopqcpFCEeuCTslxszDstQ" base_Element="_yopqcZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yostwZFCEeuCTslxszDstQ" base_Element="_yostwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yotU0JFCEeuCTslxszDstQ" base_Element="_yostwpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yotU0pFCEeuCTslxszDstQ" base_Element="_yotU0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yotU1JFCEeuCTslxszDstQ" base_Element="_yotU05FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yot74ZFCEeuCTslxszDstQ" base_Element="_yot74JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_youi8JFCEeuCTslxszDstQ" base_Element="_yot74pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_youi8pFCEeuCTslxszDstQ" base_Element="_youi8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yowYIZFCEeuCTslxszDstQ" base_Element="_yowYIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yowYI5FCEeuCTslxszDstQ" base_Element="_yowYIpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yo0CgZFCEeuCTslxszDstQ" base_Element="_yo0CgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yo3F0JFCEeuCTslxszDstQ" base_Element="_yo2ewJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yo3F0pFCEeuCTslxszDstQ" base_Element="_yo3F0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yo3F1JFCEeuCTslxszDstQ" base_Element="_yo3F05FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yo3s5ZFCEeuCTslxszDstQ" base_Element="_yo3s4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yo6JIJFCEeuCTslxszDstQ" base_Element="_yo5iEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yo7-UJFCEeuCTslxszDstQ" base_Element="_yo6wMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypBd4JFCEeuCTslxszDstQ" base_Element="_ypAPwZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypD6IJFCEeuCTslxszDstQ" base_Element="_ypCsAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypFvUJFCEeuCTslxszDstQ" base_Element="_ypEhMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypXcIJFCEeuCTslxszDstQ" base_Element="_ypWOAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypYqQJFCEeuCTslxszDstQ" base_Element="_ypXcIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypafcJFCEeuCTslxszDstQ" base_Element="_ypZRUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypcUoJFCEeuCTslxszDstQ" base_Element="_ypafcZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypdiwJFCEeuCTslxszDstQ" base_Element="_ypcUoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypfX8JFCEeuCTslxszDstQ" base_Element="_ypdiwZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ypgmEJFCEeuCTslxszDstQ" base_Element="_ypfX8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yph0MJFCEeuCTslxszDstQ" base_Element="_ypgmEZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yqgEkJFCEeuCTslxszDstQ" base_Element="_yqe2cJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yqkWAJFCEeuCTslxszDstQ" base_Element="_yqig0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yqk9EJFCEeuCTslxszDstQ" base_Element="_yqig0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yqlkIJFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yqpOgJFCEeuCTslxszDstQ" base_Element="_yqoAYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yq00sJFCEeuCTslxszDstQ" base_Element="_yqy_gJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Annotations xmi:id="_yq1bwJFCEeuCTslxszDstQ" base_Element="_yqy_gJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yq1bwZFCEeuCTslxszDstQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_yq1bwpFCEeuCTslxszDstQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_yzNUopFCEeuCTslxszDstQ" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_yrOdUJFCEeuCTslxszDstQ" base_Element="_yrMoIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_yr7A4JFCEeuCTslxszDstQ" base_Element="_yr5ywJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ysAgcJFCEeuCTslxszDstQ" base_Element="_yr_SUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ysEx4JFCEeuCTslxszDstQ" base_Element="_ysEK0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ysGAAJFCEeuCTslxszDstQ" base_Element="_ysFY8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ysH1MJFCEeuCTslxszDstQ" base_Element="_ysGnEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_ysK4gJFCEeuCTslxszDstQ" base_Element="_ysKRcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytKXAJFCEeuCTslxszDstQ" base_Element="_ytJv8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytMMMJFCEeuCTslxszDstQ" base_Element="_ytK-EJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ytMzQJFCEeuCTslxszDstQ" name="getName" method="_ywZ4QJFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_ytNaUJFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_ytPPgJFCEeuCTslxszDstQ" genericsValue="K, V" base_Element="_ytOocJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytP2kJFCEeuCTslxszDstQ" base_Element="_ytOocJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytUIAJFCEeuCTslxszDstQ" base_Element="_ytS54ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytVWIJFCEeuCTslxszDstQ" base_Element="_ytUvEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytV9MZFCEeuCTslxszDstQ" base_Element="_ytV9MJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ytWkQJFCEeuCTslxszDstQ" name="getWords" method="_ywf-4JFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_ytWkQZFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ytWkQpFCEeuCTslxszDstQ" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytXyYJFCEeuCTslxszDstQ" base_Element="_ytXLUJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ytYZcJFCEeuCTslxszDstQ" name="getGloss" method="_ywgl8JFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_ytZnkJFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_ytYZcZFCEeuCTslxszDstQ" name="setGloss" method="_ywgl8pFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_ytZAgJFCEeuCTslxszDstQ" name="gloss">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytcq4JFCEeuCTslxszDstQ" base_Element="_ytbcwZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytnC8JFCEeuCTslxszDstQ" base_Element="_ytmb4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytqGQJFCEeuCTslxszDstQ" base_Element="_ytpfMZFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ytqtUJFCEeuCTslxszDstQ" name="getMessages" method="_yw5ngJFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_ytqtUZFCEeuCTslxszDstQ" type="_oxlesJFCEeuCTslxszDstQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yttJkpFCEeuCTslxszDstQ" base_Element="_yttJkJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ytu-wJFCEeuCTslxszDstQ" base_Element="_ytuXsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yt26kJFCEeuCTslxszDstQ" base_Element="_yt2TgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yt4IsJFCEeuCTslxszDstQ" base_Element="_yt26kZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yt4vwJFCEeuCTslxszDstQ" base_Element="_yt4IsZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yt594ZFCEeuCTslxszDstQ" base_Element="_yt594JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yt6k8JFCEeuCTslxszDstQ" base_Element="_yt594pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yt7MA5FCEeuCTslxszDstQ" base_Element="_yt7MAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yt_dcJFCEeuCTslxszDstQ" genericsValue="Word" base_Element="_yt9oQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yuArkZFCEeuCTslxszDstQ" base_Element="_yuAEgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuBSoJFCEeuCTslxszDstQ" base_Element="_yuAEgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuDH0JFCEeuCTslxszDstQ" base_Element="_yuCgwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuEV8JFCEeuCTslxszDstQ" base_Element="_yuDu4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuE9AJFCEeuCTslxszDstQ" base_Element="_yuEV8ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuFkEJFCEeuCTslxszDstQ" base_Element="_yuE9AZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuLDoZFCEeuCTslxszDstQ" base_Element="_yuKckpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuM40JFCEeuCTslxszDstQ" base_Element="_yuLqspFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuM41ZFCEeuCTslxszDstQ" base_Element="_yuM405FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuNf4JFCEeuCTslxszDstQ" base_Element="_yuM42JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuNf5ZFCEeuCTslxszDstQ" base_Element="_yuNf45FCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuNf6pFCEeuCTslxszDstQ" base_Element="_yuNf6JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuOG9JFCEeuCTslxszDstQ" base_Element="_yuOG8pFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuOuApFCEeuCTslxszDstQ" base_Element="_yuOuAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yuP8JpFCEeuCTslxszDstQ" base_Element="_yuP8JJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuQjMJFCEeuCTslxszDstQ" base_Element="_yuP8JJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yuQjM5FCEeuCTslxszDstQ" base_Element="_yuQjMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuQjNZFCEeuCTslxszDstQ" base_Element="_yuQjMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yuRKQZFCEeuCTslxszDstQ" base_Element="_yuQjNpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuSYYJFCEeuCTslxszDstQ" base_Element="_yuQjNpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Generics xmi:id="_yuUNkJFCEeuCTslxszDstQ" genericsValue="Synset" base_Element="_yuSYYZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuU0oJFCEeuCTslxszDstQ" base_Element="_yuSYYZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuVbsJFCEeuCTslxszDstQ" base_Element="_yuU0oZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuWp0JFCEeuCTslxszDstQ" base_Element="_yuWCwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuXQ4JFCEeuCTslxszDstQ" base_Element="_yuWp0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuYfAJFCEeuCTslxszDstQ" base_Element="_yuX38JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuZtIJFCEeuCTslxszDstQ" base_Element="_yuZGEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuaUMJFCEeuCTslxszDstQ" base_Element="_yuZtIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yua7QpFCEeuCTslxszDstQ" base_Element="_yua7QJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yubiUJFCEeuCTslxszDstQ" base_Element="_yua7QJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yucJYZFCEeuCTslxszDstQ" base_Element="_yucJYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yucwcpFCEeuCTslxszDstQ" base_Element="_yucwcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yudXgJFCEeuCTslxszDstQ" base_Element="_yucwcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yud-kZFCEeuCTslxszDstQ" base_Element="_yud-kJFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_yueloJFCEeuCTslxszDstQ" name="getOffsetLength" method="_yxLUUJFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_yufMsJFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_yueloZFCEeuCTslxszDstQ" name="setOffsetLength" method="_yxL7YZFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_yuelopFCEeuCTslxszDstQ" name="length">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_yufzwJFCEeuCTslxszDstQ" base_Element="_yueloJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yufzwZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_yuga0JFCEeuCTslxszDstQ" base_Element="_yueloZFCEeuCTslxszDstQ">
    <annotations xmi:id="_yuga0ZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuho8JFCEeuCTslxszDstQ" base_Element="_yuhB4JFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_yui3EJFCEeuCTslxszDstQ" name="getFirstLineOffset" method="_yxL7Y5FCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_yui3EZFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_yujeIJFCEeuCTslxszDstQ" base_Element="_yui3EJFCEeuCTslxszDstQ">
    <annotations xmi:id="_yujeIZFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yuo9sJFCEeuCTslxszDstQ" dimensions="1" base_Element="_yuoWoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yupkwJFCEeuCTslxszDstQ" base_Element="_yuoWoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yupkwpFCEeuCTslxszDstQ" base_Element="_yupkwZFCEeuCTslxszDstQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_yuqL0JFCEeuCTslxszDstQ" name="getFirstLineOffset" method="_yxYvspFCEeuCTslxszDstQ" raisedException="_oB2q4JFCEeuCTslxszDstQ">
      <ownedParameter xmi:id="_yuqy4JFCEeuCTslxszDstQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_yuqy4ZFCEeuCTslxszDstQ" base_Element="_yuqL0JFCEeuCTslxszDstQ">
    <annotations xmi:id="_yuqy4pFCEeuCTslxszDstQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yurZ8ZFCEeuCTslxszDstQ" base_Element="_yurZ8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yuudQJFCEeuCTslxszDstQ" base_Element="_yut2MJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu1K8JFCEeuCTslxszDstQ" base_Element="_yuz80JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu2ZEJFCEeuCTslxszDstQ" base_Element="_yu1yAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu3nMJFCEeuCTslxszDstQ" base_Element="_yu3AIJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu41UJFCEeuCTslxszDstQ" base_Element="_yu4OQJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu9t0JFCEeuCTslxszDstQ" base_Element="_yu9GwJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yu-U4ZFCEeuCTslxszDstQ" base_Element="_yu9t0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yvD0cJFCEeuCTslxszDstQ" dimensions="1" base_Element="_yvDNYpFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yvEbgpFCEeuCTslxszDstQ" dimensions="1" base_Element="_yvEbgJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yvGQsJFCEeuCTslxszDstQ" base_Element="_yvFCkZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yvHe0JFCEeuCTslxszDstQ" base_Element="_yvG3wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yverMJFCEeuCTslxszDstQ" base_Element="_yveEIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yvmnAZFCEeuCTslxszDstQ" dimensions="1" base_Element="_yvl_8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvnOEJFCEeuCTslxszDstQ" base_Element="_yvl_8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvocMJFCEeuCTslxszDstQ" base_Element="_yvn1IJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvpDQJFCEeuCTslxszDstQ" base_Element="_yvocMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:StyledElement xmi:id="_yvq4cJFCEeuCTslxszDstQ" base_Element="_yvqRYJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvtUsJFCEeuCTslxszDstQ" base_Element="_yvstoJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvui0JFCEeuCTslxszDstQ" base_Element="_yvt7wJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvvw8JFCEeuCTslxszDstQ" base_Element="_yvui0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvxmIJFCEeuCTslxszDstQ" base_Element="_yvw_EJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yvzbUJFCEeuCTslxszDstQ" base_Element="_yvyNMJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yv1QgJFCEeuCTslxszDstQ" base_Element="_yv0pcJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yv13kZFCEeuCTslxszDstQ" base_Element="_yv1QgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yv2eoZFCEeuCTslxszDstQ" base_Element="_yv1QgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_yv3swJFCEeuCTslxszDstQ" dimensions="1" base_Element="_yv3FsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yv4T0JFCEeuCTslxszDstQ" base_Element="_yv3FsJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yv5h8JFCEeuCTslxszDstQ" base_Element="_yv464JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yv6wEJFCEeuCTslxszDstQ" base_Element="_yv6JAJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yv9zYJFCEeuCTslxszDstQ" base_Element="_yv9MUJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ywAPoJFCEeuCTslxszDstQ" base_Element="_yv_BgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ywA2sJFCEeuCTslxszDstQ" base_Element="_ywAPoZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_ywCr4JFCEeuCTslxszDstQ" base_Element="_ywCE0JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_ywD6AJFCEeuCTslxszDstQ" base_Element="_ywDS8JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Array xmi:id="_ywFIIZFCEeuCTslxszDstQ" base_Element="_ywEhEJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ywIygZFCEeuCTslxszDstQ" base_Element="_ywIygJFCEeuCTslxszDstQ"/>
  <uml:OpaqueBehavior xmi:id="_ywZ4QJFCEeuCTslxszDstQ" name="getName" specification="_ytMzQJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_ywZ4QZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return name;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_ywf-4JFCEeuCTslxszDstQ" name="getWords" specification="_ytWkQJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_ywf-4ZFCEeuCTslxszDstQ" type="_oTGy8JFCEeuCTslxszDstQ" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ywf-4pFCEeuCTslxszDstQ" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return words;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_ywgl8JFCEeuCTslxszDstQ" name="getGloss" specification="_ytYZcJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_ywgl8ZFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>if (null == gloss) {
         return &quot;&quot;;
     } else {
         return gloss;
     }
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_ywgl8pFCEeuCTslxszDstQ" name="setGloss" specification="_ytYZcZFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_ywgl85FCEeuCTslxszDstQ" name="gloss">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>if (null == gloss) {
         if (null != dictionary) {
             throw new IllegalArgumentException(dictionary.getMessages().resolveMessage(&quot;DICTIONARY_EXCEPTION_048&quot;));
         } else {
             throw new IllegalArgumentException(&quot;Gloss must be not null&quot;);
         }
     }
     this.gloss = gloss;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_yw5ngJFCEeuCTslxszDstQ" name="getMessages" specification="_ytqtUJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_yw5ngZFCEeuCTslxszDstQ" type="_oxlesJFCEeuCTslxszDstQ" direction="return"/>
    <language>java</language>
    <body>return messages;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_yxLUUJFCEeuCTslxszDstQ" name="getOffsetLength" specification="_yueloJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_yxL7YJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>if (DictionaryFileType.DATA == fileType) {
         ArrayList&lt;Synset> synsets = new ArrayList&lt;>();
         Iterator&lt;Synset> si = dictionary.getSynsetIterator(getPOS());
         while (si.hasNext()) {
             synsets.add(si.next());
         }

         if (log.isDebugEnabled()) {
             log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_005&quot;, synsets.size()));
         }
         synsets.sort(synsetOffsetComparator);

         initBuffers();

         offsetLength = 8;
         int offsetDigitCount = 8; // 8 by default for WN compatibility
         do {
             if (offsetLength &lt; offsetDigitCount) {
                 offsetLength = offsetDigitCount;
                 if (log.isWarnEnabled()) {
                     log.warn(dictionary.getMessages().resolveMessage(&quot;PRINCETON_WARN_010&quot;, offsetLength));
                 }
             }
             if (log.isDebugEnabled()) {
                 log.debug(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_006&quot;, new Object[]{synsets.size(), getFilename()}));
             }
             long offset = 0;
             if (writePrincetonHeader) {
                 offset = offset + PRINCETON_HEADER_LENGTH;
             }
             long safeOffset = Integer.MAX_VALUE - 1;
             StringBuilder sb = new StringBuilder(16 * 1024);
             for (Synset s : synsets) {
                 sb.delete(0, sb.length());
                 renderSynset(s, sb);
                 Synset oldSynset = dictionary.getSynsetAt(s.getPOS(), offset);
                 if (null != oldSynset) {
                     oldSynset.setOffset(safeOffset);
                     safeOffset--;
                 }
                 s.setOffset(offset);
                 offset = offset + getByteLength(sb) + 1;//\n should be 1 byte
             }

             // calculate used offset length
             offsetDigitCount = Math.max(offsetLength, getDigitCount(offset));
         } while (offsetLength &lt; offsetDigitCount);

         freeBuffers();
     } else if (DictionaryFileType.INDEX == fileType) {
         Iterator&lt;IndexWord> ii = dictionary.getIndexWordIterator(getPOS());
         long maxOffset = 0;
         while (ii.hasNext()) {
             IndexWord indexWord = ii.next();
             for (Synset synset : indexWord.getSenses()) {
                 if (maxOffset &lt; synset.getOffset()) {
                     maxOffset = synset.getOffset();
                 }
             }
         }
         offsetLength = Math.max(8, getDigitCount(maxOffset));
     }
     return offsetLength;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_yxL7YZFCEeuCTslxszDstQ" name="setOffsetLength" specification="_yueloZFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_yxL7YpFCEeuCTslxszDstQ" name="length">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>if (offsetLength != length) {
         offsetLength = length;

         // recalculate offsets which might change due to changed offset length
         if (DictionaryFileType.DATA == fileType) {
             ArrayList&lt;Synset> synsets = new ArrayList&lt;>();
             Iterator&lt;Synset> si = dictionary.getSynsetIterator(getPOS());
             while (si.hasNext()) {
                 synsets.add(si.next());
             }

             if (log.isInfoEnabled()) {
                 log.info(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_005&quot;, synsets.size()));
             }
             synsets.sort(synsetOffsetComparator);

             if (log.isInfoEnabled()) {
                 log.info(dictionary.getMessages().resolveMessage(&quot;PRINCETON_INFO_006&quot;, new Object[]{synsets.size(), getFilename()}));
             }
             long offset = 0;
             if (writePrincetonHeader) {
                 offset = offset + PRINCETON_HEADER_LENGTH;
             }
             long safeOffset = Integer.MAX_VALUE - 1;
             StringBuilder sb = new StringBuilder(16 * 1024);
             initBuffers();
             for (Synset s : synsets) {
                 sb.delete(0, sb.length());
                 renderSynset(s, sb);
                 Synset oldSynset = dictionary.getSynsetAt(s.getPOS(), offset);
                 if (null != oldSynset) {
                     oldSynset.setOffset(safeOffset);
                     safeOffset--;
                 }
                 s.setOffset(offset);
                 offset = offset + getByteLength(sb) + 1;//\n should be 1 byte
             }
             freeBuffers();
         }
     }
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_yxL7Y5FCEeuCTslxszDstQ" name="getFirstLineOffset" specification="_yui3EJFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_yxL7ZJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </ownedParameter>
    <language>java</language>
    <body>if (-1 == firstLineOffset) {
         synchronized (this) {
             if (-1 == firstLineOffset) {
                 if (!isOpen()) {
                     throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;));
                 }

                 long offset = 0;

                 int LINE_MAX = 2048;

                 byte[] line = new byte[LINE_MAX];
                 int i = 0;
                 boolean eol = true;
                 try {
                     final long tailLength = raFileLength;
                     out:
                     while (i &lt; tailLength) {
                         if (line.length == i) {
                             byte[] t = new byte[line.length * 2];
                             System.arraycopy(line, 0, t, 0, line.length);
                             line = t;
                         }
                         int readBytes = line.length - i;
                         if (readBytes > tailLength - i) {
                             readBytes = (int) tailLength - i;
                         }

                         raFile.seek(offset + i);
                         readBytes = i + raFile.read(line, i, readBytes);

                         while (i &lt; readBytes) {
                             if (eol &amp;&amp; ' ' != line[i]) {
                                 break out;
                             }
                             eol = '\n' == line[i];
                             i++;
                         }
                     }
                 } catch (IOException e) {
                     throw new JWNLIOException(e);
                 }

                 firstLineOffset = i;
             }
         }
     }

     return firstLineOffset;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_yxYvspFCEeuCTslxszDstQ" name="getFirstLineOffset" specification="_yuqL0JFCEeuCTslxszDstQ">
    <ownedParameter xmi:id="_yxZWwJFCEeuCTslxszDstQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </ownedParameter>
    <language>java</language>
    <body>if (-1 == firstLineOffset) {
         synchronized (this) {
             if (-1 == firstLineOffset) {
                 if (!isOpen()) {
                     throw new JWNLException(dictionary.getMessages().resolveMessage(&quot;PRINCETON_EXCEPTION_001&quot;));
                 }

                 int i = 0;
                 boolean eol = true;
                 while (i &lt; buffer.length) {
                     if (eol &amp;&amp; ' ' != buffer[i]) {
                         break;
                     }
                     eol = '\n' == buffer[i];
                     i++;
                 }

                 firstLineOffset = i;
             }
         }
     }

     return firstLineOffset;
 </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_y0K98JFCEeuCTslxszDstQ" base_Element="_y0KW4JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0K985FCEeuCTslxszDstQ" base_Element="_y0K98ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0K99pFCEeuCTslxszDstQ" base_Element="_y0K99JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0LlAJFCEeuCTslxszDstQ" base_Element="_y0K995FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0LlA5FCEeuCTslxszDstQ" base_Element="_y0LlAZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0LlBpFCEeuCTslxszDstQ" base_Element="_y0LlBJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0MMEJFCEeuCTslxszDstQ" base_Element="_y0LlB5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0MME5FCEeuCTslxszDstQ" base_Element="_y0MMEZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0MMFpFCEeuCTslxszDstQ" base_Element="_y0MMFJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0MzIJFCEeuCTslxszDstQ" base_Element="_y0MMF5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0MzI5FCEeuCTslxszDstQ" base_Element="_y0MzIZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0MzJpFCEeuCTslxszDstQ" base_Element="_y0MzJJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0NaMJFCEeuCTslxszDstQ" base_Element="_y0MzJ5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0NaM5FCEeuCTslxszDstQ" base_Element="_y0NaMZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0NaNpFCEeuCTslxszDstQ" base_Element="_y0NaNJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0OBQJFCEeuCTslxszDstQ" base_Element="_y0NaN5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0OBQ5FCEeuCTslxszDstQ" base_Element="_y0OBQZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0OBRpFCEeuCTslxszDstQ" base_Element="_y0OBRJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0OoUJFCEeuCTslxszDstQ" base_Element="_y0OBR5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0OoU5FCEeuCTslxszDstQ" base_Element="_y0OoUZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0OoVpFCEeuCTslxszDstQ" base_Element="_y0OoVJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0PPYJFCEeuCTslxszDstQ" base_Element="_y0OoV5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0PPY5FCEeuCTslxszDstQ" base_Element="_y0PPYZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0PPZpFCEeuCTslxszDstQ" base_Element="_y0PPZJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0PPaZFCEeuCTslxszDstQ" base_Element="_y0PPZ5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0P2cJFCEeuCTslxszDstQ" base_Element="_y0PPapFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0P2c5FCEeuCTslxszDstQ" base_Element="_y0P2cZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0QdgJFCEeuCTslxszDstQ" base_Element="_y0P2dJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0Qdg5FCEeuCTslxszDstQ" base_Element="_y0QdgZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0REkJFCEeuCTslxszDstQ" base_Element="_y0QdhJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0REk5FCEeuCTslxszDstQ" base_Element="_y0REkZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0RElpFCEeuCTslxszDstQ" base_Element="_y0RElJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0RroJFCEeuCTslxszDstQ" base_Element="_y0REl5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0Rro5FCEeuCTslxszDstQ" base_Element="_y0RroZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0RrppFCEeuCTslxszDstQ" base_Element="_y0RrpJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0SSsJFCEeuCTslxszDstQ" base_Element="_y0Rrp5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0SSs5FCEeuCTslxszDstQ" base_Element="_y0SSsZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0SStpFCEeuCTslxszDstQ" base_Element="_y0SStJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0S5wJFCEeuCTslxszDstQ" base_Element="_y0SSt5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0S5w5FCEeuCTslxszDstQ" base_Element="_y0S5wZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0S5xpFCEeuCTslxszDstQ" base_Element="_y0S5xJFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0Tg0JFCEeuCTslxszDstQ" base_Element="_y0S5x5FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0Tg05FCEeuCTslxszDstQ" base_Element="_y0Tg0ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0Tg1pFCEeuCTslxszDstQ" base_Element="_y0Tg1JFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0UH4JFCEeuCTslxszDstQ" base_Element="_y0Tg15FCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0UH45FCEeuCTslxszDstQ" base_Element="_y0UH4ZFCEeuCTslxszDstQ"/>
  <UMLLabProfile:Reference xmi:id="_y0UH5pFCEeuCTslxszDstQ" base_Element="_y0UH5JFCEeuCTslxszDstQ"/>
</xmi:XMI>
